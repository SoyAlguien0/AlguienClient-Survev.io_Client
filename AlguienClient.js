//version 1.1.0

(async () => {

    const links = Array.from(document.querySelectorAll('link[rel="modulepreload"][href]'));

    const vendorLink = links.find(link => link.href.includes('vendor-'));
    const sharedLink = links.find(link => link.href.includes('shared-'));

    const vendorModule = await import(vendorLink.href);
    const sharedModule = await import(sharedLink.href);

    const { 
        i: s, $: j, C: f, T: x, S: y, G: r, a: Z, b: q, R: M, c: E, P: h, d: R, 
        B: P, e: i, f: S, g: B, s: u, A: V 
    } = vendorModule;
    
    const { 
        G: w, a: L, u: t, m: e, v, C: m, c: T, P: C, E: l, b: d, I: D, d: G, M: a, 
        e: X0, f: X1, O: X2, g: X3, h: X4, i: X5, j: X6, B: X7, k: X8, l: X9, A: XX, 
        n: Xp, H: Xb, o: XI, T: Xj, R: Xf, S: Xx, p: Xy, D: Xg, q: XQ, J: XZ, r: Xq, 
        s: XM, t: XE, W: XN, w: Xn, x: Xh, y: XR, z: XP, F: XA, K: XJ, U: XS, L: XB, 
        N: Xc, Q: Xu, V: XV, X: Xz, Y: Xo, Z: Xw, _: XO, $: XL, a0: Xv, a1: XK, 
        a2: Xm 
    } = sharedModule;
(function() {
    const p = document['createElement']('link')['relList'];
    if (p && p['supports'] && p['supports']('modulepreload'))
        return;
    for (const XY of document['querySelectorAll']('link[rel=\x22modulepreload\x22]'))
        XT(XY);
    new MutationObserver(XC => {
        for (const Xl of XC)
            if (Xl['type'] === 'childList') {
                for (const Xd of Xl['addedNodes'])
                    Xd['tagName'] === 'LINK' && Xd['rel'] === 'modulepreload' && XT(Xd);
            }
    }
    )['observe'](document, {
        'childList': !0x0,
        'subtree': !0x0
    });
    function b(XC) {
        const Xl = {};
        return XC['integrity'] && (Xl['integrity'] = XC['integrity']),
        XC['referrerPolicy'] && (Xl['referrerPolicy'] = XC['referrerPolicy']),
        XC['crossOrigin'] === 'use-credentials' ? Xl['credentials'] = 'include' : XC['crossOrigin'] === 'anonymous' ? Xl['credentials'] = 'omit' : Xl['credentials'] = 'same-origin',
        Xl;
    }
    function XT(XC) {
        if (XC['ep'])
            return;
        XC['ep'] = !0x0;
        const Xl = b(XC);
        fetch(XC['href'], Xl);
    }
}());
function Or() {
    return new URLSearchParams(self['location']['search'])['has']('crazygames');
}
async function Br() {
    return new Promise(function(p, b) {
        const XT = document['createElement']('script');
        XT['src'] = 'https://sdk.crazygames.com/crazygames-sdk-v3.js',
        document['head']['appendChild'](XT),
        s['phone'] && (document['getElementById']('btn-hamburger')['style']['display'] = 'none'),
        document['getElementById']('crazygamesDiscord')['style']['display'] = 'block',
        XT['addEventListener']('load', async function() {
            await window['CrazyGames']['SDK']['init'](),
            It('survev-io_728x90', 0x2d8, 0x5a),
            setInterval( () => {
                const XY = document['getElementById']('start-menu-wrapper');
                getComputedStyle(XY)['display'] != 'none' && It('survev-io_728x90', 0x2d8, 0x5a);
            }
            , 0xea60),
            p();
        }),
        XT['addEventListener']('error', function() {
            console['log']('CrazyGames\x20SDK\x20load\x20error'),
            b();
        });
    }
    );
}
async function It(p, b, XT) {
    return new Promise(async function(XY, XC) {
        try {
            await window['CrazyGames']['SDK']['banner']['requestBanner']({
                'id': p,
                'width': b,
                'height': XT
            }),
            XY();
        } catch (Xl) {
            console['log']('Banner\x20request\x20error', Xl),
            XC();
        }
    }
    );
}
function rt(p) {
    const b = {
        'adFinished': p,
        'adError': p,
        'adStarted': () => console['log']('Start\x20midgame\x20ad')
    };
    window['CrazyGames']['SDK']['ad']['requestAd']('midgame', b);
}
function Oi(p) {
    let b = p['target'];
    for (; b && b !== document['body']; ) {
        const XT = getComputedStyle(b)['overflowY'];
        if (XT === 'auto' || XT === 'scroll')
            return;
        b = b['parentElement'];
    }
    p['preventDefault']();
}
window['addEventListener']('wheel', Oi, {
    'passive': !0x1
}),
window['addEventListener']('touchmove', Oi, {
    'passive': !0x1
}),
document['addEventListener']('keydown', p => {
    if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', '\x20']['includes'](p['key'])) {
        const b = p['target']
          , XT = ['INPUT', 'TEXTAREA', 'SELECT', 'BUTTON'];
        if (p['key'] === '\x20' && (XT['includes'](b['tagName']) || b['isContentEditable']))
            return;
        p['preventDefault']();
    }
}
);
let lt;
async function qr() {
    return new Promise(function(p) {
        const b = document['createElement']('script');
        b['src'] = 'https://api.gamemonetize.com/sdk.js',
        b['id'] = 'gamemonetize-sdk',
        document['head']['appendChild'](b),
        document['getElementById']('crazygamesDiscord')['style']['display'] = 'block',
        window['SDK_OPTIONS'] = {
            'gameId': 'q9xrmuceu30pey8llzop5cr0p1p2fbx9',
            'onEvent': function(XT) {
                switch (XT['name']) {
                case 'SDK_GAME_PAUSE':
                    break;
                case 'SDK_GAME_START':
                    lt && lt();
                    break;
                case 'SDK_READY':
                    console['log']('Successfully\x20loaded\x20GameMonetize\x20SDK');
                    break;
                }
            }
        },
        p();
    }
    );
}
function at(p) {
    lt = p,
    window['sdk'] && window['sdk']['showBanner'] ? window['sdk']['showBanner']() : lt();
}
function jr() {
    if (window !== window['parent']) {
        if (new URL(document['referrer'])['origin']['includes']('gamemonetize'))
            return !0x0;
    } else {
        if (window['location']['href']['includes']('gamemonetize'))
            return !0x0;
    }
    return !0x1;
}
async function Fr() {
    return new Promise(function(p) {
        const b = document['createElement']('script');
        b['src'] = 'https://game-cdn.poki.com/scripts/v2/poki-sdk.js',
        document['head']['appendChild'](b),
        document['getElementById']('crazygamesDiscord')['style']['display'] = 'block',
        b['addEventListener']('load', async function() {
            window['PokiSDK']['init']()['then']( () => {
                console['log']('Poki\x20SDK\x20successfully\x20initialized');
            }
            )['catch']( () => {
                console['log']('Initialized,\x20something\x20went\x20wrong,\x20load\x20you\x20game\x20anyway');
            }
            ),
            p();
        });
    }
    );
}
function st(p) {
    window['PokiSDK']['commercialBreak']( () => {}
    )['then']( () => {
        p();
    }
    );
}
function Gr() {
    return !!(window !== window['parent'] && new URL(document['referrer'])['origin']['includes']('poki'));
}
const Vr = 'https://surviv.mathsiscoolfun.com'
  , Qe = {
    'resolveUrl': function(p) {
        return Vr + p;
    },
    'resolveRoomHost': function() {
        return 'surviv.mathsiscoolfun.com';
    }
}
  , Re = typeof Symbol == 'function' && typeof Symbol['iterator'] == 'symbol' ? function(p) {
    return typeof p;
}
: function(p) {
    return p && typeof Symbol == 'function' && p['constructor'] === Symbol && p !== Symbol['prototype'] ? 'symbol' : typeof p;
}
  , Yt = Array['prototype']['slice']
  , Jt = Object['keys']
  , Ur = (function() {
    const XT = (function() {
        let XC = !![];
        return function(Xl, Xd) {
            const Xk = XC ? function() {
                if (Xd) {
                    const XU = Xd['apply'](Xl, arguments);
                    return Xd = null,
                    XU;
                }
            }
            : function() {}
            ;
            return XC = ![],
            Xk;
        }
        ;
    }())
    Object['prototype']['toString']['call'](arguments);
}()) == '[object\x20Arguments]';
function Hr(p) {
    return Object['prototype']['toString']['call'](p) == '[object\x20Arguments]';
}
function Wr(p) {
    return p && (typeof p > 'u' ? 'undefined' : Re(p)) == 'object' && typeof p['length'] == 'number' && Object['prototype']['hasOwnProperty']['call'](p, 'callee') && !Object['prototype']['propertyIsEnumerable']['call'](p, 'callee') || !0x1;
}
const Kt = Ur ? Hr : Wr
  , Mt = function(p, b, XT) {
    return XT || (XT = {}),
    p === b ? !0x0 : p instanceof Date && b instanceof Date ? p['getTime']() === b['getTime']() : !p || !b || (typeof p > 'u' ? 'undefined' : Re(p)) != 'object' && (typeof b > 'u' ? 'undefined' : Re(b)) != 'object' ? XT['strict'] ? p === b : p == b : $r(p, b, XT);
};
function Xt(p) {
    return p == null;
}
function ei(p) {
    return !(!p || (typeof p > 'u' ? 'undefined' : Re(p)) !== 'object' || typeof p['length'] != 'number' || typeof p['copy'] != 'function' || typeof p['slice'] != 'function' || p['length'] > 0x0 && typeof p[0x0] != 'number');
}
function $r(p, b, XT) {
    let XY, XC;
    if (Xt(p) || Xt(b) || p['prototype'] !== b['prototype'])
        return !0x1;
    if (Kt(p))
        return Kt(b) ? (p = Yt['call'](p),
        b = Yt['call'](b),
        Mt(p, b, XT)) : !0x1;
    if (ei(p)) {
        if (!ei(b) || p['length'] !== b['length'])
            return !0x1;
        for (XY = 0x0; XY < p['length']; XY++)
            if (p[XY] !== b[XY])
                return !0x1;
        return !0x0;
    }
    let Xl, Xd;
    try {
        Xl = Jt(p),
        Xd = Jt(b);
    } catch {
        return !0x1;
    }
    if (Xl['length'] != Xd['length'])
        return !0x1;
    for (Xl['sort'](),
    Xd['sort'](),
    XY = Xl['length'] - 0x1; XY >= 0x0; XY--)
        if (Xl[XY] != Xd[XY])
            return !0x1;
    for (XY = Xl['length'] - 0x1; XY >= 0x0; XY--)
        if (XC = Xl[XY],
        !Mt(p[XC], b[XC], XT))
            return !0x1;
    return (typeof p > 'u' ? 'undefined' : Re(p)) === (typeof b > 'u' ? 'undefined' : Re(b));
}
var Bi = (p => (p[p['New'] = 0x0] = 'New',
p[p['Confirmed'] = 0x1] = 'Confirmed',
p[p['Ackd'] = 0x2] = 'Ackd',
p))(Bi || {});
const le = {
    'ItemStatus': Bi,
    'validate': function(p) {
        const b = function(Xd, Xk, XU) {
            const XW = w[Xk];
            return XW && XW['type'] == Xd ? Xk : XU;
        }
          , XT = function(Xd, Xk) {
            const XU = parseFloat(Xd);
            return Number['isNaN'](XU) ? Xk : XU;
        }
          , XY = {
            'crosshair': {
                'type': '',
                'color': 0xffffff,
                'size': 0x1,
                'stroke': 0x0
            },
            'emotes': [],
            ...p
        }
          , XC = {
            'outfit': b('outfit', XY['outfit'], 'outfitBase'),
            'melee': b('melee', XY['melee'], 'fists'),
            'heal': b('heal_effect', XY['heal'], 'heal_basic'),
            'boost': b('boost_effect', XY['boost'], 'boost_basic'),
            'player_icon': b('emote', XY['player_icon'], ''),
            'crosshair': {
                'type': b('crosshair', XY['crosshair']['type'], 'crosshair_default'),
                'color': parseInt(XY['crosshair']['color']) || 0xffffff,
                'size': XT(XY['crosshair']['size'], 0x1)['toFixed'](0x2),
                'stroke': XT(XY['crosshair']['stroke'], 0x0)['toFixed'](0x2)
            },
            'emotes': []
        }
          , Xl = L['defaultEmoteLoadout']['slice']();
        for (let Xd = 0x0; Xd < L['EmoteSlot']['Count']; Xd++) {
            const Xk = Xd < XY['emotes']['length'] ? XY['emotes'][Xd] : '';
            XC['emotes']['push'](b('emote', Xk, Xl[Xd]));
        }
        return XC;
    },
    'defaultLoadout': function() {
        return le['validate']({});
    },
    'modified': function(p, b) {
        return !Mt(p, b);
    },
    'getUserAvailableItems': function(p) {
        const b = []
          , XT = w['unlock_default'];
        for (let XY = 0x0; XY < XT['unlocks']['length']; XY++) {
            const XC = XT['unlocks'][XY];
            b['push']({
                'type': XC,
                'source': 'unlock_default',
                'timeAcquired': 0x0,
                'ackd': le['ItemStatus']['Ackd']
            });
        }
        for (let Xl = 0x0; Xl < p['length']; Xl++)
            b['push'](p[Xl]);
        return b;
    }
};
function Qr(p, b, XT) {
    typeof b == 'function' && (XT = b,
    b = null);
    const XY = {
        'url': Qe['resolveUrl'](p),
        'type': 'POST',
        'timeout': 0xa * 0x3e8,
        'headers': {
            'X-Requested-With': 'XMLHttpRequest'
        }
    };
    b && (XY['contentType'] = 'application/json;\x20charset=utf-8',
    XY['data'] = JSON['stringify'](b)),
    j['ajax'](XY)['done'](XC => {
        XT(null, XC);
    }
    )['fail'](XC => {
        XT(XC);
    }
    );
}
class Zr {
    constructor(p) {
        this['config'] = p,
        window['login'] = () => {
            this['login']();
        }
        ,
        window['deleteAccount'] = () => {
            this['deleteAccount']();
        }
        ,
        window['deleteItems'] = () => {
            this['ajaxRequest']('/api/user/delete_items', {}, (b, XT) => {
                this['loadProfile']();
            }
            );
        }
        ,
        window['unlock'] = b => {
            console['log']('Unlocking\x20' + b),
            this['unlock'](b);
        }
        ,
        window['setQuest'] = (b, XT=0x0) => {
            this['ajaxRequest']('/api/user/set_quest', {
                'questType': b,
                'idx': XT
            }, (XY, XC) => {
                this['getPass']();
            }
            );
        }
        ,
        window['refreshQuest'] = b => {
            this['refreshQuest'](b);
        }
        ,
        window['setPassUnlock'] = b => {
            this['setPassUnlock'](b);
        }
        ;
    }
    ['events'] = {};
    ['requestsInFlight'] = 0x0;
    ['loggingIn'] = !0x1;
    ['loggedIn'] = !0x1;
    ['profile'] = {
        'linkedTwitch': !0x1,
        'linkedDiscord': !0x1,
        'usernameSet': !0x1,
        'username': '',
        'slug': '',
        'usernameChangeTime': 0x0
    };
    ['loadout'] = le['defaultLoadout']();
    ['loadoutPriv'] = '';
    ['items'] = [];
    ['quests'] = [];
    ['questPriv'] = '';
    ['pass'] = {};
    ['ajaxRequest'](p, b, XT) {
        typeof b == 'function' && (XT = b,
        b = null),
        this['requestsInFlight']++,
        this['emit']('request', this),
        Qr(p, b, (XY, XC) => {
            XT(XY, XC),
            this['requestsInFlight']--,
            this['emit']('request', this),
            this['requestsInFlight'] == 0x0 && this['emit']('requestsComplete');
        }
        );
    }
    ['addEventListener'](p, b) {
        this['events'][p] = this['events'][p] || [],
        this['events'][p]['push'](b);
    }
    ['removeEventListener'](p, b) {
        const XT = this['events'][p] || [];
        for (let XY = XT['length'] - 0x1; XY >= 0x0; XY--)
            XT[XY] == b && XT['splice'](XY, 0x1);
    }
    ['emit'](p, ...b) {
        const XT = (this['events'][p] || [])['slice'](0x0);
        for (let XY = 0x0; XY < XT['length']; XY++)
            XT[XY](...b);
    }
    ['init']() {
        this['config']['get']('sessionCookie') && this['setSessionCookies'](),
        this['login']();
    }
    ['setSessionCookies']() {
        this['clearSessionCookies'](),
        document['cookie'] = this['config']['get']('sessionCookie'),
        document['cookie'] = 'app-data=' + Date['now']();
    }
    ['clearSessionCookies']() {
        document['cookie'] = 'app-sid=;expires=Thu,\x2001\x20Jan\x201970\x2000:00:01\x20GMT;',
        document['cookie'] = 'app-data=;expires=Thu,\x2001\x20Jan\x201970\x2000:00:01\x20GMT;';
    }
    ['loginWithAccessToken'](p, b, XT) {
        b( (XY, XC) => {
            if (XY) {
                this['emit']('error', 'login_failed');
                return;
            }
            const Xl = XT(XC);
            this['ajaxRequest'](p + '?access_token=' + Xl, (Xd, Xk) => {
                Xd ? this['emit']('error', 'login_failed') : (this['config']['set']('sessionCookie', Xk['cookie']),
                this['setSessionCookies'](),
                this['login']());
            }
            );
        }
        );
    }
    ['login']() {
        this['loadProfile'](),
        this['getPass'](!0x0);
    }
    ['logout']() {
        this['config']['set']('profile', null),
        this['config']['set']('sessionCookie', null),
        this['ajaxRequest']('/api/user/logout', (p, b) => {
            window['location']['reload']();
        }
        );
    }
    ['loadProfile']() {
        this['loggingIn'] = !this['loggedIn'],
        this['ajaxRequest']('/api/user/profile', (b, XT) => {
            const XY = this['loggingIn'];
            if (this['loggingIn'] = !0x1,
            this['loggedIn'] = !0x1,
            this['profile'] = {},
            this['loadoutPriv'] = '',
            this['items'] = [],
            b)
                console['error']('account', 'load_profile_error');
            else {
                if (XT['banned'])
                    this['emit']('error', 'account_banned', XT['reason']);
                else {
                    if (XT['success']) {
                        this['loggedIn'] = !0x0,
                        this['profile'] = XT['profile'],
                        this['loadoutPriv'] = XT['loadoutPriv'],
                        this['items'] = XT['items'];
                        const XC = this['config']['get']('profile') || {
                            'slug': ''
                        };
                        XC['slug'] = XT['profile']['slug'],
                        this['config']['set']('profile', XC);
                    }
                }
            }
            this['loggedIn'] || this['config']['set']('sessionCookie', null),
            XY && this['loggedIn'] && this['emit']('login', this),
            this['emit']('items', this['items']);
        }
        );
        const p = this['config']['get']('loadout');
        this['loadout'] = t['mergeDeep']({}, le['defaultLoadout'](), p),
        this['emit']('loadout', this['loadout']);
    }
    ['resetStats']() {
        this['ajaxRequest']('/api/user/reset_stats', (p, b) => {
            p && (console['error']('account', 'reset_stats_error'),
            this['emit']('error', 'server_error'));
        }
        );
    }
    ['deleteAccount']() {
        this['ajaxRequest']('/api/user/delete', (p, b) => {
            if (p) {
                console['error']('account', 'delete_error'),
                this['emit']('error', 'server_error');
                return;
            }
            this['config']['set']('profile', null),
            this['config']['set']('sessionCookie', null),
            window['location']['reload']();
        }
        );
    }
    ['setUsername'](p, b) {
        this['ajaxRequest']('/api/user/username', {
            'username': p
        }, (XT, XY) => {
            if (XT) {
                console['error']('account', 'set_username_error'),
                b(XT);
                return;
            }
            XY['result'] == 'success' ? (this['loadProfile'](),
            b()) : b(XY['result']);
        }
        );
    }
    ['setLoadout'](p) {
        this['loadout'],
        this['loadout'] = p,
        this['emit']('loadout', this['loadout']),
        this['config']['set']('loadout', p);
    }
    ['setItemStatus'](p, b) {
        if (b['length'] != 0x0) {
            for (let XT = 0x0; XT < b['length']; XT++) {
                const XY = this['items']['find'](XC => XC['type'] == b[XT]);
                XY && (XY['status'] = Math['max'](XY['status'], p));
            }
            this['emit']('items', this['items']),
            this['ajaxRequest']('/api/user/set_item_status', {
                'status': p,
                'itemTypes': b
            }, (XC, Xl) => {
                XC && console['error']('account', 'set_item_status_error');
            }
            );
        }
    }
    ['unlock'](p) {
        this['ajaxRequest']('/api/user/unlock', {
            'unlockType': p
        }, (b, XT) => {
            if (b || !XT['success']) {
                console['error']('account', 'unlock_error'),
                this['emit']('error', 'server_error');
                return;
            }
            this['items'] = XT['items'],
            this['emit']('items', this['items']);
        }
        );
    }
    ['getPass'](p) {}
    ['setPassUnlock'](p) {
        this['ajaxRequest']('/api/user/set_pass_unlock', {
            'unlockType': p
        }, (b, XT) => {
            b || !XT['success'] ? console['error']('account', 'set_pass_unlock_error') : this['getPass'](!0x1);
        }
        );
    }
    ['refreshQuest'](p) {
        this['ajaxRequest']('/api/user/refresh_quest', {
            'idx': p
        }, (b, XT) => {
            if (b) {
                console['error']('account', 'refresh_quest_error');
                return;
            }
            XT['success'] ? this['getPass'](!0x1) : this['emit']('pass', this['pass'], this['quests'], !0x1);
        }
        );
    }
}
class Yr {
    ['introMusic'] = !0x0;
    ['soundUpdateThrottle'] = 0x0;
    ['tracks'];
    ['trackToIdx'];
    ['initTime'];
    constructor() {
        this['tracks'] = [],
        this['trackToIdx'] = {};
        const p = (b, XT, XY, XC) => {
            this['tracks']['push']({
                'name': b,
                'sound': XT,
                'channel': XY,
                'immediateMode': XC,
                'inst': null,
                'instSound': '',
                'filter': '',
                'weight': 0x0,
                'volume': 0x0
            }),
            this['trackToIdx'][b] = this['tracks']['length'] - 0x1;
        }
        ;
        p('music', 'menu_music', 'music', !0x1),
        p('wind', 'ambient_wind_01', 'ambient', !0x1),
        p('river', 'ambient_stream_01', 'ambient', !0x1),
        p('waves', 'ambient_waves_01', 'ambient', !0x1),
        p('interior_0', '', 'ambient', !0x0),
        p('interior_1', '', 'ambient', !0x0),
        this['initTime'] = Date['now']();
    }
    ['getTrack'](p) {
        return this['tracks'][this['trackToIdx'][p]];
    }
    ['onGameStart']() {
        this['introMusic'] = !0x1;
        for (let p = 0x0; p < this['tracks']['length']; p++)
            this['tracks'][p]['weight'] = 0x0;
        this['getTrack']('wind')['weight'] = 0x1,
        this['soundUpdateThrottle'] = 0x0;
    }
    ['onGameComplete'](p) {
        for (let b = 0x0; b < this['tracks']['length']; b++) {
            const XT = this['tracks'][b];
            XT['immediateMode'] && (XT['weight'] = 0x0);
        }
        this['getTrack']('river')['weight'] = 0x0;
    }
    ['update'](p, b, XT) {
        let XY = !0x1;
        this['soundUpdateThrottle'] -= p,
        this['soundUpdateThrottle'] <= 0x0 && (this['soundUpdateThrottle'] = 0.2,
        XY = !0x0);
        let XC = 0x0;
        for (let Xl = this['tracks']['length'] - 0x1; Xl >= 0x0; Xl--) {
            const Xd = this['tracks'][Xl];
            if (!Xd['inst'] && Xd['sound'] && b['isSoundLoaded'](Xd['sound'], Xd['channel']) && (console['log']('Start\x20track', Xd['sound'], Xd['channel']),
            Xd['inst'] = b['playSound'](Xd['sound'], {
                'channel': Xd['channel'],
                'startSilent': !0x0,
                'loop': Xd['channel'] == 'ambient',
                'forceStart': !0x0,
                'filter': Xd['filter'],
                'forceFilter': !0x0
            }),
            Xd['instSound'] = Xd['sound'],
            Xl == 0x0 && console['log']('Play\x20delay', Date['now']() - this['initTime'])),
            Xd['inst'] && XY) {
                const Xk = Xd['weight'] * (0x1 - XC);
                XC += Xk,
                Xd['volume'] = Xk;
                const XU = b['getSoundDefVolume'](Xd['sound'], Xd['channel']);
                b['setVolume'](Xd['inst'], Xk * XU, Xd['channel']);
            }
            Xd['inst'] && (!Xd['sound'] && e['eqAbs'](b['getVolume'](Xd['inst']), 0x0) || Xd['sound'] && Xd['sound'] != Xd['instSound']) && (console['log']('Stop\x20track', Xd['name'], Xd['channel']),
            b['stopSound'](Xd['inst']),
            Xd['inst'] = null,
            Xd['instSound'] = ''),
            Xd['immediateMode'] && (Xd['sound'] = '',
            Xd['weight'] = 0x0);
        }
        if (this['introMusic']) {
            const XW = this['getTrack']('music');
            XW['inst'] && (XW['weight'] = e['min'](XW['weight'] + p, 0x1));
            const XD = this['getTrack']('wind');
            XW['inst'] && !b['isSoundPlaying'](XW['inst']) && (XD['weight'] = e['min'](XD['weight'] + p, 0x1));
        }
    }
}
const Ve = window['navigator']['userAgent']['includes']('iPod') || window['navigator']['userAgent']['includes']('iPhone') || window['navigator']['userAgent']['includes']('iPad');
let qi = null
  , ji = !0x1;
function Jr(p) {
    try {
        return p['createGain']()['disconnect'](p['destination']),
        !0x1;
    } catch {
        return !0x0;
    }
}
const De = 0x80;
class ti {
    constructor(p) {
        this['ctx'] = p,
        this['volumeOld'] = this['volume'],
        this['panOld'] = this['pan'],
        this['gainNode'] = this['ctx']['createGain'](),
        this['pannerNode'] = this['ctx']['createPanner'](),
        this['pannerNode']['panningModel'] = 'equalpower',
        this['gainNode']['connect'](this['pannerNode']);
    }
    ['sound'] = null;
    ['id'] = 0x0;
    ['volume'] = 0x1;
    ['volumeOld'];
    ['pan'] = 0x0;
    ['panOld'];
    ['ambient'];
    ['sourceNode'] = null;
    ['destination'] = null;
    ['paramEvents'] = 0x0;
    ['gainNode'];
    ['pannerNode'];
    ['stopTime'] = 0x0;
    ['stopping'] = !0x1;
    ['playState'] = 'playFinished';
    ['setGain'](p) {
        this['stopping'] || (Ve ? this['gainNode']['gain']['value'] = p : (this['gainNode']['gain']['setTargetAtTime'](p, this['ctx']['currentTime'], 0.02),
        ++this['paramEvents']));
    }
    ['setPan'](p) {
        this['stopping'] || (this['pannerNode']['setPosition'](p, 0x0, -0.5),
        this['paramEvents'] += 0x3);
    }
    ['start'](p, b, XT, XY, XC, Xl, Xd, Xk, XU) {
        this['volume'] = this['volumeOld'] = XT,
        this['pan'] = this['panOld'] = XY,
        this['ambient'] = Xk,
        this['stopping'] = !0x1,
        this['destination'] = p,
        this['sourceNode'] = this['ctx']['createBufferSource'](),
        this['sourceNode']['buffer'] = b,
        this['sourceNode']['connect'](this['gainNode']),
        this['pannerNode']['connect'](this['destination']),
        this['sourceNode']['loop'] = XC,
        Ve ? this['gainNode']['gain']['value'] = XT : (this['gainNode']['gain']['setValueAtTime'](XT, this['ctx']['currentTime']),
        ++this['paramEvents']),
        this['setPan'](XY),
        this['sourceNode']['detune'] && (this['sourceNode']['detune']['value'] = XU),
        this['sourceNode']['start'](this['ctx']['currentTime'] + Xl, Xd),
        this['stopTime'] = XC ? 0x1249ad2594c37d0000000000000000000000000000000000000000000000000000000000000000000000 : this['ctx']['currentTime'] + Xl + b['duration'] - Xd,
        this['playState'] = 'playSucceeded';
    }
    ['stop']() {
        this['stopping'] || (this['setGain'](0x0),
        this['stopTime'] = this['ctx']['currentTime'] + 0.1,
        this['stopping'] = !0x0,
        this['playState'] = 'playInterrupted');
    }
    ['disconnect']() {
        if (this['sound']?.['instances']['splice'](this['sound']?.['instances']['indexOf'](this), 0x1),
        this['sound'] = null,
        this['sourceNode']?.['stop'](0x0),
        this['sourceNode']?.['disconnect'](this['gainNode']),
        this['pannerNode']?.['disconnect'](this['destination']),
        Ve)
            try {
                this['sourceNode']['buffer'] = qi;
            } catch {}
        this['destination'] = null,
        this['sourceNode'] = null,
        this['playState'] = 'playFinished';
    }
    ['reallocNodes']() {
        this['gainNode']['disconnect'](this['pannerNode']),
        this['gainNode'] = this['ctx']['createGain'](),
        this['pannerNode'] = this['ctx']['createPanner'](),
        this['pannerNode']['panningModel'] = 'equalpower',
        this['gainNode']['connect'](this['pannerNode']),
        this['paramEvents'] = 0x0;
    }
}
let mt = null;
class ii {
    constructor(p) {
        this['instance'] = p,
        this['id'] = p['id'];
    }
    ['id'];
    ['check'](p) {
        this['id'] != this['instance']['id'] && (this['instance'] = mt,
        this['id'] = mt?.['id']);
    }
    ['stop']() {
        this['check'](),
        this['instance']['stop']();
    }
    get['volume']() {
        return this['check'](),
        this['instance']['volume'];
    }
    set['volume'](p) {
        this['check'](!0x0),
        this['instance']['volume'] = p;
    }
    get['pan']() {
        return this['check'](),
        this['instance']['pan'];
    }
    set['pan'](p) {
        this['check'](!0x0),
        this['instance']['pan'] = p;
    }
    get['playState']() {
        return this['check'](),
        this['instance']['playState'];
    }
}
let Ie = null;
class Kr {
    constructor(p, b, XT, XY, XC) {
        if (this['ctx'] = p,
        this['inNode'] = b,
        this['outNode'] = XT,
        this['name'] = XY,
        this['params'] = XC,
        this['volume'] = XC['volume'] != null ? XC['volume'] : 0x1,
        this['echoVolume'] = XC['echoVolume'] || 0x0,
        this['echoDelay'] = XC['echoDelay'] || 0x0,
        this['echoLowPass'] = XC['echoLowPass'] || 0xbb8,
        this['stereoSpread'] = XC['stereoSpread'] || 0x0,
        !ji) {
            const Xl = this['ctx']['createGain']();
            this['inNode']['connect'](Xl),
            this['inNode'] = Xl;
        }
        this['convolverNode'] = this['ctx']['createConvolver'](),
        this['echoVolume'] && (this['echoLowPassNode'] = this['ctx']['createBiquadFilter'](),
        this['echoLowPassNode']['type'] = 'lowpass',
        this['echoLowPassNode']['frequency']['setValueAtTime'](this['echoLowPass'], 0x0),
        this['echoLowPassNode']['Q']['setValueAtTime'](-3.0102999566398125, 0x0),
        this['echoDelayNode'] = this['ctx']['createDelay'](this['echoDelay'] || 0.01),
        this['echoDelayNode']['delayTime']['setValueAtTime'](this['echoDelay'], 0x0)),
        this['stereoSpread'] && (this['stereoDelayNode'] = this['ctx']['createDelay'](this['stereoSpread']),
        this['stereoDelayNode']['delayTime']['setValueAtTime'](this['stereoSpread'], 0x0),
        this['mergerNode'] = this['ctx']['createChannelMerger'](0x2));
    }
    ['volume'];
    ['echoVolume'];
    ['echoDelay'];
    ['echoLowPass'];
    ['stereoSpread'];
    ['gainNode'] = null;
    ['convolverNode'] = null;
    ['echoGainNode'] = null;
    ['echoLowPassNode'] = null;
    ['echoDelayNode'] = null;
    ['stereoDelayNode'] = null;
    ['mergerNode'] = null;
    ['targetLevel'] = 0x0;
    ['gain'] = 0x0;
    ['drainEndTime'] = 0x0;
    ['active'] = !0x1;
    ['isConnected']() {
        return this['gainNode'] != null;
    }
    ['connect']() {
        if (this['gainNode'] = this['ctx']['createGain'](),
        this['gainNode']['channelCount'] = 0x1,
        this['gainNode']['channelCountMode'] = 'explicit',
        this['gainNode']['gain']['setValueAtTime'](0x0, 0x0),
        this['echoVolume'] && (this['echoGainNode'] = this['ctx']['createGain'](),
        this['echoGainNode']['channelCount'] = 0x1,
        this['echoGainNode']['channelCountMode'] = 'explicit',
        this['echoGainNode']['gain']['setValueAtTime'](this['echoVolume'], 0x0)),
        this['inNode']['connect'](this['gainNode']),
        this['gainNode']['connect'](this['convolverNode']),
        this['echoVolume'] && (this['convolverNode']?.['connect'](this['echoGainNode']),
        this['echoGainNode']?.['connect'](this['echoLowPassNode']),
        this['echoLowPassNode']?.['connect'](this['echoDelayNode']),
        this['echoDelayNode']?.['connect'](this['convolverNode'])),
        this['stereoSpread']) {
            const {buffer: p} = this['convolverNode'];
            p && p['numberOfChannels'] != 0x1 && console['error']('stereoSpread\x20can\x20only\x20be\x20applied\x20to\x20mono\x20IRs'),
            this['convolverNode']?.['connect'](this['stereoDelayNode']),
            this['convolverNode']?.['connect'](this['mergerNode'], 0x0, 0x0),
            this['stereoDelayNode']?.['connect'](this['mergerNode'], 0x0, 0x1),
            this['mergerNode']?.['connect'](this['outNode']);
        } else
            this['convolverNode']?.['connect'](this['outNode']);
    }
    ['disconnect']() {
        this['inNode']['disconnect'](this['gainNode']),
        this['gainNode']?.['disconnect'](this['convolverNode']),
        this['echoVolume'] && (this['convolverNode']?.['disconnect'](this['echoGainNode']),
        this['echoGainNode']?.['disconnect'](this['echoLowPassNode']),
        this['echoLowPassNode']?.['disconnect'](this['echoDelayNode']),
        this['echoDelayNode']?.['disconnect'](this['convolverNode'])),
        this['stereoSpread'] ? (this['convolverNode']?.['disconnect'](this['stereoDelayNode']),
        this['convolverNode']?.['disconnect'](this['mergerNode'], 0x0, 0x0),
        this['stereoDelayNode']?.['disconnect'](this['mergerNode'], 0x0, 0x1),
        this['mergerNode']?.['disconnect'](this['outNode'])) : this['convolverNode']?.['disconnect'](this['outNode']),
        this['gainNode'] = null,
        this['echoGainNode'] = null;
    }
    ['setGain'](p, b, XT) {
        if (p *= this['volume'],
        this['gain'] != p) {
            if (p != 0x0 && !this['gainNode'] && this['connect'](),
            p == 0x0) {
                this['echoGainNode'] && this['echoGainNode']['gain']['setValueAtTime'](0x0, XT);
                const {buffer: XY} = this['convolverNode']
                  , XC = XY ? XY['duration'] : 0x0;
                this['drainEndTime'] = XT + XC + this['echoDelay'] + this['stereoSpread'];
            }
            this['gain'] == 0x0 && this['echoGainNode'] && this['echoGainNode']['gain']['setValueAtTime'](this['echoVolume'], b),
            this['gainNode']?.['gain']['setValueAtTime'](this['gain'], b),
            this['gainNode']?.['gain']['linearRampToValueAtTime'](p, XT),
            this['gain'] = p;
        }
    }
}
class Xr {
    ['ctx'] = new (window['AudioContext'] || window['webkitAudioContext'])();
    ['masterGainNode'];
    ['compressorNode'];
    ['reverbNode'];
    ['eqNodes'] = {};
    ['files'] = {};
    ['sounds'] = {};
    ['instances'] = [];
    ['instanceId'] = 0x0;
    ['playingInstances'] = [];
    ['reverbs'] = {};
    ['activeReverbs'] = [];
    ['reverbFadeEndTime'] = 0x0;
    ['volume'] = 0x1;
    ['volumeOld'];
    ['muted'] = !0x1;
    ['mutedOld'];
    ['runningOfflineTest'];
    ['offlineCtx'];
    ['startTime'];
    ['onfileload'] = function(...p) {}
    ;
    ['PLAY_INITED'] = 'playInited';
    ['PLAY_SUCCEEDED'] = 'playSucceeded';
    ['PLAY_INTERRUPTED'] = 'playInterrupted';
    ['PLAY_FINISHED'] = 'playFinished';
    ['PLAY_FAILED'] = 'playFailed';
    constructor() {
        if (Ve) {
            const b = this['ctx']['createBuffer'](0x1, 0x1, 0xac44)
              , XT = this['ctx']['createBufferSource']();
            XT['buffer'] = b,
            XT['connect'](this['ctx']['destination']),
            XT['start'](),
            XT['disconnect'](this['ctx']['destination']),
            this['ctx']['close'](),
            this['ctx'] = new (window['AudioContext'] || window['webkitAudioContext'])();
        }
        ji = Jr(this['ctx']),
        window['audioEngine'] = this,
        this['masterGainNode'] = this['ctx']['createGain'](),
        this['compressorNode'] = this['ctx']['createDynamicsCompressor'](),
        this['masterGainNode']['connect'](this['compressorNode']),
        this['compressorNode']['connect'](this['ctx']['destination']),
        this['reverbNode'] = this['ctx']['createGain'](),
        this['reverbNode']['connect'](this['masterGainNode']);
        const p = {
            'muffled': [[0x14, 2.8284 / 0x2, -0x6, 'peaking'], [0x28, 2.8284 / 0x2, -0x7, 'peaking'], [0x50, 2.8284 / 0x2, -0xa, 'peaking'], [0xa0, 2.8284 / 0x2, -0xd, 'peaking'], [0x140, 2.8284 / 0x2, -0x16, 'peaking'], [0x280, 2.8284 / 0x2, -0x12, 'peaking'], [0x500, 2.8284 / 0x2, -0x19, 'peaking'], [0xa00, 2.8284 / 0x2, -0xa, 'peaking'], [0x1400, 2.8284 / 0x2, -0x1e, 'peaking'], [0x2800, 2.8284 / 0x2, -0x19, 'peaking']],
            'club': [[0x14, 2.8284 / 0x2, -0x6, 'lowshelf'], [0x3f, 2.8284 / 0x2, -0x3, 'lowshelf'], [0x7d, 2.8284 / 0x2, -0x3, 'lowshelf'], [0xfa, 2.8284 / 0x2, -0x6, 'lowshelf'], [0x1f4, 2.8284 / 0x2, -0x12, 'peaking'], [0x3e8, 2.8284 / 0x2, -0x24, 'peaking'], [0x7d0, 2.8284 / 0x2, -0x30, 'peaking'], [0xfa0, 2.8284 / 0x2, -0x32, 'highshelf'], [0x1f40, 2.8284 / 0x2, -0x32, 'highshelf'], [0x3e80, 2.8284 / 0x2, -0x32, 'highshelf']]
        };
        Object['keys'](p)['forEach'](XY => {
            const XC = this['ctx']['createGain']();
            XC['gain']['setValueAtTime'](0x10, 0x0);
            const Xl = p[XY];
            let Xd = XC;
            for (let Xk = 0x0; Xk < Xl['length']; Xk++) {
                const XU = this['ctx']['createBiquadFilter']();
                Xd['connect'](XU),
                Xd = XU,
                XU['frequency']['setValueAtTime'](Xl[Xk][0x0], 0x0),
                XU['Q']['setValueAtTime'](Xl[Xk][0x1], 0x0),
                XU['gain']['setValueAtTime'](Xl[Xk][0x2], 0x0),
                XU['type'] = Xl[Xk][0x3];
            }
            Xd['connect'](this['reverbNode']),
            this['eqNodes'][XY] = XC;
        }
        );
        for (let XY = 0x0; XY < De; XY++) {
            const XC = new ti(this['ctx']);
            this['instances'][XY] = XC;
        }
        if (mt = new ti(this['ctx']),
        Ie = new ii(mt),
        this['volumeOld'] = this['volume'],
        this['mutedOld'] = this['muted'],
        this['ctx']['state'] == 'suspended') {
            const Xl = () => {
                this['ctx']['resume']();
                const Xd = this['ctx']['createBufferSource']();
                Xd['buffer'] = this['ctx']['createBuffer'](0x1, 0x1, 0x5622),
                Xd['connect'](this['ctx']['destination']),
                Xd['start'](),
                setTimeout( () => {
                    this['ctx']['state'] == 'running' && (document['body']['removeEventListener']('mousedown', Xl, !0x1),
                    document['body']['removeEventListener']('touchend', Xl, !0x1));
                }
                , 0x0);
            }
            ;
            document['body']['addEventListener']('mousedown', Xl, !0x1),
            document['body']['addEventListener']('touchend', Xl, !0x1);
        }
        Ve && (qi = this['ctx']['createBuffer'](0x1, 0x1, 0x5622));
    }
    ['loadFile'](p, b) {
        if (this['files'][p] != null)
            return b(p),
            this['files'][p];
        this['files'][p] = {
            'buffer': null
        };
        const XT = new XMLHttpRequest();
        XT['open']('GET', p),
        XT['responseType'] = 'arraybuffer';
        const XY = function(XC) {
            console['error']('Failed\x20loading\x20sound\x20file:\x20' + p);
        };
        return XT['addEventListener']('load', XC => {
            const Xl = XT['response'];
            if (!Xl) {
                XY();
                return;
            }
            this['ctx']['decodeAudioData'](Xl, Xd => {
                this['files'][p]['buffer'] = Xd,
                b(p);
            }
            , () => {
                console['error']('Failed\x20decoding\x20sound:\x20' + p);
            }
            );
        }
        ),
        XT['addEventListener']('abort', XY),
        XT['addEventListener']('error', XY),
        XT['addEventListener']('timeout', XY),
        XT['send'](),
        this['files'][p];
    }
    ['registerSound'](p, b, XT) {
        const XY = {
            'file': this['loadFile'](p, this['onfileload']['bind'](this)),
            'canCoalesce': !!XT['canCoalesce'],
            'maxInstances': XT['channels'] || 0x10,
            'volume': XT['volume'] || 0x1,
            'instances': []
        };
        this['sounds'][b] = XY;
    }
    ['play'](XT, XY) {
        const XC = this['sounds'][XT];
        if (!XC)
            return console['error']('No\x20sound\x20named:\x20' + XT),
            Ie;
        const Xl = XY['filter'] || 'none';
        let Xd = XY['volume'] != null ? XY['volume'] : 0x1;
        Xd *= XC['volume'],
        Xd = this['muted'] ? 0x0 : Xd;
        const Xk = XY['pan'] || 0x0
          , XU = !!XY['loop']
          , XW = XY['delay'] ? XY['delay'] * 0.001 : 0x0
          , XD = XY['offset'] ? XY['offset'] : 0x0
          , XG = XY['ambient'] || !0x1
          , XF = XY['detune'] || 0x0;
        if (!XC['file']['buffer'] || this['muted'] && !XY['loop'])
            return Ie;
        if (Xl !== 'none' && Xl !== 'reverb' && Xl !== 'muffled' && Xl !== 'club')
            return console['error']('Invalid\x20filter:\x20' + Xl + '.\x20Only\x20valid\x20filters\x20are\x20\x27none\x27,\x20\x27reverb\x27,\x20\x27muffled\x27\x20and\x20\x27club\x27.'),
            Ie;
        if (XC['canCoalesce']) {
            const p3 = this['ctx']['currentTime'] + XC['file']['buffer']['duration'];
            for (let p4 = 0x0; p4 < XC['instances']['length']; p4++) {
                const p5 = XC['instances'][p4];
                if (Math['abs'](p3 - p5['stopTime']) > 0.03)
                    continue;
                const p6 = p5['volume'] * p5['volume'] + Xd * Xd
                  , p7 = p5['volume'] * p5['pan'] + Xd * Xk
                  , p8 = p5['volume'] + Xd;
                return p5['volume'] = Math['sqrt'](p6),
                p5['pan'] = p7 / Math['max'](0.001, p8),
                Ie;
            }
        }
        for (let p9 = 0x0; p9 < De && (++this['instanceId'],
        !!this['instances'][this['instanceId'] % De]['sound']); p9++)
            ;
        const XH = this['instances'][this['instanceId'] % De];
        if (XH['sound'])
            return console['error']('All\x20' + De + '\x20sound\x20instances\x20in\x20use.\x20You\x20are\x20using\x20way\x20too\x20many\x20sounds!'),
            Ie;
        XH['id'] = this['instanceId'];
        const p0 = XH['paramEvents'] > 0x96
          , p1 = XH['paramEvents'] > 0x14 && !(this['instanceId'] % 0x7);
        for ((p0 || p1) && XH['reallocNodes'](); XC['instances']['length'] >= XC['maxInstances']; ) {
            let pX = XC['instances'][0x0];
            for (let pp = 0x1; pp < XC['instances']['length']; pp++)
                pX['stopTime'] > XC['instances'][pp]['stopTime'] && (pX = XC['instances'][pp]);
            pX['disconnect']();
        }
        XH['sound'] = XC,
        XC['instances']['push'](XH);
        const p2 = Xl === 'none' ? this['masterGainNode'] : Xl === 'reverb' ? this['reverbNode'] : this['eqNodes'][Xl];
        return XH['start'](p2, XC['file']['buffer'], Xd, Xk, XU, XW, XD, XG, XF),
        this['playingInstances']['includes'](XH) || this['playingInstances']['push'](XH),
        new ii(XH);
    }
    ['registerReverb'](p, b, XT) {
        const XY = new Kr(this['ctx'],this['reverbNode'],this['masterGainNode'],b,XT);
        this['loadFile'](p, XC => {
            XY['convolverNode']['buffer'] = this['files'][XC]['buffer'],
            this['onfileload'](XC);
        }
        ),
        this['reverbs'][b] = XY;
    }
    ['setReverbs'](p) {
        for (let b = 0x0; b < this['activeReverbs']['length']; b++) {
            const XT = this['activeReverbs'][b];
            p[XT['name']] || (XT['targetLevel'] = 0x0);
        }
        for (const XY in p) {
            if (!p[XY])
                continue;
            const XC = this['reverbs'][XY];
            if (!XC) {
                console['error']('No\x20reverb\x20named\x20' + XY);
                continue;
            }
            this['reverbs'][XY]['active'] || (this['activeReverbs']['push'](XC),
            XC['active'] = !0x0),
            XC['targetLevel'] = p[XY];
        }
    }
    ['stop'](p=!0x0) {
        for (let b = 0x0; b < De; b++) {
            const XT = this['instances'][b];
            p && XT['ambient'] || XT['sound'] && XT['stop']();
        }
    }
    ['update'](p) {
        this['ctx']['state'] == 'suspended' && this['ctx']['resume']();
        const b = this['muted'] ? 0x0 : this['volume']
          , XT = this['mutedOld'] ? 0x0 : this['volumeOld'];
        this['volumeOld'] = this['volume'],
        this['mutedOld'] = this['muted'],
        b != XT && this['masterGainNode']['gain']['setTargetAtTime'](b, this['ctx']['currentTime'], 0.02);
        for (let XY = this['playingInstances']['length'] - 0x1; XY >= 0x0; XY--) {
            const XC = this['playingInstances'][XY];
            XC['volumeOld'] != XC['volume'] && (XC['volumeOld'] = XC['volume'],
            XC['setGain'](XC['volume'])),
            XC['panOld'] != XC['pan'] && (XC['panOld'] = XC['pan'],
            XC['setPan'](XC['pan'])),
            XC['sound'] && this['ctx']['currentTime'] > XC['stopTime'] && XC['disconnect'](),
            XC['sound'] || this['playingInstances']['splice'](XY, 0x1);
        }
        if (this['ctx']['currentTime'] > this['reverbFadeEndTime']) {
            const Xl = this['ctx']['currentTime'] + 0.006
              , Xd = 0.025;
            this['reverbFadeEndTime'] = Xl + Xd;
            let Xk = 0x0;
            for (let XW = 0x0; XW < this['activeReverbs']['length']; XW++) {
                const XD = this['activeReverbs'][XW];
                Xk += XD['targetLevel'];
            }
            const XU = Xk > 0x1 ? 0x1 / Xk : 0x1;
            for (let XG = 0x0; XG < this['activeReverbs']['length']; XG++) {
                const XF = this['activeReverbs'][XG]
                  , XH = Math['sqrt'](XU * XF['targetLevel']);
                XF['setGain'](XH, Xl, this['reverbFadeEndTime']);
            }
            for (let p0 = this['activeReverbs']['length'] - 0x1; p0 >= 0x0; p0--) {
                const p1 = this['activeReverbs'][p0]
                  , p2 = this['ctx']['currentTime'] > p1['drainEndTime'];
                p1['gain'] == 0x0 && p2 && (p1['isConnected']() && p1['disconnect'](),
                p1['active'] = !0x1,
                this['activeReverbs']['splice'](p0, 0x1));
            }
        }
    }
    ['setMute'](p) {
        this['muted'] = p;
    }
    ['on'](p, b, XT) {
        if (p != 'fileload') {
            console['error']('Only\x20\x22fileload\x22\x20event\x20supported');
            return;
        }
        this['onfileload'] = b['bind'](XT);
    }
    ['updatePerformanceTest']() {
        if (this['runningOfflineTest'] = this['runningOfflineTest'] != null ? this['runningOfflineTest'] : !0x1,
        this['runningOfflineTest'])
            return;
        this['runningOfflineTest'] = !0x0;
        const p = 0xa;
        this['offlineCtx'] = new OfflineAudioContext(0x2,p * this['ctx']['sampleRate'],this['ctx']['sampleRate']);
        const b = this['offlineCtx']['createBuffer'](0x2, p * this['ctx']['sampleRate'], this['ctx']['sampleRate']);
        for (let Xd = 0x0; Xd < b['numberOfChannels']; Xd++) {
            const Xk = b['getChannelData'](Xd);
            for (let XU = 0x0; XU < Xk['length']; XU++)
                Xk[XU] = Math['sin'](XU / 0x91d) * Math['sin'](XU / 0x166d) * 0x2 * Math['random']() - 0x1;
        }
        const XT = this['offlineCtx']['createBufferSource']();
        XT['buffer'] = b;
        const XY = this['offlineCtx']['createConvolver']()
          , XC = this['offlineCtx']['createBuffer'](0x1, 0x4 * this['ctx']['sampleRate'], this['ctx']['sampleRate']);
        for (let XW = 0x0; XW < XC['numberOfChannels']; XW++) {
            const XD = XC['getChannelData'](XW);
            for (let XG = 0x0; XG < XD['length']; XG++)
                XD[XG] = 0x2 * Math['random']() - 0x1;
        }
        XY['buffer'] = XC;
        const Xl = {
            'echoVolume': 0.5,
            'echoLowPass': 0x320,
            'echoDelay': 0.25,
            'stereoSpread': 0.004
        };
        Xl['convolverNode'] = XY,
        Xl['echoLowPassNode'] = this['offlineCtx']['createBiquadFilter'](),
        Xl['echoLowPassNode']['type'] = 'lowpass',
        Xl['echoLowPassNode']['frequency']['setValueAtTime'](Xl['echoLowPass'], 0x0),
        Xl['echoLowPassNode']['Q']['setValueAtTime'](-3.0102999566398125, 0x0),
        Xl['echoDelayNode'] = this['offlineCtx']['createDelay'](Xl['echoDelay']),
        Xl['echoDelayNode']['delayTime']['setValueAtTime'](Xl['echoDelay'], 0x0),
        Xl['stereoDelayNode'] = this['offlineCtx']['createDelay'](Xl['stereoSpread']),
        Xl['stereoDelayNode']['delayTime']['setValueAtTime'](Xl['stereoSpread'], 0x0),
        Xl['mergerNode'] = this['offlineCtx']['createChannelMerger'](0x2),
        Xl['gainNode'] = this['offlineCtx']['createGain'](),
        Xl['gainNode']['channelCount'] = 0x1,
        Xl['gainNode']['channelCountMode'] = 'explicit',
        Xl['gainNode']['gain']['setValueAtTime'](0x1, 0x0),
        Xl['echoGainNode'] = this['offlineCtx']['createGain'](),
        Xl['echoGainNode']['channelCount'] = 0x1,
        Xl['echoGainNode']['channelCountMode'] = 'explicit',
        Xl['echoGainNode']['gain']['setValueAtTime'](Xl['echoVolume'], 0x0),
        Xl['outNode'] = this['offlineCtx']['createGain'](),
        Xl['gainNode']['connect'](Xl['convolverNode']);
        {
            const {buffer: XF} = Xl['convolverNode'];
            XF && XF['numberOfChannels'] != 0x1 && console['error']('stereoSpread\x20can\x20only\x20be\x20applied\x20to\x20mono\x20IRs'),
            Xl['convolverNode']['connect'](Xl['stereoDelayNode']),
            Xl['convolverNode']['connect'](Xl['mergerNode'], 0x0, 0x0),
            Xl['stereoDelayNode']?.['connect'](Xl['mergerNode'], 0x0, 0x1),
            Xl['mergerNode']?.['connect'](Xl['outNode']);
        }
        console['log']('starting\x20convolver'),
        XT['connect'](Xl['gainNode']),
        Xl['outNode']['connect'](this['offlineCtx']['destination']),
        XT['start'](),
        this['startTime'] = performance['now'](),
        this['offlineCtx']['oncomplete'] = XH => {
            const p0 = performance['now']();
            console['log']('Offline\x20render\x20time:\x20', p0 - this['startTime']),
            this['runningOfflineTest'] = !0x1;
        }
        ,
        this['offlineCtx']['startRendering']();
    }
}
const ye = {
    'Sound': new Xr()
}
  , ea = {
    'players': {
        'm9_01': {
            'path': 'audio/guns/m9_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm9_reload_01': {
            'path': 'audio/guns/m9_reload_01.mp3',
            'volume': 0x1
        },
        'm9_reload_02': {
            'path': 'audio/guns/m9_reload_02.mp3',
            'volume': 0x1
        },
        'm9_switch_01': {
            'path': 'audio/guns/m9_switch_01.mp3',
            'volume': 0x1
        },
        'm93r_01': {
            'path': 'audio/guns/m93r_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm93r_reload_01': {
            'path': 'audio/guns/m93r_reload_01.mp3',
            'volume': 0x1
        },
        'm93r_reload_02': {
            'path': 'audio/guns/m93r_reload_02.mp3',
            'volume': 0x1
        },
        'm93r_switch_01': {
            'path': 'audio/guns/m93r_switch_01.mp3',
            'volume': 0x1
        },
        'glock_01': {
            'path': 'audio/guns/glock_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'glock_reload_01': {
            'path': 'audio/guns/glock_reload_01.mp3',
            'volume': 0x1
        },
        'glock_reload_02': {
            'path': 'audio/guns/glock_reload_02.mp3',
            'volume': 0x1
        },
        'glock_switch_01': {
            'path': 'audio/guns/glock_switch_01.mp3',
            'volume': 0x1
        },
        'p30l_01': {
            'path': 'audio/guns/p30l_01.mp3',
            'volume': 1.2,
            'maxInstances': 0x5
        },
        'p30l_reload_01': {
            'path': 'audio/guns/p30l_reload_01.mp3',
            'volume': 1.4
        },
        'p30l_reload_02': {
            'path': 'audio/guns/p30l_reload_02.mp3',
            'volume': 1.4
        },
        'p30l_switch_01': {
            'path': 'audio/guns/p30l_switch_01.mp3',
            'volume': 1.5
        },
        'm1911_01': {
            'path': 'audio/guns/m1911_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm1911_reload_01': {
            'path': 'audio/guns/m1911_reload_01.mp3',
            'volume': 0x1
        },
        'm1911_reload_02': {
            'path': 'audio/guns/m1911_reload_02.mp3',
            'volume': 0x1
        },
        'm1911_switch_01': {
            'path': 'audio/guns/m1911_switch_01.mp3',
            'volume': 0x1
        },
        'ot38_01': {
            'path': 'audio/guns/ot38_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'ot38_reload_01': {
            'path': 'audio/guns/ot38_reload_01.mp3',
            'volume': 0x1
        },
        'ot38_reload_02': {
            'path': 'audio/guns/ot38_reload_02.mp3',
            'volume': 0x1
        },
        'ot38_switch_01': {
            'path': 'audio/guns/ot38_switch_01.mp3',
            'volume': 0x1
        },
        'ots38_01': {
            'path': 'audio/guns/ots38_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'colt45_01': {
            'path': 'audio/guns/colt45_01.mp3',
            'volume': 0x1
        },
        'colt45_reload_01': {
            'path': 'audio/guns/colt45_reload_01.mp3',
            'volume': 0x1
        },
        'colt45_reload_02': {
            'path': 'audio/guns/colt45_reload_02.mp3',
            'volume': 0x1
        },
        'colt45_switch_01': {
            'path': 'audio/guns/colt45_switch_01.mp3',
            'volume': 0x1
        },
        'deagle_01': {
            'path': 'audio/guns/deagle_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'deagle_reload_01': {
            'path': 'audio/guns/deagle_reload_01.mp3',
            'volume': 0x1
        },
        'deagle_reload_02': {
            'path': 'audio/guns/deagle_reload_02.mp3',
            'volume': 0x1
        },
        'deagle_switch_01': {
            'path': 'audio/guns/deagle_switch_01.mp3',
            'volume': 0x1
        },
        'flare_gun_01': {
            'path': 'audio/guns/flare_gun_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'flare_gun_reload_01': {
            'path': 'audio/guns/flare_gun_reload_01.mp3',
            'volume': 0x1
        },
        'flare_gun_reload_02': {
            'path': 'audio/guns/flare_gun_reload_02.mp3',
            'volume': 0x1
        },
        'ak47_01': {
            'path': 'audio/guns/ak47_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'ak47_reload_01': {
            'path': 'audio/guns/ak47_reload_01.mp3',
            'volume': 0x1
        },
        'ak47_switch_01': {
            'path': 'audio/guns/ak47_switch_01.mp3',
            'volume': 0x1
        },
        'an94_01': {
            'path': 'audio/guns/an94_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'an94_reload_01': {
            'path': 'audio/guns/an94_reload_01.mp3',
            'volume': 0x1
        },
        'an94_switch_01': {
            'path': 'audio/guns/an94_switch_01.mp3',
            'volume': 0x1
        },
        'groza_01': {
            'path': 'audio/guns/groza_01.mp3',
            'volume': 0.95,
            'maxInstances': 0x5
        },
        'groza_reload_01': {
            'path': 'audio/guns/groza_reload_01.mp3',
            'volume': 1.1
        },
        'groza_switch_01': {
            'path': 'audio/guns/groza_switch_01.mp3',
            'volume': 1.1
        },
        'grozas_01': {
            'path': 'audio/guns/grozas_01.mp3',
            'volume': 0.95,
            'maxInstances': 0x5
        },
        'scar_01': {
            'path': 'audio/guns/scar_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'scar_reload_01': {
            'path': 'audio/guns/scar_reload_01.mp3',
            'volume': 0x1
        },
        'scar_switch_01': {
            'path': 'audio/guns/scar_switch_01.mp3',
            'volume': 0x1
        },
        'scarssr_01': {
            'path': 'audio/guns/scarssr_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'dp28_01': {
            'path': 'audio/guns/dp28_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'dp28_reload_01': {
            'path': 'audio/guns/dp28_reload_01.mp3',
            'volume': 0x1
        },
        'dp28_switch_01': {
            'path': 'audio/guns/dp28_switch_01.mp3',
            'volume': 0x1
        },
        'bar_01': {
            'path': 'audio/guns/bar_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'bar_reload_01': {
            'path': 'audio/guns/bar_reload_01.mp3',
            'volume': 0x1
        },
        'bar_switch_01': {
            'path': 'audio/guns/bar_switch_01.mp3',
            'volume': 0x1
        },
        'pkp_01': {
            'path': 'audio/guns/pkp_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'pkp_reload_01': {
            'path': 'audio/guns/pkp_reload_01.mp3',
            'volume': 0x1
        },
        'pkp_switch_01': {
            'path': 'audio/guns/pkp_switch_01.mp3',
            'volume': 0x1
        },
        'm870_01': {
            'path': 'audio/guns/m870_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm870_reload_01': {
            'path': 'audio/guns/m870_reload_01.mp3',
            'volume': 0x1
        },
        'm870_cycle_01': {
            'path': 'audio/guns/m870_cycle_01.mp3',
            'volume': 0x1
        },
        'm870_pull_01': {
            'path': 'audio/guns/m870_pull_01.mp3',
            'volume': 0x1
        },
        'spas12_01': {
            'path': 'audio/guns/spas12_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'spas12_reload_01': {
            'path': 'audio/guns/spas12_reload_01.mp3',
            'volume': 0x1
        },
        'spas12_cycle_01': {
            'path': 'audio/guns/spas12_cycle_01.mp3',
            'volume': 0x1
        },
        'spas12_pull_01': {
            'path': 'audio/guns/spas12_pull_01.mp3',
            'volume': 0x1
        },
        'mp220_01': {
            'path': 'audio/guns/mp220_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mp220_reload_01': {
            'path': 'audio/guns/mp220_reload_01.mp3',
            'volume': 0x1
        },
        'mp220_deploy_01': {
            'path': 'audio/guns/mp220_deploy_01.mp3',
            'volume': 0x1
        },
        'saiga_01': {
            'path': 'audio/guns/saiga_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'saiga_reload_01': {
            'path': 'audio/guns/saiga_reload_01.mp3',
            'volume': 0x1
        },
        'saiga_switch_01': {
            'path': 'audio/guns/saiga_switch_01.mp3',
            'volume': 0x1
        },
        'usas_01': {
            'path': 'audio/guns/usas_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'usas_reload_01': {
            'path': 'audio/guns/usas_reload_01.mp3',
            'volume': 0x1
        },
        'usas_switch_01': {
            'path': 'audio/guns/usas_switch_01.mp3',
            'volume': 0x1
        },
        'm1100_01': {
            'path': 'audio/guns/m1100_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm1100_reload_01': {
            'path': 'audio/guns/m1100_reload_01.mp3',
            'volume': 0x1
        },
        'm1100_deploy_01': {
            'path': 'audio/guns/m1100_deploy_01.mp3',
            'volume': 0x1
        },
        'm1014_01': {
            'path': 'audio/guns/m1014_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm1014_reload_01': {
            'path': 'audio/guns/m1014_reload_01.mp3',
            'volume': 0x1
        },
        'm1014_deploy_01': {
            'path': 'audio/guns/m1014_deploy_01.mp3',
            'volume': 0x1
        },
        'm39_01': {
            'path': 'audio/guns/m39_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm39_reload_01': {
            'path': 'audio/guns/m39_reload_01.mp3',
            'volume': 0x1
        },
        'm39_switch_01': {
            'path': 'audio/guns/m39_switch_01.mp3',
            'volume': 0x1
        },
        'svd_01': {
            'path': 'audio/guns/svd_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'svd_reload_01': {
            'path': 'audio/guns/svd_reload_01.mp3',
            'volume': 0x1
        },
        'svd_switch_01': {
            'path': 'audio/guns/svd_switch_01.mp3',
            'volume': 0x1
        },
        'garand_01': {
            'path': 'audio/guns/garand_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'garand_02': {
            'path': 'audio/guns/garand_02.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'garand_reload_01': {
            'path': 'audio/guns/garand_reload_01.mp3',
            'volume': 0x1
        },
        'garand_switch_01': {
            'path': 'audio/guns/garand_switch_01.mp3',
            'volume': 0x1
        },
        'm1a1_01': {
            'path': 'audio/guns/m1a1_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm1a1_reload_01': {
            'path': 'audio/guns/m1a1_reload_01.mp3',
            'volume': 0x1
        },
        'm1a1_switch_01': {
            'path': 'audio/guns/m1a1_switch_01.mp3',
            'volume': 0x1
        },
        'mp5_01': {
            'path': 'audio/guns/mp5_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mp5_reload_01': {
            'path': 'audio/guns/mp5_reload_01.mp3',
            'volume': 0x1
        },
        'mp5_switch_01': {
            'path': 'audio/guns/mp5_switch_01.mp3',
            'volume': 0x1
        },
        'mac10_01': {
            'path': 'audio/guns/mac10_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mac10_reload_01': {
            'path': 'audio/guns/mac10_reload_01.mp3',
            'volume': 0x1
        },
        'mac10_switch_01': {
            'path': 'audio/guns/mac10_switch_01.mp3',
            'volume': 0x1
        },
        'ump9_01': {
            'path': 'audio/guns/ump9_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'ump9_reload_01': {
            'path': 'audio/guns/ump9_reload_01.mp3',
            'volume': 0x1
        },
        'ump9_switch_01': {
            'path': 'audio/guns/ump9_switch_01.mp3',
            'volume': 0x1
        },
        'vector_01': {
            'path': 'audio/guns/vector_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'vector_02': {
            'path': 'audio/guns/vector_02.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'vector_reload_01': {
            'path': 'audio/guns/vector_reload_01.mp3',
            'volume': 0x1
        },
        'vector_switch_01': {
            'path': 'audio/guns/vector_switch_01.mp3',
            'volume': 0x1
        },
        'scorpion_01': {
            'path': 'audio/guns/scorpion_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'scorpion_reload_01': {
            'path': 'audio/guns/scorpion_reload_01.mp3',
            'volume': 0x1
        },
        'scorpion_switch_01': {
            'path': 'audio/guns/scorpion_switch_01.mp3',
            'volume': 0x1
        },
        'vss_01': {
            'path': 'audio/guns/vss_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'vss_reload_01': {
            'path': 'audio/guns/vss_reload_01.mp3',
            'volume': 0x1
        },
        'vss_switch_01': {
            'path': 'audio/guns/vss_switch_01.mp3',
            'volume': 0x1
        },
        'famas_01': {
            'path': 'audio/guns/famas_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'famas_reload_01': {
            'path': 'audio/guns/famas_reload_01.mp3',
            'volume': 0x1
        },
        'famas_switch_01': {
            'path': 'audio/guns/famas_switch_01.mp3',
            'volume': 0x1
        },
        'hk416_01': {
            'path': 'audio/guns/hk416_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'hk416_reload_01': {
            'path': 'audio/guns/hk416_reload_01.mp3',
            'volume': 0x1
        },
        'hk416_switch_01': {
            'path': 'audio/guns/hk416_switch_01.mp3',
            'volume': 0x1
        },
        'm4a1_01': {
            'path': 'audio/guns/m4a1_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm4a1_reload_01': {
            'path': 'audio/guns/m4a1_reload_01.mp3',
            'volume': 0x1
        },
        'm4a1_switch_01': {
            'path': 'audio/guns/m4a1_switch_01.mp3',
            'volume': 0x1
        },
        'mk12_01': {
            'path': 'audio/guns/mk12_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mk12_reload_01': {
            'path': 'audio/guns/mk12_reload_01.mp3',
            'volume': 0x1
        },
        'mk12_switch_01': {
            'path': 'audio/guns/mk12_switch_01.mp3',
            'volume': 0x1
        },
        'l86_01': {
            'path': 'audio/guns/l86_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'l86_reload_01': {
            'path': 'audio/guns/l86_reload_01.mp3',
            'volume': 0x1
        },
        'l86_switch_01': {
            'path': 'audio/guns/l86_switch_01.mp3',
            'volume': 0x1
        },
        'm249_01': {
            'path': 'audio/guns/m249_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'm249_reload_01': {
            'path': 'audio/guns/m249_reload_01.mp3',
            'volume': 1.5
        },
        'm249_switch_01': {
            'path': 'audio/guns/m249_switch_01.mp3',
            'volume': 1.5
        },
        'qbb97_01': {
            'path': 'audio/guns/qbb97_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'qbb97_reload_01': {
            'path': 'audio/guns/qbb97_reload_01.mp3',
            'volume': 0x1
        },
        'qbb97_switch_01': {
            'path': 'audio/guns/qbb97_switch_01.mp3',
            'volume': 0x1
        },
        'scout_01': {
            'path': 'audio/guns/scout_01.mp3',
            'volume': 0x2,
            'maxInstances': 0x5
        },
        'scout_reload_01': {
            'path': 'audio/guns/scout_reload_01.mp3',
            'volume': 1.2
        },
        'scout_cycle_01': {
            'path': 'audio/guns/scout_cycle_01.mp3',
            'volume': 1.2
        },
        'scout_pull_01': {
            'path': 'audio/guns/scout_pull_01.mp3',
            'volume': 1.2
        },
        'model94_01': {
            'path': 'audio/guns/model94_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'model94_reload_01': {
            'path': 'audio/guns/model94_reload_01.mp3',
            'volume': 0x1
        },
        'model94_cycle_01': {
            'path': 'audio/guns/model94_cycle_01.mp3',
            'volume': 0x1
        },
        'mkg45_01': {
            'path': 'audio/guns/mkg45_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mkg45_reload_01': {
            'path': 'audio/guns/mkg45_reload_01.mp3',
            'volume': 1.25
        },
        'mkg45_switch_01': {
            'path': 'audio/guns/mkg45_switch_01.mp3',
            'volume': 1.25
        },
        'blr_01': {
            'path': 'audio/guns/blr_01.mp3',
            'volume': 1.5,
            'maxInstances': 0x5
        },
        'blr_reload_01': {
            'path': 'audio/guns/blr_reload_01.mp3',
            'volume': 0x1
        },
        'blr_cycle_01': {
            'path': 'audio/guns/blr_cycle_01.mp3',
            'volume': 0x1
        },
        'mosin_01': {
            'path': 'audio/guns/mosin_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'mosin_reload_01': {
            'path': 'audio/guns/mosin_reload_01.mp3',
            'volume': 0x1
        },
        'mosin_reload_02': {
            'path': 'audio/guns/mosin_reload_02.mp3',
            'volume': 0x1
        },
        'mosin_cycle_01': {
            'path': 'audio/guns/mosin_cycle_01.mp3',
            'volume': 0x1
        },
        'mosin_pull_01': {
            'path': 'audio/guns/mosin_pull_01.mp3',
            'volume': 0x1
        },
        'sv98_01': {
            'path': 'audio/guns/sv98_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'sv98_reload_01': {
            'path': 'audio/guns/sv98_reload_01.mp3',
            'volume': 0x1
        },
        'sv98_cycle_01': {
            'path': 'audio/guns/sv98_cycle_01.mp3',
            'volume': 0x1
        },
        'sv98_pull_01': {
            'path': 'audio/guns/sv98_pull_01.mp3',
            'volume': 0x1
        },
        'awc_01': {
            'path': 'audio/guns/awc_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'awc_reload_01': {
            'path': 'audio/guns/awc_reload_01.mp3',
            'volume': 0x1
        },
        'awc_cycle_01': {
            'path': 'audio/guns/awc_cycle_01.mp3',
            'volume': 0x1
        },
        'awc_pull_01': {
            'path': 'audio/guns/awc_pull_01.mp3',
            'volume': 0x1
        },
        'potato_cannon_01': {
            'path': 'audio/guns/potato_cannon_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'potato_cannon_reload_01': {
            'path': 'audio/guns/potato_cannon_reload_01.mp3',
            'volume': 0x1
        },
        'potato_cannon_switch_01': {
            'path': 'audio/guns/potato_cannon_switch_01.mp3',
            'volume': 0x1
        },
        'potato_smg_01': {
            'path': 'audio/guns/potato_smg_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x5
        },
        'potato_smg_reload_01': {
            'path': 'audio/guns/potato_smg_reload_01.mp3',
            'volume': 0x1
        },
        'potato_smg_switch_01': {
            'path': 'audio/guns/potato_smg_switch_01.mp3',
            'volume': 0x1
        },
        'bugle_01': {
            'path': 'audio/guns/bugle_01.mp3',
            'volume': 1.5,
            'maxInstances': 0x3,
            'preload': !0x1
        },
        'bugle_02': {
            'path': 'audio/guns/bugle_02.mp3',
            'volume': 1.5,
            'maxInstances': 0x3,
            'preload': !0x1
        },
        'bugle_03': {
            'path': 'audio/guns/bugle_03.mp3',
            'volume': 1.5,
            'maxInstances': 0x3,
            'preload': !0x1
        },
        'empty_fire_01': {
            'path': 'audio/guns/empty_fire_01.mp3',
            'volume': 0.9
        },
        'empty_fire_02': {
            'path': 'audio/guns/empty_fire_02.mp3',
            'volume': 0.9
        },
        'gun_switch_01': {
            'path': 'audio/guns/gun_switch_01.mp3',
            'volume': 0x1
        },
        'bandage_use_01': {
            'path': 'audio/ui/bandage_use_01.mp3',
            'volume': 0x1
        },
        'healthkit_use_01': {
            'path': 'audio/ui/healthkit_use_01.mp3',
            'volume': 0x1
        },
        'soda_use_01': {
            'path': 'audio/ui/soda_use_01.mp3',
            'volume': 0x1
        },
        'pills_use_01': {
            'path': 'audio/ui/pills_use_01.mp3',
            'volume': 0x1
        },
        'stow_weapon_01': {
            'path': 'audio/ui/stow_weapon_01.mp3',
            'volume': 0x1
        }
    },
    'hits': {
        'stone_bullet_hit_01': {
            'path': 'audio/hits/stone_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'wood_bullet_hit_01': {
            'path': 'audio/hits/wood_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'wood_bullet_hit_02': {
            'path': 'audio/hits/wood_bullet_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'wood_bullet_hit_03': {
            'path': 'audio/hits/wood_bullet_hit_03.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'wood_bullet_hit_04': {
            'path': 'audio/hits/wood_bullet_hit_04.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'bush_bullet_hit_01': {
            'path': 'audio/hits/bush_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'metal_bullet_hit_01': {
            'path': 'audio/hits/metal_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'metal_bullet_hit_02': {
            'path': 'audio/hits/metal_bullet_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'metal_bullet_hit_03': {
            'path': 'audio/hits/metal_bullet_hit_03.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'metal_bullet_hit_04': {
            'path': 'audio/hits/metal_bullet_hit_04.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x6
        },
        'pan_bullet_hit_01': {
            'path': 'audio/hits/pan_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x6
        },
        'brick_bullet_hit_01': {
            'path': 'audio/hits/brick_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'punch_hit_01': {
            'path': 'audio/hits/punch_hit_01.mp3',
            'volume': 0x1
        },
        'knife_hit_01': {
            'path': 'audio/hits/knife_hit_01.mp3',
            'volume': 0x1
        },
        'pan_hit_01': {
            'path': 'audio/hits/pan_hit_01.mp3',
            'volume': 0x1
        },
        'axe_hit_01': {
            'path': 'audio/hits/axe_hit_01.mp3',
            'volume': 0x1
        },
        'hook_hit_01': {
            'path': 'audio/hits/hook_hit_01.mp3',
            'volume': 0x1
        },
        'saw_hit_01': {
            'path': 'audio/hits/saw_hit_01.mp3',
            'volume': 2.5
        },
        'crowbar_hit_01': {
            'path': 'audio/hits/crowbar_hit_01.mp3',
            'volume': 0x1
        },
        'spade_hit_01': {
            'path': 'audio/hits/spade_hit_01.mp3',
            'volume': 0x1
        },
        'hammer_hit_01': {
            'path': 'audio/hits/hammer_hit_01.mp3',
            'volume': 0x1
        },
        'metal_punch_hit_01': {
            'path': 'audio/hits/metal_punch_hit_01.mp3',
            'volume': 0x1
        },
        'metal_punch_hit_02': {
            'path': 'audio/hits/metal_punch_hit_02.mp3',
            'volume': 0x1
        },
        'player_bullet_hit_01': {
            'path': 'audio/hits/player_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'player_bullet_hit_02': {
            'path': 'audio/hits/player_bullet_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0
        },
        'plastic_bullet_hit_01': {
            'path': 'audio/hits/plastic_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'toilet_bullet_hit_01': {
            'path': 'audio/hits/toilet_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'toilet_bullet_hit_02': {
            'path': 'audio/hits/toilet_bullet_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'glass_bullet_hit_01': {
            'path': 'audio/hits/glass_bullet_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'concrete_hit_01': {
            'path': 'audio/hits/concrete_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'frag_grass_01': {
            'path': 'audio/hits/frag_grass_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'frag_sand_01': {
            'path': 'audio/hits/frag_sand_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'frag_water_01': {
            'path': 'audio/hits/frag_water_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'cloth_hit_01': {
            'path': 'audio/hits/cloth_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'cloth_hit_02': {
            'path': 'audio/hits/cloth_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'organic_hit_01': {
            'path': 'audio/hits/organic_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'piano_hit_01': {
            'path': 'audio/hits/piano_hit_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        },
        'piano_hit_02': {
            'path': 'audio/hits/piano_hit_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0,
            'maxInstances': 0x3
        }
    },
    'sfx': {
        'crate_break_01': {
            'path': 'audio/sfx/crate_break_01.mp3',
            'volume': 0x1
        },
        'crate_break_02': {
            'path': 'audio/sfx/crate_break_02.mp3',
            'volume': 0x1
        },
        'tree_break_01': {
            'path': 'audio/sfx/tree_break_01.mp3',
            'volume': 0x1
        },
        'bush_break_01': {
            'path': 'audio/sfx/bush_break_01.mp3',
            'volume': 0x1
        },
        'bush_enter_01': {
            'path': 'audio/sfx/bush_enter_01.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0
        },
        'bush_enter_02': {
            'path': 'audio/sfx/bush_enter_02.mp3',
            'volume': 0x1,
            'canCoalesce': !0x0
        },
        'barrel_break_01': {
            'path': 'audio/sfx/barrel_break_01.mp3',
            'volume': 0x1
        },
        'barrel_break_02': {
            'path': 'audio/sfx/barrel_break_02.mp3',
            'volume': 0x1
        },
        'stone_break_01': {
            'path': 'audio/sfx/stone_break_01.mp3',
            'volume': 0x1
        },
        'wall_break_01': {
            'path': 'audio/sfx/wall_break_01.mp3',
            'volume': 0x1
        },
        'ceiling_break_01': {
            'path': 'audio/sfx/ceiling_break_01.mp3',
            'volume': 0x1
        },
        'ceiling_break_02': {
            'path': 'audio/sfx/ceiling_break_02.mp3',
            'volume': 0x1
        },
        'toilet_break_01': {
            'path': 'audio/sfx/toilet_break_01.mp3',
            'volume': 0x1
        },
        'toilet_break_02': {
            'path': 'audio/sfx/toilet_break_02.mp3',
            'volume': 0x1
        },
        'vending_break_01': {
            'path': 'audio/sfx/vending_break_01.mp3',
            'volume': 0x1
        },
        'window_break_01': {
            'path': 'audio/sfx/window_break_01.mp3',
            'volume': 0x1
        },
        'window_break_02': {
            'path': 'audio/sfx/window_break_02.mp3',
            'volume': 0x1
        },
        'drawers_break_01': {
            'path': 'audio/sfx/drawers_break_01.mp3',
            'volume': 0x1
        },
        'oven_break_01': {
            'path': 'audio/sfx/oven_break_01.mp3',
            'volume': 0x1
        },
        'deposit_box_break_01': {
            'path': 'audio/sfx/deposit_box_break_01.mp3',
            'volume': 0x1
        },
        'cloth_break_01': {
            'path': 'audio/sfx/cloth_break_01.mp3',
            'volume': 0x1
        },
        'screen_break_01': {
            'path': 'audio/sfx/screen_break_01.mp3',
            'volume': 0x1
        },
        'pumpkin_break_01': {
            'path': 'audio/sfx/pumpkin_break_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'ceramic_break_01': {
            'path': 'audio/sfx/ceramic_break_01.mp3',
            'volume': 0x1
        },
        'footstep_grass_01': {
            'path': 'audio/sfx/footstep_grass_01.mp3',
            'volume': 0x1
        },
        'footstep_grass_02': {
            'path': 'audio/sfx/footstep_grass_02.mp3',
            'volume': 0x1
        },
        'footstep_metal_01': {
            'path': 'audio/sfx/footstep_metal_01.mp3',
            'volume': 0x1
        },
        'footstep_metal_02': {
            'path': 'audio/sfx/footstep_metal_02.mp3',
            'volume': 0x1
        },
        'footstep_metal_03': {
            'path': 'audio/sfx/footstep_metal_03.mp3',
            'volume': 0x1
        },
        'footstep_metal_04': {
            'path': 'audio/sfx/footstep_metal_04.mp3',
            'volume': 0x1
        },
        'footstep_metal_05': {
            'path': 'audio/sfx/footstep_metal_05.mp3',
            'volume': 0x1
        },
        'footstep_wood_01': {
            'path': 'audio/sfx/footstep_wood_01.mp3',
            'volume': 0x1
        },
        'footstep_wood_02': {
            'path': 'audio/sfx/footstep_wood_02.mp3',
            'volume': 0x1
        },
        'footstep_wood_03': {
            'path': 'audio/sfx/footstep_wood_03.mp3',
            'volume': 0x1
        },
        'footstep_sand_01': {
            'path': 'audio/sfx/footstep_sand_01.mp3',
            'volume': 0x1
        },
        'footstep_sand_02': {
            'path': 'audio/sfx/footstep_sand_02.mp3',
            'volume': 0x1
        },
        'footstep_water_01': {
            'path': 'audio/sfx/footstep_water_01.mp3',
            'volume': 0x1
        },
        'footstep_water_02': {
            'path': 'audio/sfx/footstep_water_02.mp3',
            'volume': 0x1
        },
        'footstep_tile_01': {
            'path': 'audio/sfx/footstep_tile_01.mp3',
            'volume': 0x1
        },
        'footstep_tile_02': {
            'path': 'audio/sfx/footstep_tile_02.mp3',
            'volume': 0x1
        },
        'footstep_asphalt_01': {
            'path': 'audio/sfx/footstep_asphalt_01.mp3',
            'volume': 0x1
        },
        'footstep_asphalt_02': {
            'path': 'audio/sfx/footstep_asphalt_02.mp3',
            'volume': 0x1
        },
        'footstep_brick_01': {
            'path': 'audio/sfx/footstep_brick_01.mp3',
            'volume': 0x1
        },
        'footstep_stone_01': {
            'path': 'audio/sfx/footstep_stone_01.mp3',
            'volume': 0.8
        },
        'footstep_carpet_01': {
            'path': 'audio/sfx/footstep_carpet_01.mp3',
            'volume': 0x1
        },
        'punch_swing_01': {
            'path': 'audio/sfx/punch_swing_01.mp3',
            'volume': 0x1
        },
        'knife_swing_01': {
            'path': 'audio/sfx/knife_swing_01.mp3',
            'volume': 0x1
        },
        'medium_swing_01': {
            'path': 'audio/sfx/medium_swing_01.mp3',
            'volume': 0x1
        },
        'heavy_swing_01': {
            'path': 'audio/sfx/heavy_swing_01.mp3',
            'volume': 0x1
        },
        'bullet_whiz_01': {
            'path': 'audio/sfx/bullet_whiz_01.mp3',
            'volume': 0x1
        },
        'bullet_whiz_02': {
            'path': 'audio/sfx/bullet_whiz_02.mp3',
            'volume': 0x1
        },
        'bullet_whiz_03': {
            'path': 'audio/sfx/bullet_whiz_03.mp3',
            'volume': 0x1
        },
        'frag_throw_01': {
            'path': 'audio/sfx/frag_throw_01.mp3',
            'volume': 0x1
        },
        'frag_pin_01': {
            'path': 'audio/sfx/frag_pin_01.mp3',
            'volume': 0x1
        },
        'frag_deploy_01': {
            'path': 'audio/ui/frag_pickup_01.mp3',
            'volume': 0x1
        },
        'frag_water_01': {
            'path': 'audio/hits/frag_water_01.mp3',
            'volume': 0x1
        },
        'strobe_click_01': {
            'path': 'audio/sfx/strobe_click_01.mp3',
            'volume': 0x1
        },
        'explosion_01': {
            'path': 'audio/sfx/explosion_01.mp3',
            'volume': 0x1
        },
        'explosion_02': {
            'path': 'audio/sfx/explosion_02.mp3',
            'volume': 0x1
        },
        'explosion_03': {
            'path': 'audio/sfx/explosion_03.mp3',
            'volume': 0x1
        },
        'explosion_04': {
            'path': 'audio/sfx/explosion_04.mp3',
            'volume': 0x1,
            'maxInstances': 0x4
        },
        'explosion_05': {
            'path': 'audio/sfx/explosion_05.mp3',
            'volume': 0x1
        },
        'explosion_smoke_01': {
            'path': 'audio/sfx/explosion_smoke_01.mp3',
            'volume': 0x1
        },
        'snowball_01': {
            'path': 'audio/sfx/snowball_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'snowball_02': {
            'path': 'audio/sfx/snowball_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'potato_01': {
            'path': 'audio/sfx/potato_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'potato_02': {
            'path': 'audio/sfx/potato_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'stow_weapon_01': {
            'path': 'audio/ui/stow_weapon_01.mp3',
            'volume': 0x1
        },
        'knife_deploy_01': {
            'path': 'audio/ui/knife_deploy_01.mp3',
            'volume': 0x1
        },
        'pan_pickup_01': {
            'path': 'audio/ui/pan_pickup_01.mp3',
            'volume': 0x1
        },
        'knuckles_deploy_01': {
            'path': 'audio/ui/knuckles_deploy_01.mp3',
            'volume': 0x1
        },
        'door_open_01': {
            'path': 'audio/sfx/door_open_01.mp3',
            'volume': 0x1
        },
        'door_close_01': {
            'path': 'audio/sfx/door_close_01.mp3',
            'volume': 0x1
        },
        'door_open_02': {
            'path': 'audio/sfx/door_open_02.mp3',
            'volume': 0x1
        },
        'door_close_02': {
            'path': 'audio/sfx/door_close_02.mp3',
            'volume': 0x1
        },
        'door_open_03': {
            'path': 'audio/sfx/door_open_03.mp3',
            'volume': 0x1
        },
        'door_close_03': {
            'path': 'audio/sfx/door_close_03.mp3',
            'volume': 0x1
        },
        'door_open_04': {
            'path': 'audio/sfx/door_open_04.mp3',
            'volume': 0.8
        },
        'door_error_01': {
            'path': 'audio/sfx/door_error_01.mp3',
            'volume': 0x1
        },
        'vault_change_01': {
            'path': 'audio/sfx/vault_change_01.mp3',
            'volume': 0x1
        },
        'vault_change_02': {
            'path': 'audio/sfx/vault_change_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'vault_change_03': {
            'path': 'audio/sfx/vault_change_03.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'cell_control_01': {
            'path': 'audio/sfx/cell_control_01.mp3',
            'volume': 0x1
        },
        'cell_control_02': {
            'path': 'audio/sfx/cell_control_02.mp3',
            'volume': 0x1
        },
        'plane_01': {
            'path': 'audio/sfx/plane_01.mp3',
            'volume': 0x1
        },
        'plane_02': {
            'path': 'audio/sfx/plane_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'fighter_01': {
            'path': 'audio/sfx/fighter_01.mp3',
            'volume': 0x1
        },
        'airdrop_chute_01': {
            'path': 'audio/sfx/airdrop_chute_01.mp3',
            'volume': 0x1
        },
        'airdrop_fall_01': {
            'path': 'audio/sfx/airdrop_fall_01.mp3',
            'volume': 0x1
        },
        'airdrop_crash_01': {
            'path': 'audio/sfx/airdrop_crash_01.mp3',
            'volume': 0x1
        },
        'airdrop_crash_02': {
            'path': 'audio/sfx/airdrop_crash_02.mp3',
            'volume': 0x1
        },
        'airdrop_open_01': {
            'path': 'audio/sfx/airdrop_open_01.mp3',
            'volume': 0x1
        },
        'airdrop_open_02': {
            'path': 'audio/sfx/airdrop_open_02.mp3',
            'volume': 0x1
        },
        'button_press_01': {
            'path': 'audio/sfx/button_press_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x3
        },
        'watering_01': {
            'path': 'audio/sfx/watering_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x3,
            'preload': !0x1
        },
        'piano_02': {
            'path': 'audio/sfx/piano_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'footstep_08': {
            'path': 'audio/sfx/footstep_08.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'footstep_09': {
            'path': 'audio/sfx/footstep_09.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'howl_01': {
            'path': 'audio/sfx/howl_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'wheel_control_01': {
            'path': 'audio/sfx/wheel_control_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_01': {
            'path': 'audio/sfx/log_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_02': {
            'path': 'audio/sfx/log_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_03': {
            'path': 'audio/sfx/log_03.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_04': {
            'path': 'audio/sfx/log_04.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_05': {
            'path': 'audio/sfx/log_05.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_06': {
            'path': 'audio/sfx/log_06.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'log_11': {
            'path': 'audio/sfx/log_11.mp3',
            'volume': 0x4,
            'preload': !0x1
        },
        'log_12': {
            'path': 'audio/sfx/log_12.mp3',
            'volume': 0x4,
            'preload': !0x1
        },
        'log_13': {
            'path': 'audio/sfx/log_13.mp3',
            'volume': 0x2,
            'preload': !0x1
        },
        'log_14': {
            'path': 'audio/sfx/log_14.mp3',
            'volume': 0x2,
            'preload': !0x1
        },
        'ability_stim_01': {
            'path': 'audio/sfx/ability_stim_01.mp3',
            'volume': 0x4
        },
        'xp_drop_01': {
            'path': 'audio/sfx/xp_drop_01.mp3',
            'volume': 1.25,
            'preload': !0x1
        },
        'xp_drop_02': {
            'path': 'audio/sfx/xp_drop_02.mp3',
            'volume': 1.25,
            'preload': !0x1
        },
        'cluck_01': {
            'path': 'audio/sfx/cluck_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'cluck_02': {
            'path': 'audio/sfx/cluck_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'feather_01': {
            'path': 'audio/sfx/feather_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        }
    },
    'ambient': {
        'ambient_wind_01': {
            'path': 'audio/ambient/ambient_wind_01.mp3',
            'volume': 0x1,
            'loadPriority': 0x1
        },
        'ambient_waves_01': {
            'path': 'audio/ambient/ambient_waves_01.mp3',
            'volume': 0x1,
            'loadPriority': 0x1
        },
        'ambient_stream_01': {
            'path': 'audio/ambient/ambient_stream_01.mp3',
            'volume': 0x1,
            'loadPriority': 0x1
        },
        'piano_music_01': {
            'path': 'audio/ambient/piano_music_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'ambient_wind_02': {
            'path': 'audio/ambient/ambient_wind_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'ambient_steam_01': {
            'path': 'audio/ambient/ambient_steam_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'club_music_01': {
            'path': 'audio/ambient/club_music_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'club_music_02': {
            'path': 'audio/ambient/club_music_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'ambient_lab_01': {
            'path': 'audio/ambient/ambient_lab_01.mp3',
            'volume': 0.2,
            'preload': !0x1
        }
    },
    'ui': {
        'ammo_pickup_01': {
            'path': 'audio/ui/ammo_pickup_01.mp3',
            'volume': 0x1
        },
        'clothes_pickup_01': {
            'path': 'audio/ui/clothes_pickup_01.mp3',
            'volume': 0x1
        },
        'bells_01': {
            'path': 'audio/sfx/plane_02.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'helmet_pickup_01': {
            'path': 'audio/ui/helmet_pickup_01.mp3',
            'volume': 0x1
        },
        'chest_pickup_01': {
            'path': 'audio/ui/chest_pickup_01.mp3',
            'volume': 0x1
        },
        'gun_pickup_01': {
            'path': 'audio/ui/gun_pickup_01.mp3',
            'volume': 0x1
        },
        'scope_pickup_01': {
            'path': 'audio/ui/scope_pickup_01.mp3',
            'volume': 0x1
        },
        'pack_pickup_01': {
            'path': 'audio/ui/pack_pickup_01.mp3',
            'volume': 0x1
        },
        'soda_pickup_01': {
            'path': 'audio/ui/soda_pickup_01.mp3',
            'volume': 0x1
        },
        'pills_pickup_01': {
            'path': 'audio/ui/pills_pickup_01.mp3',
            'volume': 0x1
        },
        'bandage_pickup_01': {
            'path': 'audio/ui/bandage_pickup_01.mp3',
            'volume': 0x1
        },
        'healthkit_pickup_01': {
            'path': 'audio/ui/healthkit_pickup_01.mp3',
            'volume': 0x1
        },
        'frag_pickup_01': {
            'path': 'audio/ui/frag_pickup_01.mp3',
            'volume': 0x1
        },
        'snowball_pickup_01': {
            'path': 'audio/ui/snowball_pickup_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'potato_pickup_01': {
            'path': 'audio/ui/potato_pickup_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'heavy_pickup_01': {
            'path': 'audio/ui/heavy_pickup_01.mp3',
            'volume': 0x1
        },
        'pan_pickup_01': {
            'path': 'audio/ui/pan_pickup_01.mp3',
            'volume': 0x1
        },
        'perk_pickup_01': {
            'path': 'audio/ui/perk_pickup_01.mp3',
            'volume': 0x1
        },
        'xp_pickup_01': {
            'path': 'audio/ui/xp_pickup_01.mp3',
            'volume': 1.5,
            'preload': !0x1
        },
        'xp_pickup_02': {
            'path': 'audio/ui/xp_pickup_02.mp3',
            'volume': 1.5,
            'preload': !0x1
        },
        'ping_danger_01': {
            'path': 'audio/ui/ping_danger_01.mp3',
            'volume': 0x1
        },
        'ping_coming_01': {
            'path': 'audio/ui/ping_coming_01.mp3',
            'volume': 0x1
        },
        'ping_help_01': {
            'path': 'audio/ui/ping_help_01.mp3',
            'volume': 0x1
        },
        'ping_leader_01': {
            'path': 'audio/ui/ping_leader_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'ping_airdrop_01': {
            'path': 'audio/ui/ping_airdrop_01.mp3',
            'volume': 0x1
        },
        'ping_airstrike_01': {
            'path': 'audio/ui/ping_airstrike_01.mp3',
            'volume': 0x1
        },
        'ping_unlock_01': {
            'path': 'audio/ui/ping_unlock_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'emote_01': {
            'path': 'audio/ui/emote_01.mp3',
            'volume': 0x1
        },
        'trick_01': {
            'path': 'audio/ui/trick_01.mp3',
            'volume': 1.5,
            'preload': !0x1
        },
        'trick_02': {
            'path': 'audio/ui/trick_02.mp3',
            'volume': 1.5,
            'preload': !0x1
        },
        'trick_03': {
            'path': 'audio/ui/trick_03.mp3',
            'volume': 1.5,
            'preload': !0x1
        },
        'treat_01': {
            'path': 'audio/ui/treat_01.mp3',
            'volume': 0x1,
            'preload': !0x1
        },
        'loot_drop_01': {
            'path': 'audio/ui/loot_drop_01.mp3',
            'volume': 0x1
        },
        'notification_start_01': {
            'path': 'audio/ui/notification_start_01.mp3',
            'volume': 0x1
        },
        'notification_join_01': {
            'path': 'audio/ui/notification_join_01.mp3',
            'volume': 0x1
        },
        'leader_assigned_01': {
            'path': 'audio/ui/leader_assigned_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x1
        },
        'leader_dead_01': {
            'path': 'audio/ui/leader_dead_01.mp3',
            'volume': 1.75,
            'maxInstances': 0x1
        },
        'lt_assigned_01': {
            'path': 'audio/ui/lt_assigned_01.mp3',
            'volume': 0x1,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'medic_assigned_01': {
            'path': 'audio/ui/medic_assigned_01.mp3',
            'volume': 0x2,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'marksman_assigned_01': {
            'path': 'audio/ui/marksman_assigned_01.mp3',
            'volume': 0x2,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'recon_assigned_01': {
            'path': 'audio/ui/recon_assigned_01.mp3',
            'volume': 1.5,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'grenadier_assigned_01': {
            'path': 'audio/ui/grenadier_assigned_01.mp3',
            'volume': 2.5,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'bugler_assigned_01': {
            'path': 'audio/ui/bugler_assigned_01.mp3',
            'volume': 2.5,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'last_man_assigned_01': {
            'path': 'audio/ui/last_man_assigned_01.mp3',
            'volume': 1.75,
            'preload': !0x1,
            'maxInstances': 0x1
        },
        'helmet03_forest_pickup_01': {
            'path': 'audio/ui/helmet03_forest_pickup_01.mp3',
            'volume': 0x1,
            'maxInstances': 0x1,
            'preload': !0x1
        },
        'kill_leader_assigned_01': {
            'path': 'audio/ui/kill_leader_assigned_01.mp3',
            'volume': 1.5,
            'maxInstances': 0x1,
            'preload': !0x1
        },
        'kill_leader_assigned_02': {
            'path': 'audio/ui/kill_leader_assigned_02.mp3',
            'volume': 1.5,
            'maxInstances': 0x1,
            'preload': !0x1
        },
        'kill_leader_dead_01': {
            'path': 'audio/ui/kill_leader_dead_01.mp3',
            'volume': 1.5,
            'maxInstances': 0x1,
            'preload': !0x1
        },
        'kill_leader_dead_02': {
            'path': 'audio/ui/kill_leader_dead_02.mp3',
            'volume': 1.5,
            'maxInstances': 0x1,
            'preload': !0x1
        },
        'spawn_01': {
            'path': 'audio/ui/spawn_01.mp3',
            'volume': 0x3,
            'preload': !0x1
        }
    },
    'music': {
        'menu_music': {
            'path': 'audio/ambient/menu_music_01.mp3',
            'volume': 0x1,
            'loadPriority': 0x2
        }
    }
}
  , ta = {
    'footstep_grass': {
        'channel': 'sfx',
        'sounds': ['footstep_grass_01', 'footstep_grass_02']
    },
    'footstep_container': {
        'channel': 'sfx',
        'sounds': ['footstep_metal_03']
    },
    'footstep_warehouse': {
        'channel': 'sfx',
        'sounds': ['footstep_metal_01', 'footstep_metal_02']
    },
    'footstep_house': {
        'channel': 'sfx',
        'sounds': ['footstep_wood_02', 'footstep_wood_03']
    },
    'footstep_shack': {
        'channel': 'sfx',
        'sounds': ['footstep_wood_01']
    },
    'footstep_sand': {
        'channel': 'sfx',
        'sounds': ['footstep_sand_01', 'footstep_sand_02']
    },
    'footstep_water': {
        'channel': 'sfx',
        'sounds': ['footstep_water_01', 'footstep_water_02']
    },
    'footstep_tile': {
        'channel': 'sfx',
        'sounds': ['footstep_tile_01', 'footstep_tile_02']
    },
    'footstep_asphalt': {
        'channel': 'sfx',
        'sounds': ['footstep_asphalt_01', 'footstep_asphalt_02']
    },
    'footstep_brick': {
        'channel': 'sfx',
        'sounds': ['footstep_brick_01']
    },
    'footstep_bunker': {
        'channel': 'sfx',
        'sounds': ['footstep_metal_04', 'footstep_metal_05']
    },
    'footstep_stone': {
        'channel': 'sfx',
        'sounds': ['footstep_stone_01']
    },
    'footstep_carpet': {
        'channel': 'sfx',
        'sounds': ['footstep_carpet_01']
    },
    'player_bullet_hit': {
        'channel': 'hits',
        'sounds': ['player_bullet_hit_01']
    },
    'metal_punch': {
        'channel': 'hits',
        'sounds': ['metal_punch_hit_01', 'metal_punch_hit_02']
    },
    'cloth_punch': {
        'channel': 'hits',
        'sounds': ['cloth_hit_01']
    },
    'cloth_bullet': {
        'channel': 'hits',
        'sounds': ['cloth_hit_02']
    },
    'organic_hit': {
        'channel': 'hits',
        'sounds': ['organic_hit_01']
    },
    'piano_hit': {
        'channel': 'hits',
        'sounds': ['piano_hit_01', 'piano_hit_02']
    },
    'wall_bullet': {
        'channel': 'hits',
        'sounds': ['metal_bullet_hit_01']
    },
    'wall_wood_bullet': {
        'channel': 'hits',
        'sounds': ['wood_bullet_hit_02']
    },
    'wall_brick_bullet': {
        'channel': 'hits',
        'sounds': ['brick_bullet_hit_01']
    },
    'stone_bullet': {
        'channel': 'hits',
        'sounds': ['stone_bullet_hit_01']
    },
    'barrel_bullet': {
        'channel': 'hits',
        'sounds': ['metal_bullet_hit_03']
    },
    'pan_bullet': {
        'channel': 'hits',
        'sounds': ['pan_bullet_hit_01']
    },
    'silo_bullet': {
        'channel': 'hits',
        'sounds': ['metal_bullet_hit_04']
    },
    'toilet_porc_bullet': {
        'channel': 'hits',
        'sounds': ['toilet_bullet_hit_01']
    },
    'toilet_metal_bullet': {
        'channel': 'hits',
        'sounds': ['toilet_bullet_hit_02']
    },
    'glass_bullet': {
        'channel': 'hits',
        'sounds': ['glass_bullet_hit_01']
    },
    'cobalt_bullet': {
        'channel': 'hits',
        'sounds': ['metal_bullet_hit_02']
    },
    'concrete_hit': {
        'channel': 'hits',
        'sounds': ['concrete_hit_01']
    },
    'wood_prop_bullet': {
        'channel': 'hits',
        'sounds': ['wood_bullet_hit_03']
    },
    'wood_crate_bullet': {
        'channel': 'hits',
        'sounds': ['wood_bullet_hit_04']
    },
    'ammo_crate_bullet': {
        'channel': 'hits',
        'sounds': ['plastic_bullet_hit_01']
    },
    'bush_bullet': {
        'channel': 'hits',
        'sounds': ['bush_bullet_hit_01']
    },
    'tree_bullet': {
        'channel': 'hits',
        'sounds': ['wood_bullet_hit_01']
    },
    'player_bullet_grunt': {
        'channel': 'hits',
        'sounds': ['player_bullet_hit_02']
    },
    'bullet_whiz': {
        'channel': 'sfx',
        'sounds': ['bullet_whiz_01', 'bullet_whiz_02', 'bullet_whiz_03']
    },
    'frag_grass': {
        'channel': 'hits',
        'sounds': ['frag_grass_01']
    },
    'frag_sand': {
        'channel': 'hits',
        'sounds': ['frag_sand_01']
    },
    'frag_water': {
        'channel': 'hits',
        'sounds': ['frag_water_01']
    },
    'kill_leader_assigned': {
        'channel': 'ui',
        'sounds': ['kill_leader_assigned_01', 'kill_leader_assigned_02']
    },
    'kill_leader_dead': {
        'channel': 'ui',
        'sounds': ['kill_leader_dead_01', 'kill_leader_dead_02']
    },
    'cluck': {
        'channel': 'sfx',
        'sounds': ['cluck_01', 'cluck_02']
    }
}
  , ia = {
    'activePlayer': {
        'volume': 0.5,
        'maxRange': 0x30,
        'list': 'players',
        'type': 'sound'
    },
    'otherPlayers': {
        'volume': 0.5,
        'maxRange': 0x30,
        'list': 'players',
        'type': 'sound'
    },
    'hits': {
        'volume': 0.4,
        'maxRange': 0x30,
        'list': 'hits',
        'type': 'sound'
    },
    'sfx': {
        'volume': 0x1,
        'maxRange': 0x30,
        'list': 'sfx',
        'type': 'sound'
    },
    'ambient': {
        'volume': 0x1,
        'maxRange': 0x1,
        'list': 'ambient',
        'type': 'sound'
    },
    'ui': {
        'volume': 0.75,
        'maxRange': 0x30,
        'list': 'ui',
        'type': 'sound'
    },
    'music': {
        'volume': 0x1,
        'maxRange': 0x1,
        'list': 'music',
        'type': 'music'
    }
}
  , ra = {
    'cathedral': {
        'path': 'audio/reverb/cathedral_01.mp3',
        'volume': 0.7,
        'stereoSpread': 0.004
    },
    'cave': {
        'path': 'audio/reverb/cave_mono_01.mp3',
        'volume': 0.7,
        'echoVolume': 0.5,
        'echoDelay': 0.25,
        'echoLowPass': 0x320,
        'stereoSpread': 0.004
    }
}
  , fe = {
    'Sounds': ea,
    'Groups': ta,
    'Channels': ia,
    'Reverbs': ra
}
  , ri = 0.003
  , pt = 0.5;
class aa {
    ['mute'] = !0x1;
    ['masterVolume'] = 0x1;
    ['soundVolume'] = 0x1;
    ['musicVolume'] = 0x1;
    ['baseVolume'] = 0.5;
    ['sounds'] = {};
    ['loadedFiles'] = {};
    ['preloadedSounds'] = !0x1;
    ['cameraPos'] = v['create'](0x0, 0x0);
    ['activeLayer'] = 0x0;
    ['underground'] = !0x1;
    ['soundInstances'] = [];
    constructor(p) {
        ye['Sound']['volume'] = 0.5,
        ye['Sound']['on']('fileload', this['loadHandler'], this);
    }
    ['preloadSounds']() {
        if (!this['preloadedSounds']) {
            this['preloadedSounds'] = !0x0;
            const b = {}
              , XT = Object['keys'](fe['Sounds']);
            for (let Xk = 0x0; Xk < XT['length']; Xk++) {
                const XU = XT[Xk]
                  , XW = fe['Sounds'][XU]
                  , XD = Object['keys'](XW);
                for (let XG = 0x0; XG < XD['length']; XG++) {
                    const XF = XD[XG];
                    b[XF] !== void 0x0 && console['log']('Sound\x20' + XF + '\x20defined\x20multiple\x20times!'),
                    b[XF] = !0x0;
                }
            }
            const XY = []
              , XC = Object['keys'](fe['Channels']);
            for (let XH = 0x0; XH < XC['length']; XH++) {
                const p0 = XC[XH]
                  , p1 = fe['Channels'][p0]
                  , p2 = fe['Sounds'][p1['list']]
                  , p3 = Object['keys'](p2);
                for (let p4 = 0x0; p4 < p3['length']; p4++) {
                    const p5 = p3[p4]
                      , p6 = p2[p5];
                    if (p6['preload'] === void 0x0 || p6['preload']) {
                        const p7 = {
                            'canCoalesce': p6['canCoalesce'],
                            'channels': p6['maxInstances'],
                            'volume': p6['volume']
                        };
                        XY['push']({
                            'name': p5,
                            'channel': p0,
                            'path': p6['path'],
                            'options': p7,
                            'priority': p6['loadPriority'] || 0x0
                        });
                    }
                }
            }
            XY['sort']( (p8, p9) => p9['priority'] - p8['priority']);
            for (let p8 = 0x0; p8 < XY['length']; p8++) {
                const p9 = XY[p8];
                this['loadSound'](p9);
            }
            const Xl = fe['Reverbs']
              , Xd = Object['keys'](Xl);
            for (let pX = 0x0; pX < Xd['length']; pX++) {
                const pp = Xd[pX]
                  , pb = Xl[pp];
                ye['Sound']['registerReverb'](pb['path'], pp, pb);
            }
        }
    }
    ['loadSound'](p) {
        const b = p['name'] + p['channel'];
        this['sounds'][b] || (ye['Sound']['registerSound'](p['path'], b, p['options']),
        this['sounds'][b] = {
            'path': p['path'],
            'name': p['name'],
            'channel': p['channel']
        });
    }
    ['loadHandler'](p) {
        this['loadedFiles'][p] = !0x0;
    }
    ['update'](p) {
        for (let XY = this['soundInstances']['length'] - 0x1; XY >= 0x0; XY--) {
            const XC = this['soundInstances'][XY];
            (XC['instance']['playState'] == 'playFinished' || XC['instance']['playState'] == 'playInterrupted' || XC['instance']['playState'] == 'playFailed') && this['soundInstances']['splice'](XY, 0x1);
        }
        const b = [0x0, 0x1, 0x1 / 0x3, 0x2 / 0x3]
          , XT = this['underground'] ? b[this['activeLayer']] : 0x0;
        ye['Sound']['setReverbs']({
            'cathedral': XT
        }),
        ye['Sound']['update'](p);
    }
    ['playSound'](b, XT={}) {
        if (!b || b == 'none')
            return null;
        XT['channel'] = XT['channel'] || 'activePlayer',
        XT['startSilent'] = XT['startSilent'] || !0x1,
        XT['forceStart'] = XT['forceStart'] || !0x1,
        XT['loop'] = XT['loop'] || !0x1,
        XT['soundPos'] = XT['soundPos'] || null,
        XT['fallOff'] = XT['fallOff'] || 0x0,
        XT['filter'] = XT['filter'] || '',
        XT['delay'] = XT['delay'] || 0x0,
        XT['ignoreMinAllowable'] = XT['ignoreMinAllowable'] || !0x1,
        XT['rangeMult'] = XT['rangeMult'] || 0x1,
        XT['offset'] = XT['offset'] || 0x0,
        XT['ambient'] = XT['channel'] == 'ambient' || XT['channel'] == 'music',
        XT['detune'] = XT['detune'] || 0x0,
        XT['volumeScale'] = XT['volumeScale'] || 0x1;
        let XY = null;
        const XC = fe['Channels'][XT['channel']];
        if (XC && (!this['mute'] || XT['forceStart'])) {
            const Xl = this['baseVolume'] * 0x1 * this['getTypeVolume'](XC['type']) * XT['volumeScale']
              , Xd = XT['layer'] !== void 0x0 && !t['sameAudioLayer'](XT['layer'], this['activeLayer'])
              , Xk = XT['filter'] ? Xd || XT['forceFilter'] ? XT['filter'] : 'reverb' : 'none';
            if (XT['channel'] != 'activePlayer' && XT['soundPos']) {
                const XU = v['sub'](this['cameraPos'], XT['soundPos'])
                  , XW = v['length'](XU);
                let XD = XC['maxRange'] * XT['rangeMult'];
                e['eqAbs'](XD, 0x0) && (XD = 0x1);
                const XG = e['clamp'](Math['abs'](XW / XD), 0x0, 0x1)
                  , XF = Math['pow'](0x1 - XG, 0x1 + XT['fallOff'] * 0x2);
                let XH = XC['volume'] * XF * Xl;
                if (XH = Xd ? XH * pt : XH,
                XH > ri || XT['ignoreMinAllowable']) {
                    const p0 = e['clamp'](XU['x'] / XD * -0x1, -0x1, 0x1);
                    XY = ye['Sound']['play'](b + XT['channel'], {
                        'filter': Xk,
                        'loop': XT['loop'] ? -0x1 : 0x0,
                        'volume': XT['startSilent'] ? 0x0 : XH,
                        'pan': p0,
                        'delay': XT['delay'],
                        'offset': XT['offset'],
                        'ambient': XT['ambient'],
                        'detune': XT['detune']
                    });
                }
            } else {
                let p1 = XC['volume'] * Xl;
                p1 = Xd ? p1 * pt : p1,
                XY = ye['Sound']['play'](b + XT['channel'], {
                    'filter': Xk,
                    'loop': XT['loop'] ? -0x1 : 0x0,
                    'volume': XT['startSilent'] ? 0x0 : p1,
                    'delay': XT['delay'],
                    'offset': XT['offset'],
                    'ambient': XT['ambient'],
                    'detune': XT['detune']
                });
            }
            if (XY && (XT['loop'] || XT['channel'] == 'music')) {
                const p2 = XT['channel'] == 'music' ? 'music' : 'sound';
                this['soundInstances']['push']({
                    'instance': XY,
                    'type': p2
                });
            }
        }
        return XY;
    }
    ['playGroup'](p, b={}) {
        const XT = fe['Groups'][p];
        if (XT) {
            const XY = XT['sounds']
              , XC = Math['floor'](t['random'](0x0, XY['length']));
            return b['channel'] = XT['channel'],
            this['playSound'](XY[XC], b);
        }
        return null;
    }
    ['updateSound'](b, XT, XY, XC={}) {
        XC['fallOff'] = XC['fallOff'] || 0x0,
        XC['rangeMult'] = XC['rangeMult'] || 0x1,
        XC['ignoreMinAllowable'] = XC['ignoreMinAllowable'] || !0x1,
        XC['volumeScale'] = XC['volumeScale'] || 0x1;
        const Xl = fe['Channels'][XT];
        if (b && Xl) {
            const Xd = this['baseVolume'] * 0x1 * this['getTypeVolume'](Xl['type']) * XC['volumeScale']
              , Xk = v['sub'](this['cameraPos'], XY)
              , XU = v['length'](Xk);
            let XW = Xl['maxRange'] * XC['rangeMult'];
            e['eqAbs'](XW, 0x0) && (XW = 0x1);
            const XD = e['clamp'](Math['abs'](XU / XW), 0x0, 0x1)
              , XG = Math['pow'](0x1 - XD, 0x1 + XC['fallOff'] * 0x2);
            let XF = Xl['volume'] * XG * Xd;
            if (XF = XC['layer'] === void 0x0 || t['sameAudioLayer'](XC['layer'], this['activeLayer']) ? XF : XF * pt,
            XF > ri || XC['ignoreMinAllowable']) {
                const XH = e['clamp'](Xk['x'] / XW * -0x1, -0x1, 0x1);
                b['volume'] = XF,
                b['pan'] = XH;
            }
        }
    }
    ['setMasterVolume'](p) {
        p = e['clamp'](p, 0x0, 0x1),
        ye['Sound']['volume'] = p;
    }
    ['_setInstanceTypeVolume'](p, b) {
        b = e['clamp'](b, 0x0, 0x1);
        const XT = this['getTypeVolume'](p)
          , XY = XT > 0.0001 ? b / XT : 0x0;
        for (let XC = 0x0; XC < this['soundInstances']['length']; XC++) {
            const Xl = this['soundInstances'][XC];
            Xl['type'] == p && (Xl['instance']['volume'] *= XY);
        }
    }
    ['setSoundVolume'](p) {
        this['_setInstanceTypeVolume']('sound', p),
        this['soundVolume'] = p;
    }
    ['setMusicVolume'](p) {
        this['_setInstanceTypeVolume']('music', p),
        this['musicVolume'] = p;
    }
    ['setVolume'](p, b, XT) {
        if (p) {
            XT = XT || 'sound';
            const XY = this['getTypeVolume'](XT);
            p['volume'] = b * XY;
        }
    }
    ['getVolume'](p) {
        return p ? p['volume'] : 0x0;
    }
    ['setMute'](p) {
        return this['mute'] = p,
        ye['Sound']['setMute'](this['mute']),
        this['mute'];
    }
    ['muteToggle']() {
        return this['setMute'](!this['mute']);
    }
    ['stopSound'](p) {
        p?.['stop']();
    }
    ['stopAll']() {
        ye['Sound']['stop']();
    }
    ['allLoaded']() {
        const p = Object['keys'](this['sounds']);
        for (let b = 0x0; b < p['length']; b++) {
            const XT = this['sounds'][p[b]];
            if (!this['isSoundLoaded'](XT['name'], XT['channel']))
                return !0x1;
        }
        return !0x0;
    }
    ['isSoundLoaded'](p, b) {
        const XT = this['sounds'][p + b];
        return XT && this['loadedFiles'][XT['path']];
    }
    ['isSoundPlaying'](p) {
        return !!p && p['playState'] == ye['Sound']['PLAY_SUCCEEDED'];
    }
    ['getSoundDefVolume'](p, b) {
        const XT = fe['Sounds'][b][p]
          , XY = fe['Channels'][b];
        return XT && XY ? XT['volume'] * XY['volume'] : 0x1;
    }
    ['getTypeVolume'](p) {
        switch (p) {
        case 'music':
            return this['musicVolume'];
        case 'sound':
            return this['soundVolume'];
        default:
            return this['soundVolume'];
        }
    }
}
const sa = {
    'ENV': 'website',
    'muteAudio': !0x1,
    'masterVolume': 0x1,
    'soundVolume': 0x1,
    'musicVolume': 0x1,
    'highResTex': !0x0,
    'screenShake': !0x0,
    'anonPlayerNames': !0x1,
    'touchMoveStyle': 'anywhere',
    'touchAimStyle': 'anywhere',
    'touchAimLine': !0x0,
    'profile': null,
    'playerName': '',
    'region': 'na',
    'gameModeIdx': 0x2,
    'teamAutoFill': !0x0,
    'language': 'en',
    'prerollGamesPlayed': 0x0,
    'totalGamesPlayed': 0x0,
    'promptAppRate': !0x0,
    'regionSelected': !0x1,
    'lastNewsTimestamp': 0x0,
    'perkModeRole': '',
    'loadout': le['defaultLoadout'](),
    'sessionCookie': '',
    'binds': '',
    'version': 0x1
};
class oa {
    ['loaded'] = !0x1;
    ['localStorageAvailable'] = !0x0;
    ['config'] = {};
    ['onModifiedListeners'] = [];
    async['load'](p) {
        const b = XY => {
            let XC = {};
            try {
                XC = JSON['parse'](XY);
            } catch {}
            this['config'] = t['mergeDeep']({}, sa, XC),
            this['checkUpgradeConfig'](),
            this['onModified'](),
            this['loaded'] = !0x0;
        }
        ;
        let XT = '{}';
        try {
            XT = localStorage['getItem']('surviv_config');
        } catch {
            this['localStorageAvailable'] = !0x1;
        }
        b(XT),
        Or() ? (this['config']['ENV'] = 'CrazyGames',
        await Br()) : Gr() ? (this['config']['ENV'] = 'POKI',
        await Fr()) : jr() ? (this['config']['ENV'] = 'GameMonetize',
        await qr()) : (this['config']['ENV'] = 'website',
        document['getElementById']('btn-start-fullscreen')['style']['display'] = 'inline-block',
        document['getElementById']('btn-game-fullscreen')['style']['display'] = 'block',
        document['getElementById']('left-column')['style']['display'] = 'block'),
        p(),
        this['config']['ENV'] === 'POKI' && window['PokiSDK']['gameLoadingFinished']();
    }
    ['store']() {
        const p = JSON['stringify'](this['config']);
        if (this['localStorageAvailable'])
            try {
                localStorage['setItem']('surviv_config', p);
            } catch {}
    }
    ['set'](p, b) {
        if (!p)
            return;
        const XT = p['split']('.');
        let XY = this['config'];
        for (; XT['length'] > 0x1; )
            XY = XY[XT['shift']()];
        XY[XT['shift']()] = b,
        this['store'](),
        this['onModified'](p);
    }
    ['get'](p) {
        if (!p)
            return;
        const b = p['split']('.');
        let XT = this['config'];
        for (let XY = 0x0; XY < b['length']; XY++)
            XT = XT[b[XY]];
        return XT;
    }
    ['addModifiedListener'](p) {
        this['onModifiedListeners']['push'](p);
    }
    ['onModified'](p) {
        for (let b = 0x0; b < this['onModifiedListeners']['length']; b++)
            this['onModifiedListeners'][b](p);
    }
    ['checkUpgradeConfig']() {}
}
const la = JSON['parse']('[\x222\x20girls\x201\x20cup\x22,\x222g1c\x22,\x224r5e\x22,\x225h1t\x22,\x225hit\x22,\x22a_s_s\x22,\x22a55\x22,\x22a55hole\x22,\x22acrotomophilia\x22,\x22aeolus\x22,\x22ahole\x22,\x22alabama\x20hot\x20pocket\x22,\x22alaskan\x20pipeline\x22,\x22anal\x22,\x22analprobe\x22,\x22anilingus\x22,\x22anus\x22,\x22apeshit\x22,\x22ar5e\x22,\x22areola\x22,\x22areole\x22,\x22arian\x22,\x22arrse\x22,\x22arse\x22,\x22arsehole\x22,\x22aryan\x22,\x22ass\x22,\x22ass\x20hole\x22,\x22assbag\x22,\x22assbandit\x22,\x22assbang\x22,\x22assbanged\x22,\x22assbanger\x22,\x22assbangs\x22,\x22assbite\x22,\x22assclown\x22,\x22asscock\x22,\x22asscracker\x22,\x22asses\x22,\x22assface\x22,\x22assfuck\x22,\x22assfucker\x22,\x22ass-fucker\x22,\x22assfukka\x22,\x22assgoblin\x22,\x22assh0le\x22,\x22asshat\x22,\x22ass-hat\x22,\x22asshead\x22,\x22assho1e\x22,\x22asshole\x22,\x22assholes\x22,\x22asshopper\x22,\x22ass-jabber\x22,\x22assjacker\x22,\x22asslick\x22,\x22asslicker\x22,\x22assmaster\x22,\x22assmonkey\x22,\x22assmunch\x22,\x22assmuncher\x22,\x22assnigger\x22,\x22asspirate\x22,\x22ass-pirate\x22,\x22assshit\x22,\x22assshole\x22,\x22asssucker\x22,\x22asswad\x22,\x22asswhole\x22,\x22asswipe\x22,\x22asswipes\x22,\x22auto\x20erotic\x22,\x22autoerotic\x22,\x22axwound\x22,\x22azazel\x22,\x22azz\x22,\x22b!tch\x22,\x22b00bs\x22,\x22b17ch\x22,\x22b1tch\x22,\x22babe\x22,\x22babeland\x22,\x22babes\x22,\x22baby\x20batter\x22,\x22baby\x20juice\x22,\x22balls\x22,\x22ball\x20gag\x22,\x22ball\x20gravy\x22,\x22ball\x20kicking\x22,\x22ball\x20licking\x22,\x22ball\x20sack\x22,\x22ball\x20sucking\x22,\x22ballbag\x22,\x22ballsack\x22,\x22bampot\x22,\x22bang\x22,\x22bangbros\x22,\x22banger\x22,\x22bareback\x22,\x22barely\x20legal\x22,\x22barenaked\x22,\x22barf\x22,\x22bastard\x22,\x22bastardo\x22,\x22bastards\x22,\x22bastinado\x22,\x22bawdy\x22,\x22bbw\x22,\x22bdsm\x22,\x22beaner\x22,\x22beaners\x22,\x22beardedclam\x22,\x22beastial\x22,\x22beastiality\x22,\x22beatch\x22,\x22beater\x22,\x22beaver\x20cleaver\x22,\x22beaver\x20lips\x22,\x22beeyotch\x22,\x22bellend\x22,\x22beotch\x22,\x22bestial\x22,\x22bestiality\x22,\x22bi+ch\x22,\x22biatch\x22,\x22big\x20black\x22,\x22big\x20breasts\x22,\x22big\x20knockers\x22,\x22big\x20tits\x22,\x22bigtits\x22,\x22bimbo\x22,\x22bimbos\x22,\x22birdlock\x22,\x22bitch\x22,\x22bitchass\x22,\x22bitched\x22,\x22bitcher\x22,\x22bitchers\x22,\x22bitches\x22,\x22bitchin\x22,\x22bitching\x22,\x22bitchtits\x22,\x22bitchy\x22,\x22black\x20cock\x22,\x22blonde\x20action\x22,\x22blonde\x20on\x20blonde\x20action\x22,\x22blow\x20job\x22,\x22blow\x20your\x20load\x22,\x22blowjob\x22,\x22blowjobs\x22,\x22blue\x20waffle\x22,\x22blumpkin\x22,\x22bod\x22,\x22bodily\x22,\x22boink\x22,\x22boiolas\x22,\x22bollock\x22,\x22bollocks\x22,\x22bollok\x22,\x22bollox\x22,\x22bondage\x22,\x22boned\x22,\x22boner\x22,\x22boners\x22,\x22bong\x22,\x22boob\x22,\x22boobies\x22,\x22boobs\x22,\x22booby\x22,\x22booger\x22,\x22bookie\x22,\x22booobs\x22,\x22boooobs\x22,\x22booooobs\x22,\x22booooooobs\x22,\x22bootee\x22,\x22bootie\x22,\x22booty\x22,\x22booty\x20call\x22,\x22booze\x22,\x22boozer\x22,\x22boozy\x22,\x22bosom\x22,\x22bosomy\x22,\x22bra\x22,\x22brassiere\x22,\x22breast\x22,\x22breasts\x22,\x22breeder\x22,\x22brotherfucker\x22,\x22brown\x20showers\x22,\x22brunette\x20action\x22,\x22buceta\x22,\x22bugger\x22,\x22bukkake\x22,\x22bull\x20shit\x22,\x22bulldyke\x22,\x22bullet\x20vibe\x22,\x22bullshit\x22,\x22bullshits\x22,\x22bullshitted\x22,\x22bullturds\x22,\x22bum\x22,\x22bumblefuck\x22,\x22bung\x22,\x22bung\x20hole\x22,\x22bunghole\x22,\x22bunny\x20fucker\x22,\x22busty\x22,\x22butt\x22,\x22butt\x20fuck\x22,\x22butt\x20plug\x22,\x22buttcheeks\x22,\x22buttfuck\x22,\x22buttfucka\x22,\x22buttfucker\x22,\x22butthole\x22,\x22buttmuch\x22,\x22butt-pirate\x22,\x22buttplug\x22,\x22c.0.c.k\x22,\x22c.o.c.k.\x22,\x22c.u.n.t\x22,\x22c0ck\x22,\x22c-0-c-k\x22,\x22c0cksucker\x22,\x22caca\x22,\x22cahone\x22,\x22camel\x20toe\x22,\x22cameltoe\x22,\x22camgirl\x22,\x22camslut\x22,\x22camwhore\x22,\x22carpet\x20muncher\x22,\x22carpetmuncher\x22,\x22cawk\x22,\x22cervix\x22,\x22chesticle\x22,\x22chinc\x22,\x22chincs\x22,\x22chink\x22,\x22choad\x22,\x22chocolate\x20rosebuds\x22,\x22chode\x22,\x22chodes\x22,\x22cipa\x22,\x22circlejerk\x22,\x22cl1t\x22,\x22cleveland\x20steamer\x22,\x22climax\x22,\x22clit\x22,\x22clitface\x22,\x22clitfuck\x22,\x22clitoris\x22,\x22clitorus\x22,\x22clits\x22,\x22clitty\x22,\x22clover\x20clamps\x22,\x22clusterfuck\x22,\x22cnut\x22,\x22cocain\x22,\x22cocaine\x22,\x22cock\x22,\x22c-o-c-k\x22,\x22cock\x20sucker\x22,\x22cockass\x22,\x22cockbite\x22,\x22cockblock\x22,\x22cockburger\x22,\x22cockeye\x22,\x22cockface\x22,\x22cockfucker\x22,\x22cockhead\x22,\x22cockholster\x22,\x22cockjockey\x22,\x22cockknocker\x22,\x22cockknoker\x22,\x22cocklump\x22,\x22cockmaster\x22,\x22cockmongler\x22,\x22cockmongruel\x22,\x22cockmonkey\x22,\x22cockmunch\x22,\x22cockmuncher\x22,\x22cocknose\x22,\x22cocknugget\x22,\x22cocks\x22,\x22cockshit\x22,\x22cocksmith\x22,\x22cocksmoke\x22,\x22cocksmoker\x22,\x22cocksniffer\x22,\x22cocksuck\x22,\x22cocksucked\x22,\x22cocksucker\x22,\x22cock-sucker\x22,\x22cocksucking\x22,\x22cocksucks\x22,\x22cocksuka\x22,\x22cocksukka\x22,\x22cockwaffle\x22,\x22coital\x22,\x22cok\x22,\x22cokmuncher\x22,\x22coksucka\x22,\x22commie\x22,\x22condom\x22,\x22coochie\x22,\x22coochy\x22,\x22coon\x22,\x22coons\x22,\x22cooter\x22,\x22coprolagnia\x22,\x22coprophilia\x22,\x22corksucker\x22,\x22cornhole\x22,\x22cox\x22,\x22crabs\x22,\x22crack\x22,\x22crackwhore\x22,\x22crap\x22,\x22crappy\x22,\x22creampie\x22,\x22crotte\x22,\x22cum\x22,\x22cumbubble\x22,\x22cumdumpster\x22,\x22cumguzzler\x22,\x22cumjockey\x22,\x22cummer\x22,\x22cummin\x22,\x22cumming\x22,\x22cums\x22,\x22cumshot\x22,\x22cumshots\x22,\x22cumslut\x22,\x22cumstain\x22,\x22cumtart\x22,\x22cunilingus\x22,\x22cunillingus\x22,\x22cunnie\x22,\x22cunnilingus\x22,\x22cunny\x22,\x22cunt\x22,\x22c-u-n-t\x22,\x22cuntass\x22,\x22cuntface\x22,\x22cunthole\x22,\x22cunthunter\x22,\x22cuntlick\x22,\x22cuntlicker\x22,\x22cuntlicking\x22,\x22cuntrag\x22,\x22cunts\x22,\x22cuntslut\x22,\x22cyalis\x22,\x22cyberfuc\x22,\x22cyberfuck\x22,\x22cyberfucked\x22,\x22cyberfucker\x22,\x22cyberfuckers\x22,\x22cyberfucking\x22,\x22d0ng\x22,\x22d0uch3\x22,\x22d0uche\x22,\x22d1ck\x22,\x22d1ld0\x22,\x22d1ldo\x22,\x22dago\x22,\x22dagos\x22,\x22darkie\x22,\x22damn\x22,\x22damned\x22,\x22dammit\x22,\x22date\x20rape\x22,\x22daterape\x22,\x22dawgie-style\x22,\x22deep\x20throat\x22,\x22deepthroat\x22,\x22deggo\x22,\x22dendrophilia\x22,\x22dick\x22,\x22dickbag\x22,\x22dickbeaters\x22,\x22dickdipper\x22,\x22dickface\x22,\x22dickflipper\x22,\x22dickfuck\x22,\x22dickfucker\x22,\x22dickhead\x22,\x22dickheads\x22,\x22dickhole\x22,\x22dickish\x22,\x22dick-ish\x22,\x22dickjuice\x22,\x22dickmilk\u00a0\x22,\x22dickmonger\x22,\x22dickripper\x22,\x22dicks\x22,\x22dicksipper\x22,\x22dickslap\x22,\x22dick-sneeze\x22,\x22dicksuck\x22,\x22dicksucker\x22,\x22dicksucking\x22,\x22dicktickler\x22,\x22dickwad\x22,\x22dickweasel\x22,\x22dickweed\x22,\x22dickwhipper\x22,\x22dickwod\x22,\x22dickzipper\x22,\x22diddle\x22,\x22dike\x22,\x22dildo\x22,\x22dildos\x22,\x22diligaf\x22,\x22dillweed\x22,\x22dimwit\x22,\x22dingle\x22,\x22dingleberries\x22,\x22dingleberry\x22,\x22dink\x22,\x22dinks\x22,\x22dipship\x22,\x22dipshit\x22,\x22dirsa\x22,\x22dirty\x20pillows\x22,\x22dirty\x20sanchez\x22,\x22dlck\x22,\x22dog\x20style\x22,\x22dog-fucker\x22,\x22doggie\x20style\x22,\x22doggiestyle\x22,\x22doggie-style\x22,\x22doggin\x22,\x22dogging\x22,\x22doggy\x20style\x22,\x22doggystyle\x22,\x22doggy-style\x22,\x22dolcett\x22,\x22domination\x22,\x22dominatrix\x22,\x22dommes\x22,\x22dong\x22,\x22donkey\x20punch\x22,\x22donkeyribber\x22,\x22doochbag\x22,\x22doofus\x22,\x22dookie\x22,\x22doosh\x22,\x22dopey\x22,\x22double\x20dong\x22,\x22double\x20penetration\x22,\x22doublelift\x22,\x22douch3\x22,\x22douche\x22,\x22douchebag\x22,\x22douchebags\x22,\x22douche-fag\x22,\x22douchewaffle\x22,\x22douchey\x22,\x22dp\x20action\x22,\x22drunk\x22,\x22dry\x20hump\x22,\x22duche\x22,\x22dumass\x22,\x22dumb\x20ass\x22,\x22dumbass\x22,\x22dumbasses\x22,\x22dumbcunt\x22,\x22dumbfuck\x22,\x22dumbshit\x22,\x22dummy\x22,\x22dumshit\x22,\x22dvda\x22,\x22dyke\x22,\x22dykes\x22,\x22eat\x20my\x20ass\x22,\x22ecchi\x22,\x22ejaculate\x22,\x22ejaculated\x22,\x22ejaculates\x22,\x22ejaculating\x22,\x22ejaculatings\x22,\x22ejaculation\x22,\x22ejakulate\x22,\x22enlargement\x22,\x22erect\x22,\x22erection\x22,\x22erotic\x22,\x22erotism\x22,\x22escort\x22,\x22essohbee\x22,\x22eunuch\x22,\x22extacy\x22,\x22extasy\x22,\x22f\x20u\x20c\x20k\x22,\x22f\x20u\x20c\x20k\x20e\x20r\x22,\x22f.u.c.k\x22,\x22f_u_c_k\x22,\x22f4nny\x22,\x22fack\x22,\x22fag\x22,\x22fagbag\x22,\x22fagfucker\x22,\x22fagg\x22,\x22fagged\x22,\x22fagging\x22,\x22faggit\x22,\x22faggitt\x22,\x22faggot\x22,\x22faggotcock\x22,\x22faggs\x22,\x22fagot\x22,\x22fagots\x22,\x22fags\x22,\x22fagtard\x22,\x22faig\x22,\x22faigt\x22,\x22fanny\x22,\x22fannybandit\x22,\x22fannyflaps\x22,\x22fannyfucker\x22,\x22fanyy\x22,\x22fartknocker\x22,\x22fatass\x22,\x22fcuk\x22,\x22fcuker\x22,\x22fcuking\x22,\x22fecal\x22,\x22feck\x22,\x22fecker\x22,\x22felch\x22,\x22felcher\x22,\x22felching\x22,\x22fellate\x22,\x22fellatio\x22,\x22feltch\x22,\x22feltcher\x22,\x22female\x20squirting\x22,\x22femdom\x22,\x22figging\x22,\x22fingerbang\x22,\x22fingerfuck\x22,\x22fingerfucked\x22,\x22fingerfucker\x22,\x22fingerfuckers\x22,\x22fingerfucking\x22,\x22fingerfucks\x22,\x22fingering\x22,\x22fisted\x22,\x22fistfuck\x22,\x22fistfucked\x22,\x22fistfucker\x22,\x22fistfuckers\x22,\x22fistfucking\x22,\x22fistfuckings\x22,\x22fistfucks\x22,\x22fisting\x22,\x22fisty\x22,\x22flamer\x22,\x22flange\x22,\x22floozy\x22,\x22foad\x22,\x22foah\x22,\x22fondle\x22,\x22foobar\x22,\x22fook\x22,\x22fooker\x22,\x22foot\x20fetish\x22,\x22footjob\x22,\x22foreskin\x22,\x22freex\x22,\x22frigg\x22,\x22frigga\x22,\x22frotting\x22,\x22fubar\x22,\x22fuck\x22,\x22f-u-c-k\x22,\x22fuck\x20buttons\x22,\x22fuck\x20off\x22,\x22fucka\x22,\x22fuckass\x22,\x22fuckbag\x22,\x22fuckboy\x22,\x22fuckbrain\x22,\x22fuckbutt\x22,\x22fuckbutter\x22,\x22fucked\x22,\x22fucker\x22,\x22fuckers\x22,\x22fuckersucker\x22,\x22fuckface\x22,\x22fuckhead\x22,\x22fuckheads\x22,\x22fuckhole\x22,\x22fuckin\x22,\x22fucking\x22,\x22fuckings\x22,\x22fuckingshitmotherfucker\x22,\x22fuckme\x22,\x22fucknugget\x22,\x22fucknut\x22,\x22fucknutt\x22,\x22fuckoff\x22,\x22fucks\x22,\x22fuckstick\x22,\x22fucktard\x22,\x22fuck-tard\x22,\x22fucktards\x22,\x22fucktart\x22,\x22fucktwat\x22,\x22fuckup\x22,\x22fuckwad\x22,\x22fuckwhit\x22,\x22fuckwit\x22,\x22fuckwitt\x22,\x22fudge\x20packer\x22,\x22fudgepacker\x22,\x22fuk\x22,\x22fuker\x22,\x22fukker\x22,\x22fukkin\x22,\x22fuks\x22,\x22fukwhit\x22,\x22fukwit\x22,\x22futanari\x22,\x22fux\x22,\x22fux0r\x22,\x22fvck\x22,\x22fxck\x22,\x22gae\x22,\x22gai\x22,\x22gang\x20bang\x22,\x22gangbang\x22,\x22gangbanged\x22,\x22gangbangs\x22,\x22ganja\x22,\x22gay\x22,\x22gay\x20sex\x22,\x22gayass\x22,\x22gaybob\x22,\x22gaydo\x22,\x22gayfuck\x22,\x22gayfuckist\x22,\x22gaylord\x22,\x22gays\x22,\x22gaysex\x22,\x22gaytard\x22,\x22gaywad\x22,\x22genitals\x22,\x22gey\x22,\x22gfy\x22,\x22ghay\x22,\x22ghey\x22,\x22giant\x20cock\x22,\x22gigolo\x22,\x22girl\x20on\x22,\x22girl\x20on\x20top\x22,\x22girls\x20gone\x20wild\x22,\x22glans\x22,\x22goatcx\x22,\x22goatse\x22,\x22god\x20damn\x22,\x22godamn\x22,\x22godamnit\x22,\x22goddam\x22,\x22god-dam\x22,\x22goddammit\x22,\x22goddamn\x22,\x22goddamned\x22,\x22god-damned\x22,\x22goddamnit\x22,\x22gokkun\x22,\x22golden\x20shower\x22,\x22goldenshower\x22,\x22gonad\x22,\x22gonads\x22,\x22goo\x20girl\x22,\x22gooch\x22,\x22goodpoop\x22,\x22gook\x22,\x22gooks\x22,\x22goregasm\x22,\x22gringo\x22,\x22grope\x22,\x22group\x20sex\x22,\x22gspot\x22,\x22g-spot\x22,\x22gtfo\x22,\x22guido\x22,\x22guro\x22,\x22h0m0\x22,\x22h0mo\x22,\x22hand\x20job\x22,\x22handjob\x22,\x22hard\x20core\x22,\x22hard\x20on\x22,\x22hardcore\x22,\x22hardcoresex\x22,\x22he11\x22,\x22heeb\x22,\x22hemp\x22,\x22hentai\x22,\x22heroin\x22,\x22herp\x22,\x22herpes\x22,\x22herpy\x22,\x22heshe\x22,\x22hitler\x22,\x22hiv\x22,\x22ho\x22,\x22hoar\x22,\x22hoare\x22,\x22hobag\x22,\x22hoe\x22,\x22hoer\x22,\x22hom0\x22,\x22homey\x22,\x22homo\x22,\x22homodumbshit\x22,\x22homoerotic\x22,\x22homoey\x22,\x22honkey\x22,\x22honky\x22,\x22hooch\x22,\x22hookah\x22,\x22hooker\x22,\x22hoor\x22,\x22hootch\x22,\x22hooter\x22,\x22hooters\x22,\x22hore\x22,\x22horniest\x22,\x22horny\x22,\x22hot\x20carl\x22,\x22hot\x20chick\x22,\x22hotsex\x22,\x22how\x20to\x20kill\x22,\x22how\x20to\x20murder\x22,\x22huge\x20fat\x22,\x22hump\x22,\x22humped\x22,\x22humping\x22,\x22hussy\x22,\x22hymen\x22,\x22inbred\x22,\x22incest\x22,\x22injun\x22,\x22intercourse\x22,\x22j3rk0ff\x22,\x22jack\x20Off\x22,\x22jackass\x22,\x22jackhole\x22,\x22jackoff\x22,\x22jack-off\x22,\x22jaggi\x22,\x22jagoff\x22,\x22jail\x20bait\x22,\x22jailbait\x22,\x22jap\x22,\x22japs\x22,\x22jelly\x20donut\x22,\x22jerk\x22,\x22jerk\x20off\x22,\x22jerk0ff\x22,\x22jerkass\x22,\x22jerked\x22,\x22jerkoff\x22,\x22jerk-off\x22,\x22jigaboo\x22,\x22jiggaboo\x22,\x22jiggerboo\x22,\x22jism\x22,\x22jiz\x22,\x22jizm\x22,\x22jizz\x22,\x22jizzed\x22,\x22juggs\x22,\x22jungle\x20bunny\x22,\x22junglebunny\x22,\x22junkie\x22,\x22junky\x22,\x22kawk\x22,\x22kike\x22,\x22kikes\x22,\x22kinbaku\x22,\x22kinkster\x22,\x22kinky\x22,\x22kkk\x22,\x22knob\x22,\x22knobbing\x22,\x22knobead\x22,\x22knobed\x22,\x22knobend\x22,\x22knobhead\x22,\x22knobjocky\x22,\x22knobjokey\x22,\x22kock\x22,\x22kondum\x22,\x22kondums\x22,\x22kooch\x22,\x22kooches\x22,\x22kootch\x22,\x22kraut\x22,\x22kum\x22,\x22kummer\x22,\x22kumming\x22,\x22kums\x22,\x22kunilingus\x22,\x22kunja\x22,\x22kunt\x22,\x22kyke\x22,\x22l3i+ch\x22,\x22l3itch\x22,\x22labia\x22,\x22lameass\x22,\x22lardass\x22,\x22leather\x20restraint\x22,\x22leather\x20straight\x20jacket\x22,\x22lech\x22,\x22lemon\x20party\x22,\x22leper\x22,\x22lesbian\x22,\x22lesbians\x22,\x22lesbo\x22,\x22lesbos\x22,\x22lez\x22,\x22lezbian\x22,\x22lezbians\x22,\x22lezbo\x22,\x22lezbos\x22,\x22lezzie\x22,\x22lezzies\x22,\x22lezzy\x22,\x22lmao\x22,\x22lmfao\x22,\x22loin\x22,\x22loins\x22,\x22lolita\x22,\x22lovemaking\x22,\x22lube\x22,\x22lust\x22,\x22lusting\x22,\x22lusty\x22,\x22m0f0\x22,\x22m0fo\x22,\x22m45terbate\x22,\x22ma5terb8\x22,\x22ma5terbate\x22,\x22make\x20me\x20come\x22,\x22male\x20squirting\x22,\x22mams\x22,\x22masochist\x22,\x22massa\x22,\x22masterb8\x22,\x22masterbat\x22,\x22masterbat3\x22,\x22masterbate\x22,\x22master-bate\x22,\x22masterbating\x22,\x22masterbation\x22,\x22masterbations\x22,\x22masturbate\x22,\x22masturbating\x22,\x22masturbation\x22,\x22maxi\x22,\x22mcfagget\x22,\x22menage\x20a\x20trois\x22,\x22menses\x22,\x22menstruate\x22,\x22menstruation\x22,\x22meth\x22,\x22m-fucking\x22,\x22mick\x22,\x22milf\x22,\x22minge\x22,\x22missionary\x20position\x22,\x22mof0\x22,\x22mofo\x22,\x22mo-fo\x22,\x22molest\x22,\x22moolie\x22,\x22moron\x22,\x22mothafuck\x22,\x22mothafucka\x22,\x22mothafuckas\x22,\x22mothafuckaz\x22,\x22mothafucked\x22,\x22mothafucker\x22,\x22mothafuckers\x22,\x22mothafuckin\x22,\x22mothafucking\x22,\x22mothafuckings\x22,\x22mothafucks\x22,\x22mother\x20fucker\x22,\x22motherfuck\x22,\x22motherfucka\x22,\x22motherfucked\x22,\x22motherfucker\x22,\x22motherfuckers\x22,\x22motherfuckin\x22,\x22motherfucking\x22,\x22motherfuckings\x22,\x22motherfuckka\x22,\x22motherfucks\x22,\x22mound\x20of\x20venus\x22,\x22mr\x20hands\x22,\x22mtherfucker\x22,\x22mthrfucker\x22,\x22mthrfucking\x22,\x22muff\x22,\x22muff\x20diver\x22,\x22muffdiver\x22,\x22muffdiving\x22,\x22munging\x22,\x22murder\x22,\x22mutha\x22,\x22muthafecker\x22,\x22muthafuckaz\x22,\x22muthafucker\x22,\x22muthafuckker\x22,\x22muther\x22,\x22mutherfucker\x22,\x22mutherfucking\x22,\x22muthrfucking\x22,\x22n1gga\x22,\x22n1gger\x22,\x22nad\x22,\x22nads\x22,\x22naked\x22,\x22nambla\x22,\x22napalm\x22,\x22nappy\x22,\x22nawashi\x22,\x22nazi\x22,\x22nazism\x22,\x22negro\x22,\x22neonazi\x22,\x22nig\x20nog\x22,\x22nigaboo\x22,\x22nigg3r\x22,\x22nigg4h\x22,\x22nigga\x22,\x22niggah\x22,\x22niggas\x22,\x22niggaz\x22,\x22nigger\x22,\x22niggers\x22,\x22niggle\x22,\x22niglet\x22,\x22nimphomania\x22,\x22nimrod\x22,\x22ninny\x22,\x22nipple\x22,\x22nipples\x22,\x22nob\x22,\x22nob\x20jokey\x22,\x22nobhead\x22,\x22nobjocky\x22,\x22nobjokey\x22,\x22nooky\x22,\x22nsfw\x20images\x22,\x22nude\x22,\x22nudity\x22,\x22numbnuts\x22,\x22nut\x20sack\x22,\x22nutsack\x22,\x22nympho\x22,\x22nymphomania\x22,\x22octopussy\x22,\x22omorashi\x22,\x22one\x20cup\x20two\x20girls\x22,\x22one\x20guy\x20one\x20jar\x22,\x22opiate\x22,\x22opium\x22,\x22oral\x22,\x22orally\x22,\x22organ\x22,\x22orgasim\x22,\x22orgasims\x22,\x22orgasm\x22,\x22orgasmic\x22,\x22orgasms\x22,\x22orgies\x22,\x22orgy\x22,\x22ovary\x22,\x22ovum\x22,\x22ovums\x22,\x22p.u.s.s.y.\x22,\x22p0rn\x22,\x22paddy\x22,\x22paedophile\x22,\x22paki\x22,\x22panooch\x22,\x22pantie\x22,\x22panties\x22,\x22panty\x22,\x22pastie\x22,\x22pasty\x22,\x22pawn\x22,\x22pcp\x22,\x22pecker\x22,\x22peckerhead\x22,\x22pedo\x22,\x22pedobear\x22,\x22pedophile\x22,\x22pedophilia\x22,\x22pedophiliac\x22,\x22peepee\x22,\x22pegging\x22,\x22penetrate\x22,\x22penetration\x22,\x22penial\x22,\x22penile\x22,\x22penis\x22,\x22penisbanger\x22,\x22penisfucker\x22,\x22penispuffer\x22,\x22perversion\x22,\x22peyote\x22,\x22phalli\x22,\x22phallic\x22,\x22phone\x20sex\x22,\x22phonesex\x22,\x22phuck\x22,\x22phuk\x22,\x22phuked\x22,\x22phuking\x22,\x22phukked\x22,\x22phukking\x22,\x22phuks\x22,\x22phuq\x22,\x22piece\x20of\x20shit\x22,\x22pigfucker\x22,\x22pillowbiter\x22,\x22pimp\x22,\x22pimpis\x22,\x22pinko\x22,\x22piss\x20pig\x22,\x22pissed\x22,\x22pissed\x20off\x22,\x22pisser\x22,\x22pissers\x22,\x22pisses\x22,\x22pissflaps\x22,\x22pissin\x22,\x22pissing\x22,\x22pissoff\x22,\x22piss-off\x22,\x22pisspig\x22,\x22playboy\x22,\x22pleasure\x20chest\x22,\x22pms\x22,\x22polack\x22,\x22pole\x20smoker\x22,\x22polesmoker\x22,\x22pollock\x22,\x22ponyplay\x22,\x22poof\x22,\x22poon\x22,\x22poonani\x22,\x22poonany\x22,\x22poontang\x22,\x22poop\x22,\x22poop\x20chute\x22,\x22poopchute\x22,\x22poopuncher\x22,\x22porch\x20monkey\x22,\x22porchmonkey\x22,\x22porn\x22,\x22porno\x22,\x22pornography\x22,\x22pornos\x22,\x22potty\x22,\x22prick\x22,\x22pricks\x22,\x22prig\x22,\x22prince\x20albert\x20piercing\x22,\x22pron\x22,\x22prostitute\x22,\x22prude\x22,\x22pthc\x22,\x22pube\x22,\x22pubes\x22,\x22pubic\x22,\x22pubis\x22,\x22punanny\x22,\x22punany\x22,\x22punkass\x22,\x22punky\x22,\x22punta\x22,\x22puss\x22,\x22pusse\x22,\x22pussi\x22,\x22pussies\x22,\x22pussy\x22,\x22pussylicking\x22,\x22pussypounder\x22,\x22pussys\x22,\x22pust\x22,\x22puto\x22,\x22queaf\x22,\x22queef\x22,\x22queer\x22,\x22queerbait\x22,\x22queerhole\x22,\x22queero\x22,\x22queers\x22,\x22quicky\x22,\x22quim\x22,\x22racy\x22,\x22raghead\x22,\x22raging\x20boner\x22,\x22rape\x22,\x22raped\x22,\x22raper\x22,\x22raping\x22,\x22rapist\x22,\x22raunch\x22,\x22rectal\x22,\x22rectum\x22,\x22rectus\x22,\x22reefer\x22,\x22reetard\x22,\x22reich\x22,\x22renob\x22,\x22retard\x22,\x22retarded\x22,\x22reverse\x20cowgirl\x22,\x22revue\x22,\x22rimjaw\x22,\x22rimjob\x22,\x22rimming\x22,\x22ritard\x22,\x22rosy\x20palm\x22,\x22rosy\x20palm\x20and\x20her\x205\x20sisters\x22,\x22rtard\x22,\x22r-tard\x22,\x22rump\x22,\x22rumprammer\x22,\x22ruski\x22,\x22rusty\x20trombone\x22,\x22s\x20hit\x22,\x22s&m\x22,\x22s.h.i.t.\x22,\x22s.o.b.\x22,\x22s_h_i_t\x22,\x22s0b\x22,\x22sadism\x22,\x22sadist\x22,\x22sand\x20nigger\x22,\x22sandler\x22,\x22sandnigger\x22,\x22sanger\x22,\x22santorum\x22,\x22scag\x22,\x22scantily\x22,\x22scat\x22,\x22schizo\x22,\x22schlong\x22,\x22scissoring\x22,\x22screw\x22,\x22screwed\x22,\x22screwing\x22,\x22scroat\x22,\x22scrog\x22,\x22scrot\x22,\x22scrote\x22,\x22scrotum\x22,\x22scrud\x22,\x22scum\x22,\x22seaman\x22,\x22seamen\x22,\x22seduce\x22,\x22seks\x22,\x22semen\x22,\x22sex\x22,\x22sexo\x22,\x22sexual\x22,\x22sexy\x22,\x22sh!+\x22,\x22sh!t\x22,\x22sh1t\x22,\x22s-h-1-t\x22,\x22shag\x22,\x22shagger\x22,\x22shaggin\x22,\x22shagging\x22,\x22shamedame\x22,\x22shaved\x20beaver\x22,\x22shaved\x20pussy\x22,\x22shemale\x22,\x22shi+\x22,\x22shibari\x22,\x22shit\x22,\x22s-h-i-t\x22,\x22shitass\x22,\x22shitbag\x22,\x22shitbagger\x22,\x22shitblimp\x22,\x22shitbrains\x22,\x22shitbreath\x22,\x22shitcanned\x22,\x22shitcunt\x22,\x22shitdick\x22,\x22shite\x22,\x22shiteater\x22,\x22shited\x22,\x22shitey\x22,\x22shitface\x22,\x22shitfaced\x22,\x22shitfuck\x22,\x22shitfull\x22,\x22shithead\x22,\x22shithole\x22,\x22shithouse\x22,\x22shiting\x22,\x22shitings\x22,\x22shits\x22,\x22shitspitter\x22,\x22shitstain\x22,\x22shitt\x22,\x22shitted\x22,\x22shitter\x22,\x22shitters\x22,\x22shittiest\x22,\x22shitting\x22,\x22shittings\x22,\x22shitty\x22,\x22shiz\x22,\x22shiznit\x22,\x22shota\x22,\x22shrimping\x22,\x22sissy\x22,\x22skag\x22,\x22skank\x22,\x22skeet\x22,\x22skullfuck\x22,\x22slag\x22,\x22slanteye\x22,\x22slave\x22,\x22sleaze\x22,\x22sleazy\x22,\x22slut\x22,\x22slutbag\x22,\x22slutdumper\x22,\x22slutkiss\x22,\x22sluts\x22,\x22smeg\x22,\x22smegma\x22,\x22smut\x22,\x22smutty\x22,\x22snatch\x22,\x22snowballing\x22,\x22snuff\x22,\x22s-o-b\x22,\x22sodom\x22,\x22sodomize\x22,\x22sodomy\x22,\x22son-of-a-bitch\x22,\x22souse\x22,\x22soused\x22,\x22spac\x22,\x22sperm\x22,\x22spic\x22,\x22spick\x22,\x22spik\x22,\x22spiks\x22,\x22splooge\x22,\x22splooge\x20moose\x22,\x22spooge\x22,\x22spook\x22,\x22spread\x20legs\x22,\x22spunk\x22,\x22steamy\x22,\x22stfu\x22,\x22stiffy\x22,\x22stoned\x22,\x22strap\x20on\x22,\x22strapon\x22,\x22strappado\x22,\x22strip\x22,\x22strip\x20club\x22,\x22stroke\x22,\x22stupid\x22,\x22style\x20doggy\x22,\x22suck\x22,\x22suckass\x22,\x22sucked\x22,\x22sucking\x22,\x22suckmydick\x22,\x22sucks\x22,\x22suicide\x20girls\x22,\x22sultry\x20women\x22,\x22sumofabiatch\x22,\x22swastika\x22,\x22swinger\x22,\x22t1t\x22,\x22t1tt1e5\x22,\x22t1tties\x22,\x22tainted\x20love\x22,\x22tampon\x22,\x22tard\x22,\x22taste\x20my\x22,\x22tawdry\x22,\x22tea\x20bagging\x22,\x22teabagging\x22,\x22teat\x22,\x22teets\x22,\x22teez\x22,\x22terd\x22,\x22teste\x22,\x22testee\x22,\x22testes\x22,\x22testical\x22,\x22testicle\x22,\x22testis\x22,\x22threesome\x22,\x22throating\x22,\x22thrust\x22,\x22thug\x22,\x22thundercunt\x22,\x22tied\x20up\x22,\x22tight\x20white\x22,\x22tinkle\x22,\x22tit\x22,\x22titfuck\x22,\x22titi\x22,\x22tits\x22,\x22titt\x22,\x22tittie5\x22,\x22tittiefucker\x22,\x22titties\x22,\x22titty\x22,\x22tittyfuck\x22,\x22tittyfucker\x22,\x22tittywank\x22,\x22titwank\x22,\x22toke\x22,\x22tongue\x20in\x20a\x22,\x22toots\x22,\x22topless\x22,\x22tosser\x22,\x22towelhead\x22,\x22tramp\x22,\x22tranny\x22,\x22transsexual\x22,\x22trashy\x22,\x22tribadism\x22,\x22tub\x20girl\x22,\x22tubgirl\x22,\x22turd\x22,\x22tush\x22,\x22tushy\x22,\x22tw4t\x22,\x22twat\x22,\x22twathead\x22,\x22twatlips\x22,\x22twats\x22,\x22twatty\x22,\x22twatwaffle\x22,\x22twink\x22,\x22twinkie\x22,\x22two\x20girls\x20one\x20cup\x22,\x22twunt\x22,\x22twunter\x22,\x22ugly\x22,\x22unclefucker\x22,\x22undies\x22,\x22undressing\x22,\x22unwed\x22,\x22upskirt\x22,\x22urethra\x20play\x22,\x22urinal\x22,\x22urine\x22,\x22urophilia\x22,\x22uterus\x22,\x22uzi\x22,\x22v14gra\x22,\x22v1gra\x22,\x22vag\x22,\x22vagina\x22,\x22vajayjay\x22,\x22va-j-j\x22,\x22valium\x22,\x22venus\x20mound\x22,\x22viagra\x22,\x22vibrator\x22,\x22violet\x20wand\x22,\x22virgin\x22,\x22vixen\x22,\x22vjayjay\x22,\x22vodka\x22,\x22vomit\x22,\x22vorarephilia\x22,\x22voyeur\x22,\x22vulgar\x22,\x22vulva\x22,\x22w00se\x22,\x22wad\x22,\x22wang\x22,\x22wank\x22,\x22wanker\x22,\x22wankjob\x22,\x22wanky\x22,\x22wazoo\x22,\x22wedgie\x22,\x22weed\x22,\x22weenie\x22,\x22weewee\x22,\x22weiner\x22,\x22weirdo\x22,\x22wench\x22,\x22wet\x20dream\x22,\x22wetback\x22,\x22wh0re\x22,\x22wh0reface\x22,\x22white\x20power\x22,\x22whitey\x22,\x22whiz\x22,\x22whoar\x22,\x22whoralicious\x22,\x22whore\x22,\x22whorealicious\x22,\x22whorebag\x22,\x22whored\x22,\x22whoreface\x22,\x22whorehopper\x22,\x22whorehouse\x22,\x22whores\x22,\x22whoring\x22,\x22wigger\x22,\x22willies\x22,\x22willy\x22,\x22womb\x22,\x22woody\x22,\x22wop\x22,\x22wrapping\x20men\x22,\x22wrinkled\x20starfish\x22,\x22wtf\x22,\x22xrated\x22,\x22x-rated\x22,\x22xxx\x22,\x22yaoi\x22,\x22yeasty\x22,\x22yellow\x20showers\x22,\x22yiffy\x22,\x22yobbo\x22,\x22zoophile\x22,\x22zoophilia\x22,\x22zubb\x22,\x22(ock\x22,\x22[ock\x22,\x22.f\x20uc\x20k\x22,\x22@rse\x22,\x22@rsehol\x22,\x22@unt\x22,\x22[unt\x22,\x22<\x20unt\x22,\x22<.unt\x22,\x22<loth\x20head\x22,\x22<lothhead\x22,\x22<nuts\x22,\x22<o(k\x22,\x22<o<&nbsp;k\x22,\x22<o<ksu<ka\x22,\x22<o<ksu<ker\x22,\x22<oon\x22,\x22<u&nbsp;nt\x22,\x22<u&nbsp;nts\x22,\x22<u*t\x22,\x22<unt\x22,\x22<unt\x27s\x22,\x22<vnt\x22,\x22<vnts\x22,\x22a$$hole\x22,\x22a$$hole$\x22,\x22a$$holes\x22,\x22a.rse\x22,\x22a+*hole\x22,\x22ar$ehole\x22,\x22ar$hole\x22,\x22ar$holes\x22,\x22ar5h0le\x22,\x22ar5h0les\x22,\x22ars3\x22,\x22arse\x20hole\x22,\x22arseh0le\x22,\x22arseh0les\x22,\x22arseho\x22,\x22arsehol\x22,\x22arseholes\x22,\x22arsewipe\x22,\x22arsh0le\x22,\x22arshole\x22,\x22arsholes\x22,\x22ashole\x22,\x22ass\x20h0le\x22,\x22assh0les\x22,\x22b.astard\x22,\x22b.ollocks\x22,\x22b.ugger\x22,\x22b@st@rd\x22,\x22b@st@rds\x22,\x22b00tha\x22,\x22b00thas\x22,\x22b0ll0cks\x22,\x22b0llocks\x22,\x22b3llend\x22,\x22basterd\x22,\x22basyard\x22,\x22basyards\x22,\x22batty\x20boy\x22,\x22batty&nbsp;boi\x22,\x22batty&nbsp;boy\x22,\x22beef\x20curtains\x22,\x22belend\x22,\x22bell\x20end\x22,\x22bell.end\x22,\x22bell-end\x22,\x22bin\x20dippers\x22,\x22bin-dippers\x22,\x22bo11ocks\x22,\x22boabie\x20sooking\x22,\x22boaby\x20sooking\x22,\x22boll0cks\x22,\x22bolocks\x22,\x22bolox\x22,\x22bootha\x22,\x22boothas\x22,\x22bum\x20bandit\x22,\x22bum\x20hole\x22,\x22bumbandit\x22,\x22bum-bandit\x22,\x22bumh0l3\x22,\x22bumh0le\x22,\x22bumhol3\x22,\x22bumhole\x22,\x22c\x20*nt!\x22,\x22c\x20*nts!\x22,\x22c\x20u\x20n\x20t\x22,\x22c\x20u\x20n\x20t.\x22,\x22c#nt\x22,\x22c&nbsp;u&nbsp;n&nbsp;t\x22,\x22c*\x20nt\x22,\x22c.unt\x22,\x22c.untyb.ollocks\x22,\x22c_u_n_t\x22,\x22c00n\x22,\x22c0cksucka\x22,\x22cahnt\x22,\x22cahnts\x22,\x22clunge\x22,\x22cnuts\x22,\x22co(k\x22,\x22coc&nbsp;k\x22,\x22cocksucka\x22,\x22cocksuckers\x22,\x22cocksuckers.\x22,\x22cossor\x20ali\x22,\x22cretin\x22,\x22cripple\x22,\x22critest\x22,\x22cu&nbsp;nt\x22,\x22cu&nbsp;nts\x22,\x22cunting\x22,\x22cunt\x27s\x22,\x22cvnt\x22,\x22cvnts\x22,\x22d1ck!\x22,\x22d1ckh@ed\x22,\x22darky\x22,\x22dick&nbsp;head\x22,\x22dumbfucker\x22,\x22dxxkhead\x22,\x22ethnics\x22,\x22f\x20ck\x22,\x22f\x20o\x20a\x20d\x22,\x22f\x20off\x22,\x22f\x20u\x20c\x20ked\x22,\x22f\x20uc\x20k\x22,\x22f\x20uc\x20king\x22,\x22f\x20uck\x22,\x22f###\x22,\x22f##k\x22,\x22f##king\x22,\x22f#cked\x22,\x22f$cks\x22,\x22f&nbsp;cked\x22,\x22f&nbsp;u&nbsp;c&nbsp;k\x22,\x22f&nbsp;uck\x22,\x22f&nbsp;ucker\x22,\x22f&nbsp;ucking\x22,\x22f()()k\x22,\x22f()()ker\x22,\x22f()()king\x22,\x22f*#kin\x27\x22,\x22f*&k\x22,\x22f*&k!ng\x22,\x22f.o.a.d\x22,\x22f.o.a.d.\x22,\x22f.u.c.k.\x22,\x22f.uck\x22,\x22f@@@in\x22,\x22f@@@ing\x22,\x22f@ck\x22,\x22f@g\x22,\x22f@gs\x22,\x22f[_]cker\x22,\x22f[_]cking\x22,\x22f^^k\x22,\x22f^^ked\x22,\x22f^^ker\x22,\x22f^^king\x22,\x22f^ck\x22,\x22f^cker\x22,\x22f^cking\x22,\x22f__kin\x22,\x22f__king\x22,\x22f<uk\x22,\x22f>>k\x22,\x22f00k\x22,\x22f00ked\x22,\x22f0oked\x22,\x22fackin\x22,\x22facking\x22,\x22f4ggot\x22,\x22f4gg0t\x22,\x22fagg0t\x22,\x22faggits\x22,\x22fagits\x22,\x22fck\x22,\x22f\x27ck\x22,\x22fck&nbsp;ing\x22,\x22fck1ng\x22,\x22fckeud\x22,\x22fckin\x22,\x22fcking\x22,\x22fcks\x22,\x22fckw1t\x22,\x22fckwit\x22,\x22fcuked\x22,\x22fcukin\x22,\x22fcuks\x22,\x22feckin\x22,\x22fecking\x22,\x22f---ed\x22,\x22fekking\x22,\x22felched\x22,\x22feltching\x22,\x22f-----g\x22,\x22f---ing\x22,\x22f--k\x22,\x22fkin\x22,\x22fking\x22,\x22flucknuts\x22,\x22fo0ked\x22,\x22f-o-a-d\x22,\x22fookd\x22,\x22fooked\x22,\x22fookin\x22,\x22fookin\x27\x22,\x22fooking\x22,\x22frig\x22,\x22frigging\x22,\x22frigin\x22,\x22friging\x22,\x22fu\x20<k\x22,\x22fu&kin\x22,\x22fu&king\x22,\x22fu&nbsp;ck\x22,\x22fu&nbsp;cked\x22,\x22fu&nbsp;cker\x22,\x22fu&nbsp;cking\x22,\x22fu(k\x22,\x22fu(ker\x22,\x22fu(kers\x22,\x22fu.ck\x22,\x22fu@k\x22,\x22fu@ker\x22,\x22fu^k\x22,\x22fu^ker\x22,\x22fu^king\x22,\x22fu<\x20kin\x22,\x22fu<k\x22,\x22f-u-<-k\x22,\x22fu<ked\x22,\x22fu<ker\x22,\x22fu<kin\x22,\x22fu<king\x22,\x22fu<kker\x22,\x22fu<kr\x22,\x22fu<ks\x22,\x22fuc&nbsp;ked\x22,\x22fuc&nbsp;ker\x22,\x22fuc&nbsp;king\x22,\x22f-uck\x22,\x22fúck\x22,\x22fúçk\x22,\x22fùck\x22,\x22fûck\x22,\x22fück\x22,\x22fuck&nbsp;ed\x22,\x22fuck&nbsp;ing\x22,\x22fucke&nbsp;d\x22,\x22fucki&nbsp;ng\x22,\x22fúcking\x22,\x22fuckinghell\x22,\x22fuckk\x22,\x22fuckw1t\x22,\x22fuck-wit\x22,\x22fuckwits\x22,\x22fucw1t\x22,\x22fucwit\x22,\x22fudge\x20p@cker\x22,\x22fudgep@cker\x22,\x22fudge-p@cker\x22,\x22fudge-packer\x22,\x22fudgpacker\x22,\x22fukced\x22,\x22fuked\x22,\x22fukin\x22,\x22fuking\x22,\x22fukk\x22,\x22fukked\x22,\x22fukking\x22,\x22fuukn\x22,\x22fvckup\x22,\x22fvck-up\x22,\x22fvckw1t\x22,\x22fvckwit\x22,\x22gang-bang\x22,\x22gash\x22,\x22gayhole\x22,\x22gimp\x22,\x22girlie-gardening\x22,\x22goris\x22,\x22gypo\x22,\x22gypos\x22,\x22gyppo\x22,\x22gyppos\x22,\x22hvns\x22,\x22israelians\x22,\x22ities\x22,\x22k@ffir\x22,\x22k@ffirs\x22,\x22k@fir\x22,\x22k@firs\x22,\x22kaf1r\x22,\x22kaff1r\x22,\x22kaffir\x22,\x22kaffirs\x22,\x22kafir\x22,\x22kafirs\x22,\x22kafr\x22,\x22kants\x22,\x22khunt\x22,\x22kiddie\x20fiddler\x22,\x22kiddie\x20fiddling\x22,\x22kiddie-fiddler\x22,\x22kiddie-fiddling\x22,\x22kiddy\x20fiddler\x22,\x22kiddyfiddler\x22,\x22kiddy-fiddler\x22,\x22kn0b\x22,\x22knob&nbsp;head\x22,\x22knobber\x22,\x22kuffar\x22,\x22m.inge\x22,\x22m.otherf.ucker\x22,\x22m1nge\x22,\x22mofuccer\x22,\x22mofucker\x22,\x22mofuckers\x22,\x22mofucking\x22,\x22mofukcer\x22,\x22mohterfuccer\x22,\x22mohterfuccers\x22,\x22mohterfuck\x22,\x22mohterfucker\x22,\x22mohterfuckers\x22,\x22mohterfucking\x22,\x22mohterfucks\x22,\x22mohterfuk\x22,\x22mohterfukcer\x22,\x22mohterfukcers\x22,\x22mohterfuking\x22,\x22mohterfuks\x22,\x22moterfuccer\x22,\x22moterfuck\x22,\x22moterfucker\x22,\x22moterfuckers\x22,\x22moterfucking\x22,\x22moterfucks\x22,\x22mothafuccer\x22,\x22motha-fucka\x22,\x22mother\x20f---ers\x22,\x22motherfuccer\x22,\x22motherfuccers\x22,\x22motherfukkker\x22,\x22mthafucca\x22,\x22mthafuccas\x22,\x22mthafucka\x22,\x22mthafuckas\x22,\x22mthafukca\x22,\x22mthafukcas\x22,\x22muff-diver\x22,\x22muff-diving\x22,\x22muffs\x22,\x22muth@fucker\x22,\x22muthafuccer\x22,\x22muthafuck\x22,\x22muthafuck@\x22,\x22muthafucka\x22,\x22muthafuckers\x22,\x22muthafucking\x22,\x22muthafucks\x22,\x22muthafukas\x22,\x22niga\x22,\x22nignog\x22,\x22nig-nog\x22,\x22nob&nbsp;head\x22,\x22nonce\x22,\x22p.iss-flaps\x22,\x22p@ki\x22,\x22p@kis\x22,\x22p00f\x22,\x22p00fs\x22,\x22p00fter\x22,\x22p00fters\x22,\x22p0of\x22,\x22paedo\x22,\x22paedophiles\x22,\x22pak1\x22,\x22pakis\x22,\x22peado\x22,\x22peadofile\x22,\x22peadofiles\x22,\x22peedo\x22,\x22peedofile\x22,\x22peedofiles\x22,\x22peedophile\x22,\x22peedophiles\x22,\x22peedos\x22,\x22pench0d\x22,\x22pench0ds\x22,\x22penchod\x22,\x22penchods\x22,\x22phanny\x22,\x22phanny.\x22,\x22pheck\x22,\x22phecking\x22,\x22phelching\x22,\x22pheque\x22,\x22phequing\x22,\x22phucker\x22,\x22phuckin\x22,\x22phucking\x22,\x22phucks\x22,\x22pikey\x22,\x22pillow\x20biter\x22,\x22pillow-biter\x22,\x22piss\x20off\x22,\x22po0f\x22,\x22poff\x22,\x22ponce\x22,\x22poo\x20stabber\x22,\x22poo\x20stabbers\x22,\x22poofs\x22,\x22poofter\x22,\x22pr!ck\x22,\x22pr!ck.\x22,\x22pr1ck\x22,\x22pr1ck!\x22,\x22pr1cks\x22,\x22pr1cks!\x22,\x22prik\x22,\x22pu$$y\x22,\x22ragheads\x22,\x22ret@rd\x22,\x22rim\x20job\x22,\x22s.hit\x22,\x22s1ut\x22,\x22sc\x20u\x20m!\x22,\x22sc\x20um\x22,\x22sh\x20hit\x22,\x22sh!te\x22,\x22sh!tes\x22,\x22sh1te\x22,\x22shirtlifter\x22,\x22shirtlifters\x22,\x22shit\x20stabber\x22,\x22shit\x20stabbers\x22,\x22shitstabber\x22,\x22shitstabbers\x22,\x22spastic\x22,\x22spaz\x22,\x22spaz.\x22,\x22spit\x20roasting\x22,\x22spitroast\x22,\x22spit-roast\x22,\x22spit-roasting\x22,\x22spunking\x22,\x22ß0ll0çk5\x22,\x22t\x20w\x20a\x20t\x22,\x22t\x20wat\x22,\x22t.wat\x22,\x22t0$$er\x22,\x22t0sser\x22,\x22t0ssers\x22,\x22tea-bagging\x22,\x22to55er\x22,\x22to55ers\x22,\x22tosser,\x22,\x22tossers\x22,\x22tossurs\x22,\x22towel\x20head\x22,\x22tvvat\x22,\x22tvvats\x22,\x22tw\x20at\x22,\x22tw&nbsp;at\x22,\x22tw@\x22,\x22tw@t\x22,\x22tw@ts\x22,\x22tw_t\x22,\x22twa\x20t\x22,\x22twatt\x22,\x22twattish\x22,\x22twunts\x22,\x22up\x20the\x20gary\x22,\x22w\x20anker\x22,\x22w\x20ankers\x22,\x22w#nker\x22,\x22w#nkers\x22,\x22w*nkers,\x200\x22,\x22w.ank\x22,\x22w@nk\x22,\x22w@nker\x22,\x22w@nkers\x22,\x22w@nks\x22,\x22w0g\x22,\x22w0gs\x22,\x22w4nker!\x22,\x22w4nkers!\x22,\x22wa\x20nker\x22,\x22wan\x20k\x20er\x22,\x22wan\x20k\x20ers\x22,\x22wan\x20ker\x22,\x22wanka\x22,\x22wanke\x20r\x22,\x22wanked\x22,\x22wankers\x22,\x22wanking\x22,\x22wanks\x22,\x22wank\x27s\x22,\x22wet\x20spam\x22,\x22whanker\x22,\x22whankers\x22,\x22wog\x22,\x22xrse\x22,\x22xrseh\x22,\x22xrsehol\x22,\x22xrsehole\x22,\x22xxxhole\x22,\x22y!ddo!\x22,\x22y!ddo!!\x22,\x22yid\x22,\x22yido\x22,\x22zachariah\x20bishop\x22,\x22blow-job\x22,\x22boner:deboner\x22,\x22bonk:bonkers\x22,\x22candy-ass\x22,\x22chuffnuts\x22,\x22cojones\x22,\x22dipstick\x22,\x22feak\x22,\x22furbox\x22,\x22furburger\x22,\x22gayboy\x22,\x22ginch\x22,\x22gnikcuf\x22,\x22hardon\x22,\x22honkers\x22,\x22kcid\x22,\x22kcuf\x22,\x22lactoids\x22,\x22lesbyterian\x22,\x22lezzo\x22,\x22man-root\x22,\x22nestlecock\x22,\x22onanism\x22,\x22pusy\x22,\x22queve\x22,\x22quimsteak\x22,\x22qveer\x22,\x22sappho\x22,\x22scumbag\x22,\x22scumber\x22,\x22sexpot\x22,\x22shagbucket\x22,\x22shagstress\x22,\x22snarf\x22,\x22sodomite\x22,\x22strollop\x22,\x22suckster\x22,\x22tnuc\x22,\x22toggaf\x22,\x22tribadist\x22,\x22twank\x22,\x22wiseass\x22,\x22wizzer\x22,\x22abbo\x22,\x22abortionist\x22,\x22abuser\x22,\x22alabama\x20hotpocket\x22,\x22alligatorbait\x22,\x22analannie\x22,\x22analsex\x22,\x22arsebagger\x22,\x22arsebandit\x22,\x22arseblaster\x22,\x22arsecowboy\x22,\x22arsefuck\x22,\x22arsefucker\x22,\x22arsehat\x22,\x22arsehore\x22,\x22arsejockey\x22,\x22arsekiss\x22,\x22arsekisser\x22,\x22arselick\x22,\x22arselicker\x22,\x22arselover\x22,\x22arseman\x22,\x22arsemonkey\x22,\x22arsemunch\x22,\x22arsemuncher\x22,\x22arsepacker\x22,\x22arsepirate\x22,\x22arsepuppies\x22,\x22arseranger\x22,\x22arses\x22,\x22arsewhore\x22,\x22assbagger\x22,\x22assblaster\x22,\x22asscowboy\x22,\x22assholz\x22,\x22asshore\x22,\x22assjockey\x22,\x22asskiss\x22,\x22asskisser\x22,\x22assklown\x22,\x22asslover\x22,\x22assman\x22,\x22ass\x20monkey\x22,\x22asspacker\x22,\x22asspuppies\x22,\x22assranger\x22,\x22asswhore\x22,\x22azzhole\x22,\x22backdoorman\x22,\x22badfuck\x22,\x22baldy\x22,\x22ball\x20licker\x22,\x22balllicker\x22,\x22banging\x22,\x22barelylegal\x22,\x22barface\x22,\x22barfface\x22,\x22bassterds\x22,\x22bastardz\x22,\x22basterds\x22,\x22basterdz\x22,\x22bazongas\x22,\x22bazooms\x22,\x22beastality\x22,\x22beat-off\x22,\x22beatoff\x22,\x22beatyourmeat\x22,\x22bicurious\x22,\x22bigass\x22,\x22bigbastard\x22,\x22bigbutt\x22,\x22bitchez\x22,\x22bitchslap\x22,\x22biteme\x22,\x22boffing\x22,\x22bohunk\x22,\x22bollick\x22,\x22bootycall\x22,\x22bountybar\x22,\x22breastjob\x22,\x22breastlover\x22,\x22breastman\x22,\x22brothel\x22,\x22buggered\x22,\x22buggery\x22,\x22bukake\x22,\x22bullcrap\x22,\x22bulldike\x22,\x22bumfuck\x22,\x22bungabunga\x22,\x22butchbabes\x22,\x22butchdike\x22,\x22butchdyke\x22,\x22butt-bang\x22,\x22buttbang\x22,\x22buttface\x22,\x22butt-fuck\x22,\x22butt-fucker\x22,\x22butt-fuckers\x22,\x22buttfuckers\x22,\x22butthead\x22,\x22buttman\x22,\x22buttmunch\x22,\x22buttmuncher\x22,\x22buttpirate\x22,\x22buttstain\x22,\x22buttwipe\x22,\x22byatch\x22,\x22cacker\x22,\x22cameljockey\x22,\x22cawks\x22,\x22chav\x22,\x22cherrypopper\x22,\x22chickslick\x22,\x22clamdigger\x22,\x22clamdiver\x22,\x22clogwog\x22,\x22cnts\x22,\x22cntz\x22,\x22cockblocker\x22,\x22cockcowboy\x22,\x22cockfight\x22,\x22cock-head\x22,\x22cockknob\x22,\x22cocklicker\x22,\x22cocklover\x22,\x22cocknob\x22,\x22cockqueen\x22,\x22cockrider\x22,\x22cocksman\x22,\x22cocksucer\x22,\x22cocktease\x22,\x22cocky\x22,\x22coitus\x22,\x22coondog\x22,\x22copulate\x22,\x22cracker\x22,\x22crackpipe\x22,\x22crack-whore\x22,\x22crotchjockey\x22,\x22crotchmonkey\x22,\x22crotchrot\x22,\x22cumfest\x22,\x22cumm\x22,\x22cumquat\x22,\x22cumqueen\x22,\x22cunntt\x22,\x22cunteyed\x22,\x22cuntfuck\x22,\x22cuntfucker\x22,\x22cuntsucker\x22,\x22cuntz\x22,\x22cybersex\x22,\x22cyberslimer\x22,\x22damnation\x22,\x22damnit\x22,\x22datnigga\x22,\x22deapthroat\x22,\x22dego\x22,\x22devilworshipper\x22,\x22dickbrain\x22,\x22dickforbrains\x22,\x22dickless\x22,\x22dicklick\x22,\x22dicklicker\x22,\x22dickmilk\x22,\x22dilldo\x22,\x22dilldos\x22,\x22dixiedike\x22,\x22dixiedyke\x22,\x22dominatricks\x22,\x22dominatrics\x22,\x22douch\x22,\x22douchbag\x22,\x22drag\x20queen\x22,\x22dragqueen\x22,\x22dragqween\x22,\x22dripdick\x22,\x22dumbbitch\x22,\x22easyslut\x22,\x22eatballs\x22,\x22eatme\x22,\x22eatpussy\x22,\x22enema\x22,\x22excrement\x22,\x22facefucker\x22,\x22facist\x22,\x22faeces\x22,\x22faget\x22,\x22faggots\x22,\x22fagit\x22,\x22fagz\x22,\x22faigs\x22,\x22fark\x22,\x22farted\x22,\x22farting\x22,\x22farty\x22,\x22fastfuck\x22,\x22fatfuck\x22,\x22fatfucker\x22,\x22fatso\x22,\x22feces\x22,\x22felatio\x22,\x22fister\x22,\x22flasher\x22,\x22flid\x22,\x22flipping\x20the\x20bird\x22,\x22flyd\x22,\x22flydie\x22,\x22flydye\x22,\x22footaction\x22,\x22footfuck\x22,\x22footfucker\x22,\x22footlicker\x22,\x22fornicate\x22,\x22freakfuck\x22,\x22freakyfucker\x22,\x22freefuck\x22,\x22fucck\x22,\x22fuckable\x22,\x22fuckbuddy\x22,\x22fuckedup\x22,\x22fuckfest\x22,\x22fuckfreak\x22,\x22fuckfriend\x22,\x22fuckher\x22,\x22fuckina\x22,\x22fuckingbitch\x22,\x22fuckingcunt\x22,\x22fuckinnuts\x22,\x22fuckinright\x22,\x22fuckit\x22,\x22fuckknob\x22,\x22fuckmehard\x22,\x22fuckmonkey\x22,\x22fuckpig\x22,\x22fuckwhore\x22,\x22fuckyou\x22,\x22fugly\x22,\x22Fukah\x22,\x22Fuken\x22,\x22Fukkah\x22,\x22Fukken\x22,\x22funfuck\x22,\x22fuuck\x22,\x22gangbanger\x22,\x22gatorbait\x22,\x22gaygirl\x22,\x22gaymuthafuckinwhore\x22,\x22gayz\x22,\x22getiton\x22,\x22givehead\x22,\x22glazeddonut\x22,\x22godammit\x22,\x22goddamit\x22,\x22goddamnes\x22,\x22goddamnmuthafucker\x22,\x22gonorrehea\x22,\x22gonzagas\x22,\x22gotohell\x22,\x22greaseball\x22,\x22grostulation\x22,\x22gypp\x22,\x22gyppie\x22,\x22gyppy\x22,\x22headfuck\x22,\x22hells\x22,\x22hijacker\x22,\x22hijacking\x22,\x22hillbillies\x22,\x22hindoo\x22,\x22hitlerism\x22,\x22hitlerist\x22,\x22hobo\x22,\x22hoes\x22,\x22holestuffer\x22,\x22homobangers\x22,\x22honger\x22,\x22hookers\x22,\x22hoore\x22,\x22horney\x22,\x22horseshit\x22,\x22hosejob\x22,\x22hotdamn\x22,\x22hotpussy\x22,\x22hottotrot\x22,\x22iblowu\x22,\x22idiot\x22,\x22insest\x22,\x22internet\x20wife\x22,\x22intheass\x22,\x22inthebuff\x22,\x22jackshit\x22,\x22japcrap\x22,\x22jesuschrist\x22,\x22jiggabo\x22,\x22jihad\x22,\x22jijjiboo\x22,\x22jisim\x22,\x22jiss\x22,\x22jizim\x22,\x22jizjuice\x22,\x22jizzim\x22,\x22jizzum\x22,\x22jubblies\x22,\x22juggalo\x22,\x22kissass\x22,\x22knobz\x22,\x22krap\x22,\x22krappy\x22,\x22kumbubble\x22,\x22kumbullbe\x22,\x22kunnilingus\x22,\x22kunts\x22,\x22kuntz\x22,\x22lactate\x22,\x22lady\x20boy\x22,\x22ladyboy\x22,\x22lapdance\x22,\x22lesbain\x22,\x22lesbayn\x22,\x22lesbin\x22,\x22lezbe\x22,\x22lezbefriends\x22,\x22lezz\x22,\x22lezzer\x22,\x22libido\x22,\x22lickme\x22,\x22limpdick\x22,\x22lipshits\x22,\x22lipshitz\x22,\x22livesex\x22,\x22loadedgun\x22,\x22lovebone\x22,\x22lovegoo\x22,\x22lovegun\x22,\x22lovejuice\x22,\x22lovemuscle\x22,\x22lovepistol\x22,\x22loverocket\x22,\x22low\x20life\x22,\x22lowlife\x22,\x22lubejob\x22,\x22luckycameltoe\x22,\x22manhater\x22,\x22manpaste\x22,\x22masokist\x22,\x22massterbait\x22,\x22masstrbait\x22,\x22masstrbate\x22,\x22mastabate\x22,\x22mastabater\x22,\x22masterbaiter\x22,\x22master\x20bates\x22,\x22masterbates\x22,\x22mastrabator\x22,\x22mattressprincess\x22,\x22meatbeater\x22,\x22meatrack\x22,\x22mgger\x22,\x22mggor\x22,\x22molestation\x22,\x22molester\x22,\x22molestor\x22,\x22moneyshot\x22,\x22mooncricket\x22,\x22motha\x20fucker\x22,\x22motha\x20fuker\x22,\x22motha\x20fukkah\x22,\x22motha\x20fukker\x22,\x22mother-fucker\x22,\x22mother\x20fukah\x22,\x22mother\x20fuker\x22,\x22mother\x20fukkah\x22,\x22mother\x20fukker\x22,\x22motherlovebone\x22,\x22muffdive\x22,\x22muffindiver\x22,\x22mufflikcer\x22,\x22muncher\x22,\x22mutha\x20fucker\x22,\x22mutha\x20fukah\x22,\x22mutha\x20fuker\x22,\x22mutha\x20fukkah\x22,\x22mutha\x20fukker\x22,\x22nastt\x22,\x22nastybitch\x22,\x22nastyho\x22,\x22nastyslut\x22,\x22nastywhore\x22,\x22necro\x22,\x22negroes\x22,\x22negroid\x22,\x22niggaracci\x22,\x22niggard\x22,\x22niggarded\x22,\x22niggarding\x22,\x22niggardliness\x22,\x22niggardliness\x27s,\x22,\x22niggardly\x22,\x22niggard\x27s,\x22,\x22niggards\x22,\x22niggerhead\x22,\x22niggerhole\x22,\x22nigger\x27s,\x22,\x22niggled\x22,\x22niggles\x22,\x22niggling\x22,\x22nigglings\x22,\x22niggor\x22,\x22niggur\x22,\x22nigr\x22,\x22nigra\x22,\x22nigre\x22,\x22nigur\x22,\x22niiger\x22,\x22niigr\x22,\x22nipplering\x22,\x22nittit\x22,\x22nlgger\x22,\x22nlggor\x22,\x22nofuckingway\x22,\x22nookey\x22,\x22nookie\x22,\x22nudger\x22,\x22nut\x20case\x22,\x22nutcase\x22,\x22nutfucker\x22,\x22ontherag\x22,\x22orafis\x22,\x22orgasum\x22,\x22oriface\x22,\x22orifice\x22,\x22orifiss\x22,\x22packi\x22,\x22packie\x22,\x22packy\x22,\x22paedofile\x22,\x22pakie\x22,\x22paky\x22,\x22palesimian\x22,\x22panti\x22,\x22pearlnecklace\x22,\x22peckerwood\x22,\x22peeenus\x22,\x22peeenusss\x22,\x22peehole\x22,\x22peenus\x22,\x22peinus\x22,\x22penas\x22,\x22penis-breath\x22,\x22penises\x22,\x22penus\x22,\x22penuus\x22,\x22perv\x22,\x22pervert\x22,\x22phuc\x22,\x22phuker\x22,\x22phukker\x22,\x22phungky\x22,\x22pi55\x22,\x22picaninny\x22,\x22piccaninny\x22,\x22pickaninny\x22,\x22piky\x22,\x22pimper\x22,\x22pimpjuic\x22,\x22pimpjuice\x22,\x22pimpsimp\x22,\x22pindick\x22,\x22piss\x22,\x22pisshead\x22,\x22play\x20boy\x22,\x22play\x20bunny\x22,\x22playbunny\x22,\x22play\x20girl\x22,\x22playgirl\x22,\x22plumper\x22,\x22pocketpool\x22,\x22polac\x22,\x22polak\x22,\x22pooperscooper\x22,\x22pooping\x22,\x22poorwhitetrash\x22,\x22poostabber\x22,\x22popimp\x22,\x22pornflick\x22,\x22pornking\x22,\x22pornprincess\x22,\x22pric\x22,\x22prickhead\x22,\x22pu55i\x22,\x22pu55y\x22,\x22pubiclice\x22,\x22puke\x22,\x22puntang\x22,\x22purinaprincess\x22,\x22pussee\x22,\x22pussie\x22,\x22pussyeater\x22,\x22pussyfucker\x22,\x22pussylicker\x22,\x22pussylips\x22,\x22pussylover\x22,\x22puuke\x22,\x22puuker\x22,\x22queerz\x22,\x22qweers\x22,\x22qweerz\x22,\x22qweir\x22,\x22rag\x20head\x22,\x22rearend\x22,\x22rearentry\x22,\x22recktum\x22,\x22redneck\x22,\x22rentafuck\x22,\x22russki\x22,\x22russkie\x22,\x22sadom\x22,\x22saeema\x20butt\x22,\x22sandm\x22,\x22scank\x22,\x22screwyou\x22,\x22seaman\x20staines\x22,\x22sexed\x22,\x22sexfarm\x22,\x22sexhound\x22,\x22sexhouse\x22,\x22sexing\x22,\x22sexkitten\x22,\x22sexslave\x22,\x22sextogo\x22,\x22sextoy\x22,\x22sextoys\x22,\x22sexwhore\x22,\x22sexymoma\x22,\x22sexy-slim\x22,\x22seymour\x20butts\x22,\x22shat\x22,\x22shhit\x22,\x22shitcan\x22,\x22shiter\x22,\x22shitfit\x22,\x22shitforbrains\x22,\x22shitfucker\x22,\x22shithapens\x22,\x22shithappens\x22,\x22shitlist\x22,\x22shitola\x22,\x22shitoutofluck\x22,\x22shity\x22,\x22shitz\x22,\x22shortfuck\x22,\x22shyt\x22,\x22shyte\x22,\x22shytty\x22,\x22shyty\x22,\x22sixsixsix\x22,\x22sixtynine\x22,\x22sixtyniner\x22,\x22skanck\x22,\x22skankbitch\x22,\x22skankee\x22,\x22skankey\x22,\x22skankfuck\x22,\x22skanks\x22,\x22skankwhore\x22,\x22skanky\x22,\x22skankybitch\x22,\x22skankywhore\x22,\x22skinflute\x22,\x22skum\x22,\x22skumbag\x22,\x22slantyeye\x22,\x22slapper\x22,\x22slavedriver\x22,\x22sleezebag\x22,\x22sleezeball\x22,\x22slideitin\x22,\x22slimeball\x22,\x22slimebucket\x22,\x22slopehead\x22,\x22slopey\x22,\x22slopy\x22,\x22slutt\x22,\x22slutting\x22,\x22slutty\x22,\x22slutwear\x22,\x22slutwhore\x22,\x22slutz\x22,\x22smackthemonkey\x22,\x22smelly\x22,\x22snatchpatch\x22,\x22snot\x22,\x22snowback\x22,\x22snownigger\x22,\x22sodomise\x22,\x22sonofabitch\x22,\x22sonofbitch\x22,\x22spacca\x22,\x22spaghettibender\x22,\x22spaghettinigger\x22,\x22spankthemonkey\x22,\x22spazza\x22,\x22spermacide\x22,\x22spermbag\x22,\x22spermhearder\x22,\x22spermherder\x22,\x22spig\x22,\x22spigotty\x22,\x22spitter\x22,\x22splittail\x22,\x22spreadeagle\x22,\x22squaw\x22,\x22stabber\x22,\x22stripclub\x22,\x22stroking\x22,\x22stupidfuck\x22,\x22stupidfucker\x22,\x22suckdick\x22,\x22sucker\x22,\x22suckme\x22,\x22suckmyass\x22,\x22suckmytit\x22,\x22suckoff\x22,\x22tarbaby\x22,\x22testicles\x22,\x22thicklips\x22,\x22thicko\x22,\x22thirdeye\x22,\x22thirdleg\x22,\x22timbernigger\x22,\x22titbitnipply\x22,\x22titfucker\x22,\x22titfuckin\x22,\x22titjob\x22,\x22titlicker\x22,\x22titlover\x22,\x22tittie\x22,\x22tonguethrust\x22,\x22tonguethruster\x22,\x22tonguetramp\x22,\x22torture\x22,\x22tosspot\x22,\x22trailertrash\x22,\x22trannie\x22,\x22trots\x22,\x22trouser\x20snake\x22,\x22tuckahoe\x22,\x22tunneloflove\x22,\x22twobitwhore\x22,\x22unfuckable\x22,\x22uptheass\x22,\x22upthebutt\x22,\x22urinate\x22,\x22usama\x20bin\x20laden\x22,\x22vaginal\x22,\x22vajina\x22,\x22valjina\x22,\x22vibrater\x22,\x22vietcong\x22,\x22violate\x22,\x22violation\x22,\x22virginbreaker\x22,\x22vullva\x22,\x22waysted\x22,\x22welcher\x22,\x22wetspot\x22,\x22whacker\x22,\x22whigger\x22,\x22whiskeydick\x22,\x22whiskydick\x22,\x22whitenigger\x22,\x22whitetrash\x22,\x22whoor\x22,\x22whop\x22,\x22whorefucker\x22,\x22wife\x20beater\x22,\x22williewanker\x22,\x22wuss\x22,\x22wuzzie\x22,\x22yellowman\x22,\x22zigabo\x22,\x22zipperhea\x22,\x22zipper\x20head\x22,\x22suicide\x22,\x22kill\x20yourself\x22,\x22kys\x22,\x22hang\x20yourself\x22,\x22unalive\x20yourself\x22,\x22nigg\x22,\x22puta\x22,\x22amcik\x22,\x22boobz\x22,\x22boody\x22,\x22boong\x22,\x22cazzo\x22,\x22forni\x22,\x22fotze\x22,\x22ginzo\x22,\x22gippo\x22,\x22gipps\x22,\x22godam\x22,\x22goyim\x22,\x22groid\x22,\x22gubba\x22,\x22guizi\x22,\x22gyopo\x22,\x22gyped\x22,\x22harem\x22,\x22heebs\x22,\x22horis\x22,\x22hoser\x22,\x22hymie\x22,\x22japie\x22,\x22jewed\x22,\x22jigga\x22,\x22jiggs\x22,\x22jiggy\x22,\x22jizin\x22,\x22jizzd\x22,\x22jizzn\x22,\x22kacap\x22,\x22kumer\x22,\x22kurac\x22,\x22kurwa\x22,\x22kushi\x22,\x22kykes\x22,\x22kyopo\x22,\x22kyrpa\x22,\x22lebos\x22,\x22lubra\x22,\x22lugan\x22,\x22lynch\x22,\x22mibun\x22,\x22mocky\x22,\x22nibba\x22,\x22nigar\x22,\x22nigas\x22,\x22niger\x22,\x22nigha\x22,\x22nigor\x22,\x22niqqa\x22,\x22nudie\x22,\x22nymph\x22,\x22pansy\x22,\x22paska\x22,\x22pendy\x22,\x22pizda\x22,\x22pocha\x22,\x22pocho\x22,\x22pohms\x22,\x22quiff\x22,\x22seppo\x22,\x22smack\x22,\x22spank\x22,\x22spics\x22,\x22stagg\x22,\x22trois\x22,\x22ukrop\x22,\x22vittu\x22,\x22wigga\x22,\x22beaney\x22,\x22boches\x22,\x22bungas\x22,\x22chinga\x22,\x22crotch\x22,\x22darkey\x22,\x22doggie\x22,\x22dyefly\x22,\x22dziwka\x22,\x22exkwew\x22,\x22fetish\x22,\x22ficken\x22,\x22geezer\x22,\x22gummer\x22,\x22gwailo\x22,\x22gweilo\x22,\x22gypped\x22,\x22gypsys\x22,\x22hodgie\x22,\x22honkie\x22,\x22huevon\x22,\x22humper\x22,\x22humpin\x22,\x22ikeymo\x22,\x22jewess\x22,\x22jigger\x22,\x22jizzin\x22,\x22kaffer\x22,\x22kaffre\x22,\x22kanake\x22,\x22kanker\x22,\x22katsap\x22,\x22kigger\x22,\x22knulle\x22,\x22kwailo\x22,\x22mabuno\x22,\x22macaca\x22,\x22maumau\x22,\x22menage\x22,\x22mierda\x22,\x22mockey\x22,\x22mockie\x22,\x22moskal\x22,\x22moslem\x22,\x22mtrfck\x22,\x22mulkku\x22,\x22muschi\x22,\x22mzungu\x22,\x22necked\x22,\x22negres\x22,\x22noonan\x22,\x22nooner\x22,\x22orospu\x22,\x22piefke\x22,\x22pimmel\x22,\x22pimped\x22,\x22pooper\x22,\x22pudboy\x22,\x22punani\x22,\x22pusies\x22,\x22qahbeh\x22,\x22racial\x22,\x22redleg\x22,\x22rigger\x22,\x22sambos\x22,\x22shipal\x22,\x22skribz\x22,\x22slanty\x22,\x22sloper\x22,\x22slopes\x22,\x22tantra\x22,\x22tiedup\x22,\x22tittis\x22,\x22tortur\x22,\x22trojan\x22,\x22turnon\x22,\x22yarpie\x22,\x22arabush\x22,\x22asholes\x22,\x22ballgag\x22,\x22bangbro\x22,\x22bluegum\x22,\x22bootlip\x22,\x22buffies\x22,\x22coolies\x22,\x22coonass\x22,\x22cowgirl\x22,\x22dothead\x22,\x22dryhump\x22,\x22fanculo\x22,\x22flikker\x22,\x22gangsta\x22,\x22genital\x22,\x22googirl\x22,\x22horndog\x22,\x22hotcarl\x22,\x22hugefat\x22,\x22humpher\x22,\x22humphim\x22,\x22hustler\x22,\x22israels\x22,\x22jerries\x22,\x22jimfish\x22,\x22khokhol\x22,\x22lezzian\x22,\x22licking\x22,\x22mahbuno\x22,\x22mamhoon\x22,\x22maricon\x22,\x22mideast\x22,\x22mulatto\x22,\x22nigette\x22,\x22pendejo\x22,\x22pierdol\x22,\x22preteen\x22,\x22puddboy\x22,\x22quashie\x22,\x22sanchez\x22,\x22scheiss\x22,\x22schmuck\x22,\x22septics\x22,\x22sheeney\x22,\x22shinola\x22,\x22shylock\x22,\x22slopeys\x22,\x22spludge\x22,\x22squinty\x22,\x22triplex\x22,\x22urethra\x22,\x22vagiina\x22,\x22whities\x22,\x22wichser\x22,\x22africoon\x22,\x22andskota\x22,\x22bassterd\x22,\x22bigblack\x22,\x22blackman\x22,\x22burrhead\x22,\x22chinaman\x22,\x22chinamen\x22,\x22clansman\x22,\x22clansmen\x22,\x22dogstyle\x22,\x22dunecoon\x22,\x22earotics\x22,\x22eatmyass\x22,\x22footstar\x22,\x22foursome\x22,\x22godsdamn\x22,\x22golliwog\x22,\x22homicide\x22,\x22horndawg\x22,\x22hotchick\x22,\x22illegals\x22,\x22klansman\x22,\x22klansmen\x22,\x22klootzak\x22,\x22knockers\x22,\x22kuksuger\x22,\x22lingerie\x22,\x22mosshead\x22,\x22peepshow\x22,\x22peepshpw\x22,\x22poontsee\x22,\x22pplicker\x22,\x22schaffer\x22,\x22schlampe\x22,\x22sharmuta\x22,\x22sharmute\x22,\x22stringer\x22,\x22syphilis\x22,\x22tacohead\x22,\x22thicklip\x22,\x22threeway\x22,\x22wetdream\x22,\x22yourtits\x22,\x22zabourah\x22,\x22arschloch\x22,\x22assrammer\x22,\x22babyjuice\x22,\x22ballgravy\x22,\x22futkretzn\x22,\x22girlontop\x22,\x22hairyback\x22,\x22halfbreed\x22,\x22halfcaste\x22,\x22hillbilly\x22,\x22howtokill\x22,\x22jigarooni\x22,\x22magicwand\x22,\x22marijuana\x22,\x22masturbat\x22,\x22monkleigh\x22,\x22mouliewop\x22,\x22penthouse\x22,\x22poundtown\x22,\x22premature\x22,\x22scallywag\x22,\x22schvartse\x22,\x22schwartze\x22,\x22skurwysyn\x22,\x22sphencter\x22,\x22squirting\x22,\x22stuinties\x22,\x22swallower\x22,\x22tarbabies\x22,\x22tongueina\x22,\x22babybatter\x22,\x22beastility\x22,\x22beaverlips\x22,\x22bigbreasts\x22,\x22bluewaffle\x22,\x22buddhahead\x22,\x22bulletvibe\x22,\x22chinaswede\x22,\x22chingchong\x22,\x22clanswoman\x22,\x22clanswomen\x22,\x22deepaction\x22,\x22doubledong\x22,\x22ejackulate\x22,\x22jellydonut\x22,\x22klanswoman\x22,\x22klanswomen\x22,\x22makemecome\x22,\x22mickeyfinn\x22,\x22missionary\x22,\x22rautenberg\x22,\x22samckdaddy\x22,\x22shawtypimp\x22,\x22socksucker\x22,\x22spierdalaj\x22,\x22spreadlegs\x22,\x22squarehead\x22,\x22styledoggy\x22,\x22tightwhite\x22,\x22udgepacker\x22,\x22venusmound\x22,\x22whitepower\x22,\x22zipperhead\x22,\x22ballkicking\x22,\x22dawgiestyle\x22,\x22diaperdaddy\x22,\x22donkeypunch\x22,\x22howtomurder\x22,\x22meatbeatter\x22,\x22pancakeface\x22,\x22pommiegrant\x22,\x22swampguinea\x22,\x22taintedlove\x22,\x22beefcurtains\x22,\x22blowyourload\x22,\x22brownshowers\x22,\x22christkiller\x22,\x22cloverclamps\x22,\x22currymuncher\x22,\x22dirtypillows\x22,\x22motherfvcker\x22,\x22moundofvenus\x22,\x22pickaninnies\x22,\x22porchmonkies\x22,\x22spearchucker\x22,\x22tigolbitties\x22,\x22transvestite\x22,\x22beavercleaver\x22,\x22girlsgonewild\x22,\x22jacktheripper\x22,\x22junglebunnies\x22,\x22masterblaster\x22,\x22pleasurechest\x22,\x22tigoldbitties\x22,\x22tongethruster\x22,\x22yellowshowers\x22,\x22brunetteaction\x22,\x22femalesquirtin\x22,\x22luckycammeltoe\x22,\x22purinapricness\x22,\x22clevelandsteamer\x22,\x22wrinkledstarfish\x22,\x22princealbertpiercing\x22,\x22niggardliness\x27s\x22,\x22niggard\x27s\x22,\x22nigger\x27s\x22,\x22nicotine\x22,\x22hell\x22,\x22f*ck\x22,\x22f**k\x22,\x22f***k\x22,\x22fu*k\x22,\x22fu**k\x22,\x22fk\x22,\x22fuq\x22,\x22sh*t\x22,\x22damm\x22,\x22d@mn\x22,\x22d@mm\x22,\x22h3ll\x22,\x22h*ll\x22,\x22b*tch\x22,\x22btch\x22,\x22bast4rd\x22,\x22b@stard\x22,\x22bast@rd\x22,\x22@ss\x22,\x22a$$\x22,\x22@$$\x22,\x22cr@p\x22,\x22d!ck\x22,\x22p1ss\x22,\x22p!ss\x22,\x22p@ss\x22,\x22c*nt\x22,\x22c**t\x22,\x22wh*re\x22,\x22wh0r3\x22,\x22slvt\x22,\x22sl*t\x22,\x22sl*tt\x22,\x22d*uche\x22,\x22d*uch3\x22,\x22@sshole\x22,\x22@$$hole\x22,\x22m0therfucker\x22,\x22m0therf*cker\x22,\x22m0th3rfucker\x22,\x22motherf*cker\x22,\x22c*cksucker\x22,\x22c*cksuck3r\x22,\x22cocksuck3r\x22,\x22j@ckass\x22,\x22j@ck@ss\x22,\x22jack@ss\x22,\x22j@ck*ss\x22,\x22b*llshit\x22,\x22b@llshit\x22,\x22bllsht\x22,\x22b*llsh1t\x22,\x22bullsh1t\x22,\x22b@llsh1t\x22,\x22@rsehole\x22,\x22ars3hole\x22,\x22ars*hole\x22,\x22f*ggot\x22,\x22f@gg0t\x22,\x22b@st4rd\x22,\x22sh!thead\x22,\x22sh1thead\x22,\x22sh1th3ad\x22,\x22shith3ad\x22,\x22sh*thead\x22,\x22c*ck\x22,\x22c0k\x22,\x22p*rn\x22,\x22pr0n\x22,\x22porn0\x22,\x22fckr\x22,\x22f*ckr\x22,\x22fc*k\x22,\x22fc*kr\x22,\x22fkn\x22,\x22fn\x22,\x22fqn\x22,\x22fnck\x22,\x22d1k\x22,\x22d!k\x22,\x22dik\x22,\x22dyk\x22,\x22dykk\x22,\x22d*kk\x22,\x22c*m\x22,\x22c*mm\x22,\x22s!ut\x22,\x22p1mp\x22,\x22p!mp\x22,\x22b00b\x22,\x22b*ob\x22,\x22b0b\x22,\x22b00bz\x22,\x22b0bz\x22,\x22b0obs\x22,\x22@ssh0le\x22,\x22@$$h0le\x22,\x22f!ck\x22,\x22f1ck\x22,\x22f*q\x22,\x22f*cking\x22,\x22f**king\x22,\x22f***king\x22,\x22fkng\x22,\x22f*kin\x22,\x22f@king\x22,\x22buggr\x22,\x22buggrr\x22,\x22bugg3r\x22,\x22buggering\x22,\x22f@ggot\x22,\x22f*gg0t\x22,\x22twatface\x22,\x22twatfaced\x22,\x22wankr\x22,\x22w4nk\x22,\x22w4nker\x22,\x22w@nkr\x22,\x22w*nkr\x22,\x22wankd\x22,\x22tossr\x22,\x22toss3r\x22,\x22t0ss3r\x22,\x22t!t\x22,\x22titz\x22,\x22t!tt\x22,\x22t!tz\x22,\x22c_nt\x22,\x22c*ntz\x22,\x22c_ntz\x22,\x22pisd\x22,\x22pissd\x22,\x22pishead\x22,\x22p!sshead\x22,\x22p1sshead\x22,\x22f*cker\x22,\x22f_ckr\x22,\x22f@ckr\x22,\x22fcukr\x22,\x22f_ck3r\x22,\x22f*cked\x22,\x22fc*ked\x22,\x22f_ckd\x22,\x22f_cked\x22,\x22f_cking\x22,\x22fc*king\x22,\x22f_ckn\x22,\x22f_ckng\x22,\x22f@cking\x22,\x22motherfckr\x22,\x22mthrfcukr\x22,\x22mthrfcuker\x22,\x22mothrf*cker\x22,\x22mthrf*cker\x22,\x22d!ckhead\x22,\x22d!ckhed\x22,\x22d!ckh3ad\x22,\x22d1ckh3ad\x22,\x22dickh3ad\x22,\x22d!ckhd\x22,\x22d*ckhead\x22,\x22dickhed\x22,\x22dikhead\x22,\x22dickhd\x22,\x22ballz\x22,\x22ballzy\x22,\x22ballsy\x22,\x22ballsz\x22,\x22b@llz\x22,\x22b@lls\x22,\x22b*llz\x22,\x22b*lls\x22,\x22b00bies\x22,\x22boobi\x22,\x22boobied\x22,\x22co*k\x22,\x22co**k\x22,\x22pr!k\x22,\x22prickr\x22,\x22pr1kr\x22,\x22pr!kr\x22,\x22pr!cker\x22,\x22w0gg\x22,\x22w0gger\x22,\x22wogger\x22,\x22w*gg\x22,\x22w0gg3r\x22,\x22wogging\x22,\x22f4git\x22,\x22f@git\x22,\x22fag0t\x22,\x22f@got\x22,\x22fagott\x22,\x22f4gott\x22,\x22faggets\x22,\x22faggy\x22,\x22fagzz\x22,\x22pissr\x22,\x22p!ssr\x22,\x22piss3r\x22,\x22p1ss3r\x22,\x22p1ssr\x22,\x22p!ssed\x22,\x22p1ssed\x22,\x22p1ssd\x22,\x22tw*t\x22,\x22fuc\x22,\x22fucc\x22,\x22fkk\x22,\x22f*k\x22,\x22d*mn\x22,\x22dammn\x22,\x22d@mmn\x22,\x22sl*tty\x22,\x22slttty\x22,\x22sltttty\x22,\x22sluttz\x22,\x22slttz\x22,\x22sltttz\x22,\x22bitchz\x22,\x22biotch\x22,\x22bitchr\x22,\x22b*tchr\x22,\x22b1tchr\x22,\x22n!gger\x22,\x22nigg*r\x22,\x22nigg@r\x22,\x22n!gg3r\x22,\x22n1gg3r\x22,\x22n1gg@r\x22,\x22n!gg@r\x22,\x22n1gg*r\x22,\x22n!gg*r\x22,\x22n1g\x22,\x22n!gg\x22,\x22n1gg\x22,\x22n*gg\x22,\x22niggr\x22,\x22n!ggr\x22,\x22n1ggr\x22,\x22n*gger\x22,\x22n!gga\x22,\x22n!gg@\x22,\x22n1gg@\x22,\x22nigg@\x22,\x22n1ggah\x22,\x22n!ggah\x22,\x22n*ggah\x22,\x22nigg@h\x22,\x22n!gg@h\x22,\x22n1gg@h\x22,\x22n1g@h\x22,\x22n!g@h\x22,\x22nigguh\x22,\x22n1gguh\x22,\x22n!gguh\x22,\x22n*gguh\x22,\x22n1ggaz\x22,\x22n!ggaz\x22,\x22n*ggaz\x22,\x22nigg@s\x22,\x22n!gg@s\x22,\x22n1gg@s\x22,\x22n1gg@z\x22,\x22nigg@z\x22,\x22n!gg@z\x22,\x22n*gg@z\x22,\x22niggahz\x22,\x22n1ggahz\x22,\x22n!ggahz\x22,\x22n*ggahz\x22,\x22nigg@hz\x22,\x22n!gg@hz\x22,\x22n1gg@hz\x22,\x22niggar\x22,\x22n1ggar\x22,\x22n!ggar\x22,\x22n*ggar\x22,\x22nigg@rs\x22,\x22n1gg@rs\x22,\x22n!gg@rs\x22,\x22n!g@rs\x22,\x22n!g@r\x22,\x22n!g@rz\x22,\x22niggrz\x22,\x22n1ggrz\x22,\x22n!ggrz\x22,\x22n!gg@rz\x22,\x22nigg@rz\x22,\x22niggrs\x22,\x22n1ggrs\x22,\x22n!ggrs\x22,\x22shiit\x22,\x22cr4p\x22,\x22c@cksucker\x22,\x22c0cksuck3r\x22,\x22c0ck$ucker\x22,\x22c*cksucka\x22,\x22c@cksucka\x22,\x22c0cksuck@h\x22,\x22loser\x22,\x22l0ser\x22,\x22looser\x22,\x22l00ser\x22,\x22l0s3r\x22,\x22l*ser\x22,\x22l*s3r\x22,\x22l@s3r\x22,\x22l@ser\x22,\x22l0$er\x22,\x22l0$3r\x22,\x22l0ozer\x22,\x22lozer\x22,\x22l0z3r\x22,\x22l*zer\x22,\x22l*z3r\x22,\x22lo$er\x22,\x22l0zer\x22,\x22loz3r\x22,\x22loos3r\x22,\x22l0oser\x22,\x22l00z3r\x22,\x22looz3r\x22,\x22looz*r\x22,\x22l0o$er\x22,\x22l0os3r\x22,\x22l*ozer\x22]')
  , ma = document['createElement']('canvas');
function Fi(p, b) {
    return new URLSearchParams(b || window['location']['search'])['get'](p) || '';
}
const Q = {
    'getParameterByName': Fi,
    'getCookie': function(p) {
        const b = p + '='
          , XT = decodeURIComponent(document['cookie'])['split'](';');
        for (let XY = 0x0; XY < XT['length']; XY++) {
            let XC = XT[XY];
            for (; XC['charAt'](0x0) == '\x20'; )
                XC = XC['substring'](0x1);
            if (XC['indexOf'](b) == 0x0)
                return XC['substring'](b['length'], XC['length']);
        }
        return '';
    },
    'sanitizeNameInput': function(p) {
        let b = p['trim']();
        b['length'] > m['PlayerNameMaxLen'] && (b = b['substring'](0x0, m['PlayerNameMaxLen']));
        const XT = '\x20' + b['toLowerCase']() + '\x20';
        return la['some'](XY => XT['includes']('\x20' + XY + '\x20')) && (b = 'Survev.io'),
        b;
    },
    'colorToHexString': function(p) {
        return '#' + ('000000' + p['toString'](0x10))['slice'](-0x6);
    },
    'colorToDOMString': function(p, b) {
        return 'rgba(' + (p >> 0x10 & 0xff) + ',\x20' + (p >> 0x8 & 0xff) + ',\x20' + (p & 0xff) + ',\x20' + b + ')';
    },
    'htmlEscape': function(p='') {
        return p['replace'](/&/g, '&amp;')['replace'](/"/g, '&quot;')['replace'](/'/g, '&#39;')['replace'](/</g, '&lt;')['replace'](/>/g, '&gt;');
    },
    'truncateString': function(p, b, XT) {
        const XY = ma['getContext']('2d');
        XY['font'] = b;
        let XC = p;
        for (let Xl = p['length']; Xl > 0x0 && XY['measureText'](XC)['width'] > XT; )
            XC = p['substring'](0x0, --Xl) + '…';
        return XC;
    },
    'toggleFullScreen': function(p) {
        let b = document['documentElement'];
        document['fullscreenElement'] || document['mozFullScreenElement'] || document['webkitFullscreenElement'] || document['msFullscreenElement'] || p ? document['exitFullscreen'] ? document['exitFullscreen']() : document['msExitFullscreen'] ? document['msExitFullscreen']() : document['mozCancelFullScreen'] ? document['mozCancelFullScreen']() : document['webkitExitFullscreen']?.() : b['requestFullscreen'] ? b['requestFullscreen']() : b['msRequestFullscreen'] ? (b = document['body'],
        b['msRequestFullscreen']()) : b['mozRequestFullScreen'] ? b['mozRequestFullScreen']() : b['webkitRequestFullscreen']?.();
    },
    'copyTextToClipboard': function(p) {
        try {
            const b = j('<input>');
            if (j('body')['append'](b),
            b['val'](p),
            k['os'] == 'ios') {
                const XT = b['get'](0x0)
                  , XY = XT['contentEditable']
                  , XC = XT['readOnly'];
                XT['contentEditable'] = 'true',
                XT['readOnly'] = !0x0;
                const Xl = document['createRange']();
                Xl['selectNodeContents'](XT);
                const Xd = window['getSelection']();
                Xd['removeAllRanges'](),
                Xd['addRange'](Xl),
                XT['setSelectionRange'](0x0, 0xf423f),
                XT['contentEditable'] = XY,
                XT['readOnly'] = XC;
            } else
                b['select']();
            document['execCommand']('copy'),
            b['remove']();
        } catch {}
    },
    'getSvgFromGameType': function(p) {
        const b = w[p];
        switch (b ? b['type'] : '') {
        case 'gun':
        case 'melee':
        case 'throwable':
        case 'heal':
        case 'boost':
        case 'helmet':
        case 'chest':
        case 'scope':
        case 'backpack':
        case 'perk':
        case 'xp':
            return 'img/loot/' + b['lootImg']?.['sprite']['slice'](0x0, -0x4) + '.svg';
        case 'heal_effect':
        case 'boost_effect':
            return 'img/particles/' + b['texture']?.['slice'](0x0, -0x4) + '.svg';
        case 'emote':
            return 'img/emotes/' + b['texture']['slice'](0x0, -0x4) + '.svg';
        case 'crosshair':
            return 'img/crosshairs/' + b['texture']['slice'](0x0, -0x4) + '.svg';
        case 'outfit':
            {
                const XT = b['lootImg'];
                if (XT['sprite'] !== 'loot-shirt-01.img')
                    return 'img/loot/' + XT['sprite']['slice'](0x0, -0x4) + '.svg';
                const XY = '<svg\x20xmlns=\x22http://www.w3.org/2000/svg\x22\x20width=\x22128\x22\x20height=\x22128\x22><path\x20d=\x22M63.993\x208.15c-10.38\x200-22.796\x203.526-30.355\x207.22-8.038\x203.266-14.581\x207.287-19.253\x2014.509C8.102\x2039.594\x205.051\x2054.6\x207.13\x2078.482c5.964\x202.07\x2011.333\x201.45\x2016.842-.415-1.727-7.884-1.448-15.764.496-22.204\x202.126-7.044\x206.404-12.722\x2012.675-13.701l2.77-.432.074\x202.803c.054\x202.043.09\x204.17.116\x206.335l.027\x206.312c-.037\x208.798-.382\x2018.286-1.277\x2027.845\x205.637\x201.831\x2014.806\x202.954\x2023.964\x203.019l4.597-.058c8.53-.275\x2016.742-1.449\x2021.665-3.063-1.093-14.65-1.166-29.434-1.52-41.334l-.097-3.283\x203.18.824c6.238\x201.617\x2010.55\x207.376\x2012.76\x2014.507\x202.02\x206.51\x202.353\x2014.37.64\x2022.248a29.764\x2029.764\x200\x200\x200\x2012.847\x201.181l4.399-.588c1.033-18.811-1.433-37.403-6.27-46.264l-4.408-6.376c-4.647-5.357-10.62-8.399-17.665-11.074-6.746-3.458-18.358-6.614-28.95-6.614zm0\x203.05c6.494\x200\x2013.37\x201.942\x2019.274\x204.516-3.123\x202.758-6.971\x204.665-11.067\x205.754l-7.852\x2017.31-6.838-16.882c-4.757-.93-9.26-2.957-12.783-6.174C50.9\x2013.081\x2057.809\x2011.2\x2063.993\x2011.2zm.58\x2028.539l3.512\x205.327-3.497\x205.053-3.53-5.053zm0\x2011.888l3.512\x205.328-3.497\x205.052-3.53-5.053\x203.514-5.327zm0\x2011.733l3.512\x205.327-3.497\x205.054-3.53-5.054zm0\x2011.876l3.512\x205.327-3.497\x205.054-3.53-5.053\x203.514-5.327zm25.079\x2013.715c-6.61\x202.055-15.829\x202.907-25.277\x202.951-9.5.045-18.965-.744-25.902-2.892-.205\x201.785-.43\x203.569-.678\x205.347\x205.968\x202.132\x2016.346\x203.408\x2026.497\x203.36\x2010.143-.05\x2020.355-1.444\x2025.912-3.433a241.302\x20241.302\x200\x200\x201-.552-5.333zm1.368\x209.086c-6.782\x202.308-16.533\x203.262-26.53\x203.31-2.935.015-5.866-.052-8.724-.213l-4.227-.315c-5.358-.5-10.307-1.382-14.329-2.758-.897\x205.43-2.02\x2010.772-3.413\x2015.903\x202.117\x201.06\x204.41\x201.968\x206.835\x202.733l3.97\x201.096c15.85\x203.805\x2035.88\x202.156\x2049.601-3.513-1.355-5.09-2.387-10.57-3.183-16.243z\x22\x20fill=\x22' + this['colorToHexString'](XT['tint']) + '\x22/></svg>';
                return URL['createObjectURL'](new Blob([XY],{
                    'type': 'image/svg+xml;charset=utf-8'
                }));
            }
        default:
            return '';
        }
    },
    'getCssTransformFromGameType': function(p) {
        const b = w[p];
        let XT = '';
        return b?.['lootImg'] && (XT = 'rotate(' + (b['lootImg']['rot'] || 0x0) + 'rad)\x20scaleX(' + (b['lootImg']['mirror'] ? -0x1 : 0x1) + ')'),
        XT;
    },
    'random64': function() {
        function p() {
            return Math['floor'](Math['random']() * Math['pow'](0x2, 0x20))['toString'](0x10);
        }
        return p() + p();
    }
};
function na() {
    return s['android']['device'] || s['apple']['device'] || Gi();
}
function Gi() {
    const p = navigator['userAgent']['toLowerCase']();
    return p['includes']('ipad') || p['includes']('macintosh') && 'ontouchend'in document;
}
function Vi() {
    return s['apple']['phone'] || s['apple']['ipod'];
}
function ha() {
    return s['android']['device'];
}
function ca() {
    const p = window['navigator']['userAgent']
      , b = p['indexOf']('MSIE\x20')
      , XT = p['indexOf']('Trident/');
    return b > 0x0 || XT > 0x0;
}
function ua() {
    return window['navigator']['userAgent']['indexOf']('Edge/') > 0x0;
}
function da() {
    return Vi() && (screen['width'] == 0x177 && screen['height'] == 0x32c || screen['height'] == 0x177 && screen['width'] == 0x32c || screen['width'] == 0x19e && screen['height'] == 0x380 || screen['height'] == 0x19e && screen['width'] == 0x380);
}
function pa() {
    return Vi() ? 'ios' : ha() ? 'android' : 'pc';
}
function fa() {
    return ca() ? 'ie' : ua() ? 'edge' : 'unknown';
}
function wa(p, b) {
    try {
        localStorage['setItem'](p, b);
    } catch {}
}
function ga(p) {
    let b = null;
    try {
        b = localStorage['getItem'](p);
    } catch {}
    return b;
}
class Sa {
    ['os'];
    ['browser'];
    ['model'];
    ['pixelRatio'] = window['devicePixelRatio'];
    ['version'];
    ['mobile'];
    ['tablet'];
    ['touch'];
    ['uiLayout'];
    ['debug'] = !0x1;
    ['UiLayout'] = {
        'Lg': 0x0,
        'Sm': 0x1
    };
    ['isLandscape'] = !0x0;
    ['screenWidth'] = 0x0;
    ['screenHeight'] = 0x0;
    constructor() {
        this['os'] = pa(),
        this['browser'] = fa(),
        this['model'] = da() ? 'iphonex' : 'unknown';
        const p = Fi('version');
        p && wa('surviv_version', p),
        this['version'] = ga('surviv_version') || '1.0.0',
        this['mobile'] = na(),
        this['tablet'] = s['tablet'] || Gi(),
        this['touch'] = this['mobile'] || this['tablet'],
        this['uiLayout'] = this['mobile'] ? this['UiLayout']['Sm'] : this['UiLayout']['Lg'],
        this['onResize']();
    }
    ['onResize']() {
        this['isLandscape'] = window['innerWidth'] > window['innerHeight'] || window['orientation'] == 0x5a || window['orientation'] == -0x5a,
        this['screenWidth'] = window['innerWidth'],
        this['screenHeight'] = window['innerHeight'];
        const p = this['isLandscape'] ? this['screenWidth'] : this['screenHeight'];
        this['uiLayout'] = this['mobile'] || p <= 0x352 || p <= 0x384 && this['pixelRatio'] >= 0x3 ? this['UiLayout']['Sm'] : this['UiLayout']['Lg'];
    }
}
const k = new Sa();
class Ui {
    ['NLYJ'] = v['create'](0x0, 0x0);
    ['xQaJqu'] = 0x10;
    ['BsPd'] = 1.5;
    ['QwZT'] = 1.5;
    ['pmhI'] = 0x1;
    ['lZjK'] = 0x1;
    ['kwo'] = !0x0;
    ['hslce'] = 0x0;
    ['cUxbv']() {
        return this['xQaJqu'] * this['BsPd'];
    }
    ['MobS'](p) {
        return {
            'x': this['pmhI'] * 0.5 + (p['x'] - this['NLYJ']['x']) * this['cUxbv'](),
            'y': this['lZjK'] * 0.5 - (p['y'] - this['NLYJ']['y']) * this['cUxbv']()
        };
    }
    ['vrnvjL'](p) {
        return {
            'x': this['NLYJ']['x'] + (p['x'] - this['pmhI'] * 0.5) / this['cUxbv'](),
            'y': this['NLYJ']['y'] + (this['lZjK'] * 0.5 - p['y']) / this['cUxbv']()
        };
    }
    ['uRFX'](p) {
        return p * this['BsPd'];
    }
    ['KlhiR'](p) {
        return p * this['cUxbv']();
    }
    ['UIu'](p) {
        this['kwo'] = p;
    }
    ['rQK'](p, b) {
        const XT = v['length'](v['sub'](this['NLYJ'], p))
          , XY = e['delerp'](XT, 0x28, 0xa) * b;
        this['hslce'] = Math['max'](this['hslce'], XY);
    }
    ['CgpTt']() {
        this['kwo'] && (this['NLYJ'] = v['add'](this['NLYJ'], v['mul'](v['randomUnit'](), this['hslce']))),
        this['hslce'] = 0x0;
    }
}
class ya {
    ['shapes'] = [];
    ['addLine'](p, b, XT, XY) {
        this['shapes']['push']({
            'type': 0x0,
            'start': v['copy'](p),
            'end': v['copy'](b),
            'color': XT,
            'fill': XY
        });
    }
    ['addRay'](p, b, XT, XY, XC) {
        this['shapes']['push']({
            'type': 0x1,
            'pos': v['copy'](p),
            'dir': v['copy'](b),
            'len': XT,
            'color': XY,
            'fill': XC
        });
    }
    ['addCircle'](p, b, XT, XY) {
        this['shapes']['push']({
            'type': 0x2,
            'pos': v['copy'](p),
            'rad': b,
            'color': XT,
            'fill': XY
        });
    }
    ['addAabb'](p, b, XT, XY) {
        this['shapes']['push']({
            'type': 0x3,
            'min': v['copy'](p),
            'max': v['copy'](b),
            'color': XT,
            'fill': XY
        });
    }
    ['addCollider'](p, b, XT) {
        p['type'] == T['Type']['Aabb'] ? this['addAabb'](p['min'], p['max'], b, XT) : this['addCircle'](p['pos'], p['rad'], b, XT);
    }
    ['Dgc'](p, b) {}
    ['flush']() {
        this['shapes'] = [];
    }
}
const he = new ya()
  , ai = 0x4
  , si = 0x5
  , xa = 0xa;
function oi(p) {
    return p['displayCloseIcon'] ? 'img/gui/close.svg' : Q['getSvgFromGameType'](p['ping'] || p['emote']);
}
function Be(p) {
    let b = Math['atan2'](p['y'], p['x']) * 0xb4 / Math['PI'];
    return b < 0x0 && (b += 0x168),
    b;
}
function za(p, b, XT) {
    return b <= XT ? XT - b <= 0xb4 ? b <= p && p <= XT : XT <= p || p <= b : b - XT <= 0xb4 ? XT <= p && p <= b : b <= p || p <= XT;
}
class ba {
    constructor(b, XT, XY, XC, Xl) {
        this['audioManager'] = b,
        this['uiManager'] = XT,
        this['playerBarn'] = XY,
        this['camera'] = XC,
        this['map'] = Xl,
        this['triggerPing'] = () => {
            if (this['activePlayer']) {
                let XU;
                this['emoteSelector']['ping'] && !this['emoteWheelsGreyed'] ? C[this['emoteSelector']['ping']]?.['pingMap'] && (XU = this['uiManager']['getWorldPosFromMapPos'](this['bigmapPingPos'] || this['emoteScreenPos'], this['map'], this['camera']),
                XU ||= this['camera']['vrnvjL'](this['emoteScreenPos']),
                XU['x'] = e['clamp'](XU['x'], 0x0, this['map']['width']),
                XU['y'] = e['clamp'](XU['y'], 0x0, this['map']['height']),
                this['sendPing']({
                    'type': this['emoteSelector']['ping'],
                    'pos': XU
                })) : this['emoteSelector']['emote'] && !this['emoteWheelsGreyed'] && (XU = this['activePlayer']['NLYJ'],
                this['sendEmote']({
                    'type': this['emoteSelector']['emote'],
                    'pos': XU
                }),
                this['uiManager']['displayMapLarge'](!0x0)),
                this['inputReset'](),
                this['pingKeyTriggered'] = this['pingKeyDown'];
            }
        }
        ,
        this['triggerEmote'] = () => {
            if (this['activePlayer']) {
                let XU;
                this['emoteSelector']['emote'] && !this['emoteWheelsGreyed'] && (XU = this['activePlayer']['NLYJ'],
                this['sendEmote']({
                    'type': this['emoteSelector']['emote'],
                    'pos': XU
                })),
                this['inputReset']();
            }
        }
        ,
        this['onTouchStart'] = XU => {
            this['wheelDisplayed'] && (XU['stopPropagation'](),
            this['inputReset']());
        }
        ,
        k['touch'] && (this['emoteElems']['css']('pointer-events', 'auto'),
        this['bigmapCollision']['on']('touchend', XU => {
            XU['stopPropagation'](),
            this['bigmapPingPos'] = {
                'x': XU['originalEvent']?.['changedTouches'][0x0]['pageX'],
                'y': XU['originalEvent']?.['changedTouches'][0x0]['pageY']
            },
            this['emoteScreenPos'] = v['create'](this['camera']['pmhI'] / 0x2, this['camera']['lZjK'] / 0x2),
            this['pingMouseTriggered'] = !0x0;
        }
        ),
        this['emoteButtonElem']['css']('pointer-events', 'auto'),
        this['emoteButtonElem']['on']('touchstart', XU => {
            XU['stopPropagation'](),
            this['emoteScreenPos'] = v['create'](this['camera']['pmhI'] / 0x2, this['camera']['lZjK'] / 0x2),
            this['emoteMouseTriggered'] = !0x0;
        }
        ),
        this['emoteElems']['on']('touchstart', XU => {
            XU['stopPropagation'](),
            this['emoteTouchedPos'] = {
                'x': XU['originalEvent']?.['changedTouches'][0x0]['pageX'],
                'y': XU['originalEvent']?.['changedTouches'][0x0]['pageY']
            };
        }
        ),
        j(document)['on']('touchstart', this['onTouchStart'])),
        this['emoteWheelData'] = {
            'middle': {
                'parent': j('#ui-emote-middle'),
                'vA': v['create'](-0x1, 0x1),
                'vC': v['create'](0x1, 0x1),
                'ping': '',
                'emote': '',
                'displayCloseIcon': !0x0
            },
            'top': {
                'parent': j('#ui-emote-top'),
                'vA': v['create'](-0x1, 0x1),
                'vC': v['create'](0x1, 0x1),
                'ping': '',
                'emote': '',
                'emoteSlot': l['Top']
            },
            'right': {
                'parent': j('#ui-emote-right'),
                'vA': v['create'](0x1, 0x1),
                'vC': v['create'](0x1, -0x1),
                'ping': '',
                'emote': '',
                'emoteSlot': l['Right']
            },
            'bottom': {
                'parent': j('#ui-emote-bottom'),
                'vA': v['create'](0x1, -0x1),
                'vC': v['create'](-0x1, -0x1),
                'ping': '',
                'emote': '',
                'emoteSlot': l['Bottom']
            },
            'left': {
                'parent': j('#ui-emote-left'),
                'vA': v['create'](-0x1, -0x1),
                'vC': v['create'](-0x1, 0x1),
                'ping': '',
                'emote': '',
                'emoteSlot': l['Left']
            }
        };
        const Xd = {
            'middle': {
                'parent': j('#ui-team-ping-middle'),
                'vA': v['create'](-0x1, 0x1),
                'vC': v['create'](0x1, 0x1),
                'ping': '',
                'emote': '',
                'displayCloseIcon': !0x0
            },
            'top': {
                'parent': j('#ui-team-ping-top'),
                'vA': v['create'](-0x1, 0x1),
                'vC': v['create'](0x1, 0x1),
                'ping': 'ping_danger',
                'emote': ''
            },
            'right': {
                'parent': j('#ui-team-ping-right'),
                'vA': v['create'](0x1, 0x1),
                'vC': v['create'](0x1, -0x1),
                'ping': 'ping_coming',
                'emote': ''
            },
            'bottom': {
                'parent': j('#ui-team-ping-bottom'),
                'vA': v['create'](0x1, -0x1),
                'vC': v['create'](-0x1, -0x1),
                'ping': 'ping_help',
                'emote': ''
            },
            'bottom-left': {
                'parent': j('#ui-team-ping-bottom-left'),
                'vA': v['create'](-0x1, -0x1),
                'vC': v['create'](-0x1, 0x0),
                'ping': '',
                'emote': 'emote_medical'
            },
            'top-left': {
                'parent': j('#ui-team-ping-top-left'),
                'vA': v['create'](-0x1, 0x0),
                'vC': v['create'](-0x1, 0x1),
                'ping': '',
                'emote': 'emote_ammo',
                'ammoEmote': !0x0
            }
        };
        for (const XU in Xd)
            if (Xd['hasOwnProperty'](XU)) {
                const XW = Xd[XU]
                  , XD = Be(XW['vA'])
                  , XG = Be(XW['vC']);
                this['teamPingSelectors']['push']({
                    'parent': XW['parent'],
                    'angleA': XD,
                    'angleC': XG,
                    'highlight': XW['parent']['find']('.ui-emote-hl'),
                    'highlightDisplayed': !0x1,
                    'ping': XW['ping'],
                    'emote': XW['emote'],
                    'ammoEmote': XW?.['ammoEmote'],
                    'displayCloseIcon': XW?.['displayCloseIcon']
                });
            }
        this['displayedSelectors'] = this['teamPingSelectors'],
        this['container']['scale']['set'](this['baseScale'], this['baseScale']),
        this['container']['addChild'](this['pingContainer']);
        const Xk = function(XF, XH=0xffffff) {
            const p0 = new f()
              , p1 = new f()
              , p2 = L['groupColors'][XF] || XH
              , p3 = y['from']('ping-border.img');
            p3['scale']['set'](0.4, 0.4),
            p3['anchor']['set'](0.5, 0.5),
            p3['tint'] = p2,
            p3['alpha'] = 0x0,
            p3['visible'] = !0x0,
            p0['addChild'](p3);
            const p4 = y['from']('ping-team-danger.img');
            p4['scale']['set'](0.4, 0.4),
            p4['anchor']['set'](0.5, 0.5),
            p4['tint'] = p2,
            p4['alpha'] = 0x0,
            p4['visible'] = !0x0,
            p0['addChild'](p4);
            const p5 = y['from']('ping-team-danger.img');
            p5['scale']['set'](0.5, 0.5),
            p5['anchor']['set'](0.5, 0.5),
            p5['tint'] = p2,
            p5['alpha'] = 0x0,
            p5['visible'] = !0x0,
            p1['addChild'](p5);
            const p6 = y['from']('ping-indicator.img');
            return p6['scale']['set'](0.5, 0.5),
            p6['anchor']['set'](0.5, 0x0),
            p6['alpha'] = 0x0,
            p6['visible'] = !0x0,
            p1['addChild'](p6),
            {
                'elem': j('#ui-team-indicators')['find']('.ui-indicator-ping[data-id=' + XF + ']'),
                'borderElem': j('#ui-team-indicators')['find']('.ui-indicator-ping-border[data-id=' + XF + ']'),
                'pingContainer': p0,
                'indContainer': p1,
                'borderSprite': {
                    'sprite': p3,
                    'baseScale': 0.4
                },
                'pingSprite': {
                    'sprite': p4,
                    'baseScale': 0.4
                },
                'indSpriteOuter': {
                    'sprite': p6,
                    'baseScale': 0.5,
                    'baseTint': Number(p6['tint'])
                },
                'indSpriteInner': {
                    'sprite': p5,
                    'baseScale': 0.5,
                    'baseTint': Number(p5['tint'])
                },
                'displayed': !0x1,
                'fadeIn': 0x0,
                'life': 0x0,
                'fadeOut': 0x0,
                'pos': v['create'](0x0, 0x0)
            };
        };
        for (let XF = 0x0; XF < 0x4; XF++) {
            const XH = Xk(XF);
            this['pingContainer']['addChild'](XH['pingContainer']),
            this['indContainer']['addChild'](XH['indContainer']),
            this['pingIndicators']['push']({
                'ping': XH
            });
        }
        this['airdropIndicator'] = Xk(ai, C['ping_airdrop']['tint']),
        this['pingContainer']['addChild'](this['airdropIndicator']['pingContainer']),
        this['indContainer']['addChild'](this['airdropIndicator']['indContainer']),
        this['pingIndicators']['push']({
            'ping': this['airdropIndicator']
        }),
        this['airstrikeIndicator'] = Xk(si, C['ping_airstrike']['tint']),
        this['pingContainer']['addChild'](this['airstrikeIndicator']['pingContainer']),
        this['indContainer']['addChild'](this['airstrikeIndicator']['indContainer']),
        this['pingIndicators']['push']({
            'ping': this['airstrikeIndicator']
        });
    }
    ['gameElem'] = j('#ui-game');
    ['disable'] = !0x1;
    ['activePlayer'] = null;
    ['worldPos'] = v['create'](0x0, 0x0);
    ['zIdxNext'] = 0x0;
    ['emoteSelector'] = {
        'ping': '',
        'emote': ''
    };
    ['emoteSoftTicker'] = 0x0;
    ['emoteHardTicker'] = 0x0;
    ['emoteCounter'] = 0x0;
    ['emoteWheelsGreyed'] = !0x1;
    ['teamEmotesGreyed'] = !0x1;
    ['wheelKeyTriggered'] = !0x1;
    ['emoteTimeoutTicker'] = 0x0;
    ['pingKeyTriggered'] = !0x1;
    ['pingKeyDown'] = !0x1;
    ['pingMouseTriggered'] = !0x1;
    ['wheelDisplayed'] = !0x1;
    ['emoteMouseTriggered'] = !0x1;
    ['emoteScreenPos'] = v['create'](0x0, 0x0);
    ['triggerPing'];
    ['triggerEmote'];
    ['emoteTouchedPos'] = null;
    ['bigmapPingPos'] = null;
    ['onTouchStart'];
    ['emoteElems'] = j('.ui-emote');
    ['bigmapCollision'] = j('#big-map-collision');
    ['emoteButtonElem'] = j('#ui-emote-button');
    ['emoteWheels'] = j('#ui-emotes,\x20#ui-team-pings');
    ['teamEmotes'] = j('.ui-emote-bottom-left,\x20.ui-emote-top-left');
    ['emoteWheel'] = j('#ui-emotes');
    ['emoteWheelData'];
    ['teamPingWheel'] = j('#ui-team-pings');
    ['teamPingSelectors'] = [];
    ['displayedSelectors'];
    ['baseScale'] = 0x1;
    ['container'] = new f();
    ['pingContainer'] = new f();
    ['indContainer'] = new f();
    ['pingIndicators'] = [];
    ['airdropIndicator'];
    ['airstrikeIndicator'];
    ['emoteLifeIn'] = 0.75;
    ['emoteLife'] = 0x1;
    ['emoteLifeOut'] = 0.1;
    ['pingFadeIn'] = 0.5;
    ['pingLife'] = 4.25;
    ['pingFadeOut'] = 0.1;
    ['wedgeOpacityReset'] = k['touch'] ? 0x1 : 0.75;
    ['teamEmoteOpacityReset'] = 0.2;
    ['emotes'] = [];
    ['newPings'] = [];
    ['newEmotes'] = [];
    ['emoteLoadout'] = [];
    ['unlockTypes'] = {};
    ['socialUnlocked'] = !0x1;
    ['emoteWheelSelectors'];
    ['parentDisplayed'];
    ['dphRtI']() {
        k['touch'] && (j(document)['off']('touchstart', this['onTouchStart']),
        this['emoteButtonElem']['off']('touchstart'),
        this['emoteElems']['off']('touchstart'),
        this['bigmapCollision']['off']('touchend')),
        this['init']();
    }
    ['init']() {
        this['emoteWheelsGreyed'] = !0x1,
        this['emoteWheels']['css']('opacity', 0x1),
        this['teamEmotesGreyed'] = !0x1,
        this['teamEmotes']['css']('opacity', 0x1),
        this['disable'] = !0x1,
        this['inputReset']();
    }
    ['inputReset']() {
        this['pingMouseTriggered'] = !0x1,
        this['pingKeyTriggered'] = !0x1,
        this['emoteMouseTriggered'] = !0x1,
        this['wheelDisplayed'] = !0x1,
        this['displayWheel'](this['teamPingWheel'], !0x1),
        this['displayWheel'](this['emoteWheel'], !0x1),
        this['emoteTouchedPos'] = null,
        this['bigmapPingPos'] = null,
        this['emoteTimeoutTicker'] = 0x0;
        for (let p = 0x0; p < this['displayedSelectors']['length']; p++) {
            const b = this['displayedSelectors'][p]
              , XT = d[b['emote']]?.['teamOnly'];
            this['teamEmotesGreyed'] && XT ? b['parent']['css']('opacity', this['teamEmoteOpacityReset']) : b['parent']['css']('opacity', this['wedgeOpacityReset']),
            b['highlight']['css']('display', 'none'),
            b['highlightDisplayed'] = !0x1;
        }
    }
    ['sendPing'](p) {
        this['newPings']['push']({
            'type': p['type'],
            'pos': p['pos']
        }),
        this['incrementEmote']();
    }
    ['addPing'](b, XT) {
        if (this['activePlayer']) {
            const XY = C[b['type']];
            if (XY) {
                this['uiManager']['createPing'](b['type'], b['pos'], b['playerId'], this['activePlayer']['__id'], this['playerBarn'], XT);
                let XC = null
                  , Xl = XY['sound'];
                if (b['type'] == 'ping_airdrop')
                    XC = this['pingIndicators'][ai]['ping'];
                else {
                    if (b['type'] == 'ping_airstrike')
                        XC = this['pingIndicators'][si]['ping'];
                    else {
                        const Xd = this['playerBarn']['getPlayerInfo'](b['playerId']);
                        if (Xd) {
                            const XU = this['playerBarn']['getPlayerInfo'](this['activePlayer']['__id'])['groupId']
                              , XW = Xd['groupId'];
                            if (XU == XW) {
                                const XD = this['playerBarn']['getGroupInfo'](XW)['playerIds']['indexOf'](b['playerId']);
                                XD !== -0x1 && (XC = this['pingIndicators'][XD]['ping']);
                            }
                        }
                        const Xk = this['playerBarn']['getPlayerStatus'](b['playerId']);
                        Xk && Xk['role'] == 'leader' && (Xl = XY['soundLeader']);
                    }
                }
                XT || b['type'] != 'ping_airstrike' ? this['audioManager']['playSound'](Xl, {
                    'channel': 'ui'
                }) : this['audioManager']['playSound'](Xl, {
                    'channel': 'ui',
                    'fallOff': 0x1,
                    'soundPos': b['pos'],
                    'rangeMult': 0x14
                }),
                XC && (XC['pos'] = b['pos'],
                XC['pingSprite']['sprite']['texture'] = x['from'](XY['texture']),
                XC['indSpriteInner']['sprite']['texture'] = x['from'](XY['texture']),
                XC['indSpriteInner']['sprite']['tint'] = XY['mapEvent'] ? XY['tint'] : XC['indSpriteInner']['baseTint'],
                XC['indSpriteOuter']['sprite']['tint'] = XY['mapEvent'] ? XY['tint'] : XC['indSpriteOuter']['baseTint'],
                XC['fadeIn'] = this['pingFadeIn'],
                XC['life'] = this['pingLife'],
                XC['fadeOut'] = this['pingFadeOut'],
                XC['mapEvent'] = XY['mapEvent'],
                XC['worldDisplay'] = XY['worldDisplay']);
            }
        }
    }
    ['sendEmote'](p) {
        this['newEmotes']['push']({
            'type': p['type'],
            'pos': p['pos']
        }),
        this['incrementEmote']();
    }
    ['addEmote'](p) {
        const b = d[p['type']];
        if (b) {
            let XT = null;
            for (let XY = 0x0; XY < this['emotes']['length']; XY++)
                this['emotes'][XY]['alive'] || XT ? this['emotes'][XY]['alive'] && this['emotes'][XY]['playerId'] == p['playerId'] && (this['emotes'][XY]['alive'] = !0x1) : XT = this['emotes'][XY];
            if (XT || (XT = {},
            XT['alive'] = !0x1,
            XT['pos'] = v['create'](0x0, 0x0),
            XT['container'] = new f(),
            XT['circleOuter'] = y['from']('emote-circle-outer.img'),
            XT['circleOuter']['anchor']['set'](0.5, 0.5),
            XT['baseScale'] = 0.55,
            XT['circleOuter']['scale']['set'](XT['baseScale'] * 0.8, XT['baseScale'] * 0.8),
            XT['circleOuter']['tint'] = 0x0,
            XT['circleOuter']['visible'] = !0x0,
            XT['container']['addChild'](XT['circleOuter']),
            XT['sprite'] = new y(),
            XT['sprite']['anchor']['set'](0.5, 0.5),
            XT['container']['addChild'](XT['sprite']),
            XT['sprite']['scale']['set'](XT['baseScale'], XT['baseScale']),
            XT['posOffset'] = v['create'](0x0, 0x4),
            XT['container']['scale']['set'](0x1, 0x1),
            XT['container']['visible'] = !0x1,
            this['emotes']['push'](XT)),
            XT['alive'] = !0x0,
            XT['isNew'] = !0x0,
            XT['type'] = p['type'],
            XT['playerId'] = p['playerId'],
            XT['pos'] = v['create'](0x0, 0x0),
            XT['lifeIn'] = this['emoteLifeIn'],
            XT['life'] = this['emoteLife'],
            XT['lifeOut'] = this['emoteLifeOut'],
            XT['zIdx'] = this['zIdxNext']++,
            b['texture'] && (XT['sprite']['texture'] = x['from'](b['texture'])),
            XT['container']['visible'] = !0x1,
            XT['baseScale'] = 0.55,
            XT['sound'] = b['sound'],
            XT['channel'] = b['channel'],
            p['type'] == 'emote_loot') {
                const XC = w[p['itemType']];
                if (XC?.['lootImg']) {
                    XT['sprite']['texture'] = x['from'](XC['lootImg']['sprite']);
                    const Xl = w[XC['ammo']];
                    XT['circleOuter']['tint'] = Xl ? Xl['lootImg']['tintDark'] : 0x0,
                    XC['lootImg']['rot'] ? XT['sprite']['rotation'] = XC['lootImg']['rot'] : XT['sprite']['rotation'] = 0x0,
                    XC['lootImg']['mirror'] ? XT['sprite']['scale']['set'](XT['baseScale'] * -0x1, XT['baseScale']) : XT['sprite']['scale']['set'](XT['baseScale'], XT['baseScale']),
                    XC['sound']?.['deploy'] && (XC['type'] == 'gun' ? (XT['sound'] = XC['sound']['deploy'],
                    XT['channel'] = 'activePlayer') : XT['sound'] = '');
                }
            } else
                XT['circleOuter']['tint'] = 0x0,
                XT['sprite']['rotation'] = 0x0,
                XT['sprite']['scale']['set'](XT['baseScale'], XT['baseScale']);
        }
    }
    ['incrementEmote']() {
        this['emoteCounter']++,
        this['emoteCounter'] >= L['player']['emoteThreshold'] && (this['emoteHardTicker'] = this['emoteHardTicker'] > 0x0 ? this['emoteHardTicker'] : L['player']['emoteHardCooldown'] * 1.5);
    }
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG) {
        const XF = this['playerBarn']
          , XH = this['camera'];
        let p0 = v['create'](XW['mousePos']['x'], XW['mousePos']['y']);
        XW['lostFocus'] && this['inputReset'](),
        XD['isBindPressed'](D['TeamPingMenu']) && !this['pingKeyDown'] && !XG && (this['pingKeyDown'] = !0x0,
        this['pingKeyTriggered'] = !0x0),
        XD['isBindReleased'](D['TeamPingMenu']) && this['pingKeyDown'] && (this['pingKeyDown'] = !0x1,
        this['pingKeyTriggered'] = this['wheelDisplayed']),
        XD['isBindPressed'](D['TeamPingSingle']) && !this['pingMouseTriggered'] && !this['emoteMouseTriggered'] && (this['emoteScreenPos'] = v['copy'](p0),
        this['pingMouseTriggered'] = !0x0),
        XD['isBindReleased'](D['TeamPingSingle']) && this['pingMouseTriggered'] && this['triggerPing'](),
        XD['isBindPressed'](D['EmoteMenu']) && (!this['pingMouseTriggered'] && !this['emoteMouseTriggered'] && this['pingKeyDown'] && (this['emoteScreenPos'] = v['copy'](p0),
        this['pingMouseTriggered'] = !0x0),
        this['pingMouseTriggered'] || (this['emoteScreenPos'] = v['copy'](p0),
        this['emoteMouseTriggered'] = !0x0)),
        XD['isBindReleased'](D['EmoteMenu']) && (this['pingKeyTriggered'] && this['pingMouseTriggered'] && this['triggerPing'](),
        this['emoteMouseTriggered'] && this['triggerEmote']()),
        this['activePlayer'] = XC,
        (XY != XC['__id'] || XC['QDvlP']['GUi']) && !this['disable'] && (this['dphRtI'](),
        this['disable'] = !0x0);
        const p1 = Xk['perkMode'] && !XC['QDvlP']['Evfg'];
        if (!this['disable'] && !p1 && (this['wheelKeyTriggered'] = this['pingKeyTriggered'] || this['emoteMouseTriggered'],
        this['emoteSoftTicker'] -= XT,
        this['emoteCounter'] >= L['player']['emoteThreshold'] && this['emoteHardTicker'] > 0x0 ? (this['emoteHardTicker'] -= XT,
        this['emoteHardTicker'] < 0x0 && (this['emoteCounter'] = 0x0)) : this['emoteSoftTicker'] < 0x0 && this['emoteCounter'] > 0x0 && (this['emoteCounter']--,
        this['emoteSoftTicker'] = L['player']['emoteSoftCooldown'] * 1.5),
        (this['pingMouseTriggered'] || this['emoteMouseTriggered']) && !this['wheelDisplayed'] && (this['parentDisplayed'] = this['pingMouseTriggered'] ? this['teamPingWheel'] : this['emoteWheel'],
        this['parentDisplayed']['css']({
            'display': 'block',
            'left': this['emoteScreenPos']['x'],
            'top': this['emoteScreenPos']['y']
        }),
        this['displayWheel'](this['parentDisplayed'], !0x0),
        this['wheelDisplayed'] = !0x0,
        this['displayedSelectors'] = this['pingMouseTriggered'] ? this['teamPingSelectors'] : this['emoteWheelSelectors'],
        this['worldPos'] = XH['vrnvjL'](this['emoteScreenPos'])),
        this['wheelDisplayed'])) {
            if (this['emoteTimeoutTicker'] += XT,
            this['emoteTimeoutTicker'] > xa)
                this['inputReset']();
            else {
                this['emoteHardTicker'] > 0x0 && !this['emoteWheelsGreyed'] ? (this['emoteWheels']['css']('opacity', 0.5),
                this['emoteWheelsGreyed'] = !0x0) : this['emoteHardTicker'] <= 0x0 && this['emoteWheelsGreyed'] && (this['emoteWheels']['css']('opacity', 0x1),
                this['emoteWheelsGreyed'] = !0x1),
                !this['teamEmotesGreyed'] && Xl == 0x1 && (this['teamEmotes']['css']('opacity', this['teamEmoteOpacityReset']),
                this['teamEmotesGreyed'] = !0x0);
                let p6 = null;
                if (k['touch'] && (p0 = this['emoteTouchedPos']),
                p0) {
                    const p7 = v['sub'](p0, this['emoteScreenPos']);
                    p7['y'] *= -0x1;
                    const p8 = v['length'](p7)
                      , p9 = Be(p7)
                      , pX = 0x23
                      , pp = XC['KkvfHn']['MDx'][XC['KkvfHn']['hCoMzm']]
                      , pb = w[pp['type']];
                    let pI = '';
                    pb && pb['ammo'] && (pI = pb['ammo']);
                    for (let pj = 0x0; pj < this['displayedSelectors']['length']; pj++) {
                        const pf = this['displayedSelectors'][pj];
                        if (pf['ammoEmote']) {
                            const pQ = {
                                '9mm': 'emote_ammo9mm',
                                '12gauge': 'emote_ammo12gauge',
                                '762mm': 'emote_ammo762mm',
                                '556mm': 'emote_ammo556mm',
                                '50AE': 'emote_ammo50ae',
                                '308sub': 'emote_ammo308sub',
                                'flare': 'emote_ammoflare',
                                '45acp': 'emote_ammo45acp'
                            }
                              , pZ = pf['emote'];
                            if (pf['emote'] = pQ[pI] || 'emote_ammo',
                            pf['texture'] = d[pf['emote']]['texture'],
                            pZ != pf['emote']) {
                                const pq = pf['parent']['find']('.ui-emote-image')
                                  , pM = oi(pf);
                                pq['css']('background-image', 'url(' + pM + ')');
                            }
                        }
                        const px = pf['ping'] || pf['emote']
                          , py = d[pf['emote']]
                          , pg = py && py['teamOnly'] && Xl == 0x1;
                        if (p8 <= pX && !px && this['emoteHardTicker'] <= 0x0 && !pg) {
                            p6 = pf;
                            continue;
                        }
                        if (za(p9, pf['angleC'], pf['angleA']) && p8 > pX && px && this['emoteHardTicker'] <= 0x0 && !pg) {
                            p6 = pf;
                            continue;
                        }
                        pf['highlightDisplayed'] && (pf['parent']['css']('opacity', this['wedgeOpacityReset']),
                        pf['highlight']['css']('display', 'none'),
                        pf['highlightDisplayed'] = !0x1);
                    }
                }
                p6 && (this['emoteSelector'] = p6,
                p6['highlightDisplayed'] || (p6['parent']['css']('opacity', 0x1),
                p6['highlight']['css']('display', 'block'),
                p6['highlightDisplayed'] = !0x0),
                k['touch'] && this['emoteTouchedPos'] && (this['pingMouseTriggered'] ? this['triggerPing']() : this['triggerEmote']()));
            }
        }
        for (let pE = 0x0; pE < this['emotes']['length']; pE++) {
            const pN = this['emotes'][pE];
            if (pN['alive']) {
                let pn = !0x1
                  , ph = v['create'](0x0, 0x0)
                  , pR = 0x0;
                const pP = XF['getPlayerById'](pN['playerId']);
                if (pP && !pP['QDvlP']['GUi'] && (ph = v['copy'](pP['NLYJ']),
                pR = pP['layer'],
                pn = !0x0),
                !pn) {
                    const pA = Xd['getDeadBodyById'](pN['playerId']);
                    pA && (ph = v['copy'](pA['pos']),
                    pR = pA['layer'],
                    pn = !0x0);
                }
                if (pn) {
                    pN['isNew'] && this['audioManager']['playSound'](pN['sound'], {
                        'channel': pN['channel'],
                        'soundPos': ph,
                        'layer': pR
                    }),
                    pN['isNew'] = !0x1,
                    pN['pos'] = ph,
                    pN['lifeIn'] > 0x0 ? pN['lifeIn'] -= XT : pN['life'] > 0x0 ? pN['life'] -= XT : pN['lifeOut'] > 0x0 && (pN['lifeOut'] -= XT);
                    const pJ = t['sameLayer'](pR, this['activePlayer']['layer']) ? 0x3 : pR;
                    XU['addPIXIObj'](pN['container'], pJ, 0xc350, pN['zIdx']),
                    pN['alive'] = pN['alive'] && pN['lifeOut'] > 0x0;
                } else
                    pN['alive'] = !0x1;
            }
        }
        const p2 = v['create'](XH['pmhI'] * 0.5 / XH['cUxbv'](), XH['lZjK'] * 0.5 / XH['cUxbv']())
          , p3 = {
            'min': v['sub'](XH['NLYJ'], p2),
            'max': v['add'](XH['NLYJ'], p2)
        }
          , p4 = XF['getPlayerInfo'](XC['__id'])['groupId']
          , p5 = XF['getGroupInfo'](p4);
        for (let pS = 0x0; pS < this['pingIndicators']['length']; pS++) {
            const pB = this['pingIndicators'][pS]['ping']
              , pc = p5['playerIds'][pS]
              , pu = pB['indContainer']
              , pV = pB['pingContainer'];
            if (pc != null || pB['mapEvent']) {
                XF['getPlayerInfo'](pc);
                const pz = pc == this['activePlayer']['__id']
                  , pw = XF['getPlayerStatus'](pc)
                  , pO = pB['borderSprite']['sprite']
                  , pL = pB['pingSprite']['sprite']
                  , pv = pB['indSpriteOuter']['sprite']
                  , pK = pB['indSpriteInner']['sprite'];
                let pm = !0x0;
                if (pB['fadeIn'] -= XT,
                pB['life'] -= XT,
                pB['fadeOut'] -= pB['life'] > 0x0 ? 0x0 : XT,
                pB['fadeOut'] > 0x0) {
                    const pT = pB['pos']
                      , pY = v['normalizeSafe'](v['sub'](pT, XH['NLYJ']), v['create'](0x1, 0x0))
                      , pC = G['intersectRayAabb'](XH['NLYJ'], pY, p3['min'], p3['max'])
                      , pl = Math['atan2'](pY['y'], -pY['x']) + Math['PI'] * 0.5
                      , pd = XH['MobS'](pC)
                      , pk = G['testCircleAabb'](pT, L['player']['radius'], p3['min'], p3['max'])
                      , pU = XH['uRFX'](pB['borderSprite']['baseScale'])
                      , pW = XH['uRFX'](pB['pingSprite']['baseScale']);
                    if (pO['scale']['set'](pU, pU),
                    pL['scale']['set'](pW, pW),
                    pw?.['dead'])
                        continue;
                    const pD = 0x40;
                    pm = pB['fadeOut'] < 0x0;
                    const pG = pk ? XH['MobS'](pT)['x'] : e['clamp'](pd['x'], pD, XH['pmhI'] - pD)
                      , pF = pk ? XH['MobS'](pT)['y'] : e['clamp'](pd['y'], pD, XH['lZjK'] - pD)
                      , pH = XH['MobS'](pT)['x']
                      , b0 = XH['MobS'](pT)['y'];
                    pL['position']['x'] = pH,
                    pL['position']['y'] = b0,
                    pO['position']['x'] = pH,
                    pO['position']['y'] = b0,
                    pv['position']['x'] = pG,
                    pv['position']['y'] = pF,
                    pv['rotation'] = pl,
                    pK['position']['x'] = pG,
                    pK['position']['y'] = pF;
                    const b1 = pO['alpha'] <= 0x0 ? 0x1 : pO['alpha'] - XT;
                    pO['alpha'] = b1;
                    const b2 = XH['uRFX'](pB['borderSprite']['baseScale'] * (0x2 - b1));
                    if (pO['scale']['set'](b2, b2),
                    pK['alpha'] = pk ? 0x0 : b1,
                    pB['fadeIn'] > 0x0) {
                        const b3 = 0x1 - pB['fadeIn'] / this['pingFadeIn'];
                        pV['alpha'] = 0x1,
                        pu['alpha'] = 0x1,
                        pL['alpha'] = 0x1,
                        pv['alpha'] = pk ? 0x0 : b3;
                    } else
                        pv['alpha'] = pk ? 0x0 : 0x1;
                    if (pB['life'] < 0x0) {
                        const b4 = pB['fadeOut'] / this['pingFadeOut'];
                        pV['alpha'] = b4,
                        pu['alpha'] = b4;
                    }
                    pB['displayed'] || (pV['visible'] = pB['worldDisplay'],
                    pu['visible'] = !pz || pB['mapEvent'],
                    pB['displayed'] = !0x0);
                }
                pm && pB['displayed'] && (pV['visible'] = !0x1,
                pu['visible'] = !0x1,
                pB['displayed'] = !0x1);
            } else
                pV['visible'] = !0x1,
                pu['visible'] = !0x1,
                pB['displayed'] = !0x1;
        }
    }
    ['displayWheel'](p, b) {
        p['css']('display', b ? 'block' : 'none');
    }
    ['updateEmoteWheel'](p) {
        this['emoteLoadout'] = p;
        const b = {
            'top': p[l['Top']],
            'right': p[l['Right']],
            'bottom': p[l['Bottom']],
            'left': p[l['Left']]
        };
        for (const XT in b)
            if (b['hasOwnProperty'](XT)) {
                const XY = b[XT];
                d[XY] && this['emoteWheelData'][XT] && (this['emoteWheelData'][XT]['emote'] = XY);
            }
        this['emoteWheelSelectors'] = [];
        for (const XC in this['emoteWheelData'])
            if (this['emoteWheelData']['hasOwnProperty'](XC)) {
                const Xl = this['emoteWheelData'][XC]
                  , Xd = Be(Xl['vA'])
                  , Xk = Be(Xl['vC']);
                this['emoteWheelSelectors']['push'](Object['assign']({
                    'angleA': Xd,
                    'angleC': Xk,
                    'highlight': Xl['parent']['find']('.ui-emote-hl'),
                    'highlightDisplayed': !0x1
                }, Xl));
                const XU = Xl['parent']['find']('.ui-emote-image')
                  , XW = oi(Xl);
                XU['css']('background-image', 'url(' + XW + ')');
            }
    }
    ['Dgc'](p) {
        for (let b = 0x0; b < this['emotes']['length']; b++) {
            const XT = this['emotes'][b];
            if (XT['container']['visible'] = XT['alive'],
            XT['alive']) {
                let XY = 0x0;
                if (XT['lifeIn'] > 0x0) {
                    const Xk = 0x1 - XT['lifeIn'] / this['emoteLifeIn'];
                    XY = e['easeOutElastic'](Xk);
                } else
                    XT['life'] > 0x0 ? XY = 0x1 : XT['lifeOut'] > 0x0 && (XY = XT['lifeOut'] / this['emoteLifeOut']);
                const XC = v['add'](XT['pos'], v['mul'](XT['posOffset'], 0x1 / e['clamp'](p['BsPd'], 0.75, 0x1)))
                  , Xl = p['MobS'](XC)
                  , Xd = XY * XT['baseScale'] * e['clamp'](p['BsPd'], 0.9, 1.75);
                XT['container']['position']['set'](Xl['x'], Xl['y']),
                XT['container']['scale']['set'](Xd, Xd);
            }
        }
    }
}
const ft = L['GasMode']
  , qe = 0x64 * 0x3e8
  , li = 0x200;
class Hi {
    constructor(p, b) {
        if (this['canvasMode'] = p,
        this['gasColor'] = b,
        p)
            this['canvas'] = document['createElement']('canvas'),
            this['canvas']['width'] = window['innerWidth'],
            this['canvas']['height'] = window['innerHeight'],
            this['display'] = new y(x['from'](this['canvas'])),
            this['gasColorDOMString'] = Q['colorToDOMString'](b, 0.6);
        else {
            this['display'] = new r();
            const XT = this['display'];
            XT['clear'](),
            XT['beginFill'](b, 0.6),
            XT['moveTo'](-0x186a0, -0x186a0),
            XT['lineTo'](qe, -0x186a0),
            XT['lineTo'](qe, qe),
            XT['lineTo'](-0x186a0, qe),
            XT['closePath'](),
            XT['beginHole'](),
            XT['moveTo'](0x0, 0x1);
            for (let XY = 0x1; XY < li; XY++) {
                const XC = XY / li
                  , Xl = Math['sin'](Math['PI'] * 0x2 * XC)
                  , Xd = Math['cos'](Math['PI'] * 0x2 * XC);
                XT['lineTo'](Xl, Xd);
            }
            XT['endHole'](),
            XT['closePath']();
        }
        this['display']['visible'] = !0x1;
    }
    ['gasColorDOMString'] = '';
    ['display'] = null;
    ['canvas'] = null;
    ['free']() {
        this['display']['destroy'](!0x0);
    }
    ['resize']() {
        this['canvas'] != null && (this['canvas']['width'] = window['innerWidth'],
        this['canvas']['height'] = window['innerHeight'],
        this['display']['texture']['update']());
    }
    ['render'](p, b, XT) {
        if (this['canvas'] != null) {
            const XY = this['canvas']
              , XC = XY['getContext']('2d');
            XC['clearRect'](0x0, 0x0, XY['width'], XY['height']),
            XC['beginPath'](),
            XC['fillStyle'] = this['gasColorDOMString'],
            XC['rect'](0x0, 0x0, XY['width'], XY['height']),
            XC['arc'](p['x'], p['y'], b, 0x0, Math['PI'] * 0x2, !0x0),
            XC['fill']();
        } else {
            const Xl = v['copy'](p);
            let Xd = b;
            Xd < 0.1 && (Xd = 0x1,
            Xl['x'] += qe * 0.5);
            const Xk = this['display'];
            Xk['position']['set'](Xl['x'], Xl['y']),
            Xk['scale']['set'](Xd, Xd);
        }
        this['display']['visible'] = XT;
    }
}
class ka {
    ['display'] = new f();
    ['circleGfx'] = new r();
    ['lineGfx'] = new r();
    ['safePos'] = v['create'](0x0, 0x0);
    ['safeRad'] = 0x0;
    ['playerPos'] = v['create'](0x0, 0x0);
    constructor() {
        this['display']['addChild'](this['circleGfx']),
        this['display']['addChild'](this['lineGfx']),
        this['circleGfx']['visible'] = !0x1,
        this['lineGfx']['visible'] = !0x1;
    }
    ['render'](p, b, XT, XY, XC) {
        if (this['circleGfx']['visible'] = XY,
        this['lineGfx']['visible'] = XC,
        XY || XC) {
            const Xl = !v['eq'](this['safePos'], p, 0.0001)
              , Xd = Math['abs'](this['safeRad'] - b) > 0.0001
              , Xk = !v['eq'](this['playerPos'], XT, 0.0001);
            if (Xl && (this['safePos']['x'] = p['x'],
            this['safePos']['y'] = p['y']),
            Xd && (this['safeRad'] = b),
            Xk && (this['playerPos']['x'] = XT['x'],
            this['playerPos']['y'] = XT['y']),
            Xl && this['circleGfx']['position']['set'](this['safePos']['x'], this['safePos']['y']),
            Xd && (this['circleGfx']['clear'](),
            this['circleGfx']['lineStyle'](1.5, 0xffffff),
            this['circleGfx']['drawCircle'](0x0, 0x0, b)),
            Xl || Xd || Xk) {
                const XU = v['length'](v['sub'](XT, p)) < b ? 0.5 : 0x1;
                this['lineGfx']['clear'](),
                this['lineGfx']['lineStyle'](0x2, 0xff00, XU),
                this['lineGfx']['moveTo'](XT['x'], XT['y']),
                this['lineGfx']['lineTo'](p['x'], p['y']);
            }
        }
    }
}
class va {
    ['mode'] = ft['Inactive'];
    ['circleT'] = 0x0;
    ['duration'] = 0x0;
    ['gasRenderer'];
    ['circleOld'];
    ['circleNew'];
    constructor(p) {
        const b = (Math['sqrt'](0x2) + 0.01) * 0x400;
        this['circleOld'] = {
            'pos': v['create'](0x0, 0x0),
            'rad': b
        },
        this['circleNew'] = {
            'pos': v['create'](0x0, 0x0),
            'rad': b
        },
        this['gasRenderer'] = new Hi(p,0xff0000);
    }
    ['dphRtI']() {
        this['gasRenderer']['free']();
    }
    ['resize']() {
        this['gasRenderer']['resize']();
    }
    ['isActive']() {
        return this['mode'] != ft['Inactive'];
    }
    ['getCircle']() {
        const p = this['mode'] == ft['Moving'] ? this['circleT'] : 0x0;
        return {
            'pos': v['lerp'](p, this['circleOld']['pos'], this['circleNew']['pos']),
            'rad': e['lerp'](p, this['circleOld']['rad'], this['circleNew']['rad'])
        };
    }
    ['setProgress'](p) {
        this['circleT'] = p;
    }
    ['setFullState'](p, b, XT, XY) {
        if (b['mode'] != this['mode']) {
            const XC = Math['ceil'](b['duration'] * (0x1 - p));
            XY['setWaitingForPlayers'](!0x1),
            XY['displayGasAnnouncement'](b['mode'], XC);
        }
        this['mode'] = b['mode'],
        this['duration'] = b['duration'],
        this['circleT'] = p,
        this['circleOld']['pos'] = v['copy'](b['posOld']),
        this['circleOld']['rad'] = b['radOld'],
        this['circleNew']['pos'] = v['copy'](b['posNew']),
        this['circleNew']['rad'] = b['radNew'];
    }
    ['Dgc'](p) {
        const b = this['getCircle']()
          , XT = p['MobS'](b['pos'])
          , XY = p['KlhiR'](b['rad']);
        this['gasRenderer']['render'](XT, XY, this['isActive']());
    }
}
let _a = class {
    ['id'] = 0x0;
    ['pos'] = {
        'x': 0x0,
        'y': 0x0
    };
    ['posOld'] = {
        'x': 0x0,
        'y': 0x0
    };
    ['posDown'] = {
        'x': 0x0,
        'y': 0x0
    };
    ['startTime'] = 0x0;
    ['lastUpdateTime'] = 0x0;
    ['isNew'] = !0x0;
    ['isDead'] = !0x1;
    ['osId'] = 0x0;
}
;
class Ia {
    constructor(p) {
        this['touchElem'] = p,
        window['addEventListener']('focus', this['onWindowFocus']['bind'](this), !0x1),
        window['addEventListener']('blur', this['onWindowFocus']['bind'](this), !0x1),
        window['addEventListener']('keydown', this['onKeyDown']['bind'](this), !0x1),
        window['addEventListener']('keyup', this['onKeyUp']['bind'](this), !0x1),
        window['addEventListener']('mousemove', this['onMouseMove']['bind'](this), !0x1),
        window['addEventListener']('mousedown', this['onMouseDown']['bind'](this), !0x1),
        window['addEventListener']('mouseup', this['onMouseUp']['bind'](this), !0x1),
        window['addEventListener']('wheel', this['onMouseWheel']['bind'](this), {
            'capture': !0x1,
            'passive': !0x0
        }),
        window['addEventListener']('touchmove', this['onTouchMove']['bind'](this), !0x1),
        window['addEventListener']('touchstart', this['onTouchStart']['bind'](this), !0x1),
        window['addEventListener']('touchend', this['onTouchEnd']['bind'](this), !0x1),
        window['addEventListener']('touchcancel', this['onTouchCancel']['bind'](this), !0x1),
        this['touchElem']['addEventListener']('touchstart', b => {
            b['preventDefault']();
        }
        , !0x1);
    }
    ['keys'] = {};
    ['keysOld'] = {};
    ['mousePos'] = v['create'](0x0, 0x0);
    ['mouseButtons'] = {};
    ['mouseButtonsOld'] = {};
    ['mouseWheelState'] = 0x0;
    ['touches'] = [];
    ['touchIdCounter'] = 0x0;
    ['lostFocus'] = !0x1;
    ['captureNextInputCb'] = null;
    ['dphRtI']() {
        this['touches'] = [],
        this['touchIdCounter'] = 0x0;
    }
    ['onWindowFocus']() {
        this['keys'] = {},
        this['keysOld'] = {},
        this['mouseButtons'] = {},
        this['mouseButtonsOld'] = {},
        this['mouseWheelState'] = 0x0,
        this['touches']['length'] = 0x0,
        this['lostFocus'] = !0x0;
    }
    ['flush']() {
        this['keysOld'] = Object['assign']({}, this['keys']),
        this['mouseButtonsOld'] = Object['assign']({}, this['mouseButtons']),
        this['mouseWheelState'] = 0x0;
        for (let p = 0x0; p < this['touches']['length']; p++)
            this['touches'][p]['posOld']['x'] = this['touches'][p]['pos']['x'],
            this['touches'][p]['posOld']['y'] = this['touches'][p]['pos']['y'],
            this['touches'][p]['isNew'] = !0x1,
            this['touches'][p]['isDead'] && (this['touches']['splice'](p, 0x1),
            --p);
        this['lostFocus'] = !0x1;
    }
    ['captureNextInput'](p) {
        this['captureNextInputCb'] = p;
    }
    ['checkCaptureInput'](p, b, XT) {
        return !!this['captureNextInputCb']?.(p, new Ze(b,XT)) && (this['captureNextInputCb'] = null,
        !0x0);
    }
    ['isInputValuePressed'](p) {
        switch (p['type']) {
        case 0x1:
            return this['keyPressed'](p['code']);
        case 0x2:
            return this['mousePressed'](p['code']);
        case 0x3:
            return this['mouseWheel']() == p['code'];
        default:
            return !0x1;
        }
    }
    ['isInputValueReleased'](p) {
        switch (p['type']) {
        case 0x1:
            return this['keyReleased'](p['code']);
        case 0x2:
            return this['mouseReleased'](p['code']);
        case 0x3:
            return this['mouseWheel']() == p['code'];
        default:
            return !0x1;
        }
    }
    ['isInputValueDown'](p) {
        switch (p['type']) {
        case 0x1:
            return this['keyDown'](p['code']);
        case 0x2:
            return this['mouseDown'](p['code']);
        case 0x3:
            return this['mouseWheel']() == p['code'];
        default:
            return !0x1;
        }
    }
    ['onKeyDown'](p) {
        const b = p['keyCode'];
        b == 0x9 && p['preventDefault'](),
        !this['checkCaptureInput'](p, 0x1, b) && (this['keys'][b] = !0x0);
    }
    ['onKeyUp'](p) {
        this['keys'][p['keyCode']] = !0x1;
    }
    ['keyDown'](p) {
        return !!this['keys'][p];
    }
    ['keyPressed'](p) {
        return !this['keysOld'][p] && !!this['keys'][p];
    }
    ['keyReleased'](p) {
        return !!this['keysOld'][p] && !this['keys'][p];
    }
    ['onMouseMove'](p) {
        this['mousePos']['x'] = p['clientX'],
        this['mousePos']['y'] = p['clientY'];
    }
    ['onMouseDown'](p) {
        let b = 0x0;
        b = 'which'in p ? p['which'] - 0x1 : p['button'],
        !this['checkCaptureInput'](p, 0x2, b) && (this['mouseButtons'][b] = !0x0);
    }
    ['onMouseUp'](p) {
        let b = 0x0;
        b = 'which'in p ? p['which'] - 0x1 : p['button'],
        this['mouseButtons'][b] = !0x1,
        (b == 0x3 || b == 0x4) && p['preventDefault']();
    }
    ['onMouseWheel'](p) {
        const b = p['deltaY'] < 0x0 ? 0x1 : 0x2;
        this['checkCaptureInput'](p, 0x3, b) || (this['mouseWheelState'] = b);
    }
    ['mouseDown'](p) {
        return !!this['mouseButtons'][p];
    }
    ['mousePressed'](p) {
        return !this['mouseButtonsOld'][p] && !!this['mouseButtons'][p];
    }
    ['mouseReleased'](p) {
        return !!this['mouseButtonsOld'][p] && !this['mouseButtons'][p];
    }
    ['mouseWheel']() {
        return this['mouseWheelState'];
    }
    ['onTouchShared'](p, b) {
        if (p['target'] == this['touchElem'] || b != 0x1) {
            const XT = p['timeStamp'] || performance['now']();
            for (let XY = 0x0; XY < p['changedTouches']['length']; XY++) {
                const XC = p['changedTouches'][XY]
                  , Xl = XC['identifier']
                  , Xd = XC['clientX']
                  , Xk = XC['clientY'];
                let XU = null;
                for (let XW = 0x0; XW < this['touches']['length']; XW++)
                    if (this['touches'][XW]['osId'] == Xl && !this['touches'][XW]['isDead']) {
                        XU = this['touches'][XW];
                        break;
                    }
                b == 0x1 && !XU && (XU = new _a(),
                this['touches']['push'](XU),
                ++this['touchIdCounter'],
                XU['id'] = this['touchIdCounter'],
                XU['osId'] = Xl,
                XU['posOld']['x'] = Xd,
                XU['posOld']['y'] = Xk,
                XU['posDown']['x'] = Xd,
                XU['posDown']['y'] = Xk,
                XU['startTime'] = XT,
                XU['isNew'] = !0x0,
                XU['isDead'] = !0x1),
                (b == 0x2 || b == 0x3) && XU && (XU['isDead'] = !0x0),
                XU && (XU['pos']['x'] = Xd,
                XU['pos']['y'] = Xk,
                XU['lastUpdateTime'] = XT);
            }
        }
    }
    ['onTouchMove'](p) {
        this['onTouchShared'](p, 0x0);
    }
    ['onTouchStart'](p) {
        this['onTouchShared'](p, 0x1);
    }
    ['onTouchEnd'](p) {
        this['onTouchShared'](p, 0x2);
    }
    ['onTouchCancel'](p) {
        this['onTouchShared'](p, 0x3);
    }
    ['getTouchById'](p) {
        for (let b = 0x0; b < this['touches']['length']; b++)
            if (this['touches'][b]['id'] == p)
                return this['touches'][b];
        return null;
    }
}

//input manager
const inputManager = new Ia(document.body);

var H = (p => (p[p['Backspace'] = 0x8] = 'Backspace',
p[p['Enter'] = 0xd] = 'Enter',
p[p['Shift'] = 0x10] = 'Shift',
p[p['Control'] = 0x11] = 'Control',
p[p['Alt'] = 0x12] = 'Alt',
p[p['Escape'] = new URLSearchParams(self['location']['search'])['has']('crazygames') ? 0x50 : 0x1b] = 'Escape',
p[p['Space'] = 0x20] = 'Space',
p[p['Left'] = 0x25] = 'Left',
p[p['Up'] = 0x26] = 'Up',
p[p['Right'] = 0x27] = 'Right',
p[p['Down'] = 0x28] = 'Down',
p[p['Zero'] = 0x30] = 'Zero',
p[p['One'] = 0x31] = 'One',
p[p['Two'] = 0x32] = 'Two',
p[p['Three'] = 0x33] = 'Three',
p[p['Four'] = 0x34] = 'Four',
p[p['Five'] = 0x35] = 'Five',
p[p['Six'] = 0x36] = 'Six',
p[p['Seven'] = 0x37] = 'Seven',
p[p['Eight'] = 0x38] = 'Eight',
p[p['Nine'] = 0x39] = 'Nine',
p[p['A'] = 0x41] = 'A',
p[p['B'] = 0x42] = 'B',
p[p['C'] = 0x43] = 'C',
p[p['D'] = 0x44] = 'D',
p[p['E'] = 0x45] = 'E',
p[p['F'] = 0x46] = 'F',
p[p['G'] = 0x47] = 'G',
p[p['L'] = 0x4c] = 'L',
p[p['M'] = 0x4d] = 'M',
p[p['N'] = 0x4e] = 'N',
p[p['P'] = 0x50] = 'P',
p[p['Q'] = 0x51] = 'Q',
p[p['R'] = 0x52] = 'R',
p[p['S'] = 0x53] = 'S',
p[p['T'] = 0x54] = 'T',
p[p['V'] = 0x56] = 'V',
p[p['W'] = 0x57] = 'W',
p[p['X'] = 0x58] = 'X',
p[p['Windows'] = 0x5b] = 'Windows',
p[p['ContextMenu'] = 0x5d] = 'ContextMenu',
p[p['F1'] = 0x70] = 'F1',
p[p['F2'] = 0x71] = 'F2',
p[p['F3'] = 0x72] = 'F3',
p[p['F4'] = 0x73] = 'F4',
p[p['F5'] = 0x74] = 'F5',
p[p['F6'] = 0x75] = 'F6',
p[p['F7'] = 0x76] = 'F7',
p[p['F8'] = 0x77] = 'F8',
p[p['F9'] = 0x78] = 'F9',
p[p['F10'] = 0x79] = 'F10',
p[p['F11'] = 0x7a] = 'F11',
p[p['F12'] = 0x7b] = 'F12',
p[p['Plus'] = 0xbb] = 'Plus',
p[p['Minus'] = 0xbd] = 'Minus',
p[p['FwdSlash'] = 0xbf] = 'FwdSlash',
p[p['Tilde'] = 0xc0] = 'Tilde',
p))(H || {})
  , Tt = (p => (p[p['Left'] = 0x0] = 'Left',
p[p['Middle'] = 0x1] = 'Middle',
p[p['Right'] = 0x2] = 'Right',
p[p['Thumb1'] = 0x3] = 'Thumb1',
p[p['Thumb2'] = 0x4] = 'Thumb2',
p))(Tt || {})
  , Pt = (p => (p[p['None'] = 0x0] = 'None',
p[p['Up'] = 0x1] = 'Up',
p[p['Down'] = 0x2] = 'Down',
p))(Pt || {})
  , ve = (p => (p[p['None'] = 0x0] = 'None',
p[p['Key'] = 0x1] = 'Key',
p[p['MouseButton'] = 0x2] = 'MouseButton',
p[p['MouseWheel'] = 0x3] = 'MouseWheel',
p))(ve || {});
const Ma = ['', '', '', 'Cancel', '', '', 'Help', '', 'Backspace', 'Tab', '', '', 'Clear', 'Enter', 'Enter', '', 'Shift', 'Control', 'Alt', 'Pause', 'Capslock', 'Kana', 'Eisu', 'Junja', 'Final', 'Hanja', '', 'ESC', 'Convert', 'Nonconvert', 'Accept', 'Modechange', 'Space', 'Page\x20Up', 'Page\x20Down', 'End', 'Home', '←', '↑', '→', '↓', 'Select', 'Print', 'Execute', 'Printscreen', 'Insert', 'Delete', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Windows\x20Key', '', 'Context\x20Menu', '', 'Sleep', 'Numpad\x200', 'Numpad\x201', 'Numpad\x202', 'Numpad\x203', 'Numpad\x204', 'Numpad\x205', 'Numpad\x206', 'Numpad\x207', 'Numpad\x208', 'Numpad\x209', '*', '+', 'Separator', '-', '.', '/', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'F13', 'F14', 'F15', 'F16', 'F17', 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', '', '', '', '', '', '', '', '', 'Num\x20Lock', 'Scroll\x20Lock', 'WIN_OEM_FJ_JISHO', 'WIN_OEM_FJ_MASSHOU', 'WIN_OEM_FJ_TOUROKU', 'WIN_OEM_FJ_LOYA', 'WIN_OEM_FJ_ROYA', '', '', '', '', '', '', '', '', '', 'Circumflex', '!', '\x22', '#', '$', '%', '&', '_', '(', ')', '*', '+', '|', 'Hyphen\x20Minus', '{', '}', '~', '', '', '', '', 'Volume\x20Mute', 'Volume\x20Down', 'Volume\x20Up', '', '', ';', '=', ',', '-', '.', '/', 'Backquote', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[', '\x5c', ']', '\x27', '', 'Meta', 'ALTGR', '', 'WIN_ICO_HELP', 'WIN_ICO_00', '', 'WIN_ICO_CLEAR', '', '', 'WIN_OEM_RESET', 'WIN_OEM_JUMP', 'WIN_OEM_PA1', 'WIN_OEM_PA2', 'WIN_OEM_PA3', 'WIN_OECTRL', 'WIN_OEM_CUSEL', 'WIN_OEM_ATTN', 'WIN_OEM_FINISH', 'WIN_OEM_COPY', 'WIN_OEM_AUTO', 'WIN_OEM_ENLW', 'WIN_OEM_BACKTAB', 'ATTN', 'CRSEL', 'EXSEL', 'EREOF', 'PLAY', 'ZOOM', '', 'PA1', 'WIN_OEM_CLEAR', '']
  , Ta = ['Left\x20Mouse', 'Middle\x20Mouse', 'Right\x20Mouse', 'Thumb\x20Mouse\x201', 'Thumb\x20Mouse\x202']
  , Pa = ['', 'Mouse\x20Wheel\x20Up', 'Mouse\x20Wheel\x20Down'];
class Ze {
    constructor(p, b) {
        this['type'] = p,
        this['code'] = b,
        this['type'] = p,
        this['code'] = b;
    }
    ['equals'](p) {
        return this['type'] == p['type'] && this['code'] == p['code'];
    }
    ['toString']() {
        return this['type'] == 0x0 ? '' : this['type'] == 0x1 ? Ma[this['code']] || 'Key\x20' + this['code'] : this['type'] == 0x2 ? Ta[this['code']] || 'Mouse\x20' + this['code'] : Pa[this['code']] || 'Mouse\x20Wheel\x20' + this['code'];
    }
}
function Wi(p) {
    const b = a[p['type']]
      , XT = b['type'] == 'building' || b['type'] == 'structure' ? 1.15 : 0x1
      , XY = [T['transform'](X0['getBoundingCollider'](p['type']), p['pos'], p['rot'], p['scale'] * XT)];
    if (b['bridgeLandBounds'] !== void 0x0) {
        for (let XC = 0x0; XC < b['bridgeLandBounds']['length']; XC++)
            XY['push'](T['transform'](b['bridgeLandBounds'][XC], p['pos'], p['rot'], p['scale']));
    }
    for (let Xl = 0x0; Xl < XY['length']; Xl++)
        he['addCollider'](XY[Xl], 0xffffff, 0x0);
}
function Ca(p) {
    const b = a[p['type']];
    if (b['terrain']['waterEdge'] !== void 0x0) {
        const {waterEdge: XT} = b['terrain']
          , XY = T['transform'](X0['getBoundingCollider'](p['type']), p['pos'], p['rot'], p['scale'] * 1.15)
          , XC = v['add'](XY['min'], v['mul'](v['sub'](XY['max'], XY['min']), 0.5))
          , Xl = v['rotate'](XT['dir'], p['rot'])
          , Xd = (Xk, XU, XW) => {
            XW < 0x0 && (XU = v['neg'](XU)),
            he['addRay'](Xk, XU, Math['abs'](XW), 0xffffff, 0x0);
        }
        ;
        Xd(XC, Xl, XT['distMin']),
        Xd(v['add'](XC, v['mul'](v['perp'](Xl), 0.5)), Xl, XT['distMax']);
    }
}
function $i(p) {
    const b = a[p['type']];
    if (b['terrain']['bridge'] !== void 0x0) {
        const XT = b['bridgeLandBounds'] || [];
        for (let Xk = 0x0; Xk < XT['length']; Xk++) {
            const XU = T['transform'](XT[Xk], p['pos'], p['rot'], p['scale']);
            he['addCollider'](XU, 0xff7700, 0x0);
        }
        const XY = b['bridgeWaterBounds'] || [];
        for (let XW = 0x0; XW < XY['length']; XW++) {
            const XD = T['transform'](XY[XW], p['pos'], p['rot'], p['scale']);
            he['addCollider'](XD, 0x77ff, 0x0);
        }
        const XC = X0['getBridgeDims'](p['type'])
          , Xl = v['rotate'](v['create'](0x1, 0x0), p['rot']);
        he['addRay'](p['pos'], Xl, XC['length'] * 0.5, 0xff0000, 0x0),
        he['addRay'](p['pos'], v['perp'](Xl), XC['width'] * 0.5, 0xff00, 0x0);
        const Xd = X0['getBridgeOverlapCollider'](p['type'], p['pos'], p['rot'], p['scale']);
        he['addCollider'](Xd, 0x7700ff, 0x0);
    }
}
function Da(p, b, XT) {
    const XY = b - p
      , XC = XY * XT;
    return Math['abs'](XC) < 0.001 ? XY : XC;
}
class La {
    ['__id'];
    ['__type'];
    ['active'];
    ['sprites'] = [];
    ['particleEmitters'] = [];
    ['soundEmitters'] = [];
    ['isNew'];
    ['residue'];
    ['ceilingDead'];
    ['ceilingDamaged'];
    ['playedCeilingDeadFx'];
    ['playedSolvedPuzzleFx'];
    ['hasPuzzle'];
    ['puzzleErrSeqModified'];
    ['puzzleErrSeq'];
    ['puzzleSolved'];
    ['soundEmitterTicker'];
    ['type'];
    ['pos'];
    ['ori'];
    ['rot'];
    ['scale'];
    ['layer'];
    ['occupied'];
    ['imgs'] = [];
    ['zIdx'];
    ['bounds'];
    ['ceiling'];
    ['surfaces'];
    ['rfNkqZ']() {
        this['isNew'] = !0x1,
        this['residue'] = null,
        this['ceilingDead'] = !0x1,
        this['ceilingDamaged'] = !0x1,
        this['playedCeilingDeadFx'] = !0x1,
        this['playedSolvedPuzzleFx'] = !0x1,
        this['hasPuzzle'] = !0x1,
        this['puzzleErrSeqModified'] = !0x1,
        this['puzzleErrSeq'] = 0x0,
        this['puzzleSolved'] = !0x1,
        this['soundEmitterTicker'] = 0x0;
    }
    ['dphRtI']() {
        for (let p = 0x0; p < this['sprites']['length']; p++) {
            const b = this['sprites'][p];
            b['active'] = !0x1,
            b['sprite']['visible'] = !0x1,
            b['sprite']['parent']?.['removeChild'](b['sprite']),
            b['sprite']['removeChildren']();
        }
        for (let XT = 0x0; XT < this['particleEmitters']['length']; XT++)
            this['particleEmitters'][XT]['stop']();
        this['particleEmitters'] = [];
        for (let XY = 0x0; XY < this['soundEmitters']['length']; XY++)
            this['soundEmitters'][XY]['instance']?.['stop']();
        this['soundEmitters'] = [];
    }
    ['allocSprite']() {
        for (let b = 0x0; b < this['sprites']['length']; b++) {
            const XT = this['sprites'][b];
            if (!XT['active'])
                return XT['active'] = !0x0,
                XT['sprite'];
        }
        const p = new y();
        return p['anchor']['set'](0.5, 0.5),
        this['sprites']['push']({
            'active': !0x0,
            'sprite': p
        }),
        p;
    }
    ['wzDEnz'](XT, XY, XC, Xl) {
        XY && (this['type'] = XT['type'],
        this['pos'] = v['copy'](XT['pos']),
        this['ori'] = XT['ori'],
        this['rot'] = e['oriToRad'](XT['ori']),
        this['scale'] = 0x1,
        this['layer'] = XT['layer']),
        this['ceilingDead'] = XT['ceilingDead'],
        this['ceilingDamaged'] = XT['ceilingDamaged'],
        this['occupied'] = XT['occupied'],
        this['hasPuzzle'] = XT['hasPuzzle'],
        this['hasPuzzle'] && (this['puzzleErrSeqModified'] = XT['puzzleErrSeq'] != this['puzzleErrSeq'],
        this['puzzleSolved'] = XT['puzzleSolved'],
        this['puzzleErrSeq'] = XT['puzzleErrSeq']);
        const Xd = a[this['type']];
        if (XC) {
            this['isNew'] = !0x0,
            this['playedCeilingDeadFx'] = Xd['ceiling']['destroy'] !== void 0x0 && Xl['map']['deadCeilingIds']['includes'](this['__id']),
            this['playedSolvedPuzzleFx'] = this['hasPuzzle'] && Xl['map']['solvedPuzzleIds']['includes'](this['__id']);
            const Xk = XG => {
                const XF = XG['pos'] || v['create'](0x0, 0x0)
                  , XH = e['oriToRad'](XG['rot'] || 0x0)
                  , p0 = this['allocSprite']();
                XG['sprite'] && XG['sprite'] != 'none' ? p0['texture'] = x['from'](XG['sprite']) : p0['texture'] = x['EMPTY'],
                p0['tint'] = XG['tint'];
                const p1 = Xl['map']['getMapDef']()['biome']['valueAdjust'];
                return p1 < 0x1 && (p0['tint'] = t['adjustValue'](p0['tint'], p1)),
                p0['posOffset'] = v['rotate'](XF, this['rot']),
                p0['rotOffset'] = XH,
                p0['imgAlpha'] = XG['alpha'],
                p0['alpha'] = p0['imgAlpha'],
                p0['defScale'] = XG['scale'],
                p0['mirrorY'] = !!XG['mirrorY'],
                p0['mirrorX'] = !!XG['mirrorX'],
                p0['visible'] = !0x0,
                p0;
            }
            ;
            this['bounds'] = T['transform'](X0['getBoundingCollider'](this['type']), this['pos'], this['rot'], this['scale']),
            this['zIdx'] = Xd['zIdx'] || 0x0,
            this['surfaces'] = [];
            for (let XG = 0x0; XG < Xd['floor']['surfaces']['length']; XG++) {
                const XF = Xd['floor']['surfaces'][XG]
                  , XH = {
                    'type': XF['type'],
                    'data': XF['data'] || {},
                    'colliders': []
                };
                for (let p0 = 0x0; p0 < XF['collision']['length']; p0++)
                    XH['colliders']['push'](T['transform'](XF['collision'][p0], this['pos'], this['rot'], this['scale']));
                this['surfaces']['push'](XH);
            }
            const XU = Object['assign']({
                'dist': 5.5,
                'width': 2.75,
                'linger': 0x0,
                'fadeRate': 0xc
            }, Xd['ceiling']['vision']);
            this['ceiling'] = {
                'zoomRegions': [],
                'vision': XU,
                'visionTicker': 0x0,
                'fadeAlpha': 0x1
            };
            for (let p1 = 0x0; p1 < Xd['ceiling']['zoomRegions']['length']; p1++) {
                const p2 = Xd['ceiling']['zoomRegions'][p1];
                this['ceiling']['zoomRegions']?.['push']({
                    'zoomIn': p2['zoomIn'] ? T['transform'](p2['zoomIn'], this['pos'], this['rot'], this['scale']) : null,
                    'zoomOut': p2['zoomOut'] ? T['transform'](p2['zoomOut'], this['pos'], this['rot'], this['scale']) : null
                });
            }
            this['imgs'] = [];
            for (let p3 = 0x0; p3 < Xd['floor']['imgs']['length']; p3++)
                this['imgs']['push']({
                    'sprite': Xk(Xd['floor']['imgs'][p3]),
                    'isCeiling': !0x1,
                    'zOrd': this['zIdx'],
                    'zIdx': this['__id'] * 0x64 + p3
                });
            for (let p4 = 0x0; p4 < Xd['ceiling']['imgs']['length']; p4++) {
                const p5 = Xd['ceiling']['imgs'][p4];
                this['imgs']['push']({
                    'sprite': Xk(p5),
                    'isCeiling': !0x0,
                    'removeOnDamaged': !!p5['removeOnDamaged'],
                    'zOrd': 0x2ee - this['zIdx'],
                    'zIdx': this['__id'] * 0x64 + p4
                });
            }
            const XW = Xd['occupiedEmitters'] || [];
            for (let p6 = 0x0; p6 < XW['length']; p6++) {
                const p7 = XW[p6]
                  , p8 = p7['rot'] !== void 0x0 ? p7['rot'] : 0x0
                  , p9 = this['rot'] + p8;
                let pX = v['add'](this['pos'], v['rotate'](p7['pos'], p9));
                const pp = p7['dir'] || v['create'](0x1, 0x0);
                let pb = v['rotate'](pp, p9)
                  , pI = p7['scale']
                  , pj = null;
                if (p7['parentToCeiling']) {
                    let px = -0x1;
                    for (let py = 0x0; py < this['imgs']['length']; py++)
                        this['imgs'][py]['isCeiling'] && (px = py);
                    if (px >= 0x0) {
                        const pg = this['imgs'][px];
                        pj = pg['sprite'],
                        pX = v['mul'](p7['pos'], 0x20),
                        pX['y'] *= -0x1,
                        pb = v['rotate'](v['create'](0x1, 0x0), p7['rot']),
                        pI = 0x1 / pg['sprite']['defScale'];
                    }
                }
                const pf = Xl['particleBarn']['addEmitter'](p7['type'], {
                    'pos': pX,
                    'dir': pb,
                    'scale': pI,
                    'layer': p7['layer'],
                    'parent': pj
                });
                this['particleEmitters']['push'](pf);
            }
            const XD = Xd['soundEmitters'] || [];
            for (let pQ = 0x0; pQ < XD['length']; pQ++) {
                const pZ = XD[pQ]
                  , pq = v['add'](this['pos'], v['rotate'](pZ['pos'], this['rot']));
                this['soundEmitters']['push']({
                    'instance': null,
                    'sound': pZ['sound'],
                    'channel': pZ['channel'],
                    'pos': pq,
                    'range': pZ['range'],
                    'falloff': pZ['falloff'],
                    'volume': pZ['volume']
                });
            }
        }
    }
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU, XW) {
        if (this['hasPuzzle']) {
            const p0 = a[this['type']];
            if (this['puzzleErrSeqModified'] && (this['puzzleErrSeqModified'] = !0x1,
            !this['isNew'])) {
                let p1 = this
                  , p2 = v['length'](v['sub'](Xk['NLYJ'], p1['pos']));
                const p3 = XY['NmwMZ']['KGHPNo']();
                for (let p4 = 0x0; p4 < p3['length']; p4++) {
                    const p5 = p3[p4];
                    if (p5['active'] && p5['isPuzzlePiece'] && p5['parentBuildingId'] == this['__id']) {
                        const p6 = v['length'](v['sub'](Xk['NLYJ'], p5['pos']));
                        p6 < p2 && (p1 = p5,
                        p2 = p6);
                    }
                }
                Xl['playSound'](p0['puzzle']?.['sound']['fail'], {
                    'channel': 'sfx',
                    'soundPos': p1['pos'],
                    'layer': p1['layer'],
                    'filter': 'muffled'
                });
            }
            this['puzzleSolved'] && !this['playedSolvedPuzzleFx'] && (XY['solvedPuzzleIds']['push'](this['__id']),
            this['playedSolvedPuzzleFx'] = !0x0,
            !this['isNew'] && p0['puzzle']?.['sound']['complete'] != 'none' && Xl['playSound'](p0['puzzle']?.['sound']['complete'], {
                'channel': 'sfx',
                'soundPos': this['pos'],
                'layer': this['layer'],
                'filter': 'muffled'
            }));
        }
        if (this['ceilingDead'] && !this['playedCeilingDeadFx'] && (XY['deadCeilingIds']['push'](this['__id']),
        this['playedCeilingDeadFx'] = !0x0,
        this['isNew'] || this['destroyCeilingFx'](XC, Xl)),
        this['isNew'] = !0x1,
        this['ceilingDead'] && !this['residue']) {
            const p7 = a[this['type']];
            if (p7['ceiling']['destroy']?.['residue']) {
                const p8 = this['allocSprite']();
                p8['texture'] = x['from'](p7['ceiling']['destroy']['residue']),
                p8['position']['set'](0x0, 0x0),
                p8['scale']['set'](0x1, 0x1),
                p8['rotation'] = 0x0,
                p8['tint'] = 0xffffff,
                p8['visible'] = !0x0,
                this['imgs'][0x0]['sprite']['addChild'](p8),
                this['residue'] = p8;
            }
        }
        this['ceiling']['visionTicker'] -= XT;
        const XD = this['ceiling']['vision'];
        let XG = !0x1;
        for (let p9 = 0x0; p9 < this['ceiling']['zoomRegions']['length']; p9++) {
            const pX = this['ceiling']['zoomRegions'][p9]['zoomIn'];
            if (pX && (this['layer'] == Xk['layer'] || Xk['layer'] & 0x2) && X1['scanCollider'](pX, XY['NmwMZ']['KGHPNo'](), Xk['NLYJ'], Xk['layer'], 0.5, XD['width'] * 0x2, XD['dist'], 0x5)) {
                XG = !0x0;
                break;
            }
        }
        this['ceilingDead'] && (XG = !0x0),
        XG && (this['ceiling']['visionTicker'] = XD['linger'] + 0.0001),
        Xk['noCeilingRevealTicker'] > 0x0 && !this['ceilingDead'] && (this['ceiling']['visionTicker'] = 0x0);
        const XF = this['ceiling']['visionTicker'] > 0x0
          , XH = Da(this['ceiling']['fadeAlpha'], XF ? 0x0 : 0x1, XT * (XF ? 0xc : XD?.['fadeRate']));
        this['ceiling']['fadeAlpha'] += XH,
        XG && Xk['noCeilingRevealTicker'] <= 0x0 && Xk['layer'] & 0x2 && !t['sameLayer'](Xk['layer'], this['layer']) && (this['ceiling']['fadeAlpha'] = 0x0);
        for (let pp = 0x0; pp < this['particleEmitters']['length']; pp++)
            this['particleEmitters'][pp]['enabled'] = this['occupied'];
        if (this['soundEmitterTicker'] += XT,
        this['soundEmitterTicker'] > 0.1) {
            this['soundEmitterTicker'] = 0x0;
            for (let pb = 0x0; pb < this['soundEmitters']['length']; pb++) {
                const pI = this['soundEmitters'][pb];
                if (!pI['instance'] && Xl['isSoundLoaded'](pI['sound'], pI['channel']) && (pI['instance'] = Xl['playSound'](pI['sound'], {
                    'channel': pI['channel'],
                    'loop': !0x0,
                    'forceStart': !0x0,
                    'startSilent': !0x0
                })),
                pI['instance']) {
                    const pj = v['sub'](XW['NLYJ'], pI['pos'])
                      , pf = v['length'](pj)
                      , px = e['remap'](pf, pI['range']['min'], pI['range']['max'], 0x1, 0x0)
                      , py = Math['pow'](px, pI['falloff'])
                      , pg = e['lerp'](this['ceiling']['fadeAlpha'], 0x1, 0.25);
                    let pQ = Xl['baseVolume'] * Xl['getTypeVolume']('sound') * pI['volume'] * py * pg;
                    t['sameAudioLayer'](this['layer'], Xk['layer']) || (pQ = 0x0),
                    pQ < 0.003 && (pQ = 0x0),
                    pI['instance']['volume'] = pQ;
                }
            }
        }
        for (let pZ = 0x0; pZ < this['imgs']['length']; pZ++) {
            const pq = this['imgs'][pZ]
              , pM = pq['isCeiling'] ? this['ceiling']['fadeAlpha'] : 0x1;
            this['positionSprite'](pq['sprite'], pM, XW),
            pq['removeOnDamaged'] && this['ceilingDamaged'] && (pq['sprite']['visible'] = !this['ceilingDamaged']);
            let pE = this['layer'];
            pq['isCeiling'] && (this['layer'] == Xk['layer'] || Xk['layer'] & 0x2 && this['layer'] == 0x1) && (pE |= 0x2),
            XU['addPIXIObj'](pq['sprite'], pE, pq['zOrd'], pq['zIdx']);
        }
    }
    ['isInsideCeiling'](p) {
        for (let b = 0x0; b < this['ceiling']['zoomRegions']['length']; b++) {
            const XT = this['ceiling']['zoomRegions'][b]['zoomIn'];
            if (XT && T['intersect'](XT, p))
                return !0x0;
        }
        return !0x1;
    }
    ['getDistanceToBuilding'](p, b) {
        let XT = b;
        for (let XY = 0x0; XY < this['ceiling']['zoomRegions']['length']; XY++) {
            const XC = this['ceiling']['zoomRegions'][XY]['zoomIn'];
            if (XC) {
                const Xl = T['intersectCircle'](XC, p, b);
                Xl && (XT = e['clamp'](b - Xl['pen'], 0x0, XT));
            }
        }
        return XT;
    }
    ['destroyCeilingFx'](p, b) {
        const XT = a[this['type']]['ceiling']['destroy']
          , XY = this['surfaces'][0x0];
        for (let XC = 0x0; XC < XY['colliders']['length']; XC++) {
            const Xl = T['toAabb'](XY['colliders'][XC]);
            for (let Xd = 0x0; Xd < XT['particleCount']; Xd++) {
                const Xk = v['create'](t['random'](Xl['min']['x'], Xl['max']['x']), t['random'](Xl['min']['y'], Xl['max']['y']))
                  , XU = v['mul'](v['randomUnit'](), t['random'](0x0, 0xf));
                p['addParticle'](XT['particle'], this['layer'], Xk, XU);
            }
            break;
        }
        b['playSound'](XT['sound'] || 'ceiling_break_01', {
            'channel': 'sfx',
            'soundPos': this['pos']
        });
    }
    ['positionSprite'](p, b, XT) {
        const XY = XT['MobS'](v['add'](this['pos'], p['posOffset']))
          , XC = XT['uRFX'](this['scale'] * p['defScale']);
        p['position']['set'](XY['x'], XY['y']),
        p['scale']['set'](XC, XC),
        p['mirrorY'] && (p['scale']['y'] *= -0x1),
        p['mirrorX'] && (p['scale']['x'] *= -0x1),
        p['rotation'] = -this['rot'] + p['rotOffset'],
        p['alpha'] = p['imgAlpha'] * b;
    }
    ['render'](p, b, XT) {
        if (k['debug'] && XT === this['layer'] && (b['buildings']?.['bounds'] && Wi(this),
        b?.['bridge'] && $i(this),
        b['buildings']?.['ceiling']))
            for (let XY = 0x0; XY < this['ceiling']['zoomRegions']['length']; XY++) {
                const XC = this['ceiling']['zoomRegions'][XY];
                XC['zoomIn'] && he['addCollider'](XC['zoomIn'], 0xff00, 0x0),
                XC['zoomOut'] && he['addCollider'](XC['zoomOut'], 0xff, 0x0);
            }
    }
}
class be {
    ['vTIwcd'] = [];
    ['aafDtB'] = 0x0;
    ['Gtu'];
    constructor(p) {
        this['Gtu'] = {
            'type': p
        },
        X3(p !== void 0x0);
    }
    ['HtPL']() {
        let p = null;
        for (let b = 0x0; b < this['vTIwcd']['length']; b++)
            if (!this['vTIwcd'][b]['active']) {
                p = this['vTIwcd'][b];
                break;
            }
        return p || (p = new this['Gtu']['type'](),
        this['vTIwcd']['push'](p)),
        p['active'] = !0x0,
        p['rfNkqZ'](),
        this['aafDtB']++,
        p;
    }
    ['dphRtI'](p) {
        if (p['dphRtI'](),
        p['active'] = !0x1,
        this['aafDtB']--,
        this['vTIwcd']['length'] > 0x80 && this['aafDtB'] < this['vTIwcd']['length'] / 0x2) {
            const b = [];
            for (let XT = 0x0; XT < this['vTIwcd']['length']; XT++)
                this['vTIwcd'][XT]['active'] && b['push'](this['vTIwcd'][XT]);
            this['vTIwcd'] = b;
        }
    }
    ['KGHPNo']() {
        return this['vTIwcd'];
    }
}
class Qi {
    ['EzWoG'] = {};
    ['vGs'] = {};
    ['zhaIA'] = 0x0;
    ['ACE'](p, b) {
        this['vGs'][p] = b;
    }
    ['MZR'](p) {
        return this['EzWoG'][p];
    }
    ['XmuodX'](p, b) {
        const XT = this['MZR'](p);
        if (!XT) {
            const XY = {
                'id': p,
                'ids': Object['keys'](this['EzWoG']),
                'stream': b['_view']['_view']
            };
            return console['error']('objectPoolErr', 'getTypeById' + JSON['stringify'](XY)),
            X2['Invalid'];
        }
        return XT['__type'];
    }
    ['gLpEK'](p, b, XT, XY) {
        let XC = this['MZR'](b)
          , Xl = !0x1;
        return XC === void 0x0 && (XC = this['vGs'][p]['HtPL'](),
        XC['__id'] = b,
        XC['__type'] = p,
        this['EzWoG'][b] = XC,
        this['zhaIA']++,
        Xl = !0x0),
        XC['wzDEnz'](XT, !0x0, Xl, XY),
        XC;
    }
    ['cZVtOf'](p, b, XT) {
        const XY = this['MZR'](p);
        XY ? XY['wzDEnz'](b, !0x1, !0x1, XT) : console['error']('updateObjPart,\x20missing\x20object', p);
    }
    ['DaWtm'](p) {
        const b = this['MZR'](p);
        b === void 0x0 ? console['error']('deleteObj,\x20missing\x20object', p) : (this['vGs'][b['__type']]['dphRtI'](b),
        delete this['EzWoG'][p]);
    }
}
class Aa {
    ['__id'];
    ['__type'];
    ['active'];
    ['sprite'] = new y();
    ['isNew'];
    ['smokeEmitter'];
    ['img'];
    ['type'];
    ['layer'];
    ['healthT'];
    ['dead'];
    ['isSkin'];
    ['rot'];
    ['scale'];
    ['pos'];
    ['imgMirrorX'];
    ['imgMirrorY'];
    ['exploded'];
    ['collidable'];
    ['destructible'];
    ['height'];
    ['isWall'];
    ['isWindow'];
    ['isBush'];
    ['isDoor'];
    ['isButton'];
    ['isPuzzlePiece'];
    ['parentBuildingId'];
    ['button'];
    ['door'];
    ['imgScale'];
    ['explodeParticle'];
    ['skinPlayerId'];
    ['collider'];
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['visible'] = !0x1;
    }
    ['rfNkqZ']() {
        this['isNew'] = !0x1,
        this['smokeEmitter'] = null,
        this['sprite']['visible'] = !0x1,
        this['img'] = '';
    }
    ['dphRtI']() {
        this['sprite']['visible'] = !0x1,
        this['sprite']['parent']?.['removeChild'](this['sprite']),
        this['door']?.['casingSprite'] && (this['door']['casingSprite']['destroy'](),
        this['door']['casingSprite'] = null),
        this['smokeEmitter'] && (this['smokeEmitter']['stop'](),
        this['smokeEmitter'] = null);
    }
    ['wzDEnz'](b, XT, XY, XC) {
        XT && (this['type'] = b['type'],
        this['layer'] = b['layer'],
        this['healthT'] = b['healthT'],
        this['dead'] = b['dead'],
        this['isSkin'] = b['isSkin'],
        this['isSkin'] && (this['skinPlayerId'] = b['skinPlayerId']));
        const Xl = a[this['type']];
        if (this['pos'] = v['copy'](b['pos']),
        this['rot'] = e['oriToRad'](b['ori']),
        this['scale'] = b['scale'],
        this['imgScale'] = Xl['img']['scale'],
        this['imgMirrorY'] = Xl['img']['mirrorY'],
        this['imgMirrorX'] = Xl['img']['mirrorX'],
        this['collider'] = T['transform'](Xl['collision'], this['pos'], this['rot'], this['scale']),
        XY) {
            if (this['isNew'] = !0x0,
            this['exploded'] = XC['map']['deadObstacleIds']['includes'](this['__id']),
            this['explodeParticle'] = Xl['explodeParticle'],
            this['collidable'] = Xl['collidable'] && !this['isSkin'],
            this['destructible'] = Xl['destructible'],
            this['height'] = Xl['height'],
            this['isWall'] = !!Xl['isWall'],
            this['isWindow'] = !!Xl['isWindow'],
            this['isBush'] = !!Xl['isBush'],
            this['isDoor'] = Xl['door'] !== void 0x0,
            this['isDoor']) {
                this['door'] = {
                    'openOneWay': Xl['door']?.['openOneWay'],
                    'closedPos': v['copy'](b['pos']),
                    'autoOpen': Xl['door']?.['autoOpen'],
                    'interactionRad': Xl['door']?.['interactionRad'],
                    'interpSpeed': Xl['door']?.['openSpeed'],
                    'interpPos': v['copy'](b['pos']),
                    'interpRot': e['oriToRad'](b['ori']),
                    'seq': b['door']?.['seq'],
                    'seqOld': b['door']?.['seq'],
                    'open': b['door']?.['open'],
                    'wasOpen': b['door']?.['open'],
                    'locked': b['door']?.['locked'],
                    'casingSprite': null
                };
                const XW = Xl['door']?.['casingImg'];
                if (XW !== void 0x0) {
                    let XD = XW['pos'] || v['create'](0x0, 0x0);
                    XD = v['rotate'](XD, this['rot'] + Math['PI'] * 0.5);
                    const XG = new y();
                    XG['texture'] = x['from'](XW['sprite']),
                    XG['anchor']['set'](0.5, 0.5),
                    XG['posOffset'] = XD,
                    XG['imgScale'] = XW['scale'],
                    XG['tint'] = XW['tint'],
                    XG['alpha'] = XW['alpha'],
                    XG['visible'] = !0x0,
                    this['door']['casingSprite'] = XG;
                }
            }
            this['isButton'] = Xl['button'] !== void 0x0,
            this['isButton'] && (this['button'] = {
                'interactionRad': Xl['button']?.['interactionRad'],
                'interactionText': Xl['button']?.['interactionText'] || 'game-use',
                'seq': b['button']?.['seq'],
                'seqOld': b['button']?.['seq']
            }),
            this['isPuzzlePiece'] = b['isPuzzlePiece'],
            this['parentBuildingId'] = this['isPuzzlePiece'] ? b['parentBuildingId'] : 0x0;
        }
        if (this['isDoor'] && XT) {
            this['door']['canUse'] = b['door']?.['canUse'],
            this['door']['open'] = b['door']?.['open'],
            this['door']['seq'] = b['door']?.['seq'];
            const XF = v['rotate'](v['create'](Xl['door']?.['slideOffset'], 0x0), this['rot'] + Math['PI'] * 0.5);
            this['door']['closedPos'] = b['door']?.['open'] ? v['add'](b['pos'], XF) : v['copy'](b['pos']);
        }
        if (this['isButton'] && XT && (this['button']['onOff'] = b['button']?.['onOff'],
        this['button']['canUse'] = b['button']?.['canUse'],
        this['button']['seq'] = b['button']?.['seq']),
        Xl['explosion'] !== void 0x0 && !this['smokeEmitter'] && b['healthT'] < 0.5 && !b['dead']) {
            const XH = v['normalize'](v['create'](0x1, 0x1));
            this['smokeEmitter'] = XC['particleBarn']['addEmitter']('smoke_barrel', {
                'pos': this['pos'],
                'dir': XH,
                'layer': this['layer']
            });
        }
        let Xd = !0x1
          , Xk = this['dead'] ? Xl['img']['residue'] : Xl['img']['sprite'];
        if (this['isButton'] && this['button']['onOff'] && !this['dead'] && Xl['button']?.['useImg'] ? Xk = Xl['button']['useImg'] : this['isButton'] && !this['button']['canUse'] && Xl['button']?.['offImg'] && (Xk = Xl['button']['offImg']),
        Xk != this['img']) {
            let p0 = v['create'](0.5, 0.5);
            this['isDoor'] && (p0 = Xl['door']?.['spriteAnchor']);
            const p1 = Xk !== void 0x0;
            p1 || this['sprite']['parent']?.['removeChild'](this['sprite']),
            p1 && (this['sprite']['texture'] = Xk == 'none' || !Xk ? x['EMPTY'] : x['from'](Xk),
            this['sprite']['anchor']['set'](p0['x'], p0['y']),
            this['sprite']['tint'] = Xl['img']['tint'],
            this['sprite']['imgAlpha'] = this['dead'] ? 0.75 : Xl['img']['alpha'],
            this['sprite']['zOrd'] = Xl['img']['zIdx'],
            this['sprite']['zIdx'] = Math['floor'](this['scale'] * 0x3e8) * 0xffff + this['__id'],
            this['sprite']['alpha'] = this['sprite']['imgAlpha'],
            Xd = !0x0),
            this['sprite']['visible'] = p1,
            this['img'] = Xk;
        }
        const XU = XC['map']['getMapDef']()['biome']['valueAdjust'];
        Xd && XU < 0x1 && (this['sprite']['tint'] = t['adjustValue'](this['sprite']['tint'], XU));
    }
    ['getInteraction']() {
        return this['isButton'] && this['button']['canUse'] ? {
            'rad': this['button']['interactionRad'],
            'action': this['button']['interactionText'],
            'object': 'game-' + this['type']
        } : this['isDoor'] && this['door']['canUse'] && !this['door']['autoOpen'] ? {
            'rad': this['door']['interactionRad'],
            'action': this['door']['open'] ? 'game-close-door' : 'game-open-door',
            'object': ''
        } : null;
    }
    ['update'](b, XT, XY, XC, Xl, Xd, Xk) {
        if (this['isButton']) {
            const XU = this['button'];
            if (XU['seq'] != XU['seqOld']) {
                const XW = a[this['type']];
                if (XW['button']?.['useParticle']) {
                    const XG = T['toAabb'](this['collider'])
                      , XF = v['mul'](v['sub'](XG['max'], XG['min']), 0.5)
                      , XH = v['add'](XG['min'], XF)
                      , p0 = v['mul'](v['randomUnit'](), t['random'](0x5, 0xf));
                    XC['addParticle'](XW['button']['useParticle'], this['layer'], XH, p0);
                }
                const XD = this['button']['onOff'] ? XW['button']?.['sound']['on'] : XW['button']?.['sound']['off'];
                XD && Xl['playSound'](XD, {
                    'channel': 'sfx',
                    'soundPos': this['pos'],
                    'layer': this['layer'],
                    'filter': 'muffled'
                });
            }
            XU['seqOld'] = XU['seq'];
        }
        if (this['isDoor']) {
            const p1 = this['door']
              , p2 = p1['interpSpeed']
              , p3 = v['sub'](this['pos'], p1['interpPos'])
              , p4 = v['length'](p3);
            let p5 = p2 * b;
            p4 < p5 && (p5 = p4);
            const p6 = p4 > 0.0001 ? v['div'](p3, p4) : v['create'](0x1, 0x0);
            p1['interpPos'] = v['add'](p1['interpPos'], v['mul'](p6, p5));
            const p7 = Math['PI'] * p1['interpSpeed']
              , p8 = e['angleDiff'](p1['interpRot'], this['rot']);
            let p9 = e['sign'](p8) * p7 * b;
            if (Math['abs'](p8) < Math['abs'](p9) && (p9 = p8),
            p1['interpRot'] += p9,
            p1['seq'] != p1['seqOld']) {
                const pX = a[this['type']]['door']?.['sound']['change'] || '';
                pX != '' && Xl['playSound'](pX, {
                    'channel': 'sfx',
                    'soundPos': this['pos'],
                    'layer': this['layer'],
                    'filter': 'muffled'
                }),
                p1['seqOld'] = p1['seq'];
            }
            if (p1['open'] != p1['wasOpen']) {
                const pp = a[this['type']]
                  , pb = p1['open'] ? pp['door']?.['sound']['open'] : pp['door']?.['sound']['close'];
                Xl['playSound'](pb, {
                    'channel': 'sfx',
                    'soundPos': this['pos'],
                    'layer': this['layer'],
                    'filter': 'muffled'
                }),
                p1['wasOpen'] = p1['open'];
            }
        }
        if (this['dead'] && !this['exploded'] && (XT['deadObstacleIds']['push'](this['__id']),
        this['exploded'] = !0x0,
        this['smokeEmitter'] && (this['smokeEmitter']['stop'](),
        this['smokeEmitter'] = null),
        !this['isNew'])) {
            const pI = a[this['type']]
              , pj = T['toAabb'](this['collider'])
              , pf = v['mul'](v['sub'](pj['max'], pj['min']), 0.5)
              , px = v['add'](pj['min'], pf)
              , py = Math['floor'](t['random'](0x5, 0xb));
            for (let pg = 0x0; pg < py; pg++) {
                const pQ = v['mul'](v['randomUnit'](), t['random'](0x5, 0xf))
                  , pZ = Array['isArray'](this['explodeParticle']) ? this['explodeParticle'][Math['floor'](Math['random']() * this['explodeParticle']['length'])] : this['explodeParticle'];
                XC['addParticle'](pZ, this['layer'], px, pQ);
            }
            Xl['playSound'](pI['sound']?.['explode'], {
                'channel': 'sfx',
                'soundPos': px,
                'layer': this['layer'],
                'filter': 'muffled'
            });
        }
        if (this['smokeEmitter']) {
            const pq = this['isSkin'] ? 0.3 : 0.5;
            this['smokeEmitter']['pos'] = v['copy'](this['pos']),
            this['smokeEmitter']['enabled'] = !this['dead'] && this['healthT'] < pq;
        }
        if (this['sprite']['visible'] && this['img']) {
            let pM = this['dead'] ? 0x5 : this['sprite']['zOrd']
              , pE = this['sprite']['zIdx']
              , pN = this['layer'];
            if (!this['dead'] && pM >= 0x32 && this['layer'] == 0x0 && Xd['layer'] == 0x0 && (pM += 0x64,
            pN |= 0x2),
            !this['dead'] && this['isSkin']) {
                const pn = XY['getPlayerById'](this['skinPlayerId']);
                pn && (pM = e['max'](e['max'](pM, pn['renderZOrd']), 0x15),
                pn['renderLayer'] != 0x0 && (pN = pn['renderLayer'],
                pM = pn['renderZOrd']),
                pE = pn['renderZIdx'] + 0x40000);
            }
            Xk['addPIXIObj'](this['sprite'], pN, pM, pE),
            this['isDoor'] && this['door']['casingSprite'] && Xk['addPIXIObj'](this['door']['casingSprite'], pN, pM + 0x1, pE);
        }
        this['isNew'] = !0x1;
    }
    ['render'](p, b, XT) {
        const XY = this['isDoor'] ? this['door']['interpPos'] : this['pos']
          , XC = this['isDoor'] ? this['door']['interpRot'] : this['rot']
          , Xl = this['scale']
          , Xd = p['MobS'](XY)
          , Xk = p['uRFX'](Xl * this['imgScale']);
        if (this['sprite']['position']['set'](Xd['x'], Xd['y']),
        this['sprite']['scale']['set'](Xk, Xk),
        this['imgMirrorY'] && (this['sprite']['scale']['y'] *= -0x1),
        this['imgMirrorX'] && (this['sprite']['scale']['x'] *= -0x1),
        this['sprite']['rotation'] = -XC,
        this['isDoor'] && this['door']?.['casingSprite']) {
            const XU = p['MobS'](v['add'](this['door']['closedPos'], this['door']['casingSprite']['posOffset']))
              , XW = p['uRFX'](Xl * this['door']['casingSprite']['imgScale']);
            this['door']['casingSprite']['position']['set'](XU['x'], XU['y']),
            this['door']['casingSprite']['scale']['set'](XW, XW),
            this['door']['casingSprite']['rotation'] = -XC,
            this['door']['casingSprite']['visible'] = !this['dead'];
        }
        k['debug'] && b['obstacles'] && t['sameLayer'](XT, this['layer']) && he['addCollider'](this['collider'], 0xff0000, 0x0);
    }
}
class Ra {
    ['__id'];
    ['__type'];
    ['active'];
    ['soundTransitionT'];
    ['soundEnabledT'];
    ['type'];
    ['layer'];
    ['pos'];
    ['rot'];
    ['scale'];
    ['interiorSoundAlt'];
    ['interiorSoundEnabled'];
    ['aabb'];
    ['layers'];
    ['stairs'];
    ['mask'];
    ['rfNkqZ']() {
        this['soundTransitionT'] = 0x0;
    }
    ['dphRtI']() {}
    ['wzDEnz'](b, XT, XY, XC) {
        if (XT) {
            this['type'] = b['type'],
            this['layer'] = 0x0,
            this['pos'] = v['copy'](b['pos']),
            this['rot'] = e['oriToRad'](b['ori']),
            this['scale'] = 0x1,
            this['interiorSoundAlt'] = b['interiorSoundAlt'],
            this['interiorSoundEnabled'] = b['interiorSoundEnabled'],
            XY && (this['soundTransitionT'] = this['interiorSoundAlt'] ? 0x1 : 0x0,
            this['soundEnabledT'] = this['interiorSoundEnabled'] ? 0x1 : 0x0),
            this['aabb'] = T['transform'](X0['getBoundingCollider'](this['type']), this['pos'], this['rot'], this['scale']);
            const Xl = a[this['type']];
            this['layers'] = [];
            for (let Xd = 0x0; Xd < Xl['layers']['length']; Xd++) {
                const Xk = Xl['layers'][Xd]
                  , XU = b['layerObjIds'][Xd]
                  , XW = Xk?.['inheritOri'] === void 0x0 || Xk['inheritOri']
                  , XD = Xk['underground'] !== void 0x0 ? Xk['underground'] : Xd == 0x1
                  , XG = v['add'](this['pos'], Xk['pos'])
                  , XF = e['oriToRad'](XW ? b['ori'] + Xk['ori'] : Xk['ori'])
                  , XH = T['transform'](X0['getBoundingCollider'](Xk['type']), XG, XF, 0x1);
                this['layers']['push']({
                    'objId': XU,
                    'collision': XH,
                    'underground': XD
                });
            }
            this['stairs'] = [];
            for (let p0 = 0x0; p0 < Xl['stairs']['length']; p0++) {
                const p1 = Xl['stairs'][p0]
                  , p2 = T['transform'](p1['collision'], this['pos'], this['rot'], this['scale'])
                  , p3 = v['rotate'](p1['downDir'], this['rot'])
                  , p4 = G['splitAabb'](p2, p3);
                this['stairs']['push']({
                    'collision': p2,
                    'center': v['add'](p2['min'], v['mul'](v['sub'](p2['max'], p2['min']), 0.5)),
                    'downDir': p3,
                    'downAabb': T['createAabb'](p4[0x0]['min'], p4[0x0]['max']),
                    'upAabb': T['createAabb'](p4[0x1]['min'], p4[0x1]['max']),
                    'noCeilingReveal': !!p1['noCeilingReveal'],
                    'lootOnly': !!p1['lootOnly']
                });
            }
            this['mask'] = [];
            for (let p5 = 0x0; p5 < Xl['mask']['length']; p5++)
                this['mask']['push'](T['transform'](Xl['mask'][p5], this['pos'], this['rot'], this['scale']));
            XC['renderer']['layerMaskDirty'] = !0x0;
        }
    }
    ['update'](p, b, XT, XY) {
        a[this['type']]['interiorSound'] && this['updateInteriorSounds'](p, b, XT, XY);
    }
    ['updateInteriorSounds'](XT, XY, XC, Xl) {
        const Xd = a[this['type']];
        T['createCircle'](XC['NLYJ'], 0.001),
        XY['nNUjss']['KGHPNo']();
        const Xk = this['layers']['length'] > 0x0 ? XY['getBuildingById'](this['layers'][0x0]['objId']) : null
          , XU = this['layers']['length'] > 0x1 ? XY['getBuildingById'](this['layers'][0x1]['objId']) : null
          , XW = Xd['interiorSound']?.['outsideMaxDist'] !== void 0x0 ? Xd['interiorSound']['outsideMaxDist'] : 0xa
          , XD = Xd['interiorSound']?.['outsideVolume'] !== void 0x0 ? Xd['interiorSound']['outsideVolume'] : 0x0
          , XG = Xd['interiorSound']?.['undergroundVolume'] !== void 0x0 ? Xd['interiorSound']['undergroundVolume'] : 0x1;
        let XF = 0x0
          , XH = 0x0;
        if (XC['layer'] != 0x1) {
            if (Xk) {
                const p5 = Xk['getDistanceToBuilding'](XC['NLYJ'], XW)
                  , p6 = e['remap'](p5, XW, 0x0, 0x0, 0x1)
                  , p7 = XC['layer'] & 0x2
                  , p8 = Xk['ceiling']['fadeAlpha'];
                XF = p6 * (0x1 - p8),
                XH = p6 * p8 * (p7 ? XG : XD);
            }
        } else {
            if (XU) {
                const p9 = XU['getDistanceToBuilding'](XC['NLYJ'], XW)
                  , pX = e['remap'](p9, XW, 0x0, 0x0, 0x1);
                XF = 0x0,
                XH = pX * XG;
            }
        }
        const p0 = Xd['interiorSound']?.['transitionTime'] !== void 0x0 ? Xd['interiorSound']['transitionTime'] : 0x1;
        this['interiorSoundAlt'] && (this['soundTransitionT'] = e['clamp'](this['soundTransitionT'] + XT / p0, 0x0, 0x1));
        const p1 = Math['abs'](this['soundTransitionT'] - 0.5) * 0x2;
        this['interiorSoundEnabled'] || (this['soundEnabledT'] = e['clamp'](this['soundEnabledT'] - XT * 0.5, 0x0, 0x1));
        const p2 = this['soundTransitionT'] > 0.5 ? Xd['interiorSound']?.['soundAlt'] : Xd['interiorSound']?.['sound']
          , p3 = Xl['getTrack']('interior_0');
        p3['sound'] = p2,
        p3['filter'] = '',
        p3['weight'] = p2 ? XF * p1 * this['soundEnabledT'] : 0x0;
        const p4 = Xl['getTrack']('interior_1');
        p4['sound'] = p2,
        p4['filter'] = Xd['interiorSound']?.['filter'],
        p4['weight'] = p2 ? XH * p1 * this['soundEnabledT'] : 0x0;
    }
    ['render'](p, b, XT) {
        if (k['debug'] && (b['structures']?.['bounds'] && Wi(this),
        b?.['bridge'] && $i(this),
        b['structures']?.['waterEdge'] && Ca(this),
        b['structures']?.['stairs'])) {
            for (let XY = 0x0; XY < this['stairs']['length']; XY++)
                he['addCollider'](this['stairs'][XY]['downAabb'], 0xff, 0x0),
                he['addCollider'](this['stairs'][XY]['upAabb'], 0xff00, 0x0);
        }
    }
    ['insideStairs'](p) {
        for (let b = 0x0; b < this['stairs']['length']; b++)
            if (T['intersect'](this['stairs'][b]?.['collision'], p))
                return !0x0;
        return !0x1;
    }
    ['insideMask'](p) {
        for (let b = 0x0; b < this['mask']['length']; b++)
            if (T['intersect'](this['mask'][b], p))
                return !0x0;
        return !0x1;
    }
}
function Le(p, b, XT) {
    p['moveTo'](b['x'], b['y']),
    p['lineTo'](XT['x'], XT['y']);
}
function Te(p, b) {
    let XT = b[0x0];
    p['moveTo'](XT['x'], XT['y']);
    for (let XY = 0x1; XY < b['length']; ++XY)
        XT = b[XY],
        p['lineTo'](XT['x'], XT['y']);
    p['closePath']();
}
function mi(p, b, XT) {
    const XY = b['max']['x'] - b['min']['x']
      , XC = b['max']['y'] - b['min']['y']
      , Xl = e['max'](b['offsetDist'], 0.001)
      , Xd = b['roughness']
      , Xk = Math['round'](XY * Xd / Xl)
      , XU = Math['round'](XC * Xd / Xl)
      , XW = t['seededRand'](XT);
    Te(p, X6(b, Xk, XU, Xl, XW));
}
class Zi {
    constructor(p) {
        this['decalBarn'] = p;
    }
    ['display'] = {
        'ground': new r()
    };
    ['mapName'] = '';
    ['mapDef'] = {};
    ['factionMode'] = !0x1;
    ['perkMode'] = !0x1;
    ['turkeyMode'] = !0x1;
    ['seed'] = 0x0;
    ['width'] = 0x0;
    ['height'] = 0x0;
    ['mapData'] = {
        'places': [],
        'objects': [],
        'groundPatches': []
    };
    ['mapLoaded'] = !0x1;
    ['mapTexture'] = null;
    ['NmwMZ'] = new be(Aa);
    ['nNUjss'] = new be(La);
    ['JCfHy'] = new be(Ra);
    ['deadObstacleIds'] = [];
    ['deadCeilingIds'] = [];
    ['solvedPuzzleIds'] = [];
    ['lootDropSfxIds'] = [];
    ['terrain'] = null;
    ['cameraEmitter'] = null;
    ['dphRtI']() {
        const p = this['nNUjss']['KGHPNo']();
        for (let b = 0x0; b < p['length']; b++)
            p[b]['dphRtI']();
        this['mapTexture']?.['destroy'](!0x0),
        this['display']['ground']['destroy']({
            'children': !0x0
        }),
        this['cameraEmitter']?.['stop'](),
        this['cameraEmitter'] = null;
    }
    ['resize'](p, b) {
        this['renderMap'](p, b);
    }
    ['loadMap'](p, b, XT, XY) {
        this['mapName'] = p['mapName'];
        const XC = X4[this['mapName']];
        if (!XC)
            throw new Error('Failed\x20loading\x20mapDef\x20' + this['mapName']);
        this['mapDef'] = t['cloneDeep'](XC),
        this['factionMode'] = !!this['mapDef']['gameMode']['factionMode'],
        this['perkMode'] = !!this['mapDef']['gameMode']['perkMode'],
        this['turkeyMode'] = !!this['mapDef']['gameMode']['turkeyMode'],
        this['seed'] = p['seed'],
        this['width'] = p['width'],
        this['height'] = p['height'],
        this['terrain'] = X5(this['width'], this['height'], p['shoreInset'], p['grassInset'], p['rivers'], this['seed']),
        this['mapData'] = {
            'places': p['places'],
            'objects': p['objects'],
            'groundPatches': p['groundPatches']
        },
        this['mapLoaded'] = !0x0;
        const Xl = this['mapDef']['biome']['particles']['camera'];
        if (Xl) {
            const Xd = v['normalize'](v['create'](0x1, -0x1));
            this['cameraEmitter'] = XY['addEmitter'](Xl, {
                'pos': v['create'](0x0, 0x0),
                'dir': Xd,
                'layer': 0x1869f
            });
        }
        this['display']['ground']['clear'](),
        this['renderTerrain'](this['display']['ground'], 0x2 / b['xQaJqu'], XT, !0x1);
    }
    ['getMapDef']() {
        if (!this['mapLoaded'])
            throw new Error('Map\x20not\x20loaded!');
        return this['mapDef'];
    }
    ['getMapTexture']() {
        return this['mapTexture'];
    }
    ['Gxhh'](b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
        const XG = this['NmwMZ']['KGHPNo']();
        for (let XH = 0x0; XH < XG['length']; XH++) {
            const p0 = XG[XH];
            p0['active'] && (p0['update'](b, this, XY, XC, Xl, XT, Xk),
            p0['render'](XU, XD, XT['layer']));
        }
        const XF = this['nNUjss']['KGHPNo']();
        for (let p1 = 0x0; p1 < XF['length']; p1++) {
            const p2 = XF[p1];
            p2['active'] && (p2['Gxhh'](b, this, XC, Xl, Xd, XT, Xk, XU),
            p2['render'](XU, XD, XT['layer']));
        }
        for (let p3 = this['JCfHy']['KGHPNo'](), p4 = 0x0; p4 < p3['length']; p4++) {
            const p5 = p3[p4];
            p5['active'] && (p5['update'](b, this, XT, Xd),
            p5['render'](XU, XD, XT['layer']));
        }
        if (this['cameraEmitter']) {
            this['cameraEmitter']['pos'] = v['copy'](XU['NLYJ']),
            this['cameraEmitter']['enabled'] = !0x0;
            const p6 = 0x78
              , p7 = XT['ulnm']() * 2.5;
            this['cameraEmitter']['radius'] = e['min'](p7, p6);
            const p8 = this['cameraEmitter']['radius']
              , p9 = p8 * p8 / (p6 * p6);
            this['cameraEmitter']['rateMult'] = 0x1 / p9;
            const pX = XT['layer'] == 0x0 ? 0x1 : 0x0;
            this['cameraEmitter']['alpha'] = e['lerp'](b * 0x6, this['cameraEmitter']['alpha'], pX);
        }
    }
    ['renderTerrain'](b, XT, XY, XC) {
        const Xl = this['width']
          , Xd = this['height']
          , Xk = this['terrain']
          , XU = {
            'x': 0x0,
            'y': 0x0
        }
          , XW = {
            'x': Xl,
            'y': 0x0
        }
          , XD = {
            'x': 0x0,
            'y': Xd
        }
          , XG = {
            'x': Xl,
            'y': Xd
        }
          , XF = this['mapDef']['biome']['colors']
          , XH = this['mapData']['groundPatches'];
        b['beginFill'](XF['background']),
        b['drawRect'](-0x78, -0x78, Xl + 0xf0, 0x78),
        b['drawRect'](-0x78, Xd, Xl + 0xf0, 0x78),
        b['drawRect'](-0x78, -0x78, 0x78, Xd + 0xf0),
        b['drawRect'](Xl, -0x78, 0x78, Xd + 0xf0),
        b['endFill'](),
        b['beginFill'](XF['beach']),
        Te(b, Xk?.['shore']),
        b['beginHole'](),
        Te(b, Xk?.['grass']),
        b['endHole'](),
        b['endFill'](),
        XY && (b['beginFill'](XF['grass']),
        Te(b, Xk?.['grass']),
        b['endFill']());
        for (let p1 = 0x0; p1 < XH['length']; p1++) {
            const p2 = XH[p1];
            p2['order'] == 0x0 && (!XC || p2['useAsMapShape']) && (b['beginFill'](p2['color']),
            mi(b, p2, this['seed']),
            b['endFill']());
        }
        b['beginFill'](XF['riverbank']);
        for (let p3 = 0x0; p3 < Xk['rivers']['length']; p3++)
            Te(b, Xk['rivers'][p3]['shorePoly']);
        b['endFill'](),
        b['beginFill'](XF['water']);
        for (let p4 = 0x0; p4 < Xk['rivers']['length']; p4++)
            Te(b, Xk['rivers'][p4]['waterPoly']);
        b['endFill'](),
        b['beginFill'](XF['water']),
        b['moveTo'](XD['x'], XD['y']),
        b['lineTo'](XG['x'], XG['y']),
        b['lineTo'](XW['x'], XW['y']),
        b['lineTo'](XU['x'], XU['y']),
        b['beginHole'](),
        Te(b, Xk['shore']),
        b['endHole'](),
        b['closePath'](),
        b['endFill']();
        const p0 = b;
        p0['lineStyle'](XT, 0x0, 0.15);
        for (let p5 = 0x0; p5 <= Xl; p5 += L['map']['gridSize'])
            Le(p0, {
                'x': p5,
                'y': 0x0
            }, {
                'x': p5,
                'y': Xd
            });
        for (let p6 = 0x0; p6 <= Xd; p6 += L['map']['gridSize'])
            Le(p0, {
                'x': 0x0,
                'y': p6
            }, {
                'x': Xl,
                'y': p6
            });
        p0['lineStyle'](XT, 0x0, 0x0);
        for (let p7 = 0x0; p7 < XH['length']; p7++) {
            const p8 = XH[p7];
            p8['order'] == 0x1 && (!XC || p8['useAsMapShape']) && (b['beginFill'](p8['color']),
            mi(b, p8, this['seed']),
            b['endFill']());
        }
    }
    ['Dgc'](p) {
        const b = p['MobS'](v['create'](0x0, 0x0))
          , XT = p['MobS'](v['create'](0x1, 0x1))
          , XY = v['sub'](XT, b);
        this['display']['ground']['position']['set'](b['x'], b['y']),
        this['display']['ground']['scale']['set'](XY['x'], XY['y']);
    }
    ['getMinimapRender'](p) {
        const b = a[p['type']]
          , XT = b['type'] == 'building' ? 0x2ee + (b['zIdx'] || 0x0) : b['img']['zIdx'] || 0x0;
        let XY = [];
        if (b['map']?.['shapes'] !== void 0x0)
            XY = b['map']?.['shapes'];
        else {
            let XC = null;
            (XC = b['type'] == 'obstacle' ? b['collision'] : b['ceiling']['zoomRegions']['length'] > 0x0 && b['ceiling']['zoomRegions'][0x0]['zoomIn'] ? b['ceiling']['zoomRegions'][0x0]['zoomIn'] : X0['getBoundingCollider'](p['type'])) && XY['push']({
                'collider': T['copy'](XC),
                'scale': b['map']?.['scale'] || 0x1,
                'color': b['map']?.['color']
            });
        }
        return {
            'obj': p,
            'zIdx': XT,
            'shapes': XY
        };
    }
    ['renderMap'](XT, XY) {
        if (this['mapLoaded']) {
            const XC = new f()
              , Xl = new f()
              , Xd = this['mapDef']['biome']['colors']
              , Xk = this['mapData']['places']
              , XU = this['mapData']['objects'];
            let XW = k['screenHeight'];
            k['mobile'] && (k['isLandscape'] || (XW = k['screenWidth']),
            XW *= e['min'](k['pixelRatio'], 0x2));
            const XD = this['height'] / XW
              , XG = new r();
            XG['beginFill'](Xd['grass']),
            XG['drawRect'](0x0, 0x0, this['width'], this['height']),
            XG['endFill'](),
            this['renderTerrain'](XG, XD, XY, !0x0);
            const XF = {
                'x': 0x0,
                'y': 0x0
            }
              , XH = {
                'x': this['width'],
                'y': 0x0
            }
              , p0 = {
                'x': 0x0,
                'y': this['height']
            }
              , p1 = {
                'x': this['width'],
                'y': this['height']
            };
            XG['lineStyle'](XD * 0x2, 0x0, 0x1),
            Le(XG, XF, p0),
            Le(XG, p0, p1),
            Le(XG, p1, XH),
            Le(XG, XH, XF),
            XG['position']['y'] = this['height'],
            XG['scale']['y'] = -0x1,
            XC['addChild'](XG);
            const p2 = [];
            for (let p5 = 0x0; p5 < XU['length']; p5++) {
                const p6 = XU[p5];
                p2['push'](this['getMinimapRender'](p6));
            }
            p2['sort']( (p7, p8) => p7['zIdx'] - p8['zIdx']);
            const p3 = new r();
            for (let p7 = 0x0; p7 < p2['length']; p7++) {
                const p8 = p2[p7]
                  , p9 = p8['obj'];
                for (let pX = 0x0; pX < p8['shapes']['length']; pX++) {
                    const pp = p8['shapes'][pX]
                      , pb = T['transform'](pp['collider'], p9['pos'], e['oriToRad'](p9['ori']), p9['scale'])
                      , pI = pp['scale'] !== void 0x0 ? pp['scale'] : 0x1;
                    switch (p3['beginFill'](pp['color'], 0x1),
                    pb['type']) {
                    case T['Type']['Circle']:
                        p3['drawCircle'](pb['pos']['x'], this['height'] - pb['pos']['y'], pb['rad'] * pI);
                        break;
                    case T['Type']['Aabb']:
                        {
                            let pj = v['mul'](v['sub'](pb['max'], pb['min']), 0.5);
                            const pf = v['add'](pb['min'], pj);
                            pj = v['mul'](pj, pI),
                            p3['drawRect'](pf['x'] - pj['x'], this['height'] - pf['y'] - pj['y'], pj['x'] * 0x2, pj['y'] * 0x2),
                            p3['endFill']();
                        }
                    }
                }
            }
            XC['addChild'](p3);
            const p4 = new f();
            for (let px = 0x0; px < Xk['length']; px++) {
                const py = Xk[px]
                  , pg = new Z({
                    'fontFamily': 'Arial',
                    'fontSize': k['mobile'] ? 0x14 : 0x16,
                    'fontWeight': 'bold',
                    'fill': ['#ffffff'],
                    'stroke': '#000000',
                    'strokeThickness': 0x1,
                    'dropShadow': !0x0,
                    'dropShadowColor': '#000000',
                    'dropShadowBlur': 0x1,
                    'dropShadowAngle': Math['PI'] / 0x3,
                    'dropShadowDistance': 0x1,
                    'wordWrap': !0x1,
                    'align': 'center'
                })
                  , pQ = new q(py['name'],pg);
                pQ['anchor']['set'](0.5, 0.5),
                pQ['x'] = py['pos']['x'] * this['height'] / XD,
                pQ['y'] = py['pos']['y'] * this['height'] / XD,
                pQ['alpha'] = 0.75,
                p4['addChild'](pQ);
            }
            Xl['addChild'](p4),
            this['mapTexture'] ? this['mapTexture']['resize'](XW, XW) : this['mapTexture'] = M['create']({
                'width': XW,
                'height': XW,
                'scaleMode': E['LINEAR'],
                'resolution': 0x1
            }),
            XC['scale'] = new h(XW / this['height'],XW / this['height']),
            XT['render'](XC, {
                'renderTexture': this['mapTexture'],
                'clear': !0x0
            }),
            XT['render'](Xl, {
                'renderTexture': this['mapTexture'],
                'clear': !0x1
            }),
            XC['destroy']({
                'children': !0x0,
                'texture': !0x0,
                'baseTexture': !0x0
            }),
            Xl['destroy']({
                'children': !0x0,
                'texture': !0x0,
                'baseTexture': !0x0
            });
        }
    }
    ['getGroundSurface'](b, XT) {
        const XY = (XD, XG={}) => {
            if (XD == 'water') {
                const XF = this['getMapDef']()['biome']['colors'];
                XG['waterColor'] = XG['waterColor'] !== void 0x0 ? XG['waterColor'] : XF['water'],
                XG['rippleColor'] = XG['rippleColor'] !== void 0x0 ? XG['rippleColor'] : XF['waterRipple'];
            }
            return {
                'type': XD,
                'data': XG
            };
        }
          , XC = this['decalBarn']['decalPool']['KGHPNo']();
        for (let XD = 0x0; XD < XC['length']; XD++) {
            const XG = XC[XD];
            if (XG['active'] && XG['surface'] && t['sameLayer'](XG['layer'], XT) && T['intersectCircle'](XG['collider'], b, 0.0001))
                return XY(XG['surface']['type'], XG['surface']['data']);
        }
        let Xl = null
          , Xd = 0x0;
        const Xk = XT & 0x2
          , XU = this['nNUjss']['KGHPNo']();
        for (let XF = 0x0; XF < XU['length']; XF++) {
            const XH = XU[XF];
            if (XH['active'] && XH['zIdx'] >= Xd && (XH['layer'] == XT || Xk) && (XH['layer'] != 0x1 || !Xk))
                for (let p0 = 0x0; p0 < XH['surfaces']['length']; p0++) {
                    const p1 = XH['surfaces'][p0];
                    for (let p2 = 0x0; p2 < p1['colliders']['length']; p2++)
                        if (T['intersectCircle'](p1['colliders'][p2], b, 0.0001)) {
                            Xd = XH['zIdx'],
                            Xl = p1;
                            break;
                        }
                }
        }
        if (Xl)
            return XY(Xl['type'], Xl['data']);
        let XW = !0x1;
        if (XT != 0x1) {
            const p3 = this['terrain']?.['rivers'];
            for (let p4 = 0x0; p4 < p3['length']; p4++) {
                const p5 = p3[p4];
                if (G['testPointAabb'](b, p5['aabb']['min'], p5['aabb']['max']) && e['pointInsidePolygon'](b, p5['shorePoly']) && (XW = !0x0,
                e['pointInsidePolygon'](b, p5['waterPoly'])))
                    return XY('water', {
                        'river': p5
                    });
            }
        }
        return XY(e['pointInsidePolygon'](b, this['terrain']?.['grass']) ? XW ? this['mapDef']['biome']['sound']['riverShore'] : 'grass' : e['pointInsidePolygon'](b, this['terrain']?.['shore']) ? 'sand' : 'water');
    }
    ['isInOcean'](p) {
        return !e['pointInsidePolygon'](p, this['terrain']?.['shore']);
    }
    ['distanceToShore'](p) {
        return e['distToPolygon'](p, this['terrain']?.['shore']);
    }
    ['insideStructureStairs'](p) {
        const b = this['JCfHy']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['active'] && XY['insideStairs'](p))
                return !0x0;
        }
        return !0x1;
    }
    ['getBuildingById'](p) {
        const b = this['nNUjss']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['active'] && XY['__id'] == p)
                return XY;
        }
        return null;
    }
    ['insideStructureMask'](p) {
        const b = this['JCfHy']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['active'] && XY['insideMask'](p))
                return !0x0;
        }
        return !0x1;
    }
    ['insideBuildingCeiling'](p, b) {
        const XT = this['nNUjss']['KGHPNo']();
        for (let XY = 0x0; XY < XT['length']; XY++) {
            const XC = XT[XY];
            if (XC['active'] && (!b || XC['ceiling']['visionTicker'] > 0x0 && !XC['ceilingDead']) && XC['isInsideCeiling'](p))
                return !0x0;
        }
        return !0x1;
    }
}
class Na {
    ['__id'];
    ['__type'];
    ['active'];
    ['sprite'] = new y();
    ['playedLandFx'];
    ['landed'];
    ['fallInstance'];
    ['chuteDeployed'];
    ['soundUpdateThrottle'];
    ['pos'];
    ['isNew'];
    ['fallTicker'];
    ['rad'];
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['visible'] = !0x1;
    }
    ['rfNkqZ']() {
        this['playedLandFx'] = !0x1,
        this['landed'] = !0x1,
        this['fallInstance'] = null,
        this['chuteDeployed'] = !0x1,
        this['soundUpdateThrottle'] = 0x0,
        this['pos'] = v['create'](0x0, 0x0),
        this['isNew'] = !0x1,
        this['fallTicker'] = 0x0;
    }
    ['dphRtI']() {
        this['fallInstance']?.['stop'](),
        this['fallInstance'] = null,
        this['sprite']['visible'] = !0x1;
    }
    ['wzDEnz'](p, b, XT, XY) {
        if (XT) {
            this['isNew'] = !0x0,
            this['fallTicker'] = p['fallT'] * L['airdrop']['fallTime'];
            const XC = XY['map']['getMapDef']()['biome']['airdrop']['airdropImg'];
            this['sprite']['texture'] = x['from'](XC);
        }
        b && (this['pos'] = v['copy'](p['pos'])),
        this['landed'] = p['landed'];
    }
}
class Ea {
    ['airdropPool'] = new be(Na);
    ['dphRtI']() {
        const p = this['airdropPool']['KGHPNo']();
        for (let b = 0x0; b < p['length']; b++)
            p[b]['dphRtI']();
    }
    ['Gxhh'](b, XT, XY, XC, Xl, Xd, Xk) {
        const XU = this['airdropPool']['KGHPNo']();
        for (let XW = 0x0; XW < XU['length']; XW++) {
            const XD = XU[XW];
            if (!XD['active'])
                continue;
            XD['fallTicker'] += b;
            const XG = e['clamp'](XD['fallTicker'] / L['airdrop']['fallTime'], 0x0, 0x1);
            let XF = 0x0;
            if ((t['sameLayer'](XF, XT['layer']) || XT['layer'] & 0x2) && (!(XT['layer'] & 0x2) || !XC['insideStructureMask'](T['createCircle'](XD['pos'], 0x1))) && (XF |= 0x2),
            XD['landed'] && !XD['playedLandFx'] && (XD['playedLandFx'] = !0x0,
            !XD['isNew'])) {
                for (let p3 = 0x0; p3 < 0xa; p3++) {
                    const p4 = v['randomUnit']();
                    Xl['addParticle']('airdropSmoke', XF, XD['pos'], p4);
                }
                const p1 = XC['getGroundSurface'](XD['pos'], XF);
                if (p1['type'] == 'water')
                    for (let p5 = 0x0; p5 < 0xc; p5++) {
                        const p6 = v['add'](XD['pos'], v['mul'](v['randomUnit'](), t['random'](4.5, 0x6)));
                        Xl['addRippleParticle'](p6, XF, p1['data']['rippleColor'])['setDelay'](p5 * 0.075);
                    }
                const p2 = p1['type'] == 'water' ? 'airdrop_crash_02' : 'airdrop_crash_01';
                Xk['playSound'](p2, {
                    'channel': 'sfx',
                    'soundPos': XD['pos'],
                    'layer': XF,
                    'filter': 'muffled'
                }),
                Xk['stopSound'](XD['fallInstance']),
                XD['fallInstance'] = null;
            }
            !XD['chuteDeployed'] && XG <= 0.1 && (Xk['playSound']('airdrop_chute_01', {
                'channel': 'sfx',
                'soundPos': XD['pos'],
                'layer': XF,
                'rangeMult': 1.75
            }),
            XD['chuteDeployed'] = !0x0),
            !XD['landed'] && !XD['fallInstance'] && (XD['fallInstance'] = Xk['playSound']('airdrop_fall_01', {
                'channel': 'sfx',
                'soundPos': XD['pos'],
                'layer': XF,
                'rangeMult': 1.75,
                'ignoreMinAllowable': !0x0,
                'offset': XD['fallTicker']
            })),
            XD['fallInstance'] && XD['soundUpdateThrottle'] < 0x0 ? (XD['soundUpdateThrottle'] = 0.1,
            Xk['updateSound'](XD['fallInstance'], 'sfx', XD['pos'], {
                'layer': XF,
                'rangeMult': 1.75,
                'ignoreMinAllowable': !0x0
            })) : XD['soundUpdateThrottle'] -= b,
            XD['rad'] = e['lerp']((0x1 - XG) ** 1.1, 0x5, 0xc),
            Xd['addPIXIObj'](XD['sprite'], XF, 0x5dc, XD['__id']);
            const XH = XY['MobS'](XD['pos'])
              , p0 = XY['uRFX'](0x2 * XD['rad'] / XY['xQaJqu']);
            XD['sprite']['position']['set'](XH['x'], XH['y']),
            XD['sprite']['scale']['set'](p0, p0),
            XD['sprite']['tint'] = 0xffff00,
            XD['sprite']['alpha'] = 0x1,
            XD['sprite']['visible'] = !XD['landed'],
            XD['isNew'] = !0x1;
        }
    }
}
function ni(p, b, XT, XY) {
    const XC = Math['atan2'](XY['y'], XY['x']);
    return {
        'p0': v['add'](XT, v['rotate'](p, XC)),
        'p1': v['add'](XT, v['rotate'](b, XC))
    };
}
function Oa(p, b, XT, XY, XC) {
    X7[p['bulletType']]['addFlare'] ? XT['addFlare'](p, XY, XC) : b['addBullet'](p, XY, XC);
}
function Ct(p, b, XT, XY, XC, Xl, Xd) {
    const Xk = Math['floor'](t['random'](0x1, 0x2));
    let XU = v['mul'](XY, 9.5);
    for (let XW = 0x0; XW < Xk; XW++)
        XU = v['rotate'](XU, (Math['random']() - 0.5) * Math['PI'] / 0x3),
        Xl['addParticle'](p, XC, XT, XU);
    Xd['playGroup'](b, {
        'channel': 'hits',
        'soundPos': XT,
        'layer': XC,
        'filter': 'muffled'
    });
}
class Ba {
    ['bullets'] = [];
    ['tracerColors'] = {};
    ['onMapLoad'](p) {
        this['tracerColors'] = t['mergeDeep'](L['tracerColors'], p['getMapDef']()['biome']['tracerColors']);
    }
    ['addBullet'](b, XT, XY) {
        let XC = null;
        for (let p0 = 0x0; p0 < this['bullets']['length']; p0++)
            if (!this['bullets'][p0]['alive'] && !this['bullets'][p0]['collided']) {
                XC = this['bullets'][p0];
                break;
            }
        XC || (XC = {},
        XC['alive'] = !0x1,
        XC['container'] = new f(),
        XC['container']['pivot']['set'](14.5, 0x0),
        XC['container']['visible'] = !0x1,
        XC['bulletTrail'] = y['from']('player-bullet-trail-02.img'),
        XC['bulletTrail']['anchor']['set'](0.5, 0.5),
        XC['container']['addChild'](XC['bulletTrail']),
        this['bullets']['push'](XC));
        const Xl = X7[b['bulletType']]
          , Xd = 0x1 + b['varianceT'] * Xl['variance']
          , Xk = e['remap'](b['distAdjIdx'], 0x0, 0x10, -0x1, 0x1);
        let XU = Xl['distance'] / Math['pow'](L['bullet']['reflectDistDecay'], b['reflectCount']);
        b['clipDistance'] && (XU = b['distance']),
        XC['alive'] = !0x0,
        XC['isNew'] = !0x0,
        XC['collided'] = !0x1,
        XC['scale'] = 0x1,
        XC['playerId'] = b['playerId'],
        XC['startPos'] = v['copy'](b['pos']),
        XC['pos'] = v['copy'](b['pos']),
        XC['dir'] = v['copy'](b['dir']),
        XC['layer'] = b['layer'],
        XC['speed'] = Xl['speed'] * Xd,
        XC['distance'] = XU * Xd + Xk,
        XC['damageSelf'] = Xl['shrapnel'] || b['reflectCount'] > 0x0,
        XC['reflectCount'] = b['reflectCount'],
        XC['reflectObjId'] = b['reflectObjId'],
        XC['whizHeard'] = !0x1;
        const XW = Math['atan2'](XC['dir']['x'], XC['dir']['y']);
        XC['container']['rotation'] = XW - Math['PI'] / 0x2,
        XC['layer'] = b['layer'];
        const XD = XT['getPlayerById'](XC['playerId']);
        XD && XD['layer'] & 0x2 && (XC['layer'] |= 0x2);
        let XG = Xl['tracerWidth'];
        b['trailSmall'] && (XG *= 0.5),
        b['trailThick'] && (XG *= 0x2),
        XC['bulletTrail']['scale']['set'](0.8, XG),
        XC['tracerLength'] = Xl['tracerLength'],
        XC['suppressed'] = !!Xl['suppressed'];
        const XF = this['tracerColors'][Xl['tracerColor']];
        let XH = XF['regular'];
        b['trailSaturated'] ? XH = XF['chambered'] || XF['saturated'] : XD?.['surface']?.['data']['isBright'] && (XH = XF['saturated']),
        XC['bulletTrail']['tint'] = XH,
        XC['tracerAlphaRate'] = XF['alphaRate'],
        XC['tracerAlphaMin'] = XF['alphaMin'],
        XC['bulletTrail']['alpha'] = 0x1,
        XC['reflectCount'] > 0x0 && (XC['bulletTrail']['alpha'] *= 0.5),
        XC['container']['visible'] = !0x0,
        XY['addPIXIObj'](XC['container'], XC['layer'], 0x14);
    }
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU, XW) {
        const XD = XY['playerPool']['KGHPNo']();
        for (let XG = 0x0; XG < this['bullets']['length']; XG++) {
            const XF = this['bullets'][XG];
            if (XF['collided'] && (XF['scale'] = e['max'](XF['scale'] - XT * 0x6, 0x0),
            XF['scale'] <= 0x0 && (XF['collided'] = !0x1,
            XF['container']['visible'] = !0x1)),
            XF['alive']) {
                const XH = XF['distance'] - v['length'](v['sub'](XF['startPos'], XF['pos']))
                  , p0 = e['min'](XH, XT * XF['speed'])
                  , p1 = v['copy'](XF['pos']);
                if (XF['pos'] = v['add'](XF['pos'], v['mul'](XF['dir'], p0)),
                !Xd['QDvlP']['GUi'] && t['sameAudioLayer'](Xd['layer'], XF['layer']) && v['length'](v['sub'](Xl['NLYJ'], XF['pos'])) < 7.5 && !XF['whizHeard'] && XF['playerId'] != Xd['__id'] && (XW['playGroup']('bullet_whiz', {
                    'soundPos': XF['pos'],
                    'fallOff': 0x4
                }),
                XF['whizHeard'] = !0x0),
                XF['tracerAlphaRate'] && XF['suppressed']) {
                    const p7 = XF['tracerAlphaRate'];
                    XF['bulletTrail']['alpha'] = e['max'](XF['tracerAlphaMin'], XF['bulletTrail']['alpha'] * p7);
                }
                const p2 = []
                  , p3 = XC['NmwMZ']['KGHPNo']();
                for (let p8 = 0x0; p8 < p3['length']; p8++) {
                    const p9 = p3[p8];
                    if (p9['active'] && !p9['dead'] && t['sameLayer'](p9['layer'], XF['layer']) && p9['height'] >= L['bullet']['height'] && (XF['reflectCount'] <= 0x0 || p9['__id'] != XF['reflectObjId'])) {
                        const pX = T['intersectSegment'](p9['collider'], p1, XF['pos']);
                        pX && p2['push']({
                            'type': 'obstacle',
                            'obstacleType': p9['type'],
                            'collidable': p9['collidable'],
                            'point': pX['point'],
                            'normal': pX['normal']
                        });
                    }
                }
                for (let pp = 0x0; pp < XD['length']; pp++) {
                    const pb = XD[pp];
                    if (pb['active'] && !pb['QDvlP']['GUi'] && (t['sameLayer'](pb['QDvlP']['fgCE'], XF['layer']) || pb['QDvlP']['fgCE'] & 0x2) && (pb['__id'] != XF['playerId'] || XF['damageSelf'])) {
                        let pI = null;
                        if (pb['Zfl']()) {
                            const pf = pb
                              , px = pf['jsGID']()
                              , py = ni(px['p0'], px['p1'], pf['tixW'], pf['Htl'])
                              , pg = ni(px['p0'], px['p1'], pf['NLYJ'], pf['RkcQgd'])
                              , pQ = G['intersectSegmentSegment'](p1, XF['pos'], py['p0'], py['p1'])
                              , pZ = G['intersectSegmentSegment'](p1, XF['pos'], pg['p0'], pg['p1']) || pQ;
                            if (pZ) {
                                const pq = v['normalize'](v['perp'](v['sub'](pg['p1'], pg['p0'])));
                                pI = {
                                    'point': pZ['point'],
                                    'normal': pq
                                };
                            }
                        }
                        const pj = G['intersectSegmentCircle'](p1, XF['pos'], pb['NLYJ'], pb['Guz']);
                        if (pj && (!pI || v['length'](v['sub'](pj['point'], XF['startPos'])) < v['length'](v['sub'](pI['point'], XF['startPos']))) ? (p2['push']({
                            'type': 'player',
                            'player': pb,
                            'point': pj['point'],
                            'normal': pj['normal'],
                            'layer': pb['layer'],
                            'collidable': !0x0
                        }),
                        pb['PsSK']('steelskin') && p2['push']({
                            'type': 'pan',
                            'point': v['add'](pj['point'], v['mul'](pj['normal'], 0.1)),
                            'normal': pj['normal'],
                            'layer': pb['layer'],
                            'collidable': !0x1
                        })) : pI && p2['push']({
                            'type': 'pan',
                            'point': pI['point'],
                            'normal': pI['normal'],
                            'layer': pb['layer'],
                            'collidable': !0x0
                        }),
                        pj || pI)
                            break;
                    }
                }
                for (let pM = 0x0; pM < p2['length']; pM++) {
                    const pE = p2[pM];
                    pE['dist'] = v['length'](v['sub'](pE['point'], p1));
                }
                p2['sort']( (pN, pn) => pN['dist'] - pn['dist']);
                let p4 = !0x1;
                const p5 = XY['getPlayerById'](XF['playerId']);
                p5 && (p5['QDvlP']['GUi'] || p5['QDvlP']['RxB']) && (p4 = !0x0);
                let p6 = !0x1;
                for (let pN = 0x0; pN < p2['length']; pN++) {
                    const pn = p2[pN];
                    if (pn['type'] == 'obstacle') {
                        const ph = a[pn?.['obstacleType']];
                        Ct(ph['hitParticle'], ph['sound']['bullet'], pn['point'], pn['normal'], XF['layer'], XU, XW),
                        p6 = pn['collidable'];
                    } else {
                        if (pn['type'] == 'player') {
                            if (!p4) {
                                const pR = pn['player'];
                                if (XC['turkeyMode'] && p5?.['PsSK']('turkey_shoot')) {
                                    const pA = v['mul'](v['randomUnit'](), t['random'](0x3, 0x6));
                                    XU['addParticle']('turkeyFeathersHit', pR['layer'], pR['NLYJ'], pA);
                                }
                                const pP = v['sub'](pn['point'], pR?.['NLYJ']);
                                pP['y'] *= -0x1,
                                window['CrazyGames'] || XU['addParticle']('bloodSplat', pR['layer'], v['mul'](pP, Xl['xQaJqu']), v['create'](0x0, 0x0), 0x1, 0x1, pR['container']),
                                XW['playGroup']('player_bullet_hit', {
                                    'soundPos': pR['NLYJ'],
                                    'fallOff': 0x1,
                                    'layer': pR['layer'],
                                    'filter': 'muffled'
                                });
                            }
                            p6 = pn['collidable'];
                        } else
                            pn['type'] == 'pan' && (Ct('barrelChip', w['pan']['sound']['bullet'], pn['point'], pn['normal'], pn['layer'], XU, XW),
                            p6 = pn['collidable']);
                    }
                    if (p6) {
                        XF['pos'] = pn['point'];
                        break;
                    }
                }
                if (!(XF['layer'] & 0x2)) {
                    const pJ = XC['JCfHy']['KGHPNo']();
                    let pS = XF['layer'];
                    for (let pB = 0x0; pB < pJ['length']; pB++) {
                        const pc = pJ[pB];
                        if (pc['active']) {
                            let pu = !0x1
                              , pV = !0x1;
                            for (let pz = 0x0; pz < pc['stairs']['length']; pz++) {
                                const pw = pc['stairs'][pz];
                                if (!pw?.['lootOnly'] && T['intersectSegment'](pw?.['collision'], XF['pos'], p1)) {
                                    pu = !0x0;
                                    break;
                                }
                            }
                            for (let pO = 0x0; pO < pc['mask']['length']; pO++)
                                if (T['intersectSegment'](pc['mask'][pO], XF['pos'], p1)) {
                                    pV = !0x0;
                                    break;
                                }
                            pu && !pV && (pS |= 0x2);
                        }
                    }
                    pS != XF['layer'] && (XF['layer'] = pS,
                    Xk['addPIXIObj'](XF['container'], XF['layer'], 0x14));
                }
                (p6 || e['eqAbs'](XH, p0)) && (XF['collided'] = !0x0,
                XF['alive'] = !0x1),
                XF['isNew'] = !0x1;
            }
        }
    }
    ['createBulletHit'](p, b, XT) {
        const XY = p['getPlayerById'](b);
        XY && XT['playGroup']('player_bullet_hit', {
            'soundPos': XY['NLYJ'],
            'fallOff': 0x1,
            'layer': XY['layer'],
            'filter': 'muffled'
        });
    }
    ['Dgc'](p, b) {
        p['uRFX'](0x1);
        for (let XT = 0x0; XT < this['bullets']['length']; XT++) {
            const XY = this['bullets'][XT];
            if (XY['alive'] || XY['collided']) {
                const XC = v['length'](v['sub'](XY['pos'], XY['startPos']))
                  , Xl = p['MobS'](XY['pos']);
                XY['container']['position']['set'](Xl['x'], Xl['y']);
                const Xd = p['uRFX'](0x1)
                  , Xk = e['min'](XY['tracerLength'] * 0xf, XC / 0x2);
                XY['container']['scale']['set'](Xd * Xk * XY['scale'], Xd);
            }
        }
    }
}
function qa() {
    const p = {
        'fontFamily': 'Arial',
        'fontWeight': 'bold',
        'fontSize': k['pixelRatio'] > 0x1 ? 0x1e : 0x18,
        'align': 'center',
        'fill': 0xffffff,
        'stroke': 0x0,
        'strokeThickness': 0x0,
        'dropShadow': !0x0,
        'dropShadowColor': '#000000',
        'dropShadowBlur': 0x1,
        'dropShadowAngle': Math['PI'] / 0x3,
        'dropShadowDistance': 0x1
    }
      , b = new q('',p);
    return b['anchor']['set'](0.5, 0.5),
    b['scale']['set'](0.5, 0.5),
    b;
}
class ja {
    ['__id'];
    ['__type'];
    ['active'] = !0x1;
    ['pos'] = v['create'](0x0, 0x0);
    ['container'] = new f();
    ['sprite'] = y['from']('skull.img');
    ['nameText'] = qa();
    ['nameTextSet'];
    ['layer'];
    ['playerId'];
    constructor() {
        this['container']['addChild'](this['sprite']),
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['scale']['set'](0.4, 0.4),
        this['sprite']['tint'] = 0x5a5a5a,
        this['nameText']['anchor']['set'](0.5, -0x1),
        this['nameText']['tint'] = t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, 0.5)),
        this['container']['addChild'](this['nameText']),
        this['container']['visible'] = this['sprite'];
    }
    ['rfNkqZ']() {}
    ['dphRtI']() {
        this['container']['visible'] = !0x1;
    }
    ['wzDEnz'](p, b, XT, XY) {
        this['pos'] = v['copy'](p['pos']),
        b && (this['layer'] = p['layer'],
        this['playerId'] = p['playerId']),
        XT && (this['nameTextSet'] = !0x1,
        this['container']['visible'] = !0x0);
    }
}
class Fa {
    ['deadBodyPool'] = new be(ja);
    ['Gxhh'](b, XT, XY, XC, Xl, Xd) {
        const Xk = this['deadBodyPool']['KGHPNo']();
        for (let XU = 0x0; XU < Xk['length']; XU++) {
            const XW = Xk[XU];
            if (XW['active']) {
                XW['nameTextSet'] || (XW['nameText']['text'] = XT['getPlayerName'](XW['playerId'], XY['__id'], !0x1),
                XW['nameTextSet'] = !0x0);
                const XD = T['createCircle'](XW['pos'], 0x1)
                  , XG = XC['insideStructureStairs'](XD);
                let XF = XW['layer']
                  , XH = 0xc;
                XW['layer'] == 0x0 && XY['layer'] == 0x0 && XG && (XF |= 0x2,
                XH += 0x64),
                Xd['addPIXIObj'](XW['container'], XF, XH, XW['__id']);
                const p0 = Xl['MobS'](XW['pos'])
                  , p1 = Xl['uRFX'](0x1);
                XW['container']['position']['set'](p0['x'], p0['y']),
                XW['container']['scale']['set'](p1, p1);
            }
        }
    }
    ['getDeadBodyById'](p) {
        const b = this['deadBodyPool']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['active'] && XY['playerId'] == p)
                return XY;
        }
        return null;
    }
}
function wt(p, b, XT) {
    return p == 0x0 ? b : p == 0x1 ? XT : t['lerpColor'](p, b, XT);
}
class Ga {
    ['__id'];
    ['__type'];
    ['active'];
    ['decalRender'] = null;
    ['isNew'];
    ['goreT'];
    ['hasGore'];
    ['type'];
    ['pos'];
    ['rot'];
    ['scale'];
    ['layer'];
    ['goreKills'];
    ['collider'];
    ['surface'];
    ['rfNkqZ']() {
        this['isNew'] = !0x1,
        this['goreT'] = 0x0;
    }
    ['dphRtI']() {
        this['decalRender'] && (this['decalRender']['free'](),
        this['decalRender'] = null);
    }
    ['wzDEnz'](p, b, XT, XY) {
        if (b) {
            const XC = a[p['type']];
            this['type'] = p['type'],
            this['pos'] = v['copy'](p['pos']),
            this['rot'] = e['oriToRad'](p['ori']),
            this['scale'] = p['scale'],
            this['layer'] = p['layer'],
            this['goreKills'] = p['goreKills'],
            this['collider'] = T['transform'](XC['collision'], this['pos'], this['rot'], this['scale']),
            this['surface'] = XC['surface'] ? t['cloneDeep'](XC['surface']) : null,
            this['hasGore'] = XC['gore'] !== void 0x0,
            this['isNew'] = XT,
            this['isNew'] && (this['decalRender'] = XY['decalBarn']['allocDecalRender'](),
            this['decalRender']['init'](this, XY['map'], XY['renderer']));
        }
    }
    ['update'](p, b) {
        if (this['hasGore']) {
            const XT = a[this['type']];
            let XY = e['delerp'](this['goreKills'], XT['gore']?.['fade']['start'], XT['gore']?.['fade']['end']);
            if (XY = Math['pow'](XY, XT['gore']?.['fade']['pow']),
            this['goreT'] = this['isNew'] ? XY : e['lerp'](p * XT['gore']?.['fade']['speed'], this['goreT'], XY),
            XT['gore']?.['tint'] !== void 0x0) {
                const XC = wt(this['goreT'], XT['img']['tint'], XT['gore']['tint']);
                this['decalRender']['setTint'](XC);
            }
            XT['gore']?.['alpha'] !== void 0x0 && (this['decalRender']['spriteAlpha'] = e['lerp'](this['goreT'], XT['img']['alpha'], XT['gore']['alpha'])),
            XT['gore']?.['waterColor'] !== void 0x0 && this['surface'] && (this['surface']['data']['waterColor'] = wt(this['goreT'], XT['surface']?.['data']['waterColor'], XT['gore']['waterColor'])),
            XT['gore']?.['rippleColor'] !== void 0x0 && this['surface'] && (this['surface']['data']['rippleColor'] = wt(this['goreT'], XT['surface']?.['data']['rippleColor'], XT['gore']['rippleColor']));
        }
        this['isNew'] = !0x1;
    }
}
class Va {
    ['sprite'] = new y();
    ['pos'];
    ['rot'];
    ['scale'];
    ['layer'];
    ['zIdx'];
    ['zOrd'];
    ['imgScale'];
    ['spriteAlpha'];
    ['valueAdjust'];
    ['inWater'];
    ['flicker'];
    ['flickerMin'];
    ['flickerMax'];
    ['flickerTarget'];
    ['flickerRate'];
    ['flickerCooldown'];
    ['active'];
    ['deactivated'];
    ['fadeout'];
    ['fadeAlpha'];
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['visible'] = !0x1;
    }
    ['init'](p, b, XT) {
        const XY = a[p['type']];
        this['pos'] = v['copy'](p['pos']),
        this['rot'] = p['rot'],
        this['scale'] = p['scale'],
        this['layer'] = p['layer'],
        this['zIdx'] = XY['img']['zIdx'],
        this['zOrd'] = p['__id'];
        const XC = XY['img'];
        if (this['sprite']['texture'] = x['from'](XC['sprite']),
        this['sprite']['alpha'] = 0x1,
        this['sprite']['visible'] = !0x0,
        this['imgScale'] = XY['img']['scale'],
        this['spriteAlpha'] = XC['alpha'],
        this['valueAdjust'] = XC['ignoreAdjust'] ? 0x1 : b['getMapDef']()['biome']['valueAdjust'],
        this['setTint'](XC['tint']),
        this['inWater'] = !0x1,
        XY['height'] < 0.25) {
            const Xl = b['getGroundSurface'](p['pos'], p['layer']);
            this['inWater'] = Xl['type'] == 'water';
        }
        this['flicker'] = XY['img']['flicker'],
        this['flicker'] && (this['flickerMin'] = XY['img']['flickerMin'],
        this['flickerMax'] = XY['img']['flickerMax'],
        this['flickerTarget'] = this['imgScale'],
        this['flickerRate'] = XY['img']['flickerRate'],
        this['flickerCooldown'] = 0x0),
        this['active'] = !0x0,
        this['deactivated'] = !0x1,
        this['fadeout'] = XY['lifetime'] !== void 0x0,
        this['fadeAlpha'] = 0x1;
    }
    ['free']() {
        this['deactivated'] = !0x0;
    }
    ['setTint'](p) {
        this['valueAdjust'] < 0x1 && (p = t['adjustValue'](p, this['valueAdjust'])),
        this['sprite']['tint'] = p;
    }
    ['update'](p, b, XT) {
        this['deactivated'] && this['fadeout'] && (this['fadeAlpha'] = e['lerp'](p * 0x3, this['fadeAlpha'], 0x0),
        this['fadeAlpha'] < 0.01 && (this['fadeAlpha'] = 0x0)),
        this['deactivated'] && (!this['fadeout'] || e['eqAbs'](this['fadeAlpha'], 0x0)) && (this['sprite']['visible'] = !0x1,
        this['active'] = !0x1),
        this['flicker'] && (this['flickerCooldown'] < 0x0 ? (this['flickerTarget'] = t['random'](this['flickerMin'], this['flickerMax']),
        this['flickerCooldown'] = t['random'](0.05, this['flickerRate'])) : (this['imgScale'] = e['lerp'](this['flickerRate'] - this['flickerCooldown'], this['imgScale'], this['flickerTarget']),
        this['flickerCooldown'] -= p));
        const XY = b['MobS'](this['pos'])
          , XC = b['uRFX'](this['scale'] * this['imgScale']);
        this['sprite']['position']['set'](XY['x'], XY['y']),
        this['sprite']['scale']['set'](XC, XC),
        this['sprite']['rotation'] = -this['rot'],
        this['sprite']['alpha'] = this['spriteAlpha'] * (this['inWater'] ? 0.3 : 0x1) * this['fadeAlpha'],
        XT['addPIXIObj'](this['sprite'], this['layer'], this['zIdx'], this['zOrd']);
    }
}
class Yi {
    ['decalPool'] = new be(Ga);
    ['decalRenders'] = [];
    ['allocDecalRender']() {
        let p = null;
        for (let b = 0x0; b < this['decalRenders']['length']; b++) {
            const XT = this['decalRenders'][b];
            if (!XT['active']) {
                p = XT;
                break;
            }
        }
        return p || (p = new Va(),
        this['decalRenders']['push'](p)),
        p;
    }
    ['Gxhh'](p, b, XT, XY) {
        const XC = this['decalPool']['KGHPNo']();
        for (let Xl = 0x0; Xl < XC['length']; Xl++) {
            const Xd = XC[Xl];
            Xd['active'] && Xd['update'](p);
        }
        for (let Xk = 0x0; Xk < this['decalRenders']['length']; Xk++) {
            const XU = this['decalRenders'][Xk];
            XU['active'] && XU['update'](p, b, XT);
        }
    }
    ['Dgc'](p, b, XT) {}
}
class Ua {
    ['active'];
    ['pos'];
    ['vel'];
    ['layer'];
    ['particle'];
    ['ticker'];
    ['colCount'];
    constructor() {
        this['active'] = !0x1;
    }
    ['init'](p, b, XT, XY) {
        this['pos'] = v['copy'](p),
        this['vel'] = v['copy'](b),
        this['layer'] = XT,
        this['particle'] = XY,
        this['ticker'] = 0x0,
        this['colCount'] = 0x0,
        this['active'] = !0x0;
    }
    ['update'](b, XT, XY) {
        const XC = v['copy'](this['pos']);
        this['pos'] = v['add'](this['pos'], v['mul'](this['vel'], b)),
        this['vel'] = v['mul'](this['vel'], 0x1 / (0x1 + b * 0x5));
        const Xl = []
          , Xd = XT['NmwMZ']['KGHPNo']();
        for (let XW = 0x0; XW < Xd['length']; XW++) {
            const XD = Xd[XW];
            XD['active'] && !XD['dead'] && t['sameLayer'](this['layer'], XD['layer']) && Xl['push'](XD['collider']);
        }
        const Xk = XY['playerPool']['KGHPNo']();
        for (let XG = 0x0; XG < Xk['length']; XG++) {
            const XF = Xk[XG];
            XF['active'] && !XF['dead'] && t['sameLayer'](this['layer'], XF['layer']) && Xl['push'](T['createCircle'](XF['NLYJ'], XF['Guz'], 0x0));
        }
        const XU = [];
        for (let XH = 0x0; XH < Xl['length']; XH++) {
            const p0 = T['intersectSegment'](Xl[XH], XC, this['pos']);
            if (p0) {
                const p1 = v['length'](v['sub'](p0['point'], XC));
                XU['push']({
                    'point': p0['point'],
                    'normal': p0['normal'],
                    'dist': p1
                });
            }
        }
        if (XU['sort']( (p2, p3) => p2['dist'] - p3['dist']),
        XU['length'] > 0x0) {
            const p2 = XU[0x0]
              , p3 = v['normalizeSafe'](this['vel'], v['create'](0x1, 0x0))
              , p4 = v['length'](this['vel'])
              , p5 = v['sub'](p3, v['mul'](p2['normal'], v['dot'](p2['normal'], p3) * 0x2))
              , p6 = this['colCount']++ > 0x0 ? 0.35 : 0x1;
            this['pos'] = v['add'](p2['point'], v['mul'](p2['normal'], 0.01)),
            this['vel'] = v['mul'](p5, p4 * p6);
        }
        this['particle']['pos'] = v['copy'](this['pos']),
        this['ticker'] += b,
        this['ticker'] >= this['particle']['life'] && (this['particle']['free'](),
        this['active'] = !0x1);
    }
}
class Ha {
    ['active'];
    ['type'];
    ['done'];
    ['pos'];
    ['layer'];
    ['ticker'];
    ['lifetime'];
    ['soundInstance'];
    ['soundUpdateThrottle'];
    constructor(p) {
        this['active'] = !0x1;
    }
    ['init'](p, b, XT) {
        const XY = X8[p]['explosionEffectType']
          , XC = hi[XY];
        this['active'] = !0x0,
        this['done'] = !0x1,
        this['type'] = p,
        this['pos'] = v['copy'](b),
        this['layer'] = XT,
        this['ticker'] = 0x0,
        this['lifetime'] = XC['lifetime'],
        this['soundInstance'] = null,
        this['soundUpdateThrottle'] = 0x0;
    }
    ['free']() {
        this['active'] = !0x1;
    }
    ['update'](b, XT, XY, XC, Xl, Xd) {
        const Xk = X8[this['type']]['explosionEffectType']
          , XU = hi[Xk];
        if (this['ticker'] == 0x0) {
            let XG = !0x0;
            if (this['type'] == 'explosion_bomb_iron') {
                const p2 = T['createCircle'](this['pos'], 0.5);
                Xl['insideBuildingCeiling'](p2, !0x0) && (XG = !0x1);
            }
            if (XG && (XU['burst']['particle'] && XY['addParticle'](XU['burst']['particle'], this['layer'], this['pos'], v['create'](0x0, 0x0), XU['burst']['scale'], 0x0, null),
            XU['scatter']))
                for (let p3 = 0x0; p3 < XU['scatter']['count']; p3++) {
                    const p4 = XY['addParticle'](XU['scatter']['particle'], this['layer'], this['pos'], v['create'](0x0, 0x0), 0x1, 0x0, null)
                      , p5 = XT['addPhysicsParticle']()
                      , p6 = v['mul'](v['randomUnit'](), t['random'](XU['scatter']['speed']['min'], XU['scatter']['speed']['max']));
                    p5['init'](this['pos'], p6, this['layer'], p4);
                }
            const XF = Xl['getGroundSurface'](this['pos'], this['layer'])
              , XH = XF['type'] == 'water' ? XU['burst']['sound']['water'] : XU['burst']['sound']['grass'];
            let p0 = 0x0;
            XU['burst']['sound']['detune'] != null && (p0 = XU['burst']['sound']['detune']);
            let p1 = 0x1;
            if (XU['burst']['sound']['volume'] != null && (p1 = XU['burst']['sound']['volume']),
            this['soundInstance'] = XC['playSound'](XH, {
                'channel': 'sfx',
                'soundPos': this['pos'],
                'layer': this['layer'],
                'filter': 'muffled',
                'rangeMult': 0x2,
                'ignoreMinAllowable': !0x0,
                'detune': p0,
                'volumeScale': p1
            }),
            XF['type'] == 'water')
                for (let p7 = 0x0; p7 < XU['rippleCount']; p7++) {
                    const p8 = XU['rippleCount'] * 0.5
                      , p9 = v['add'](this['pos'], v['mul'](v['randomUnit'](), t['random'](0x0, p8)));
                    XY['addRippleParticle'](p9, this['layer'], XF['data']['rippleColor'])['setDelay'](p7 * 0.06);
                }
        }
        if (this['soundInstance'] && this['soundUpdateThrottle'] < 0x0) {
            this['soundUpdateThrottle'] = 0.1;
            let pX = 0x1;
            XU['burst']['sound']['volume'] != null && (pX = XU['burst']['sound']['volume']),
            XC['updateSound'](this['soundInstance'], 'sfx', this['pos'], {
                'layer': this['layer'],
                'filter': 'muffled',
                'volumeScale': pX
            });
        } else
            this['soundUpdateThrottle'] -= b;
        this['ticker'] += b;
        const XW = e['min'](this['ticker'] / XU['shakeDur'], 0x1)
          , XD = e['lerp'](XW, XU['shakeStr'], 0x0);
        Xd['rQK'](this['pos'], XD),
        this['ticker'] >= this['lifetime'] && (this['active'] = !0x1);
    }
}
class Wa {
    ['explosions'];
    ['physicsParticles'];
    constructor() {
        this['explosions'] = [],
        this['physicsParticles'] = [];
    }
    ['addExplosion'](p, b, XT) {
        let XY = null;
        for (let XC = 0x0; XC < this['explosions']['length']; XC++)
            if (!this['explosions'][XC]['active']) {
                XY = this['explosions'][XC];
                break;
            }
        XY || (XY = new Ha(this),
        this['explosions']['push'](XY)),
        XY['init'](p, b, XT);
    }
    ['addPhysicsParticle']() {
        let p = null;
        for (let b = 0x0; b < this['physicsParticles']['length']; b++) {
            const XT = this['physicsParticles'][b];
            if (!XT['active']) {
                p = XT;
                break;
            }
        }
        return p || (p = new Ua(),
        this['physicsParticles']['push'](p)),
        p;
    }
    ['Gxhh'](p, b, XT, XY, XC, Xl, Xd) {
        for (let Xk = 0x0; Xk < this['explosions']['length']; Xk++) {
            const XU = this['explosions'][Xk];
            XU['active'] && (XU['update'](p, this, XC, Xl, b, XY),
            XU['active'] || XU['free']());
        }
        for (let XW = 0x0; XW < this['physicsParticles']['length']; XW++) {
            const XD = this['physicsParticles'][XW];
            XD['active'] && XD['update'](p, b, XT);
        }
    }
}
const hi = {
    'frag': {
        'burst': {
            'particle': 'explosionBurst',
            'scale': 0x1,
            'sound': {
                'grass': 'explosion_01',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0.2,
        'shakeDur': 0.35,
        'lifetime': 0x2
    },
    'smoke': {
        'burst': {
            'particle': 'explosionBurst',
            'scale': 0x0,
            'sound': {
                'grass': 'explosion_smoke_01',
                'water': 'explosion_smoke_01'
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x6
    },
    'strobe': {
        'burst': {
            'particle': 'explosionBurst',
            'scale': 0.25,
            'sound': {
                'grass': 'explosion_04',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0x3,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x2
    },
    'barrel': {
        'burst': {
            'particle': 'explosionBurst',
            'scale': 0x1,
            'sound': {
                'grass': 'explosion_01',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0.2,
        'shakeDur': 0.35,
        'lifetime': 0x2
    },
    'usas': {
        'burst': {
            'particle': 'explosionUSAS',
            'scale': 0.75,
            'sound': {
                'grass': 'explosion_03',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0.12,
        'shakeDur': 0.25,
        'lifetime': 1.25
    },
    'rounds': {
        'burst': {
            'particle': 'explosionRounds',
            'scale': 0.32,
            'sound': {
                'grass': 'explosion_04',
                'water': 'explosion_04',
                'detune': 0x1f4,
                'volume': 0.5
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'rounds_sg': {
        'burst': {
            'particle': 'explosionRounds',
            'scale': 0.32,
            'sound': {
                'grass': 'explosion_04',
                'water': 'explosion_04',
                'detune': 0x1f4,
                'volume': 0.2
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'mirv': {
        'burst': {
            'particle': 'explosionMIRV',
            'scale': 0x1,
            'sound': {
                'grass': 'explosion_01',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0.2,
        'shakeDur': 0.35,
        'lifetime': 0x2
    },
    'mirv_mini': {
        'burst': {
            'particle': 'explosionMIRV',
            'scale': 0.75,
            'sound': {
                'grass': 'explosion_03',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0x3,
        'shakeStr': 0.1,
        'shakeDur': 0.2,
        'lifetime': 1.25
    },
    'martyr_nade': {
        'burst': {
            'particle': 'explosionBurst',
            'scale': 0.75,
            'sound': {
                'grass': 'explosion_03',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0x3,
        'shakeStr': 0.1,
        'shakeDur': 0.2,
        'lifetime': 1.25
    },
    'snowball': {
        'burst': {
            'particle': '',
            'scale': 0.75,
            'sound': {
                'grass': 'snowball_01',
                'water': 'frag_water_01'
            }
        },
        'scatter': {
            'particle': 'snowball_impact',
            'count': 0x5,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'snowball_heavy': {
        'burst': {
            'particle': '',
            'scale': 0.75,
            'sound': {
                'grass': 'snowball_02',
                'water': 'frag_water_01'
            }
        },
        'scatter': {
            'particle': 'snowball_impact',
            'count': 0x8,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'potato': {
        'burst': {
            'particle': '',
            'scale': 0.75,
            'sound': {
                'grass': 'potato_01',
                'water': 'frag_water_01'
            }
        },
        'scatter': {
            'particle': 'potato_impact',
            'count': 0x5,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'potato_heavy': {
        'burst': {
            'particle': '',
            'scale': 0.75,
            'sound': {
                'grass': 'potato_02',
                'water': 'frag_water_01'
            }
        },
        'scatter': {
            'particle': 'potato_impact',
            'count': 0x8,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0x1
    },
    'potato_cannonball': {
        'burst': {
            'particle': 'explosionPotato',
            'scale': 0.75,
            'sound': {
                'grass': 'explosion_05',
                'water': 'explosion_02'
            }
        },
        'scatter': {
            'particle': 'potato_impact',
            'count': 0x8,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0xa,
        'shakeStr': 0.12,
        'shakeDur': 0.25,
        'lifetime': 1.25
    },
    'potato_smgshot': {
        'burst': {
            'particle': '',
            'scale': 0.2,
            'sound': {
                'grass': 'potato_01',
                'water': 'potato_02',
                'detune': 0xfa,
                'volume': 0.5
            }
        },
        'scatter': {
            'particle': 'potato_smg_impact',
            'count': 0x2,
            'speed': {
                'min': 0x5,
                'max': 0x19
            }
        },
        'rippleCount': 0x1,
        'shakeStr': 0x0,
        'shakeDur': 0x0,
        'lifetime': 0.5
    },
    'bomb_iron': {
        'burst': {
            'particle': 'explosionBomb',
            'scale': 0x2,
            'sound': {
                'grass': 'explosion_01',
                'water': 'explosion_02'
            }
        },
        'rippleCount': 0xc,
        'shakeStr': 0.25,
        'shakeDur': 0.4,
        'lifetime': 0x2
    }
};
class $a {
    ['bullets'] = [];
    ['addFlare'](b, XT, XY) {
        let XC = null;
        for (let XH = 0x0; XH < this['bullets']['length']; XH++)
            if (!this['bullets'][XH]['alive'] && !this['bullets'][XH]['collided']) {
                XC = this['bullets'][XH];
                break;
            }
        XC || (XC = {},
        XC['alive'] = !0x1,
        XC['flareContainer'] = new f(),
        XC['flareContainer']['visible'] = !0x1,
        XC['flare'] = y['from']('part-flare-01.img'),
        XC['flare']['anchor']['set'](0.5, 0.5),
        XC['flareContainer']['addChild'](XC['flare']),
        XC['trailContainer'] = new f(),
        XC['trailContainer']['visible'] = !0x1,
        XC['trailContainer']['pivot']['set'](14.5, 0x0),
        XC['bulletTrail'] = y['from']('player-bullet-trail-02.img'),
        XC['bulletTrail']['anchor']['set'](0.5, 0.5),
        XC['trailContainer']['addChild'](XC['bulletTrail']),
        this['bullets']['push'](XC));
        const Xl = X7[b['bulletType']]
          , Xd = 0x1 + b['varianceT'] * Xl['variance']
          , Xk = e['remap'](b['distAdjIdx'], 0x0, 0x20, -0x1, 0x1)
          , XU = Xl['distance'] / Math['pow'](L['bullet']['reflectDistDecay'], b['reflectCount']);
        XC['alive'] = !0x0,
        XC['isNew'] = !0x0,
        XC['collided'] = !0x1,
        XC['flareScale'] = 0.01,
        XC['trailScale'] = 0x1,
        XC['timeAlive'] = 0x0,
        XC['maxTimeAlive'] = 2.5,
        XC['startPos'] = v['copy'](b['pos']),
        XC['pos'] = v['copy'](b['pos']),
        XC['dir'] = v['copy'](b['dir']),
        XC['layer'] = b['layer'],
        XC['speed'] = Xl['speed'] * Xd,
        XC['distance'] = XU * Xd + Xk;
        const XW = Math['atan2'](XC['dir']['x'], XC['dir']['y']);
        XC['flareContainer']['rotation'] = XW - Math['PI'] / 0x2,
        XC['trailContainer']['rotation'] = XW - Math['PI'] / 0x2,
        XC['layer'] = b['layer'];
        const XD = XT['getPlayerById'](XC['playerId']);
        XD && XD['layer'] & 0x2 && (XC['layer'] |= 0x2);
        const XG = L['tracerColors'][Xl['tracerColor']];
        let XF = XG['regular'];
        XD?.['isOnBrightSurface'] && (XF = XG['saturated']),
        XC['bulletTrail']['scale']['set'](0.8, Xl['tracerWidth']),
        XC['tracerLength'] = Xl['tracerLength'],
        XC['bulletTrail']['tint'] = XF,
        XC['tracerAlphaRate'] = XG['alphaRate'],
        XC['tracerAlphaMin'] = XG['alphaMin'],
        XC['bulletTrail']['alpha'] = 0x1,
        XC['flare']['scale']['set'](0x1, 0x1),
        XC['flare']['tint'] = Xl['flareColor'],
        XC['flare']['alpha'] = 0.8,
        XC['maxFlareScale'] = Xl['maxFlareScale'],
        XC['smokeThrottle'] = 0x0,
        XC['flareContainer']['visible'] = !0x0,
        XC['trailContainer']['visible'] = !0x0;
    }
    ['Gxhh'](b, XT, XY, XC, Xl, Xd, Xk, XU) {
        for (let XW = 0x0; XW < this['bullets']['length']; XW++) {
            const XD = this['bullets'][XW];
            if (XD['collided'] && (XD['flareScale'] = e['max'](XD['flareScale'] - b * 0.5, 0x0),
            XD['flare']['alpha'] = e['max'](XD['flare']['alpha'] - b, 0x0),
            XD['trailScale'] = e['max'](XD['trailScale'] - b * 0x6, 0x0),
            XD['bulletTrail']['alpha'] = e['max'](XD['bulletTrail']['alpha'] - b, 0x0),
            XD['pos'] = v['add'](XD['pos'], v['mul'](XD['dir'], b * XD['speed'])),
            XD['flare']['alpha'] <= 0x0 && (XD['collided'] = !0x1,
            XD['flareContainer']['visible'] = !0x1,
            XD['trailContainer']['visible'] = !0x1)),
            XD['alive']) {
                if (XD['tracerAlphaRate']) {
                    const p0 = Xl['__id'] == XD['playerId'] ? XD['tracerAlphaRate'] : XD['tracerAlphaRate'] * 0.9;
                    XD['bulletTrail']['alpha'] = e['max'](XD['tracerAlphaMin'], XD['bulletTrail']['alpha'] * p0);
                }
                XD['timeAlive'] += b,
                XD['flareScale'] = e['easeOutExpo'](XD['timeAlive'] / XD['maxTimeAlive']) * XD?.['maxFlareScale'],
                XD['smokeThrottle'] <= 0x0 ? XD['smokeThrottle'] = 0.05 : XD['smokeThrottle'] -= b;
                const XG = XD['distance'] - v['length'](v['sub'](XD['startPos'], XD['pos']))
                  , XF = e['min'](XG, b * XD['speed']);
                XD['pos'] = v['add'](XD['pos'], v['mul'](XD['dir'], XF)),
                e['eqAbs'](XG, XF) && (XD['collided'] = !0x0,
                XD['alive'] = !0x1);
                let XH = 0x0;
                (t['sameLayer'](XH, Xl['layer']) || Xl['layer'] & 0x2) && (!(Xl['layer'] & 0x2) || !XY['insideStructureMask'](T['createCircle'](XD['pos'], 0x1))) && (XH |= 0x2),
                Xd['addPIXIObj'](XD['trailContainer'], XH, 0x3e8, 0x0),
                Xd['addPIXIObj'](XD['flareContainer'], XH, 0x3e8, 0x1),
                XD['isNew'] = !0x1;
            }
        }
    }
    ['Dgc'](p) {
        for (let b = 0x0; b < this['bullets']['length']; b++) {
            const XT = this['bullets'][b];
            if (XT['alive'] || XT['collided']) {
                const XY = p['MobS'](XT['pos']);
                XT['flareContainer']['position']['set'](XY['x'], XY['y']);
                const XC = p['uRFX'](0x1);
                XT['flareContainer']['scale']['set'](XC * XT['flareScale'], XC * XT['flareScale']);
                const Xl = v['length'](v['sub'](XT['pos'], XT['startPos']));
                XT['trailContainer']['position']['set'](XY['x'], XY['y']);
                const Xd = e['min'](XT['tracerLength'] * 0xf, Xl / 0x2);
                XT['trailContainer']['scale']['set'](XC * Xd * XT['trailScale'], XC);
            }
        }
    }
}
class Qa {
    ['__id'];
    ['__type'];
    ['active'];
    ['ticker'] = 0x0;
    ['playDropSfx'] = !0x1;
    ['container'] = new y();
    ['sprite'] = new y();
    ['emitter'] = null;
    ['updatedData'];
    ['pos'];
    ['isOld'];
    ['layer'];
    ['type'];
    ['count'];
    ['isPreloadedGun'];
    ['ownerId'];
    ['rad'];
    ['imgScale'];
    constructor() {
        this['container']['anchor']['set'](0.5, 0.5),
        this['container']['scale']['set'](0x1, 0x1),
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['scale']['set'](0.8, 0.8),
        this['container']['addChild'](this['sprite']);
    }
    ['rfNkqZ']() {
        this['updatedData'] = !0x1;
    }
    ['dphRtI']() {
        this['container']['visible'] = !0x1,
        this['emitter'] && (this['emitter']['stop'](),
        this['emitter'] = null);
    }
    ['wzDEnz'](p, b, XT, XY) {
        if (this['updatedData'] = !0x0,
        this['pos'] = v['copy'](p['pos']),
        b && (this['layer'] = p['layer'],
        this['type'] = p['type'],
        this['count'] = p['count'],
        this['isOld'] = p['isOld'],
        this['isPreloadedGun'] = p['isPreloadedGun'],
        this['ownerId'] = p['hasOwner'] ? p['ownerId'] : 0x0),
        XT) {
            const XC = w[this['type']];
            this['ticker'] = 0x0,
            this['isOld'] && (this['ticker'] = 0xa),
            !this['isOld'] && XC['sound']['drop'] && !XY['map']['lootDropSfxIds']['includes'](this['__id']) && (this['playDropSfx'] = !0x0),
            this['rad'] = L['lootRadius'][XC['type']],
            this['imgScale'] = XC['lootImg']?.['scale'] * 1.25;
            const Xl = XC['lootImg']['innerScale'] || 0.8;
            this['sprite']['scale']['set'](Xl, Xl),
            this['sprite']['texture'] = x['from'](XC['lootImg']?.['sprite']),
            this['sprite']['tint'] = XC['lootImg']?.['tint'],
            this['container']['texture'] = XC['lootImg']['border'] ? x['from'](XC['lootImg']['border']) : x['EMPTY'],
            this['isPreloadedGun'] && (this['container']['texture'] = x['from']('loot-circle-outer-06.img'));
            const Xd = w[XC['ammo']];
            Xd ? this['container']['tint'] = Xd['lootImg']['tintDark'] : XC['lootImg']['borderTint'] ? this['container']['tint'] = XC['lootImg']['borderTint'] : this['container']['tint'] = 0x0,
            XC['type'] == 'xp' && XC['emitter'] && (this['emitter'] = XY['particleBarn']['addEmitter'](XC['emitter'], {
                'pos': this['pos'],
                'layer': this['layer']
            })),
            this['sprite']['rotation'] = XC?.['lootImg']?.['rot'] ? XC['lootImg']['rot'] : 0x0,
            this['sprite']['scale']['x'] = XC['lootImg']['mirror'] ? -Xl : Xl,
            this['container']['visible'] = !0x0;
        }
        (XT || b) && XY['renderer']['addPIXIObj'](this['container'], this['layer'], 0xd, this['__id']);
    }
}
class Za {
    ['lootPool'] = new be(Qa);
    ['closestLoot'] = null;
    ['Gxhh'](b, XT, XY, XC, Xl, Xd) {
        this['closestLoot'] = null;
        let Xk = Number['MAX_VALUE'];
        const XU = this['lootPool']['KGHPNo']();
        for (let XW = 0x0; XW < XU['length']; XW++) {
            const XD = XU[XW];
            if (XD['active']) {
                if (t['sameLayer'](XD['layer'], XT['layer']) && !XT['QDvlP']['GUi'] && (XD['ownerId'] == 0x0 || XD['ownerId'] == XT['__id'])) {
                    const p1 = XD['pos']
                      , p2 = k['touch'] ? XT['Guz'] + XD['rad'] * L['player']['touchLootRadMult'] : XD['rad']
                      , p3 = v['sub'](XT['NLYJ'], p1)
                      , p4 = v['lengthSqr'](p3);
                    p4 < p2 * p2 && p4 < Xk && (Xk = p4,
                    this['closestLoot'] = XD);
                }
                if (XD['ticker'] += b,
                XD['playDropSfx']) {
                    XY['lootDropSfxIds']['push'](XD['__id']),
                    XD['playDropSfx'] = !0x1;
                    const p5 = w[XD['type']];
                    XC['playSound'](p5['sound']?.['drop'], {
                        'channel': 'sfx',
                        'soundPos': XD['pos'],
                        'layer': XD['layer'],
                        'filter': 'muffled'
                    });
                }
                XD['emitter'] && (XD['emitter']['pos'] = v['add'](XD['pos'], v['create'](0x0, 0.1)),
                XD['emitter']['layer'] = XD['layer']);
                const XG = e['delerp'](XD['ticker'], 0x0, 0x1)
                  , XF = e['easeOutElastic'](XG, 0.75)
                  , XH = Xl['MobS'](XD['pos'])
                  , p0 = Xl['uRFX'](XD['imgScale'] * XF);
                k['debug'] && Xd['loot'] && XT['layer'] === XD['layer'] && he['addCircle'](XD['pos'], XD['rad'], 0xff0000, 0x0),
                XD['container']['position']['set'](XH['x'], XH['y']),
                XD['container']['scale']['set'](p0, p0);
            }
        }
    }
    ['getClosestLoot']() {
        return this['closestLoot'];
    }
}
class o {
    constructor(p, b) {
        this['min'] = p,
        this['max'] = b;
    }
    ['getRandom']() {
        return t['random'](this['min'], this['max']);
    }
}
function we(p) {
    return p instanceof o ? p['getRandom']() : p;
}
function Ya(p) {
    return p instanceof Function ? p() : p;
}
class ci {
    ['active'] = !0x1;
    ['ticker'] = 0x0;
    ['def'] = {};
    ['sprite'] = new y();
    ['hasParent'] = !0x1;
    ['pos'];
    ['vel'];
    ['rot'];
    ['delay'];
    ['life'];
    ['drag'];
    ['rotVel'];
    ['rotDrag'];
    ['scaleUseExp'];
    ['scale'];
    ['scaleEnd'];
    ['scaleExp'];
    ['alphaUseExp'];
    ['alpha'];
    ['alphaEnd'];
    ['alphaExp'];
    ['alphaIn'];
    ['alphaInStart'];
    ['alphaInEnd'];
    ['emitterIdx'];
    ['valueAdjust'];
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['scale']['set'](0x1, 0x1),
        this['sprite']['visible'] = !0x1;
    }
    ['init'](b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
        const XG = Et[XT];
        this['active'] = !0x0,
        this['ticker'] = 0x0,
        XU ? (this['hasParent'] = !0x0,
        XU['addChild'](this['sprite'])) : (this['hasParent'] = !0x1,
        b['addPIXIObj'](this['sprite'], XY, XW)),
        this['pos'] = v['copy'](XC),
        this['vel'] = v['copy'](Xl),
        this['rot'] = Xk,
        this['def'] = XG,
        this['delay'] = 0x0,
        this['life'] = we(XG['life']),
        this['drag'] = we(XG['drag']),
        this['rotVel'] = we(XG['rotVel']) * (Math['random']() < 0.5 ? -0x1 : 0x1),
        this['rotDrag'] = we(XG['drag']) / 0x2,
        this['scaleUseExp'] = XG['scale']['exp'] !== void 0x0,
        this['scale'] = we(XG['scale']['start']) * Xd,
        this['scaleEnd'] = this['scaleUseExp'] ? 0x0 : we(XG['scale']?.['end']) * Xd,
        this['scaleExp'] = this['scaleUseExp'] ? XG['scale']['exp'] : 0x0,
        this['alphaUseExp'] = XG['alpha']['exp'] !== void 0x0,
        this['alpha'] = we(XG['alpha']['start']),
        this['alphaEnd'] = this['alphaUseExp'] ? 0x0 : we(XG['alpha']?.['end']),
        this['alphaExp'] = this['alphaUseExp'] ? XG['alpha']['exp'] : 0x0,
        this['alphaIn'] = XG['alphaIn'] !== void 0x0,
        this['alphaInStart'] = this['alphaIn'] ? we(XG['alphaIn']?.['start']) : 0x0,
        this['alphaInEnd'] = this['alphaIn'] ? we(XG['alphaIn']?.['end']) : 0x0,
        this['emitterIdx'] = -0x1;
        const XF = Array['isArray'](XG['image']) ? XG['image'][Math['floor'](Math['random']() * XG['image']['length'])] : XG['image'];
        this['sprite']['texture'] = x['from'](XF),
        this['sprite']['visible'] = !0x1,
        this['valueAdjust'] = XG['ignoreValueAdjust'] ? 0x1 : XD,
        this['setColor'](Ya(XG['color']));
    }
    ['free']() {
        this['active'] = !0x1,
        this['sprite']['visible'] = !0x1;
    }
    ['setDelay'](p) {
        this['delay'] = p;
    }
    ['setColor'](p) {
        this['valueAdjust'] < 0x1 && (p = t['adjustValue'](p, this['valueAdjust'])),
        this['sprite']['tint'] = p;
    }
}
class Ja {
    ['active'] = !0x1;
    ['enabled'];
    ['type'];
    ['pos'];
    ['dir'];
    ['scale'];
    ['layer'];
    ['duration'];
    ['radius'];
    ['ticker'];
    ['nextSpawn'];
    ['spawnCount'];
    ['parent'];
    ['alpha'];
    ['rateMult'];
    ['zOrd'];
    ['init'](p, b={}) {
        const XT = Ki[p];
        this['active'] = !0x0,
        this['enabled'] = !0x0,
        this['type'] = p,
        this['pos'] = b['pos'] ? v['copy'](b['pos']) : v['create'](0x0, 0x0),
        this['dir'] = b['dir'] ? v['copy'](b['dir']) : v['create'](0x0, 0x1),
        this['scale'] = b['scale'] !== void 0x0 ? b['scale'] : 0x1,
        this['layer'] = b['layer'] || 0x0,
        this['duration'] = b['duration'] !== void 0x0 ? b['duration'] : Number['MAX_VALUE'],
        this['radius'] = b['radius'] !== void 0x0 ? b['radius'] : XT['radius'],
        this['ticker'] = 0x0,
        this['nextSpawn'] = 0x0,
        this['spawnCount'] = 0x0,
        this['parent'] = b['parent'] || null,
        this['alpha'] = 0x1,
        this['rateMult'] = b['rateMult'] !== void 0x0 ? b['rateMult'] : 0x1;
        const XY = Et[XT['particle']];
        this['zOrd'] = XT['zOrd'] !== void 0x0 ? XT['zOrd'] : XY['zOrd'] !== void 0x0 ? XY['zOrd'] : 0x14;
    }
    ['free']() {
        this['active'] = !0x1;
    }
    ['stop']() {
        this['duration'] = this['ticker'];
    }
}
class Ji {
    constructor(p) {
        this['renderer'] = p;
        for (let b = 0x0; b < 0x100; b++)
            this['particles'][b] = new ci();
    }
    ['particles'] = [];
    ['emitters'] = [];
    ['valueAdjust'] = 0x1;
    ['onMapLoad'](p) {
        this['valueAdjust'] = p['getMapDef']()['biome']['valueAdjust'];
    }
    ['dphRtI']() {
        for (let p = 0x0; p < this['particles']['length']; p++) {
            const b = this['particles'][p]['sprite'];
            b['parent']?.['removeChild'](b),
            b['destroy']({
                'children': !0x0
            });
        }
    }
    ['addParticle'](p, b, XT, XY, XC, Xl, Xd, Xk) {
        let XU = null;
        for (let XW = 0x0; XW < this['particles']['length']; XW++)
            if (!this['particles'][XW]['active']) {
                XU = this['particles'][XW];
                break;
            }
        return XU || (XU = new ci(),
        this['particles']['push'](XU)),
        XC = XC !== void 0x0 ? XC : 0x1,
        Xl = Xl !== void 0x0 ? Xl : Math['random']() * Math['PI'] * 0x2,
        Xk = Xk !== void 0x0 ? Xk : Et[p]['zOrd'] || 0x14,
        XU['init'](this['renderer'], p, b, XT, XY, XC, Xl, Xd, Xk, this['valueAdjust']),
        XU;
    }
    ['addRippleParticle'](p, b, XT) {
        const XY = this['addParticle']('waterRipple', b, p, v['create'](0x0, 0x0), 0x1, 0x0, null);
        return XY['setColor'](XT),
        XY;
    }
    ['addEmitter'](p, b={}) {
        let XT = null;
        for (let XY = 0x0; XY < this['emitters']['length']; XY++)
            if (!this['emitters'][XY]['active']) {
                XT = this['emitters'][XY];
                break;
            }
        return XT || (XT = new Ja(),
        this['emitters']['push'](XT)),
        XT['init'](p, b),
        XT;
    }
    ['Gxhh'](b, XT, XY) {
        for (let XC = 0x0; XC < this['emitters']['length']; XC++) {
            const Xl = this['emitters'][XC];
            if (Xl['active'] && Xl['enabled']) {
                Xl['ticker'] += b,
                Xl['nextSpawn'] -= b;
                const Xd = Ki[Xl['type']];
                for (; Xl['nextSpawn'] <= 0x0 && Xl['spawnCount'] < Xd['maxCount']; ) {
                    const Xk = Xl['scale'] * Xl['radius']
                      , XU = v['add'](Xl['pos'], t['randomPointInCircle'](Xk))
                      , XW = v['rotate'](Xl['dir'], (Math['random']() - 0.5) * Xd['angle'])
                      , XD = v['mul'](XW, we(Xd['speed']))
                      , XG = we(Xd['rot'])
                      , XF = this['addParticle'](Xd['particle'], Xl['layer'], XU, XD, Xl['scale'], XG, Xl['parent'], Xl['zOrd']);
                    XF['emitterIdx'] = XC;
                    let XH = we(Xd['rate']);
                    if (Xd['maxRate']) {
                        const p0 = e['easeInExpo'](e['min'](0x1, Xl['ticker'] / Xd['maxElapsed']))
                          , p1 = we(Xd['maxRate']);
                        XH = e['lerp'](p0, XH, p1);
                    }
                    Xl['nextSpawn'] += XH * Xl['rateMult'],
                    Xl['spawnCount']++;
                }
                Xl['ticker'] >= Xl['duration'] && Xl['free']();
            }
        }
        for (let p2 = 0x0; p2 < this['particles']['length']; p2++) {
            const p3 = this['particles'][p2];
            if (p3['active'] && (p3['ticker'] += b,
            p3['ticker'] >= p3['delay'])) {
                const p4 = e['min']((p3['ticker'] - p3['delay']) / p3['life'], 0x1);
                p3['vel'] = v['mul'](p3['vel'], 0x1 / (0x1 + b * p3['drag'])),
                p3['pos'] = v['add'](p3['pos'], v['mul'](p3['vel'], b)),
                p3['rotVel'] *= 0x1 / (0x1 + b * p3['rotDrag']),
                p3['rot'] += p3['rotVel'] * b,
                p3['scaleUseExp'] && (p3['scale'] += b * p3['scaleExp']),
                p3['alphaUseExp'] && (p3['alpha'] = e['max'](p3['alpha'] + b * p3['alphaExp'], 0x0));
                const p5 = p3['hasParent'] ? p3['pos'] : XT['MobS'](p3['pos']);
                let p6 = p3['scaleUseExp'] ? p3['scale'] : e['remap'](p4, p3['def']['scale']['lerp']?.['min'], p3['def']['scale']['lerp']?.['max'], p3['scale'], p3['scaleEnd'])
                  , p7 = p3['alphaUseExp'] ? p3['alpha'] : e['remap'](p4, p3['def']['alpha']['lerp']?.['min'], p3['def']['alpha']['lerp']?.['max'], p3['alpha'], p3['alphaEnd']);
                p3['alphaIn'] && p4 < p3['def']['alphaIn']?.['lerp']?.['max'] && (p7 = e['remap'](p4, p3['def']['alphaIn']?.['lerp']?.['min'], p3['def']['alphaIn']?.['lerp']?.['max'], p3['alphaInStart'], p3['alphaInEnd'])),
                p3['emitterIdx'] >= 0x0 && (p7 *= this['emitters'][p3['emitterIdx']]['alpha']),
                p3['hasParent'] || (p6 = XT['uRFX'](p6)),
                p3['sprite']['position']['set'](p5['x'], p5['y']),
                p3['sprite']['scale']['set'](p6, p6),
                p3['sprite']['rotation'] = p3['rot'],
                p3['sprite']['alpha'] = p7,
                p3['sprite']['visible'] = !0x0,
                p4 >= 0x1 && p3['free']();
            }
        }
    }
}
const Et = {
    'archwayBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.2,0.35),
            'end': new o(0.08,0.12),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.06, 0.84, t['random'](0.46, 0.48)));
        }
    },
    'bloodSplat': {
        'image': ['part-splat-01.img', 'part-splat-02.img', 'part-splat-03.img'],
        'life': 0.5,
        'drag': 0x1,
        'rotVel': 0x0,
        'scale': {
            'start': 0.04,
            'end': new o(0.15,0.2),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0xff0000, 0x1, t['random'](0.45, 0.8)));
        }
    },
    'barrelPlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x3,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.08,0.18),
            'end': new o(0.07,0.17),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.09, 0.8, t['random'](0.66, 0.68)));
        }
    },
    'barrelChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.01, 0.02, t['random'](0.38, 0.41)));
        }
    },
    'barrelBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.01, 0.02, t['random'](0.38, 0.41)));
        }
    },
    'blackChip': {
        'image': ['part-woodchip-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0.08, t['random'](0.16, 0.18)));
        }
    },
    'blueChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.64, 0x1, t['random'](0.83, 0.85)));
        }
    },
    'book': {
        'image': ['part-book-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x3,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.09,0.19),
            'end': new o(0.07,0.17),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0.42, t['random'](0.72, 0.74)));
        }
    },
    'bottleBrownChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.02,0.04),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0x783808
    },
    'bottleBrownBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.4,0.8),
        'drag': new o(0x1,0x4),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.03,0.06),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.8,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0x783808
    },
    'bottleBlueChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.02,0.04),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0x4c58
    },
    'bottleWhiteBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.4,0.8),
        'drag': new o(0x1,0x4),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.03,0.06),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.75,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0xffffff
    },
    'bottleWhiteChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.02,0.04),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.75,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0xffffff
    },
    'bottleBlueBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.4,0.8),
        'drag': new o(0x1,0x4),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.03,0.06),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.8,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0x4c58
    },
    'brickChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0.71, t['random'](0.32, 0.34)));
        }
    },
    'clothBreak': {
        'image': ['part-cloth-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.95, 0x1)));
        }
    },
    'clothHit': {
        'image': ['part-cloth-01.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.95, 0x1)));
        }
    },
    'depositBoxGreyBreak': {
        'image': ['part-plate-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x7,0x8),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.15,0.25),
            'end': new o(0.12,0.2),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.36, 0.38)));
        }
    },
    'depositBoxGoldBreak': {
        'image': ['part-plate-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x6,0x8),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.2,0.35),
            'end': new o(0.18,0.25),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.11, 0.84, t['random'](0.64, 0.66)));
        }
    },
    'glassChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0x80d9ff
    },
    'glassPlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0x80d9ff
    },
    'goldChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.11, 0.84, t['random'](0.88, 0.9)));
        }
    },
    'greenChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.4, 0.18, t['random'](0.5, 0.62)));
        }
    },
    'greenPlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.08,0.16),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0x3b452f
    },
    'greenhouseBreak': {
        'image': ['part-spark-02.img', 'part-plate-01.img', 'part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.8,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0x80d9ff
    },
    'hutBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.1, 0.81, t['random'](0.78, 0.82)));
        }
    },
    'leaf': {
        'image': ['part-leaf-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.5, 0.75)));
        }
    },
    'leafPrickly': {
        'image': ['part-leaf-01sv.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.8, 0.85)));
        }
    },
    'leafRiver': {
        'image': ['part-leaf-02.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.5, 0.75)));
        }
    },
    'lockerBreak': {
        'image': ['part-plate-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x7,0x8),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.15,0.2),
            'end': new o(0.12,0.15),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.1, 0.23, t['random'](0.51, 0.53)));
        }
    },
    'ltgreenChip': {
        'image': ['part-woodchip-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.2, 0.42, t['random'](0.38, 0.42)));
        }
    },
    'outhouseChip': {
        'image': ['part-woodchip-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0.57, t['random'](0.4, 0.46)));
        }
    },
    'outhouseBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0.79, t['random'](0.52, 0.54)));
        }
    },
    'outhousePlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0.57, t['random'](0.4, 0.46)));
        }
    },
    'potChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.06, 0.84, t['random'](0.73, 0.77)));
        }
    },
    'potBreak': {
        'image': ['part-pot-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.06, 0.84, t['random'](0.73, 0.77)));
        }
    },
    'potatoChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.075, 0.43, t['random'](0.48, 0.5)));
        }
    },
    'potatoBreak': {
        'image': ['part-pumpkin-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.075, 0.43, t['random'](0.48, 0.5)));
        }
    },
    'pumpkinChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.07, 0x1, t['random'](0.98, 0x1)));
        }
    },
    'pumpkinBreak': {
        'image': ['part-pumpkin-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0x1, t['random'](0.95, 0.97)));
        }
    },
    'squashChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.31, 0.86, t['random'](0.35, 0.36)));
        }
    },
    'squashBreak': {
        'image': ['part-pumpkin-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.31, 0.86, t['random'](0.35, 0.36)));
        }
    },
    'redChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.98, 0x1, t['random'](0.52, 0.54)));
        }
    },
    'redBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.98, 0x1, t['random'](0.52, 0.54)));
        }
    },
    'redPlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.02, 0x1, t['random'](0.26, 0.28)));
        }
    },
    'rockChip': {
        'image': ['map-stone-01.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.5, 0.75)));
        }
    },
    'rockBreak': {
        'image': ['map-stone-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.5, 0.75)));
        }
    },
    'rockEyeChip': {
        'image': ['map-stone-01.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.03,0.06),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0x292421
    },
    'rockEyeBreak': {
        'image': ['map-stone-01.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x4,0xc),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.05,0.1),
            'end': new o(0.03,0.06),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0x292421
    },
    'shackBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.1, 0.24, t['random'](0.38, 0.41)));
        }
    },
    'shackGreenBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0x577066
    },
    'tanChip': {
        'image': ['part-woodchip-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.1, 0.35, t['random'](0.48, 0.52)));
        }
    },
    'teahouseBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.6, 0.31, t['random'](0.42, 0.45)));
        }
    },
    'teapavilionBreak': {
        'image': ['part-panel-01.img'],
        'life': new o(0.5,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.25,0.55),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0.8, t['random'](0.6, 0.62)));
        }
    },
    'toiletBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.97, 0x0, t['random'](0.95, 0.97)));
        }
    },
    'toiletMetalBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.8,0x1),
        'drag': new o(0x4,0x5),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.01, 0.02, t['random'](0.38, 0.41)));
        }
    },
    'turkeyFeathersHit': {
        'image': ['part-feather-01.img', 'part-feather-02.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0xa),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.12),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return 0xffffff;
        }
    },
    'turkeyFeathersDeath': {
        'image': ['part-feather-01.img', 'part-feather-02.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0xa),
        'rotVel': new o(0x0,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.15,0.25),
            'end': new o(0.12,0.2),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return 0xffffff;
        }
    },
    'whiteChip': {
        'image': ['part-spark-02.img'],
        'life': 0.5,
        'drag': new o(0x1,0xa),
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.97, 0x0, t['random'](0.95, 0.97)));
        }
    },
    'whitePlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.97, 0x0, t['random'](0.95, 0.97)));
        }
    },
    'windowBreak': {
        'image': ['part-spark-02.img'],
        'life': new o(0.4,0.8),
        'drag': new o(0x1,0x4),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x6),
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.8,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0x80d9ff
    },
    'woodChip': {
        'image': ['part-woodchip-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.04,0.08),
            'end': new o(0.01,0.02),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.05, 0x1, t['random'](0.35, 0.45)));
        }
    },
    'woodLog': {
        'image': ['part-log-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.05, 0x1, t['random'](0.35, 0.45)));
        }
    },
    'woodPlank': {
        'image': ['part-plank-01.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x1,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.1,0.2),
            'end': new o(0.08,0.18),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.05, 0x1, t['random'](0.25, 0.35)));
        }
    },
    'woodShard': {
        'image': ['part-spark-02.img'],
        'life': new o(0x1,1.5),
        'drag': new o(0x3,0x5),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': new o(0.06,0.15),
            'end': new o(0.02,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.05, 0x1, t['random'](0.25, 0.35)));
        }
    },
    '9mm': {
        'image': ['part-shell-01.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.0625,
            'end': 0.0325,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '9mm_cursed': {
        'image': ['part-shell-01.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.0625,
            'end': 0.0325,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '762mm': {
        'image': ['part-shell-02.img'],
        'life': new o(0.75,0x1),
        'drag': new o(1.5,2.5),
        'rotVel': new o(Math['PI'] * 2.5,Math['PI'] * 2.5),
        'scale': {
            'start': 0.075,
            'end': 0.045,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.925,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '556mm': {
        'image': ['part-shell-04.img'],
        'life': new o(0.75,0x1),
        'drag': new o(1.5,2.5),
        'rotVel': new o(Math['PI'] * 2.5,Math['PI'] * 2.5),
        'scale': {
            'start': 0.075,
            'end': 0.045,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.925,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '12gauge': {
        'image': ['part-shell-03.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x1,0x2),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.1,
            'end': 0.05,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '50AE': {
        'image': ['part-shell-01.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.0625,
            'end': 0.0325,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '308sub': {
        'image': ['part-shell-05.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.0625,
            'end': 0.0325,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'flare': {
        'image': ['part-shell-03.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x1,0x2),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.1,
            'end': 0.05,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    '45acp': {
        'image': ['part-shell-01.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.07,
            'end': 0.04,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'potato_ammo': {
        'image': ['part-wedge-01.img'],
        'life': new o(0.5,0.75),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x3,Math['PI'] * 0x3),
        'scale': {
            'start': 0.07,
            'end': 0.04,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.95,0x1)
        },
        'color': 0xffffff
    },
    'bugle_ammo': {
        'image': ['part-note-02.img'],
        'life': new o(1.25,1.3),
        'drag': new o(0x3,0x4),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x1),
        'scale': {
            'start': 0.1,
            'end': 0.14,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.5,0x1)
        },
        'color': 0xffda00
    },
    'fragPin': {
        'image': ['part-frag-pin-01.img'],
        'life': new o(0.5,0.5),
        'drag': new o(0.9,0x1),
        'rotVel': 0x0,
        'scale': {
            'start': 0.18,
            'end': 0.14,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.5,0x1)
        },
        'color': 0xffffff
    },
    'fragLever': {
        'image': ['part-frag-lever-01.img'],
        'life': new o(0.5,0.5),
        'drag': new o(0.9,0x1),
        'rotVel': Math['PI'] * 0x9,
        'scale': {
            'start': 0.18,
            'end': 0.14,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.5,0x1)
        },
        'color': 0xffffff
    },
    'explosionBurst': {
        'image': ['part-frag-burst-01.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.065, 0x1, t['random'](0.98, 0.99)));
        }
    },
    'explosionMIRV': {
        'image': ['part-frag-burst-01.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x1, t['random'](0.82, 0.84)));
        }
    },
    'explosionSmoke': {
        'image': ['part-smoke-01.img'],
        'life': new o(0x2,0x3),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'explosionUSAS': {
        'image': ['part-frag-burst-01.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0x1, t['random'](0.98, 0.99)));
        }
    },
    'explosionRounds': {
        'image': ['part-frag-burst-03.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.08, 0.7, t['random'](0.75, 0.8)));
        }
    },
    'explosionBomb': {
        'image': ['part-frag-burst-02.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0xffffff
    },
    'explosionPotato': {
        'image': ['part-frag-burst-01.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0xad661a
    },
    'explosionPotatoSMG': {
        'image': ['part-frag-burst-01.img'],
        'life': 0.5,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0x1,
            'end': 0x4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.75,0x1)
        },
        'color': 0xc4a80a
    },
    'airdropSmoke': {
        'image': ['part-smoke-02.img', 'part-smoke-03.img'],
        'zOrd': 0x1f3,
        'life': new o(0x1,1.5),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.67,0.72),
            'end': new o(0.55,0.61),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'airdropCrate01': {
        'image': ['part-airdrop-01.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate01h': {
        'image': ['part-airdrop-01h.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate01x': {
        'image': ['part-airdrop-01x.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate02': {
        'image': ['part-airdrop-02.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate02h': {
        'image': ['part-airdrop-02h.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate02x': {
        'image': ['part-airdrop-02x.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate03': {
        'image': ['part-airdrop-03.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'airdropCrate04': {
        'image': ['part-airdrop-04.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell01a': {
        'image': ['part-class-shell-01a.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell01b': {
        'image': ['part-class-shell-01b.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell02a': {
        'image': ['part-class-shell-02a.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell02b': {
        'image': ['part-class-shell-02b.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell03a': {
        'image': ['part-class-shell-03a.img'],
        'life': new o(0.85,1.15),
        'drag': new o(0x2,2.25),
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'classShell03b': {
        'image': ['part-class-shell-03b.img'],
        'life': new o(0.85,1.15),
        'drag': new o(1.85,2.15),
        'rotVel': new o(0x0,Math['PI'] * 0x2),
        'scale': {
            'start': 0.5,
            'end': 0.4,
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffffff
    },
    'cabinSmoke': {
        'image': ['part-smoke-02.img', 'part-smoke-03.img'],
        'life': new o(0x3,3.25),
        'drag': new o(0.2,0.22),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.2,0.25),
            'end': new o(0.6,0.65),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.7,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0.7,
            'lerp': new o(0x0,0.1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.69, 0.695)));
        }
    },
    'bathhouseSteam': {
        'image': ['part-smoke-02.img', 'part-smoke-03.img'],
        'life': new o(0xa,0xc),
        'drag': new o(0.04,0.06),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.2,0.25),
            'end': new o(0.9,0.95),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.5,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0.5,
            'lerp': new o(0x0,0.1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.99, 0.995)));
        }
    },
    'bunkerBubbles': {
        'image': ['player-ripple-01.img'],
        'zOrd': 0xa,
        'life': new o(2.25,2.5),
        'drag': new o(1.85,2.15),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.2,0.25),
            'end': new o(0.65,0.7),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0.25,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.95, 0x1)));
        }
    },
    'waterRipple': {
        'image': ['player-ripple-01.img'],
        'zOrd': 0xa,
        'life': 1.75,
        'drag': 0x0,
        'rotVel': 0x0,
        'scale': {
            'start': 0.15,
            'exp': 0.5
        },
        'alpha': {
            'start': 0x1,
            'exp': -0x1
        },
        'color': 0xb3f0ff
    },
    'leafAutumn': {
        'image': ['part-leaf-03.img', 'part-leaf-04.img', 'part-leaf-05.img', 'part-leaf-06.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'leafHalloween': {
        'image': ['part-leaf-03.img', 'part-leaf-04.img', 'part-leaf-05.img', 'part-leaf-06.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.5, 0.55)));
        },
        'ignoreValueAdjust': !0x0
    },
    'leafSpring': {
        'image': ['part-blossom-01.img', 'part-blossom-02.img', 'part-blossom-03.img', 'part-blossom-04.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'leafSummer': {
        'image': ['part-leaf-06.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.7, 0.95)));
        },
        'ignoreValueAdjust': !0x0
    },
    'leafPotato': {
        'image': ['part-blossom-01.img', 'part-blossom-02.img', 'part-blossom-03.img', 'part-blossom-04.img', 'part-potato-02.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'potato': {
        'image': ['part-potato-02.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.15),
            'end': new o(0.08,0.11),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'snow': {
        'image': ['part-snow-01.img'],
        'life': new o(0xa,0xf),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.07,0.12),
            'end': new o(0.05,0.1),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'snowball_impact': {
        'image': ['part-snow-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.23),
            'end': new o(0.07,0.14),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'potato_impact': {
        'image': ['part-potato-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.23),
            'end': new o(0.07,0.14),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95)));
        }
    },
    'potato_smg_impact': {
        'image': ['part-potato-01.img'],
        'life': new o(0.5,0x1),
        'drag': new o(0x0,0x0),
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.13,0.23),
            'end': new o(0.07,0.14),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.9,0x1)
        },
        'color': 0xffe585
    },
    'heal_basic': {
        'image': ['part-heal-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0.25,
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.1,0.12),
            'end': new o(0.05,0.07),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'heal_heart': {
        'image': ['part-heal-heart.img'],
        'life': new o(0.75,0x1),
        'drag': 0.25,
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.1,0.12),
            'end': new o(0.05,0.07),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'heal_moon': {
        'image': ['part-heal-moon.img'],
        'life': new o(0.75,0x1),
        'drag': 0.25,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.1,0.12),
            'end': new o(0.05,0.07),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'heal_tomoe': {
        'image': ['part-heal-tomoe.img'],
        'life': new o(0.75,0x1),
        'drag': 0.25,
        'rotVel': new o(Math['PI'] * 0.5,Math['PI'] * 0x1),
        'scale': {
            'start': new o(0.1,0.12),
            'end': new o(0.05,0.07),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0x0, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'boost_basic': {
        'image': ['part-boost-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.3, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'boost_star': {
        'image': ['part-boost-star.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.3, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'boost_naturalize': {
        'image': ['part-boost-naturalize.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.35,Math['PI'] * 0.7),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.3, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'boost_shuriken': {
        'image': ['part-boost-shuriken.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0x1,Math['PI'] * 0x2),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.3, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'revive_basic': {
        'image': ['part-heal-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0.25,
        'rotVel': 0x0,
        'scale': {
            'start': new o(0.1,0.12),
            'end': new o(0.05,0.07),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.83, 0x1, t['random'](0.7, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'leafStim': {
        'image': ['part-blossom-01.img', 'part-blossom-02.img', 'part-blossom-03.img', 'part-blossom-04.img'],
        'life': new o(0x4,0x5),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.37, 0x1, t['random'](0.95, 0x1)));
        }
    },
    'takedownStim': {
        'image': ['part-takedown-01.img'],
        'life': new o(0x4,0x5),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': 0xc80000
    },
    'inspireStim': {
        'image': ['part-note-01.img'],
        'life': new o(0x4,0x5),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return t['rgbToInt'](t['hsvToRgb'](0.13, 0x1, t['random'](0.98, 0x1)));
        }
    },
    'xp_common': {
        'image': ['part-boost-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return Math['random']() > 0.5 ? t['rgbToInt'](t['hsvToRgb'](0.12, 0.97, t['random'](0.95, 0x1))) : t['rgbToInt'](t['hsvToRgb'](0.16, 0x1, t['random'](0.95, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'xp_rare': {
        'image': ['part-boost-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return Math['random']() > 0.5 ? t['rgbToInt'](t['hsvToRgb'](0.05, 0.94, t['random'](0.85, 0.88))) : t['rgbToInt'](t['hsvToRgb'](0.06, 0.95, t['random'](0.95, 0x1)));
        },
        'ignoreValueAdjust': !0x0
    },
    'xp_mythic': {
        'image': ['part-boost-basic.img'],
        'life': new o(0.75,0x1),
        'drag': 0x0,
        'rotVel': new o(Math['PI'] * 0.25,Math['PI'] * 0.5),
        'scale': {
            'start': new o(0.12,0.14),
            'end': new o(0.06,0.08),
            'lerp': new o(0x0,0x1)
        },
        'alpha': {
            'start': 0x1,
            'end': 0x0,
            'lerp': new o(0.7,0x1)
        },
        'alphaIn': {
            'start': 0x0,
            'end': 0x1,
            'lerp': new o(0x0,0.05)
        },
        'color': function() {
            return Math['random']() > 0.5 ? t['rgbToInt'](t['hsvToRgb'](0x0, 0.96, t['random'](0.91, 0.94))) : t['rgbToInt'](t['hsvToRgb'](0.03, 0.95, t['random'](0.92, 0.95)));
        },
        'ignoreValueAdjust': !0x0
    }
}
  , Ki = {
    'smoke_barrel': {
        'particle': 'explosionSmoke',
        'rate': new o(0.2,0.3),
        'radius': 0x0,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.1,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'cabin_smoke_parent': {
        'particle': 'cabinSmoke',
        'rate': new o(0.72,0.83),
        'radius': 0x0,
        'speed': new o(0x40,0x60),
        'angle': Math['PI'] * 0.1,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'bathhouse_steam': {
        'particle': 'bathhouseSteam',
        'rate': new o(0x2,0x3),
        'radius': 0x1,
        'speed': new o(1.5,0x2),
        'angle': Math['PI'] * 0.1,
        'maxCount': Number['MAX_VALUE']
    },
    'bunker_bubbles_01': {
        'particle': 'bunkerBubbles',
        'rate': new o(0.3,0.325),
        'radius': 0x0,
        'speed': new o(1.6,1.8),
        'angle': Math['PI'] * -2.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'bunker_bubbles_02': {
        'particle': 'bunkerBubbles',
        'rate': new o(0.4,0.425),
        'radius': 0x0,
        'speed': new o(1.6,1.8),
        'angle': Math['PI'] * -2.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'falling_leaf': {
        'particle': 'leafAutumn',
        'rate': new o(0.08,0.12),
        'radius': 0x78,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_leaf_halloween': {
        'particle': 'leafHalloween',
        'rate': new o(0.08,0.12),
        'radius': 0x78,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_leaf_spring': {
        'particle': 'leafSpring',
        'rate': new o(0.1,0.14),
        'radius': 0x78,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_leaf_summer': {
        'particle': 'leafSummer',
        'rate': new o(0.18,0.24),
        'radius': 0x78,
        'speed': new o(1.4,2.4),
        'angle': Math['PI'] * 0.2,
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_leaf_potato': {
        'particle': 'leafPotato',
        'rate': new o(0.1,0.14),
        'radius': 0x78,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_potato': {
        'particle': 'potato',
        'rate': new o(0.2,0.24),
        'radius': 0x78,
        'speed': new o(0x2,0x3),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_snow_fast': {
        'particle': 'snow',
        'rate': new o(0.12,0.17),
        'maxRate': new o(0.05,0.07),
        'maxElapsed': 0xf0,
        'radius': 0x46,
        'speed': new o(0x1,1.5),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'falling_snow_slow': {
        'particle': 'snow',
        'rate': new o(0.08,0.12),
        'radius': 0x46,
        'speed': new o(0x1,1.5),
        'angle': Math['PI'] * 0.2,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE'],
        'zOrd': 0x3e7
    },
    'heal_basic': {
        'particle': 'heal_basic',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'heal_heart': {
        'particle': 'heal_heart',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'heal_moon': {
        'particle': 'heal_moon',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'heal_tomoe': {
        'particle': 'heal_tomoe',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'boost_basic': {
        'particle': 'boost_basic',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'boost_star': {
        'particle': 'boost_star',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'boost_naturalize': {
        'particle': 'boost_naturalize',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'boost_shuriken': {
        'particle': 'boost_shuriken',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': new o(0x0,Math['PI'] * 0x2),
        'maxCount': Number['MAX_VALUE']
    },
    'revive_basic': {
        'particle': 'revive_basic',
        'rate': new o(0.5,0.55),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'windwalk': {
        'particle': 'leafStim',
        'rate': new o(0.1,0.12),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'takedown': {
        'particle': 'takedownStim',
        'rate': new o(0.1,0.12),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'inspire': {
        'particle': 'inspireStim',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'xp_common': {
        'particle': 'xp_common',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'xp_rare': {
        'particle': 'xp_rare',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    },
    'xp_mythic': {
        'particle': 'xp_mythic',
        'rate': new o(0.3,0.35),
        'radius': 1.5,
        'speed': new o(0x1,1.5),
        'angle': 0x0,
        'rot': 0x0,
        'maxCount': Number['MAX_VALUE']
    }
}
  , Ka = 1.25
  , Dt = 0.75
  , Xa = 0.75
  , Xi = 0x2;
class es {
    ['active'] = !0x1;
    ['sprite'] = new y();
    ['soundRangeMult'];
    ['id'];
    ['pos'];
    ['planeDir'];
    ['actionComplete'];
    ['dirty'];
    ['soundInstance'];
    ['soundUpdateThrottle'];
    ['alpha'];
    ['renderAlpha'];
    ['spriteUpdateTime'];
    ['type'];
    ['config'];
    ['rad'];
    ['planeSound'];
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['visible'] = !0x1;
    }
    ['rfNkqZ'](p, b) {
        switch (this['id'] = p['id'],
        this['pos'] = v['copy'](p['pos']),
        this['planeDir'] = v['copy'](p['planeDir']),
        this['actionComplete'] = p['actionComplete'],
        this['active'] = !0x0,
        this['dirty'] = !0x1,
        this['soundInstance'] = null,
        this['soundUpdateThrottle'] = 0x0,
        this['alpha'] = Dt,
        this['renderAlpha'] = 0x1,
        this['spriteUpdateTime'] = 0x0,
        this['type'] = p['action'],
        this['config'] = this['type'] == L['Plane']['Airdrop'] ? L['airdrop'] : L['airstrike'],
        this['rad'] = this['config']['planeRad'],
        this['type']) {
        case L['Plane']['Airdrop']:
            this['sprite']['texture'] = x['from'](b['getMapDef']()['biome']['airdrop']['planeImg']),
            this['planeSound'] = b['getMapDef']()['biome']['airdrop']['planeSound'];
            break;
        case L['Plane']['Airstrike']:
            this['sprite']['texture'] = x['from']('map-plane-02.img'),
            this['planeSound'] = 'fighter_01';
        }
        this['sprite']['visible'] = !0x0,
        this['sprite']['rotation'] = Math['atan2'](this['planeDir']['x'], this['planeDir']['y']);
    }
    ['dphRtI'](p) {
        this['spriteUpdateTime'] >= Xi && (this['soundInstance'] && (p['stopSound'](this['soundInstance']),
        this['soundInstance'] = null),
        this['sprite']['visible'] = !0x1,
        this['active'] = !0x1);
    }
}
class ts {
    constructor(p) {
        this['container'] = p,
        p['addChild'](this['gfx']);
    }
    ['active'] = !0x1;
    ['pos'] = v['create'](0x0, 0x0);
    ['rad'] = 0x0;
    ['duration'] = 0x0;
    ['ticker'] = 0x0;
    ['gfx'] = new r();
    ['renderPos'];
    ['renderRad'];
    ['rfNkqZ'](p, b, XT) {
        this['active'] = !0x0,
        this['pos'] = v['copy'](p),
        this['rad'] = b,
        this['duration'] = XT,
        this['ticker'] = 0x0,
        this['renderPos'] = v['create'](0x0, 0x0),
        this['renderRad'] = 0x0,
        this['gfx']['visible'] = !0x0;
    }
    ['Gxhh'](p) {
        this['ticker'] += p,
        this['gfx']['visible'] = !0x0,
        this['ticker'] >= this['duration'] && (this['gfx']['visible'] = !0x1,
        this['active'] = !0x1);
    }
    ['render'](p, b, XT) {
        const XY = p['getMapPosFromWorldPos'](this['pos'], b)
          , XC = p['getMapPosFromWorldPos'](v['add'](this['pos'], v['create'](this['rad'], 0x0)), b)
          , Xl = v['length'](v['sub'](XC, XY))
          , Xd = !v['eq'](this['renderPos'], XY, 0.0001)
          , Xk = !e['eqAbs'](this['renderRad'], Xl, 0.0001);
        Xd && (this['renderPos'] = v['copy'](XY)),
        Xk && (this['renderRad'] = Xl),
        Xd && this['gfx']['position']['set'](this['renderPos']['x'], this['renderPos']['y']),
        Xk && (this['gfx']['clear'](),
        this['gfx']['lineStyle'](1.5, 0xeaff00),
        this['gfx']['beginFill'](0xeaff00, 0.2),
        this['gfx']['drawCircle'](0x0, 0x0, this['renderRad']),
        this['gfx']['endFill']());
        const XU = e['smoothstep'](this['ticker'], 0x0, 0.5) * (0x1 - e['smoothstep'](this['ticker'], this['duration'] - 0.5, this['duration']));
        this['gfx']['alpha'] = XU;
    }
}
class is {
    constructor(p) {
        this['audioManager'] = p;
    }
    ['planes'] = [];
    ['airstrikeZones'] = [];
    ['airstrikeZoneContainer'] = new f();
    ['dphRtI']() {
        for (let p = 0x0; p < this['planes']['length']; p++)
            this['planes'][p]['dphRtI'](this['audioManager']);
    }
    ['updatePlanes'](p, b) {
        for (let XT = 0x0; XT < this['planes']['length']; XT++)
            this['planes'][XT]['dirty'] = !0x0;
        for (let XY = 0x0; XY < p['length']; XY++) {
            const XC = p[XY];
            let Xl = null;
            for (let Xd = 0x0; Xd < this['planes']['length']; Xd++) {
                const Xk = this['planes'][Xd];
                if (Xk['active'] && Xk['id'] == XC['id']) {
                    Xl = Xk;
                    break;
                }
            }
            Xl ||= this['addPlane'](XC, b),
            Xl['dirty'] = !0x1,
            Xl['actionComplete'] = XC['actionComplete'];
        }
        for (let XU = 0x0; XU < this['planes']['length']; XU++) {
            const XW = this['planes'][XU];
            XW['active'] && XW['dirty'] && XW['dphRtI'](this['audioManager']);
        }
    }
    ['addPlane'](p, b) {
        let XT = null;
        for (let XY = 0x0; XY < this['planes']['length']; XY++)
            if (!this['planes'][XY]['active']) {
                XT = this['planes'][XY];
                break;
            }
        return XT || (XT = new es(),
        this['planes']['push'](XT)),
        XT['rfNkqZ'](p, b),
        XT;
    }
    ['createAirstrikeZone'](p) {
        let b = null;
        for (let XT = 0x0; XT < this['airstrikeZones']['length']; XT++)
            if (!this['airstrikeZones'][XT]) {
                b = this['airstrikeZones'][XT];
                break;
            }
        return b || (b = new ts(this['airstrikeZoneContainer']),
        this['airstrikeZones']['push'](b)),
        b['rfNkqZ'](p['pos'], p['rad'], p['duration']),
        b;
    }
    ['Gxhh'](b, XT, XY, XC, Xl) {
        for (let Xd = 0x0; Xd < this['planes']['length']; Xd++) {
            const Xk = this['planes'][Xd];
            if (Xk['active']) {
                let XU = 0x0;
                if ((t['sameLayer'](XU, XY['layer']) || XY['layer'] & 0x2) && (!(XY['layer'] & 0x2) || !XC['insideStructureMask'](T['createCircle'](Xk['pos'], 0x1))) && (XU |= 0x2),
                Xk['pos'] = v['add'](Xk['pos'], v['mul'](Xk['planeDir'], b * Xk['config']['planeVel'])),
                Xk['actionComplete'] && (Xk['spriteUpdateTime'] = Math['min'](Xk['spriteUpdateTime'] + b, Xi),
                Xk['rad'] = e['lerp'](Xk['spriteUpdateTime'], Xk['config']['planeRad'], Xk['config']['planeRad'] * Ka),
                Xk['alpha'] = e['lerp'](Xk['spriteUpdateTime'], Dt, Dt * Xa),
                Xk['soundRangeMult'] = e['max'](0x0, e['lerp'](Xk['spriteUpdateTime'], Xk['config']['soundRangeMult'], Xk['config']['soundRangeMult'] - Xk['config']['soundRangeDelta']))),
                Xk['soundInstance'])
                    Xk['soundUpdateThrottle'] < 0x0 ? (this['audioManager']['updateSound'](Xk['soundInstance'], 'sfx', Xk['pos'], {
                        'layer': XU,
                        'rangeMult': Xk['config']['soundRangeMult'],
                        'ignoreMinAllowable': !0x0,
                        'fallOff': Xk['config']['fallOff']
                    }),
                    Xk['soundUpdateThrottle'] = 0.1) : Xk['soundUpdateThrottle'] -= b;
                else {
                    const XH = v['length'](v['sub'](XY['NLYJ'], Xk['pos']))
                      , p0 = Xk['config']['soundRangeMax'] * Xk['config']['soundRangeMult'];
                    let p1 = 0x0;
                    if (Xk['type'] == L['Plane']['Airstrike']) {
                        const p2 = e['max'](0x96, XH);
                        p1 = (0x1 - e['clamp'](e['max'](0x0, p2) / 0x320, 0x0, 0x1)) * 2.25;
                    }
                    XH < p0 && (Xk['soundInstance'] = this['audioManager']['playSound'](Xk['planeSound'], {
                        'channel': 'sfx',
                        'soundPos': Xk['pos'],
                        'layer': XU,
                        'loop': !0x0,
                        'rangeMult': 2.5,
                        'ignoreMinAllowable': !0x0,
                        'fallOff': Xk['config']['fallOff'],
                        'offset': p1
                    }));
                }
                Xl['addPIXIObj'](Xk['sprite'], XU, 0x5dd, Xk['id']);
                const XW = XT['MobS'](Xk['pos'])
                  , XD = XT['uRFX'](Xk['rad'] / XT['xQaJqu'])
                  , XG = XC['insideBuildingCeiling'](T['createCircle'](XY['NLYJ'], 0.01), !0x0);
                let XF = Xk['alpha'];
                XY['layer'] == 0x1 ? XF = 0x0 : (XG || XY['layer'] & 0x1) && (XF = 0.15),
                Xk['renderAlpha'] = e['lerp'](b * 0x3, Xk['renderAlpha'], XF),
                Xk['sprite']['position']['set'](XW['x'], XW['y']),
                Xk['sprite']['scale']['set'](XD, XD),
                Xk['sprite']['tint'] = 0xffff00,
                Xk['sprite']['alpha'] = Xk['renderAlpha'],
                Xk['sprite']['visible'] = !0x0;
            }
        }
        for (let p3 = 0x0; p3 < this['airstrikeZones']['length']; p3++) {
            const p4 = this['airstrikeZones'][p3];
            p4['active'] && p4['Gxhh'](b);
        }
    }
    ['renderAirstrikeZones'](p, b, XT) {
        for (let XY = 0x0; XY < this['airstrikeZones']['length']; XY++) {
            const XC = this['airstrikeZones'][XY];
            XC['active'] && XC['render'](p, b, XT);
        }
    }
}
function F(p, b) {
    return {
        'time': p,
        'bones': b
    };
}
function K(p, b, XT) {
    return {
        'time': p,
        'fn': b,
        'args': XT
    };
}
class I {
    constructor(p=v['create'](0x0, 0x0), b=0x0, XT=v['create'](0x0, 0x0)) {
        this['pivot'] = p,
        this['rot'] = b,
        this['pos'] = XT,
        this['pivot'] = v['copy'](p),
        this['rot'] = 0x0,
        this['pos'] = v['copy'](XT);
    }
    ['copy'](p) {
        v['set'](this['pivot'], p['pivot']),
        this['rot'] = p['rot'],
        v['set'](this['pos'], p['pos']);
    }
    ['rotate'](p) {
        return this['rot'] = p,
        this;
    }
    ['offset'](p) {
        return this['pos'] = v['copy'](p),
        this;
    }
    static['identity'] = new I(v['create'](0x0, 0x0));
    static['lerp'](p, b, XT) {
        const XY = new I();
        return XY['pos'] = v['lerp'](p, b['pos'], XT['pos']),
        XY['rot'] = e['lerp'](p, b['rot'], XT['rot']),
        XY['pivot'] = v['lerp'](p, b['pivot'], XT['pivot']),
        XY;
    }
}
var Pe = (p => (p[p['HandL'] = 0x0] = 'HandL',
p[p['HandR'] = 0x1] = 'HandR',
p[p['FootL'] = 0x2] = 'FootL',
p[p['FootR'] = 0x3] = 'FootR',
p))(Pe || {});
X3(Object['keys'](Pe)['length'] % 0x2 == 0x0);
const ui = {
    'fists': {
        0x0: new I(v['create'](0xe, -12.25)),
        0x1: new I(v['create'](0xe, 12.25))
    },
    'slash': {
        0x0: new I(v['create'](0x12, -8.25)),
        0x1: new I(v['create'](0x6, 20.25))
    },
    'meleeTwoHanded': {
        0x0: new I(v['create'](10.5, -14.25)),
        0x1: new I(v['create'](0x12, 6.25))
    },
    'meleeKatana': {
        0x0: new I(v['create'](8.5, 13.25)),
        0x1: new I(v['create'](-0x3, 17.75))
    },
    'meleeNaginata': {
        0x0: new I(v['create'](0x13, -7.25)),
        0x1: new I(v['create'](8.5, 24.25))
    },
    'machete': {
        0x0: new I(v['create'](0xe, -12.25)),
        0x1: new I(v['create'](0x1, 17.75))
    },
    'rifle': {
        0x0: new I(v['create'](0x1c, 5.25)),
        0x1: new I(v['create'](0xe, 1.75))
    },
    'dualRifle': {
        0x0: new I(v['create'](5.75, -0x10)),
        0x1: new I(v['create'](5.75, 0x10))
    },
    'bullpup': {
        0x0: new I(v['create'](0x1c, 5.25)),
        0x1: new I(v['create'](0x18, 1.75))
    },
    'launcher': {
        0x0: new I(v['create'](0x14, 0xa)),
        0x1: new I(v['create'](0x2, 0x16))
    },
    'pistol': {
        0x0: new I(v['create'](0xe, 1.75)),
        0x1: new I(v['create'](0xe, 1.75))
    },
    'dualPistol': {
        0x0: new I(v['create'](15.75, -8.75)),
        0x1: new I(v['create'](15.75, 8.75))
    },
    'throwable': {
        0x0: new I(v['create'](15.75, -9.625)),
        0x1: new I(v['create'](15.75, 9.625))
    },
    'downed': {
        0x0: new I(v['create'](0xe, -12.25)),
        0x1: new I(v['create'](0xe, 12.25)),
        0x2: new I(v['create'](-15.75, -0x9)),
        0x3: new I(v['create'](-15.75, 0x9))
    }
}
  , W = w
  , rs = {
    'none': {
        'keyframes': [],
        'effects': []
    },
    'fists': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0xe, 12.25))
        }), F(W['fists']['attack']['damageTimes'][0x0], {
            0x1: new I(v['create'](29.75, 1.75))
        }), F(W['fists']['attack']['cooldownTime'], {
            0x1: new I(v['create'](0xe, 12.25))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'cut': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0xe, 12.25))
        }), F(W['fists']['attack']['damageTimes'][0x0] * 0.25, {
            0x1: new I(v['create'](0xe, 12.25))['rotate'](-Math['PI'] * 0.35)
        }), F(W['fists']['attack']['damageTimes'][0x0] * 1.25, {
            0x1: new I(v['create'](0xe, 12.25))['rotate'](Math['PI'] * 0.35)
        }), F(W['fists']['attack']['cooldownTime'], {
            0x1: new I(v['create'](0xe, 12.25))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'cutReverse': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0x1, 17.75))
        }), F(W['fists']['attack']['damageTimes'][0x0] * 0.4, {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](Math['PI'] * 0.3)
        }), F(W['fists']['attack']['damageTimes'][0x0] * 1.4, {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](-Math['PI'] * 0.5)
        }), F(W['fists']['attack']['cooldownTime'], {
            0x1: new I(v['create'](0x1, 17.75))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'thrust': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0xe, 12.25))
        }), F(W['fists']['attack']['damageTimes'][0x0] * 0.4, {
            0x1: new I(v['create'](0x5, 12.25))['rotate'](Math['PI'] * 0.1)
        }), F(W['fists']['attack']['damageTimes'][0x0] * 1.4, {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](-Math['PI'] * 0x0)
        }), F(W['fists']['attack']['cooldownTime'], {
            0x1: new I(v['create'](0xe, 12.25))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'slash': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](0x12, -8.25)),
            0x1: new I(v['create'](0x6, 20.25))
        }), F(W['fists']['attack']['damageTimes'][0x0], {
            0x0: new I(v['create'](0x6, -22.25)),
            0x1: new I(v['create'](0x6, 20.25))['rotate'](-Math['PI'] * 0.6)
        }), F(W['fists']['attack']['cooldownTime'], {
            0x0: new I(v['create'](0x12, -8.25)),
            0x1: new I(v['create'](0x6, 20.25))['rotate'](0x0)
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'hook': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0xe, 12.25))
        }), F(W['hook']['attack']['damageTimes'][0x0] * 0.25, {
            0x1: new I(v['create'](0xe, 12.25))['rotate'](Math['PI'] * 0.1)
        }), F(W['hook']['attack']['damageTimes'][0x0], {
            0x1: new I(v['create'](0x18, 1.75))
        }), F(W['hook']['attack']['damageTimes'][0x0] + 0.05, {
            0x1: new I(v['create'](0xe, 12.25))['rotate'](Math['PI'] * -0.3)
        }), F(W['hook']['attack']['damageTimes'][0x0] + 0.1, {
            0x1: new I(v['create'](0xe, 12.25))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['hook']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'pan': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0xe, 12.25))
        }), F(0.15, {
            0x1: new I(v['create'](0x16, -8.25))['rotate'](-Math['PI'] * 0.2)
        }), F(0.25, {
            0x1: new I(v['create'](0x1c, -8.25))['rotate'](Math['PI'] * 0.5)
        }), F(0.55, {
            0x1: new I(v['create'](0xe, 12.25))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['pan']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'axeSwing': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](10.5, -14.25)),
            0x1: new I(v['create'](0x12, 6.25))
        }), F(W['woodaxe']['attack']['damageTimes'][0x0] * 0.4, {
            0x0: new I(v['create'](0x9, -14.25))['rotate'](Math['PI'] * 0.4),
            0x1: new I(v['create'](0x12, 6.25))['rotate'](Math['PI'] * 0.4)
        }), F(W['woodaxe']['attack']['damageTimes'][0x0], {
            0x0: new I(v['create'](0x9, -14.25))['rotate'](-Math['PI'] * 0.4),
            0x1: new I(v['create'](0x12, 6.25))['rotate'](-Math['PI'] * 0.4)
        }), F(W['woodaxe']['attack']['cooldownTime'], {
            0x0: new I(v['create'](10.5, -14.25)),
            0x1: new I(v['create'](0x12, 6.25))
        })],
        'effects': [K(W['woodaxe']['attack']['damageTimes'][0x0], 'animPlaySound', {
            'sound': 'swing'
        }), K(W['woodaxe']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'hammerSwing': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](10.5, -14.25)),
            0x1: new I(v['create'](0x12, 6.25))
        }), F(W['stonehammer']['attack']['damageTimes'][0x0] * 0.4, {
            0x0: new I(v['create'](0x9, -14.25))['rotate'](Math['PI'] * 0.4),
            0x1: new I(v['create'](0x12, 6.25))['rotate'](Math['PI'] * 0.4)
        }), F(W['stonehammer']['attack']['damageTimes'][0x0], {
            0x0: new I(v['create'](0x9, -14.25))['rotate'](-Math['PI'] * 0.4),
            0x1: new I(v['create'](0x12, 6.25))['rotate'](-Math['PI'] * 0.4)
        }), F(W['stonehammer']['attack']['cooldownTime'], {
            0x0: new I(v['create'](10.5, -14.25)),
            0x1: new I(v['create'](0x12, 6.25))
        })],
        'effects': [K(W['stonehammer']['attack']['damageTimes'][0x0], 'animPlaySound', {
            'sound': 'swing'
        }), K(W['stonehammer']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'katanaSwing': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](8.5, 13.25)),
            0x1: new I(v['create'](-0x3, 17.75))
        }), F(W['katana']['attack']['damageTimes'][0x0] * 0.3, {
            0x0: new I(v['create'](8.5, 13.25))['rotate'](Math['PI'] * 0.2),
            0x1: new I(v['create'](-0x3, 17.75))['rotate'](Math['PI'] * 0.2)
        }), F(W['katana']['attack']['damageTimes'][0x0] * 0.9, {
            0x0: new I(v['create'](8.5, 13.25))['rotate'](-Math['PI'] * 1.2),
            0x1: new I(v['create'](-0x3, 17.75))['rotate'](-Math['PI'] * 1.2)
        }), F(W['katana']['attack']['cooldownTime'], {
            0x0: new I(v['create'](8.5, 13.25)),
            0x1: new I(v['create'](-0x3, 17.75))
        })],
        'effects': [K(W['katana']['attack']['damageTimes'][0x0], 'animPlaySound', {
            'sound': 'swing'
        }), K(W['katana']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'naginataSwing': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](0x13, -7.25)),
            0x1: new I(v['create'](8.5, 24.25))
        }), F(W['naginata']['attack']['damageTimes'][0x0] * 0.3, {
            0x0: new I(v['create'](0x13, -7.25))['rotate'](Math['PI'] * 0.3),
            0x1: new I(v['create'](8.5, 24.25))['rotate'](Math['PI'] * 0.3)
        }), F(W['naginata']['attack']['damageTimes'][0x0] * 0.9, {
            0x0: new I(v['create'](0x13, -7.25))['rotate'](-Math['PI'] * 0.85),
            0x1: new I(v['create'](8.5, 24.25))['rotate'](-Math['PI'] * 0.85)
        }), F(W['naginata']['attack']['cooldownTime'], {
            0x0: new I(v['create'](0x13, -7.25)),
            0x1: new I(v['create'](8.5, 24.25))
        })],
        'effects': [K(W['woodaxe']['attack']['damageTimes'][0x0], 'animPlaySound', {
            'sound': 'swing'
        }), K(W['woodaxe']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'sawSwing': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0x1, 17.75))
        }), F(W['saw']['attack']['damageTimes'][0x0] * 0.4, {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](Math['PI'] * 0.3)
        }), F(W['saw']['attack']['damageTimes'][0x0], {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](-Math['PI'] * 0.3)
        }), F(W['saw']['attack']['damageTimes'][0x1] - 0.1, {
            0x1: new I(v['create'](0x19, 17.75))['rotate'](-Math['PI'] * 0.25)
        }), F(W['saw']['attack']['damageTimes'][0x1] * 0.6, {
            0x1: new I(v['create'](-0x24, 7.75))['rotate'](-Math['PI'] * 0.25)
        }), F(W['saw']['attack']['damageTimes'][0x1] + 0.2, {
            0x1: new I(v['create'](0x1, 17.75))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(0.4, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['saw']['attack']['damageTimes'][0x0], 'animMeleeCollision', {}), K(W['saw']['attack']['damageTimes'][0x1], 'animMeleeCollision', {
            'playerHit': 'playerHit2'
        })]
    },
    'cutReverseShort': {
        'keyframes': [F(0x0, {
            0x1: new I(v['create'](0x1, 17.75))
        }), F(W['saw']['attack']['damageTimes'][0x0] * 0.4, {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](Math['PI'] * 0.3)
        }), F(W['saw']['attack']['damageTimes'][0x0], {
            0x1: new I(v['create'](0x19, 6.25))['rotate'](-Math['PI'] * 0.3)
        }), F(W['fists']['attack']['cooldownTime'], {
            0x1: new I(v['create'](0xe, 17.75))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'swing'
        }), K(W['fists']['attack']['damageTimes'][0x0], 'animMeleeCollision', {})]
    },
    'cook': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](15.75, -9.625)),
            0x1: new I(v['create'](15.75, 9.625))
        }), F(0.1, {
            0x0: new I(v['create'](0xe, -1.75)),
            0x1: new I(v['create'](0xe, 1.75))
        }), F(0.3, {
            0x0: new I(v['create'](0xe, -1.75)),
            0x1: new I(v['create'](0xe, 1.75))
        }), F(0.4, {
            0x0: new I(v['create'](22.75, -1.75)),
            0x1: new I(v['create'](1.75, 0xe))
        }), F(0x1869f, {
            0x0: new I(v['create'](22.75, -1.75)),
            0x1: new I(v['create'](1.75, 0xe))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'pullPin'
        }), K(0.1, 'animSetThrowableState', {
            'state': 'cook'
        })]
    },
    'throw': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](22.75, -1.75)),
            0x1: new I(v['create'](1.75, 14.175))
        }), F(0.15, {
            0x0: new I(v['create'](5.25, -15.75)),
            0x1: new I(v['create'](29.75, 1.75))
        }), F(0.15 + L['player']['throwTime'], {
            0x0: new I(v['create'](15.75, -9.625)),
            0x1: new I(v['create'](15.75, 9.625))
        })],
        'effects': [K(0x0, 'animPlaySound', {
            'sound': 'throwing'
        }), K(0x0, 'animSetThrowableState', {
            'state': 'throwing'
        }), K(0x0, 'animThrowableParticles', {})]
    },
    'crawl_forward': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](0xe, -12.25)),
            0x2: new I(v['create'](-15.75, -0x9))
        }), F(L['player']['crawlTime'] * 0.33, {
            0x0: new I(v['create'](19.25, -10.5)),
            0x2: new I(v['create'](-20.25, -0x9))
        }), F(L['player']['crawlTime'] * 0.66, {
            0x0: new I(v['create'](5.25, -15.75)),
            0x2: new I(v['create'](-11.25, -0x9))
        }), F(L['player']['crawlTime'] * 0x1, {
            0x0: new I(v['create'](0xe, -12.25)),
            0x2: new I(v['create'](-15.75, -0x9))
        })],
        'effects': []
    },
    'crawl_backward': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](0xe, -12.25)),
            0x2: new I(v['create'](-15.75, -0x9))
        }), F(L['player']['crawlTime'] * 0.33, {
            0x0: new I(v['create'](5.25, -15.75)),
            0x2: new I(v['create'](-11.25, -0x9))
        }), F(L['player']['crawlTime'] * 0.66, {
            0x0: new I(v['create'](19.25, -10.5)),
            0x2: new I(v['create'](-20.25, -0x9))
        }), F(L['player']['crawlTime'] * 0x1, {
            0x0: new I(v['create'](0xe, -12.25)),
            0x2: new I(v['create'](-15.75, -0x9))
        })],
        'effects': []
    },
    'revive': {
        'keyframes': [F(0x0, {
            0x0: new I(v['create'](0xe, -12.25)),
            0x1: new I(v['create'](0xe, 12.25))
        }), F(0.2, {
            0x0: new I(v['create'](24.5, -8.75)),
            0x1: new I(v['create'](5.25, 0x15))
        }), F(0.2 + L['player']['reviveDuration'], {
            0x0: new I(v['create'](24.5, -8.75)),
            0x1: new I(v['create'](5.25, 0x15))
        })],
        'effects': []
    }
}
  , er = {
    'proj-frag-nopin-01.img': 'proj-frag-nopin-02.img',
    'proj-frag-nopin-nolever-01.img': 'proj-frag-nopin-nolever-02.img',
    'proj-frag-pin-01.img': 'proj-frag-pin-02.img',
    'proj-mirv-mini-01.img': 'proj-mirv-mini-02.img'
};
class as {
    ['__id'];
    ['__type'];
    ['active'];
    ['isNew'];
    ['container'] = new f();
    ['trail'] = y['from']('player-bullet-trail-02.img');
    ['sprite'] = new y();
    ['strobeSprite'] = null;
    ['layer'];
    ['type'];
    ['rad'];
    ['pos'];
    ['posOld'];
    ['posZ'];
    ['posZOld'];
    ['dir'];
    ['imgScale'];
    ['rot'];
    ['rotVel'];
    ['rotDrag'];
    ['velZ'];
    ['grounded'];
    ['inWater'];
    ['lastSoundObjId'];
    ['playHitSfx'];
    ['alwaysRenderOntop'];
    ['strobeScale'];
    ['strobeScaleMax'];
    ['strobeTicker'];
    ['strobeDir'];
    ['strobeSpeed'];
    constructor() {
        this['container']['visible'] = !0x1,
        this['trail']['anchor']['set'](0x1, 0.5),
        this['trail']['scale']['set'](0x1, 0x1),
        this['trail']['visible'] = !0x1,
        this['container']['addChild'](this['trail']),
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['container']['addChild'](this['sprite']);
    }
    ['rfNkqZ']() {}
    ['dphRtI']() {
        this['container']['visible'] = !0x1,
        this['strobeSprite'] && (this['strobeSprite']['visible'] = !0x1);
    }
    ['wzDEnz'](p, b, XT, XY) {
        if (b) {
            const XC = w[p['type']];
            this['layer'] = p['layer'],
            this['type'] = p['type'],
            this['rad'] = XC['rad'] * 0.5;
        }
        if (this['posOld'] = XT ? v['copy'](p['pos']) : v['copy'](this['pos']),
        this['posZOld'] = XT ? p['posZ'] : this['posZ'],
        this['pos'] = v['copy'](p['pos']),
        this['posZ'] = p['posZ'],
        this['dir'] = v['copy'](p['dir']),
        XT) {
            const Xl = w[p['type']]
              , Xd = Xl['worldImg'];
            this['imgScale'] = Xd['scale'],
            this['rot'] = 0x0,
            this['rotVel'] = Xl['throwPhysics']['spinVel'],
            Xl['throwPhysics']['randomizeSpinDir'] && Math['random']() < 0.5 && (this['rotVel'] *= -0x1),
            this['rotDrag'] = Xl['throwPhysics']['spinDrag'] * t['random'](0x1, 0x2),
            this['velZ'] = 0x0,
            this['grounded'] = !0x1,
            this['inWater'] = !0x1,
            this['lastSoundObjId'] = 0x0,
            this['playHitSfx'] = !Xl['explodeOnImpact'],
            this['alwaysRenderOntop'] = !0x1;
            let Xk = !0x0;
            if (this['type'] == 'bomb_iron') {
                this['alwaysRenderOntop'] = !0x0;
                const XW = T['createCircle'](this['pos'], 0.5);
                XY['map']['insideBuildingCeiling'](XW, !0x0) && (Xk = !0x1);
            }
            let XU = Xd['sprite'];
            XY['map']['mapDef']['gameMode']['spookyKillSounds'] && (XU = er[XU] || XU),
            this['sprite']['texture'] = x['from'](XU),
            this['sprite']['tint'] = Xd['tint'],
            this['sprite']['alpha'] = 0x1,
            this['container']['visible'] = Xk,
            p['type'] == 'strobe' && (this['strobeSprite'] || (this['strobeSprite'] = new y(),
            this['strobeSprite']['texture'] = x['from']('part-strobe-01.img'),
            this['strobeSprite']['anchor']['set'](0.5, 0.5),
            this['container']['addChild'](this['strobeSprite'])),
            this['strobeSprite']['scale']['set'](0x0, 0x0),
            this['strobeSprite']['visible'] = !0x0,
            this['strobeScale'] = 0x0,
            this['strobeScaleMax'] = 0xc,
            this['strobeTicker'] = 0x0,
            this['strobeDir'] = 0x1,
            this['strobeSpeed'] = 1.25);
        }
    }
}
const ss = {
    'grass': 'frag_grass',
    'sand': 'frag_sand',
    'water': 'frag_water'
};
class os {
    ['projectilePool'] = new be(as);
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU) {
        const XW = this['projectilePool']['KGHPNo']();
        for (let XD = 0x0; XD < XW['length']; XD++) {
            const XG = XW[XD];
            if (XG['active']) {
                const XF = w[XG['type']];
                let XH = XG['rotDrag'];
                XG['inWater'] && (XH *= 0x3),
                XG['rotVel'] *= 0x1 / (0x1 + XT * XH),
                XG['rot'] += XG['rotVel'] * XT;
                const p0 = {
                    'obj': null,
                    'pen': 0x0
                }
                  , p1 = {
                    'obj': null,
                    'pen': 0x0
                }
                  , p2 = T['createCircle'](XG['pos'], XG['rad'])
                  , p3 = Xd['NmwMZ']['KGHPNo']();
                for (let px = 0x0; px < p3['length']; px++) {
                    const py = p3[px];
                    if (py['active'] && !py['dead'] && t['sameLayer'](py['layer'], XG['layer'])) {
                        const pg = T['intersect'](py['collider'], p2);
                        if (pg) {
                            const pQ = py['height'] > XG['posZ'] ? p0 : p1;
                            pg['pen'] > pQ['pen'] && (!pQ['obj'] || pQ['obj']['height'] <= py['height']) && (pQ['obj'] = py,
                            pQ['pen'] = pg['pen']);
                        }
                    }
                }
                const p4 = v['div'](v['sub'](XG['pos'], XG['posOld']), XT)
                  , p5 = v['length'](p4);
                if (p0['obj'] && p0['obj']['__id'] != XG['lastSoundObjId'] && p5 > 7.5 && (XG['lastSoundObjId'] = p0['obj']['__id'],
                XG['playHitSfx'])) {
                    const pZ = v['mul'](v['normalizeSafe'](p4, v['create'](0x1, 0x0)), -0x1)
                      , pq = a[p0['obj']['type']];
                    Ct(pq['hitParticle'], pq['sound']['bullet'], XG['pos'], pZ, XG['layer'], XY, XC);
                }
                const p6 = Xd['getGroundSurface'](XG['pos'], XG['layer']);
                XG['posZ'] <= 0.01 && (!XG['inWater'] && p6['type'] == 'water' && XY['addRippleParticle'](XG['pos'], XG['layer'], p6['data']['rippleColor']),
                XG['inWater'] = p6['type'] == 'water');
                const p7 = XG['velZ'];
                if (XG['velZ'] = (XG['posZ'] - XG['posZOld']) / XT,
                !XG['isNew'] && !XG['grounded'] && XG['velZ'] >= 0x0 && p7 < 0x0) {
                    const pM = {
                        'fn': 'playGroup',
                        'channel': 'hits',
                        'name': ''
                    };
                    if (p1['obj']) {
                        if (XG['lastSoundObjId'] != p1['obj']['__id']) {
                            XG['lastSoundObjId'] = p1['obj']['__id'];
                            const pE = a[p1['obj']['type']];
                            pM['name'] = pE['sound']['bullet'];
                        }
                    } else
                        XG['grounded'] = !0x0,
                        pM['name'] = ss[p6['type']],
                        pM['name'] === void 0x0 && (pM['name'] = 'footstep_' + p6['type'],
                        pM['fn'] = 'playGroup',
                        pM['channel'] = 'sfx');
                    pM['name'] && XG['playHitSfx'] && XC[pM['fn']](pM['name'], {
                        'channel': pM['channel'],
                        'soundPos': XG['pos'],
                        'layer': XG['layer'],
                        'filter': 'muffled'
                    });
                }
                if (XG['type'] == 'strobe' && XG['strobeSprite'] && (XG['strobeTicker'] = e['clamp'](XG['strobeTicker'] + XT * XG['strobeDir'] * XG['strobeSpeed'], 0x0, 0x1),
                XG['strobeScale'] = e['easeInExpo'](XG['strobeTicker']) * XG['strobeScaleMax'],
                XG['strobeSprite']['scale']['set'](XG['strobeScale'], XG['strobeScale']),
                (XG['strobeScale'] >= XG['strobeScaleMax'] || XG['strobeTicker'] <= 0x0) && (XG['strobeDir'] *= -0x1)),
                XG['sprite']['rotation'] = XG['rot'],
                XG['sprite']['alpha'] = XG['inWater'] ? 0.3 : 0x1,
                XF['trail']) {
                    const pN = v['length'](p4)
                      , pn = e['remap'](pN, XF['throwPhysics']['speed'] * 0.25, XF['throwPhysics']['speed'] * 0x1, 0x0, 0x1) * e['remap'](XG['posZ'], 0.1, L['projectile']['maxHeight'] * 0.5, 0x0, 0x1);
                    XG['trail']['scale']['set'](XF['trail']['maxLength'] * pn, XF['trail']['width']),
                    XG['trail']['rotation'] = -Math['atan2'](XG['dir']['y'], XG['dir']['x']),
                    XG['trail']['tint'] = XF['trail']['tint'],
                    XG['trail']['alpha'] = XF['trail']['alpha'] * pn,
                    XG['trail']['visible'] = !0x0;
                } else
                    XG['trail']['visible'] = !0x1;
                let p8 = XG['layer']
                  , p9 = XG['posZ'] < 0.25 ? 0xe : 0x19;
                const pX = T['createCircle'](XG['pos'], XG['rad'] * 0x3)
                  , pp = Xd['insideStructureStairs'](pX)
                  , pb = Xd['insideStructureMask'](pX);
                XG['posZ'] >= 0.25 && pp && (XG['layer'] & 0x1) == (Xl['layer'] & 0x1) && (!pb || !(Xl['layer'] & 0x2)) && (p8 |= 0x2,
                p9 += 0x64),
                XG['alwaysRenderOntop'] && Xl['layer'] == 0x0 && (p9 = 0x3e8,
                p8 |= 0x2),
                Xk['addPIXIObj'](XG['container'], p8, p9);
                const pI = XG['imgScale'] * e['remap'](XG['posZ'], 0x0, L['projectile']['maxHeight'], 0x1, 4.75)
                  , pj = XU['MobS'](XG['pos'])
                  , pf = XU['uRFX'](pI);
                XG['container']['position']['set'](pj['x'], pj['y']),
                XG['container']['scale']['set'](pf, pf);
            }
        }
    }
}
function tr(b, XT, XY, XC, Xl, Xd, Xk, XU) {
    const XW = w[b];
    if (XW) {
        let XD = v['rotate'](Xl, XT);
        XW['particle']['shellForward'] && (XD = v['mul'](Xl, XW['particle']['shellForward']));
        let XG = v['mul'](XD, XY * 9.5);
        XG = v['rotate'](XG, (Math['random']() - 0.5) * Math['PI'] / 0x3);
        let XF = v['add'](XC, v['mul'](Xl, L['player']['radius'] + XW['particle']['shellOffset']));
        XW['particle']['shellOffsetY'] && (XF = v['add'](XF, v['mul'](XD, XW['particle']['shellOffsetY']))),
        XW['particle']['shellReverse'] && (XG = v['mul'](XG, -0x1)),
        XU['addParticle'](XW['ammo'], Xd, XF, XG, XW['particle']['shellScale'], -Math['atan2'](XD['y'], XD['x']), null, Xk);
    }
}
class ls {
    ['shots'] = [];
    ['addShot'](p) {
        let b = null;
        for (let XC = 0x0; XC < this['shots']['length']; XC++)
            if (!this['shots'][XC]['active']) {
                b = this['shots'][XC];
                break;
            }
        b || (b = {},
        this['shots']['push'](b));
        const XT = p['shotSourceType']
          , XY = w[XT];
        b['active'] = !0x0,
        b['pos'] = v['copy'](p['pos']),
        b['layer'] = p['layer'],
        b['playerId'] = p['playerId'],
        b['weaponType'] = XT,
        b['offhand'] = p['shotOffhand'],
        b['lastShot'] = p['lastShot'],
        b['shotAlt'] = p['shotAlt'],
        b['ticker'] = 0x0,
        b['pullDelay'] = XY['pullDelay'] !== void 0x0 ? XY['pullDelay'] * 0.45 : 0x0,
        b['splinter'] = p['splinter'],
        b['trailSaturated'] = p['trailSaturated'];
    }
    ['Gxhh'](b, XT, XY, XC, Xl) {
        for (let Xd = 0x0; Xd < this['shots']['length']; Xd++) {
            const Xk = this['shots'][Xd];
            if (Xk['active']) {
                const XU = w[Xk['weaponType']];
                if (Xk['ticker'] == 0x0) {
                    const XW = XY['getPlayerById'](Xk['playerId']);
                    let XD = XU['sound']['shoot'];
                    if (XU['sound']['shootTeam']) {
                        const XF = XY['getPlayerInfo'](Xk['playerId'])['teamId'];
                        XU['sound']['shootTeam'][XF] && (XD = XU['sound']['shootTeam'][XF]);
                    }
                    Xk['lastShot'] && XU['sound']['shootLast'] && (XD = XU['sound']['shootLast']),
                    Xk['shotAlt'] && XU['sound']['shootAlt'] && (XD = XU['sound']['shootAlt']);
                    let XG = 0x0;
                    if (Xk['trailSaturated'] && !XU['ignoreDetune'] ? XG = 0x12c : Xk['splinter'] && (XG = -0x12c),
                    Xl['playSound'](XD, {
                        'channel': Xk['playerId'] == XT ? 'activePlayer' : 'otherPlayers',
                        'soundPos': Xk['pos'],
                        'layer': XW ? XW['layer'] : Xk['layer'],
                        'filter': 'muffled',
                        'fallOff': XU['sound']['fallOff'] ? XU['sound']['fallOff'] : 0x0,
                        'detune': XG,
                        'volumeScale': Xk['splinter'] ? 0.75 : 0x1
                    }),
                    Xk['splinter'] && Xl['playSound'](XD, {
                        'channel': Xk['playerId'] == XT ? 'activePlayer' : 'otherPlayers',
                        'soundPos': Xk['pos'],
                        'layer': XW ? XW['layer'] : Xk['layer'],
                        'filter': 'muffled',
                        'fallOff': XU['sound']['fallOff'] ? XU['sound']['fallOff'] : 0x0,
                        'detune': 0x4b0,
                        'delay': 0x1e,
                        'volumeScale': 0.75
                    }),
                    XW) {
                        if (XW['__id'] == XT && XU['fireMode'] == 'single' && XU['pullDelay']) {
                            const p1 = XW['KkvfHn']['MDx'][XW['KkvfHn']['hCoMzm']]['ammo'] > 0x0 ? XU['sound']['cycle'] : XU['sound']['pull'];
                            Xl['stopSound'](XW['cycleSoundInstance']),
                            XW['cycleSoundInstance'] = Xl['playSound'](p1);
                        }
                        const XH = Xk['offhand'] || !XU['isDual']
                          , p0 = !Xk['offhand'] || !XU['isDual'];
                        XW['addRecoil'](XU['worldImg']['recoil'], XH, p0),
                        XW['fireDelay'] = XU['fireDelay'];
                    }
                }
                if (Xk['ticker'] += b,
                Xk['ticker'] >= Xk['pullDelay']) {
                    const p2 = XY['getPlayerById'](Xk['playerId']);
                    p2 && !p2['QDvlP']['GUi'] && p2['QDvlP']['PhmiQd'] == Xk['weaponType'] && XU['caseTiming'] == 'shoot' && tr(Xk['weaponType'], Math['PI'] / 0x2 * -0x1, 0x1, p2['QDvlP']['NLYJ'], p2['QDvlP']['RkcQgd'], p2['renderLayer'], p2['renderZOrd'] + 0x1, XC),
                    Xk['active'] = !0x1;
                }
            }
        }
    }
}
const di = 0.1;
function ms(p, b) {
    if (p['length'] != b['length'])
        return !0x1;
    for (let XT = 0x0; XT < p['length']; XT++)
        if (p[XT]['type'] != b[XT]['type'])
            return !0x1;
    return !0x0;
}
function ns() {
    const p = {
        'fontFamily': 'Arial',
        'fontWeight': 'bold',
        'fontSize': k['pixelRatio'] > 0x1 ? 0x1e : 0x16,
        'align': 'center',
        'fill': 0xffff,
        'stroke': 0x0,
        'strokeThickness': 0x0,
        'dropShadow': !0x0,
        'dropShadowColor': '#000000',
        'dropShadowBlur': 0x1,
        'dropShadowAngle': Math['PI'] / 0x3,
        'dropShadowDistance': 0x1
    }
      , b = new q('',p);
    return b['anchor']['set'](0.5, 0.5),
    b['scale']['set'](0.5, 0.5),
    b['position']['set'](0x0, 0x1e),
    b['visible'] = !0x1,
    b;
}
function se() {
    const p = new y();
    return p['texture'] = x['EMPTY'],
    p['anchor']['set'](0.5, 0.5),
    p['scale']['set'](0x1, 0x1),
    p['tint'] = 0xffffff,
    p['visible'] = !0x1,
    p;
}
const hs = Object['values'](L['scopeZoomRadius']['desktop'])
  , cs = Object['values'](L['scopeZoomRadius']['mobile']);
class pi {
    ['gunBarrel'] = se();
    ['gunMag'] = se();
    ['container'] = new f();
    ['magTop'] = !0x1;
    constructor() {
        this['container']['addChild'](this['gunBarrel']),
        this['container']['addChild'](this['gunMag']),
        this['container']['rotation'] = Math['PI'] * 0.5,
        this['container']['visible'] = !0x1;
    }
    ['setVisible'](p) {
        this['container']['visible'] = p;
    }
    ['setType'](p, b) {
        const XT = w[p]
          , XY = XT['worldImg'];
        if (this['gunBarrel']['texture'] = x['from'](XY['sprite']),
        this['gunBarrel']['anchor']['set'](0.5, 0x1),
        this['gunBarrel']['position']['set'](0x0, 0x0),
        this['gunBarrel']['scale']['set'](XY['scale']['x'] * 0.5 / b, XY['scale']['y'] * 0.5 / b),
        this['gunBarrel']['tint'] = XY['tint'],
        this['gunBarrel']['visible'] = !0x0,
        XY['magImg']) {
            const Xl = XY['magImg'];
            this['gunMag']['texture'] = x['from'](Xl['sprite']),
            this['gunMag']['anchor']['set'](0.5, 0.5),
            this['gunMag']['position']['set'](Xl['pos']['x'] / b, Xl['pos']['y'] / b),
            this['gunMag']['scale']['set'](0.25 / b, 0.25 / b),
            this['gunMag']['tint'] = 0xffffff,
            this['gunMag']['visible'] = !0x0,
            Xl['top'] ? this['container']['addChild'](this['gunMag']) : this['container']['addChildAt'](this['gunMag'], 0x0);
        } else
            this['gunMag']['visible'] = !0x1;
        this['magTop'] = XY['magImg']?.['top'];
        const XC = XT['isDual'] ? v['create'](-5.95, 0x0) : v['create'](-4.25, -1.75);
        XY['gunOffset'] && (XC['x'] += XY['gunOffset']['x'],
        XC['y'] += XY['gunOffset']['y']),
        this['container']['position']['set'](XC['x'], XC['y']);
    }
}
class us {
    ['__id'];
    ['__type'];
    ['active'];
    ['bodySprite'] = se();
    ['chestSprite'] = se();
    ['flakSprite'] = se();
    ['steelskinSprite'] = se();
    ['helmetSprite'] = se();
    ['visorSprite'] = se();
    ['backpackSprite'] = se();
    ['handLSprite'] = se();
    ['handRSprite'] = se();
    ['footLSprite'] = se();
    ['footRSprite'] = se();
    ['hipSprite'] = se();
    ['gunLSprites'] = new pi();
    ['gunRSprites'] = new pi();
    ['objectLSprite'] = se();
    ['objectRSprite'] = se();
    ['meleeSprite'] = se();
    ['bodySubmergeSprite'] = se();
    ['handLSubmergeSprite'] = se();
    ['handRSubmergeSprite'] = se();
    ['footLSubmergeSprite'] = se();
    ['footRSubmergeSprite'] = se();
    ['bodyEffectSprite'] = se();
    ['patchSprite'] = se();
    ['handLContainer'] = new f();
    ['handRContainer'] = new f();
    ['footLContainer'] = new f();
    ['footRContainer'] = new f();
    ['bodyContainer'] = new f();
    ['container'] = new f();
    ['nameText'] = ns();
    ['auraContainer'] = new f();
    ['auraCircle'] = se();
    ['bones'] = [];
    ['anim'] = {
        'type': XX['None'],
        'data': {},
        'seq': -0x1,
        'ticker': 0x0,
        'bones': []
    };
    ['perks'] = [];
    ['perkTypes'] = [];
    ['perksDirty'] = !0x1;
    ['surface'] = null;
    ['wasInWater'] = !0x1;
    ['weapTypeOld'] = '';
    ['visualsDirty'] = !0x1;
    ['stepDistance'] = 0x0;
    ['zoomFast'] = !0x1;
    ['playedDryFire'] = !0x1;
    ['lastSwapIdx'] = -0x1;
    ['hasteSeq'] = -0x1;
    ['cycleSoundInstance'] = null;
    ['actionSoundInstance'] = null;
    ['useItemEmitter'] = null;
    ['hasteEmitter'] = null;
    ['passiveHealEmitter'] = null;
    ['downed'] = !0x1;
    ['wasDowned'] = !0x1;
    ['bleedTicker'] = 0x0;
    ['submersion'] = 0x0;
    ['gunRecoilL'] = 0x0;
    ['gunRecoilR'] = 0x0;
    ['fireDelay'] = 0x0;
    ['throwableState'] = 'equip';
    ['lastThrowablePickupSfxTicker'] = 0x0;
    ['isNearDoorError'] = !0x1;
    ['doorErrorTicker'] = 0x0;
    ['noCeilingRevealTicker'] = 0x0;
    ['frozenTicker'] = 0x0;
    ['updateFrozenImage'] = !0x0;
    ['viewAabb'] = {
        'min': v['create'](0x0, 0x0),
        'max': v['create'](0x0, 0x0)
    };
    ['auraViewFade'] = 0x0;
    ['auraPulseTicker'] = 0x0;
    ['auraPulseDir'] = 0x1;
    ['renderLayer'] = 0x0;
    ['renderZOrd'] = 0x12;
    ['renderZIdx'] = 0x0;
    ['TvMV'];
    ['QDvlP'];
    ['KkvfHn'];
    ['throwableStatePrev'];
    ['Guz'] = L['player']['radius'];
    ['qSEd'];
    ['NLYJ'] = v['create'](0x0, 0x0);
    ['tixW'] = v['create'](0x0, 0x0);
    ['RkcQgd'] = v['create'](0x1, 0x0);
    ['Htl'] = v['create'](0x1, 0x0);
    ['layer'] = 0x0;
    ['isLoadoutAvatar'] = !0x1;
    ['playActionStartSfx'] = !0x0;
    ['isNew'];
    ['wasInsideObstacle'];
    ['insideObstacleType'];
    ['lastInsideObstacleTime'];
    ['dead'];
    ['gunSwitchCooldown'];
    constructor() {
        this['bodySprite']['addChild'](this['bodySubmergeSprite']),
        this['handLSprite']['addChild'](this['handLSubmergeSprite']),
        this['handRSprite']['addChild'](this['handRSubmergeSprite']),
        this['footLSprite']['addChild'](this['footLSubmergeSprite']),
        this['footRSprite']['addChild'](this['footRSubmergeSprite']),
        this['handLContainer']['addChild'](this['gunLSprites']['container']),
        this['handLContainer']['addChild'](this['handLSprite']),
        this['handLContainer']['addChild'](this['objectLSprite']),
        this['handRContainer']['addChild'](this['gunRSprites']['container']),
        this['handRContainer']['addChild'](this['meleeSprite']),
        this['handRContainer']['addChild'](this['handRSprite']),
        this['handRContainer']['addChild'](this['objectRSprite']),
        this['footLContainer']['addChild'](this['footLSprite']),
        this['footRContainer']['addChild'](this['footRSprite']),
        this['bodyContainer']['addChild'](this['footLContainer']),
        this['bodyContainer']['addChild'](this['footRContainer']),
        this['bodyContainer']['addChild'](this['backpackSprite']),
        this['bodyContainer']['addChild'](this['bodySprite']),
        this['bodyContainer']['addChild'](this['chestSprite']),
        this['bodyContainer']['addChild'](this['flakSprite']),
        this['bodyContainer']['addChild'](this['steelskinSprite']),
        this['bodyContainer']['addChild'](this['hipSprite']),
        this['bodyContainer']['addChild'](this['patchSprite']),
        this['bodyContainer']['addChild'](this['bodyEffectSprite']),
        this['bodyContainer']['addChild'](this['handLContainer']),
        this['bodyContainer']['addChild'](this['handRContainer']),
        this['bodyContainer']['addChild'](this['visorSprite']),
        this['bodyContainer']['addChild'](this['helmetSprite']),
        this['container']['addChild'](this['bodyContainer']),
        this['container']['addChild'](this['nameText']),
        this['auraContainer']['addChild'](this['auraCircle']),
        this['initSubmergeSprites']();
        const p = Object['keys'](Pe)['length'];
        for (let b = 0x0; b < p; b++)
            this['bones']['push'](new I()),
            this['anim']['bones']['push']({
                'weight': 0x0,
                'pose': new I()
            });
        this['throwableStatePrev'] = this['throwableState'],
        this['qSEd'] = this['Guz'];
    }
    ['rfNkqZ']() {
        this['isNew'] = !0x1,
        this['wasInsideObstacle'] = !0x1,
        this['insideObstacleType'] = '',
        this['lastInsideObstacleTime'] = 0x0,
        this['lastSwapIdx'] = -0x1,
        this['hasteSeq'] = -0x1,
        this['actionSoundInstance'] = null,
        this['TvMV'] = {
            'type': Xp['None'],
            'seq': -0x1,
            'seqOld': -0x1,
            'item': '',
            'skin': '',
            'targetId': 0x0,
            'time': 0x0,
            'duration': 0x0,
            'throttleCount': 0x0,
            'throttleTicker': 0x0
        },
        this['QDvlP'] = {
            'NLYJ': v['create'](0x0, 0x0),
            'RkcQgd': v['create'](0x1, 0x0),
            'prHPqq': '',
            'wYo': '',
            'SMDXye': '',
            'JyI': '',
            'PhmiQd': 'fists',
            'fgCE': 0x0,
            'GUi': !0x1,
            'RxB': !0x1,
            'Snn': XX['None'],
            'xCRFf': 0x0,
            'bznPCw': Xp['None'],
            'umykZA': 0x0,
            'arf': !0x1,
            'jOdZA': !0x1,
            'AVSa': !0x1,
            'ewgxY': 0x0,
            'TuU': Xb['None'],
            'tJxefA': 0x0,
            'fkskYY': '',
            'GZTM': 0x1,
            'Evfg': '',
            'vJBLNe': []
        },
        this['KkvfHn'] = {
            'izX': L['player']['health'],
            'BsPd': 0x0,
            'ytAUxB': 0x0,
            'CRJZL': '',
            'hCoMzm': 0x0,
            'uYAn': {},
            'MDx': [],
            'kUHxCC': 0x0
        },
        this['playAnim'](XX['None'], -0x1);
    }
    ['dphRtI']() {
        this['container']['visible'] = !0x1,
        this['auraContainer']['visible'] = !0x1,
        this['useItemEmitter'] && (this['useItemEmitter']['stop'](),
        this['useItemEmitter'] = null),
        this['hasteEmitter'] && (this['hasteEmitter']['stop'](),
        this['hasteEmitter'] = null),
        this['passiveHealEmitter'] && (this['passiveHealEmitter']['stop'](),
        this['passiveHealEmitter'] = null);
    }
    ['wzDEnz'](p, b, XT, XY) {
        this['QDvlP']['NLYJ'] = v['copy'](p['pos']),
        this['QDvlP']['RkcQgd'] = v['copy'](p['dir']),
        b && (this['QDvlP']['prHPqq'] = p['outfit'],
        this['QDvlP']['wYo'] = p['backpack'],
        this['QDvlP']['SMDXye'] = p['helmet'],
        this['QDvlP']['JyI'] = p['chest'],
        this['QDvlP']['PhmiQd'] = p['activeWeapon'],
        this['QDvlP']['fgCE'] = p['layer'],
        this['QDvlP']['GUi'] = p['dead'],
        this['QDvlP']['RxB'] = p['downed'],
        this['QDvlP']['Snn'] = p['animType'],
        this['QDvlP']['xCRFf'] = p['animSeq'],
        this['QDvlP']['bznPCw'] = p['actionType'],
        this['QDvlP']['umykZA'] = p['actionSeq'],
        this['QDvlP']['arf'] = p['wearingPan'],
        this['QDvlP']['jOdZA'] = p['healEffect'],
        this['QDvlP']['AVSa'] = p['frozen'],
        this['QDvlP']['ewgxY'] = p['frozenOri'],
        this['QDvlP']['TuU'] = p['hasteType'],
        this['QDvlP']['tJxefA'] = p['hasteSeq'],
        this['QDvlP']['fkskYY'] = p['actionItem'],
        this['QDvlP']['GZTM'] = p['scale'],
        this['QDvlP']['Evfg'] = p['role'],
        (XT || !ms(this['QDvlP']['vJBLNe'], p['perks'])) && (this['perksDirty'] = !0x0),
        this['QDvlP']['vJBLNe'] = p['perks'],
        p['animSeq'] != this['anim']['seq'] && this['playAnim'](p['animType'], p['animSeq']),
        this['TvMV']['type'] = p['actionType'],
        this['TvMV']['seq'] = p['actionSeq'],
        this['TvMV']['item'] = p['actionItem'],
        this['visualsDirty'] = !0x0),
        XT && (this['isNew'] = !0x0,
        this['renderLayer'] = this['QDvlP']['fgCE'],
        this['renderZOrd'] = 0x12,
        this['renderZIdx'] = this['__id']);
    }
    ['BOCg'](p, b) {
        const XT = this['KkvfHn']['CRJZL'];
        if (p['healthDirty'] && (this['KkvfHn']['izX'] = p['health']),
        p['boostDirty'] && (this['KkvfHn']['ytAUxB'] = p['boost']),
        p['zoomDirty'] && (this['KkvfHn']['BsPd'] = p['zoom'],
        this['zoomFast'] = !0x1),
        p['actionDirty'] && (this['TvMV']['time'] = p['action']['time'],
        this['TvMV']['duration'] = p['action']['duration'],
        this['TvMV']['targetId'] = p['action']['targetId']),
        p['inventoryDirty']) {
            this['KkvfHn']['CRJZL'] = p['scope'],
            this['KkvfHn']['uYAn'] = {};
            for (const XY in L['bagSizes'])
                L['bagSizes']['hasOwnProperty'](XY) && (this['KkvfHn']['uYAn'][XY] = p['inventory'][XY]);
        }
        if (p['weapsDirty']) {
            this['KkvfHn']['hCoMzm'] = p['curWeapIdx'],
            this['KkvfHn']['MDx'] = [];
            for (let XC = 0x0; XC < L['WeaponSlot']['Count']; XC++) {
                const Xl = {
                    'type': p['weapons'][XC]['type'],
                    'ammo': p['weapons'][XC]['ammo']
                };
                this['KkvfHn']['MDx']['push'](Xl);
            }
        }
        p['spectatorCountDirty'] && (this['KkvfHn']['kUHxCC'] = p['spectatorCount']),
        this['KkvfHn']['CRJZL'] != XT && (this['zoomFast'] = !0x0);
    }
    ['ulnm']() {
        let p = this['KkvfHn']['BsPd'];
        if (k['mobile']) {
            const b = hs['indexOf'](p);
            b !== -0x1 && (p = cs[b]);
        }
        return p;
    }
    ['MrYb']() {
        return this['QDvlP']['SMDXye'] ? w[this['QDvlP']['SMDXye']]['level'] : 0x0;
    }
    ['tsugJO']() {
        return this['QDvlP']['JyI'] ? w[this['QDvlP']['JyI']]['level'] : 0x0;
    }
    ['Rlf']() {
        return w[this['QDvlP']['wYo']]['level'];
    }
    ['lYZ']() {
        return w[this['QDvlP']['PhmiQd']]['type'];
    }
    ['CNXJhh'](p) {
        return this['KkvfHn']['MDx'][p]['type'] !== '';
    }
    ['getMeleeCollider']() {
        const p = w[this['QDvlP']['PhmiQd']]
          , b = Math['atan2'](this['RkcQgd']['y'], this['RkcQgd']['x'])
          , XT = v['add'](p['attack']['offset'], v['mul'](v['create'](0x1, 0x0), this['QDvlP']['GZTM'] - 0x1))
          , XY = v['add'](this['NLYJ'], v['rotate'](XT, b))
          , XC = p['attack']['rad'];
        return T['createCircle'](XY, XC, 0x0);
    }
    ['Zfl']() {
        return this['QDvlP']['arf'] || this['QDvlP']['PhmiQd'] == 'pan' && this['currentAnim']() != XX['Melee'];
    }
    ['jsGID']() {
        const p = this['QDvlP']['arf'] ? 'unequipped' : 'equipped';
        return w['pan']['reflectSurface']?.[p];
    }
    ['canInteract'](p) {
        return !this['QDvlP']['GUi'] && (!p['perkMode'] || this['QDvlP']['Evfg']);
    }
    ['yUMDr'](p, b, XT) {
        for (let XY = 0x0; XY < this['perks']['length']; XY++)
            this['perks'][XY]['isNew'] = !0x1;
        if (this['perksDirty']) {
            if (p && !b) {
                for (let Xl = 0x0; Xl < this['QDvlP']['vJBLNe']['length']; Xl++) {
                    const Xd = this['QDvlP']['vJBLNe'][Xl];
                    this['perks']['findIndex'](Xk => Xk['type'] == Xd['type']) === -0x1 && XT['addRareLootMessage'](Xd['type']);
                }
                for (let Xk = 0x0; Xk < this['perks']['length']; Xk++) {
                    const XU = this['perks'][Xk];
                    this['QDvlP']['vJBLNe']['findIndex'](XW => XW['type'] == XU['type']) === -0x1 && XT['removeRareLootMessage'](XU['type']);
                }
            }
            const XC = [];
            for (let XW = 0x0; XW < this['QDvlP']['vJBLNe']['length']; XW++) {
                const XD = this['QDvlP']['vJBLNe'][XW]
                  , XG = this['perks']['findIndex'](XF => XF['type'] == XD['type']) === -0x1;
                XC['push']({
                    'type': XD['type'],
                    'droppable': XD['droppable'],
                    'isNew': XG && !this['isNew']
                });
            }
            this['perks'] = XC,
            this['perkTypes'] = [];
            for (let XF = 0x0; XF < this['QDvlP']['vJBLNe']['length']; XF++)
                this['perkTypes']['push'](this['QDvlP']['vJBLNe'][XF]['type']);
            this['perksDirty'] = !0x1;
        }
    }
    ['PsSK'](p) {
        return this['perkTypes']['includes'](p);
    }
    Gxhh(XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH, p0) {
        const p1 = w[this['QDvlP']['PhmiQd']],
              p2 = this['__id'] == XG,
              p3 = XY['getPlayerById'](XG);
    
        this['tixW'] = v['copy'](this['NLYJ']);
        this['Htl'] = v['copy'](this['RkcQgd']);
        this['NLYJ'] = v['copy'](this['QDvlP']['NLYJ']);
        this['RkcQgd'] = v['copy'](this['QDvlP']['RkcQgd']);
    
        if (window.isInterpolation && (Math.abs(this['NLYJ'].x - this['tixW'].x) <= 10 && Math.abs(this['NLYJ'].y - this['tixW'].y) <= 10)) {
            // Movement Interpolation
            this['NLYJ'].x += (this['tixW'].x - this['NLYJ'].x) * 0.5;
            this['NLYJ'].y += (this['tixW'].y - this['NLYJ'].y) * 0.5;
        }
    
        this['layer'] = this['QDvlP']['fgCE'];
        this['downed'] = this['QDvlP']['RxB'];
        this['Guz'] = this['QDvlP']['GZTM'] * L['player']['radius'];
    
        if (!e['eqAbs'](this['Guz'], this['qSEd'])) {
            const pg = this['Guz'] - this['qSEd'];
            let pQ = Math['abs'](pg) > 0.0001 ? pg * XT * 6 : pg;
            this['isNew'] && (pQ = pg);
            this['qSEd'] += pQ;
            this['visualsDirty'] = !0;
        }
    
        if (p2) {
            const pZ = XU['vrnvjL'](v['create'](XU['pmhI'], 0x0))
              , pq = v['sub'](pZ, XU['NLYJ']);
            this['viewAabb']['min'] = v['sub'](XU['NLYJ'], pq),
            this['viewAabb']['max'] = v['add'](XU['NLYJ'], pq);
        }
        this['yUMDr'](p2, p0, XD);
        const p4 = this['weapTypeOld'] != this['QDvlP']['PhmiQd'];
        this['weapTypeOld'] = this['QDvlP']['PhmiQd'],
        this['lastThrowablePickupSfxTicker'] -= XT,
        this['noCeilingRevealTicker'] -= XT;
        const p5 = XY['getPlayerInfo'](XG)['groupId']
          , p6 = XY['getPlayerInfo'](this['__id'])
          , p7 = p6['groupId'] == p5;
        this['nameText']['text'] = p6['name'],
        this['nameText']['visible'] = !p2 && p7;
        let p8 = null
          , p9 = null;
        const pX = XC['NmwMZ']['KGHPNo']();
        for (let pM = 0x0; pM < pX['length']; pM++) {
            const pE = pX[pM];
            if (pE['active'] && !pE['dead'] && pE['layer'] == this['QDvlP']['fgCE']) {
                if (pE['isBush']) {
                    const pN = this['Guz'] * 0.25;
                    T['intersectCircle'](pE['collider'], this['NLYJ'], pN) && (p8 = pE);
                } else {
                    if (pE['isDoor']) {
                        const pn = this['Guz'] + 0.25
                          , ph = v['sub'](pE['pos'], this['NLYJ'])
                          , pR = v['rotate'](v['create'](0x1, 0x0), pE['rot']);
                        T['intersectCircle'](pE['collider'], this['NLYJ'], pn) && (pE['door']['locked'] || pE['door']['openOneWay'] && v['dot'](ph, pR) < 0x0) && (p9 = pE);
                    }
                }
            }
        }
        const pp = p8 != null;
        if (pp && (this['insideObstacleType'] = p8?.['type']),
        this['lastInsideObstacleTime'] -= XT,
        this['wasInsideObstacle'] != pp && this['lastInsideObstacleTime'] < 0x0 && !this['isNew']) {
            const pP = a[this['insideObstacleType']];
            this['lastInsideObstacleTime'] = 0.2,
            Xl['playSound'](pP?.['sound']['enter'], {
                'channel': 'sfx',
                'soundPos': this['NLYJ'],
                'fallOff': 0x1,
                'layer': this['layer'],
                'filter': 'muffled'
            });
            const pA = v['normalizeSafe'](v['sub'](this['tixW'], this['NLYJ']), v['create'](0x1, 0x0))
              , pJ = pp ? 0x1 : -0x1
              , pS = Math['floor'](t['random'](0x3, 0x5));
            for (let pB = 0x0; pB < pS; pB++) {
                const pc = v['mul'](v['rotate'](v['mul'](pA, pJ), (Math['random']() - 0.5) * Math['PI'] / 1.5), t['random'](0x6, 0x8));
                Xd['addParticle'](pP['hitParticle'], this['layer'], this['NLYJ'], pc);
            }
        }
        this['wasInsideObstacle'] = pp;
        const pb = this['isNearDoorError'];
        if (this['isNearDoorError'] = p9 != null,
        this['doorErrorTicker'] -= XT,
        this['isNearDoorError'] && !pb && this['doorErrorTicker'] <= 0x0) {
            this['doorErrorTicker'] = 0.5;
            const pu = a[p9?.['type']]['door']?.['sound']['error'];
            Xl['playSound'](pu, {
                'channel': 'sfx',
                'soundPos': this['NLYJ'],
                'fallOff': 0x1,
                'layer': this['layer'],
                'filter': 'muffled'
            });
        }
        this['surface'] = XC['getGroundSurface'](this['NLYJ'], this['layer']);
        const pI = this['surface']['type'] == 'water';
        if (this['updateSubmersion'](XT, XC),
        this['updateFrozenState'](XT),
        this['QDvlP']['GUi'] || (this['stepDistance'] += v['length'](v['sub'](this['tixW'], this['NLYJ'])),
        this['stepDistance'] > 0x5 && pI || pI && !this['wasInWater'] ? (this['stepDistance'] = 0x0,
        Xd['addRippleParticle'](this['NLYJ'], this['layer'], this['surface']?.['data']['rippleColor']),
        Xl['playGroup']('footstep_water', {
            'soundPos': this['NLYJ'],
            'fallOff': 0x3,
            'layer': this['layer'],
            'filter': 'muffled'
        })) : this['stepDistance'] > 0x4 && !pI && (this['stepDistance'] = 0x0,
        Xl['playGroup']('footstep_' + this['surface']['type'], {
            'soundPos': this['NLYJ'],
            'fallOff': 0x3,
            'layer': this['layer'],
            'filter': 'muffled'
        })),
        this['wasInWater'] = pI),
        this['bleedTicker'] -= XT,
        !this['QDvlP']['GUi'] && (this['QDvlP']['RxB'] && this['TvMV']['type'] == Xp['None'] || this['PsSK']('trick_drain')) && this['bleedTicker'] < 0x0) {
            this['bleedTicker'] = this['PsSK']('trick_drain') ? L['player']['bleedTickRate'] * 0x3 : L['player']['bleedTickRate'];
            const pV = v['rotate'](v['mul'](this['RkcQgd'], -0x1), (Math['random']() - 0.5) * Math['PI'] / 0x3);
            pV['y'] *= -0x1,
            window['CrazyGames'] || Xd['addParticle']('bloodSplat', this['renderLayer'], v['create'](0x0, 0x0), v['mul'](pV, XU['xQaJqu']), 0x1, Math['random']() * Math['PI'] * 0x2, this['container'], this['renderZOrd'] + 0x1),
            XH || Xl['playSound']('player_bullet_hit_02', {
                'channel': 'hits',
                'soundPos': this['NLYJ'],
                'fallOff': 0x3,
                'layer': this['layer'],
                'filter': 'muffled'
            });
        }
        if (this['gunSwitchCooldown'] -= XT,
        this['fireDelay'] -= XT,
        p2 && (p4 || this['lastSwapIdx'] != this['KkvfHn']['hCoMzm'])) {
            const pz = this['lastSwapIdx'];
            this['lastSwapIdx'] = this['KkvfHn']['hCoMzm'];
            const pw = w[this['QDvlP']['PhmiQd']];
            if (pw['type'] == 'melee' || pw['type'] == 'throwable') {
                if (pw['type'] != 'throwable' || this['lastThrowablePickupSfxTicker'] <= 0x0) {
                    const pO = this['isLoadoutAvatar'] ? XU['NLYJ'] : this['NLYJ'];
                    Xl['playSound'](pw['sound']['deploy'], {
                        'channel': 'sfx',
                        'soundPos': pO,
                        'fallOff': 0x3
                    });
                }
            } else {
                if (pw['type'] == 'gun') {
                    let pL = 'gun_switch_01'
                      , pv = !0x1;
                    if ((pz == 0x0 || pz == 0x1) && (this['lastSwapIdx'] == 0x0 || this['lastSwapIdx'] == 0x1) && this['fireDelay'] > 0x0) {
                        const pK = w[this['KkvfHn']['MDx'][pz]['type']];
                        pw && pK && pw['deployGroup'] !== void 0x0 && pK['deployGroup'] !== void 0x0 && pw['deployGroup'] == pK['deployGroup'] && (pv = !0x0);
                    }
                    this['gunSwitchCooldown'] > 0x0 || pv ? pL = pw['sound']['deploy'] : this['gunSwitchCooldown'] = L['player']['freeSwitchCooldown'],
                    Xl['stopSound'](this['cycleSoundInstance']),
                    this['cycleSoundInstance'] = Xl['playSound'](pL, {
                        'channel': 'activePlayer'
                    }),
                    this['fireDelay'] = 0x0;
                }
            }
        }
        if (Xl['isSoundPlaying'](this['cycleSoundInstance']) || (this['cycleSoundInstance'] = null),
        this['TvMV']['seq'] != this['TvMV']['seqOld'] && !this['isNew']) {
            let pm = !0x0;
            !p2 && this['TvMV']['type'] != Xp['None'] && (this['TvMV']['throttleTicker'] = 0.5,
            this['TvMV']['throttleCount'] < 0x5 ? this['TvMV']['throttleCount']++ : pm = !0x1),
            pm && this['playActionStartEffect'](p2, Xd, Xl);
        }
        if (this['TvMV']['seqOld'] = this['TvMV']['seq'],
        this['updateActionEffect'](p2, p6, Xd, Xl),
        this['TvMV']['throttleTicker'] -= XT,
        this['TvMV']['throttleTicker'] < 0x0 && this['TvMV']['throttleCount'] > 0x0 && (this['TvMV']['throttleCount']--,
        this['TvMV']['throttleTicker'] = 0.25),
        this['QDvlP']['TuU'] && this['QDvlP']['tJxefA'] != this['hasteSeq']) {
            const pT = {
                [Xb['None']]: {
                    'particle': '',
                    'sound': ''
                },
                [Xb['Windwalk']]: {
                    'particle': 'windwalk',
                    'sound': 'ability_stim_01'
                },
                [Xb['Takedown']]: {
                    'particle': 'takedown',
                    'sound': 'ability_stim_01'
                },
                [Xb['Inspire']]: {
                    'particle': 'inspire',
                    'sound': 'ability_stim_01'
                }
            }[this['QDvlP']['TuU']];
            this['isNew'] || Xl['playSound'](pT['sound'], {
                'channel': 'sfx',
                'soundPos': this['NLYJ'],
                'fallOff': 0x1,
                'layer': this['layer'],
                'filter': 'muffled'
            }),
            this['hasteEmitter']?.['stop'](),
            this['hasteEmitter'] = Xd['addEmitter'](pT['particle'], {
                'pos': this['NLYJ'],
                'layer': this['layer']
            }),
            this['hasteSeq'] = this['QDvlP']['tJxefA'];
        } else
            !this['QDvlP']['TuU'] && this['hasteEmitter'] && (this['hasteEmitter']['stop'](),
            this['hasteEmitter'] = null);
        if (this['hasteEmitter'] && (this['hasteEmitter']['pos'] = v['add'](this['NLYJ'], v['create'](0x0, 0.1)),
        this['hasteEmitter']['layer'] = this['renderLayer'],
        this['hasteEmitter']['zOrd'] = this['renderZOrd'] + 0x1),
        this['QDvlP']['jOdZA'] && !this['passiveHealEmitter'] ? this['passiveHealEmitter'] = Xd['addEmitter']('heal_basic', {
            'pos': this['NLYJ'],
            'layer': this['layer']
        }) : !this['QDvlP']['jOdZA'] && this['passiveHealEmitter'] && (this['passiveHealEmitter']['stop'](),
        this['passiveHealEmitter'] = null),
        this['passiveHealEmitter'] && (this['passiveHealEmitter']['pos'] = v['add'](this['NLYJ'], v['create'](0x0, 0.1)),
        this['passiveHealEmitter']['layer'] = this['renderLayer'],
        this['passiveHealEmitter']['zOrd'] = this['renderZOrd'] + 0x1),
        p2 && !p0) {
            const pY = this['KkvfHn']['hCoMzm']
              , pC = this['KkvfHn']['MDx'][pY]
              , pl = w[pC['type']];
            if (!this['playedDryFire'] && this['lYZ']() == 'gun' && (Xk['isBindPressed'](D['Fire']) || Xk['isBindDown'](D['Fire']) && pl['fireMode'] == 'auto') && this['TvMV']['type'] == Xp['None'] && !XF && !pl['ammoInfinite']) {
                const pd = this['KkvfHn']['uYAn'][pl['ammo']] || 0x0
                  , pk = pC['ammo'];
                pd == 0x0 && pk == 0x0 && (Xl['playSound'](pl['sound']['empty']),
                this['playedDryFire'] = !0x0);
            }
            Xk['isBindDown'](D['Fire']) || (this['playedDryFire'] = !0x1);
        }
        this['gunRecoilL'] = e['max'](0x0, this['gunRecoilL'] - this['gunRecoilL'] * XT * 0x5 - XT),
        this['gunRecoilR'] = e['max'](0x0, this['gunRecoilR'] - this['gunRecoilR'] * XT * 0x5 - XT);
        const pj = {
            'playerBarn': XY,
            'map': XC,
            'audioManager': Xl,
            'particleBarn': Xd
        };
        this['updateAnim'](XT, pj),
        this['currentAnim']() == XX['None'] && (this['throwableState'] = 'equip'),
        (this['currentAnim']() == XX['Cook'] || this['currentAnim']() == XX['Throw']) && p1['type'] != 'throwable' && this['playAnim'](XX['None'], this['anim']['seq']);
        const pf = this['selectIdlePose']()
          , px = ui[pf];
        for (let pU = 0x0; pU < this['bones']['length']; pU++) {
            const pW = px[pU] || I['identity']
              , pD = this['anim']['bones'][pU];
            pD['weight'] > 0x0 ? this['bones'][pU]['copy'](I['lerp'](pD['weight'], pW, pD['pose'])) : this['bones'][pU]['copy'](pW);
        }
        this['throwableStatePrev'] != this['throwableState'] && (this['visualsDirty'] = !0x0),
        this['throwableStatePrev'] = this['throwableState'],
        this['visualsDirty'] && this['updateVisuals'](XY, XC),
        this['visualsDirty'] = !0x1,
        this['updateAura'](XT, p2, p3),
        this['Zr'](),
        this['updateRenderLayer'](p2, p3, XC),
        XW['addPIXIObj'](this['auraContainer'], this['renderLayer'], this['renderZOrd'] - 0x1, this['renderZIdx']);
        const py = p3['layer'] & 0x2 || (p3['layer'] & 0x1) == 0x1 || (this['layer'] & 0x1) == 0x0;
        this['auraContainer']['visible'] = !!(!this['QDvlP']['GUi'] && py),
        XW['addPIXIObj'](this['container'], this['renderLayer'], this['renderZOrd'], this['renderZIdx']),
        this['isNew'] = !0x1;
    }
    ['render'](p, b) {
        const XT = p['MobS'](this['NLYJ'])
          , XY = p['uRFX'](0x1);
        if (this['container']['position']['set'](XT['x'], XT['y']),
        this['container']['scale']['set'](XY, XY),
        this['container']['visible'] = !this['QDvlP']['GUi'],
        this['auraContainer']['position']['set'](XT['x'], XT['y']),
        this['auraContainer']['scale']['set'](XY, XY),
        k['debug'] && b['players']) {
            he['addCircle'](this['NLYJ'], this['Guz'], 0xff0000, 0x0);
            const XC = w[this['QDvlP']['PhmiQd']];
            XC['type'] === 'gun' && he['addRay'](this['NLYJ'], this['RkcQgd'], XC['barrelLength'], 0xff0000, 0x0);
        }
    }
    ['updateRenderLayer'](b, XT, XY) {
        const XC = T['createCircle'](this['NLYJ'], L['player']['maxVisualRadius']);
        let Xl = !0x1
          , Xd = !0x1
          , Xk = !0x1;
        const XU = XY['JCfHy']['KGHPNo']();
        for (let XF = 0x0; XF < XU['length']; XF++) {
            const XH = XU[XF];
            if (XH['active']) {
                for (let p0 = 0x0; p0 < XH['stairs']['length']; p0++) {
                    const p1 = XH['stairs'][p0]
                      , p2 = T['intersect'](p1['collision'], XC);
                    if (p2) {
                        Xd = !0x0;
                        const p3 = v['add'](p1['center'], v['mul'](p1['downDir'], -2.5));
                        let p4 = v['sub'](p3, this['NLYJ']);
                        const p5 = v['length'](p4);
                        p4 = p5 > 0.0001 ? v['div'](p4, p5) : v['create'](0x1, 0x0),
                        Xk = X1['intersectSegmentDist'](XY['NmwMZ']['KGHPNo'](), this['NLYJ'], p4, p5, 0.5, this['layer'], !0x1) < p5;
                    }
                    b && p1['noCeilingReveal'] && p2 && this['layer'] != 0x0 && (this['noCeilingRevealTicker'] = 0.25);
                }
                for (let p6 = 0x0; p6 < XH['mask']['length']; p6++)
                    if (T['intersect'](XH['mask'][p6], XC)) {
                        Xl = !0x0;
                        break;
                    }
            }
        }
        let XW = this['layer']
          , XD = 0x12;
        Xd && (XW & 0x1 && (XT['layer'] & 0x1 || !Xk) || XT['layer'] & 0x2 && !Xl) && (XW |= 0x2),
        Xd && (XW & 0x1) == (XT['layer'] & 0x1) && (!Xl || XT['layer'] == 0x0) && (XW |= 0x2,
        XD += 0x64);
        const XG = this['__id'] + (this['QDvlP']['RxB'] ? 0x0 : 0x40000) + (b ? 0x10000 : 0x0) + (this['Guz'] > 0x1 ? 0x20000 : 0x0);
        this['renderLayer'] = XW,
        this['renderZOrd'] = XD,
        this['renderZIdx'] = XG;
    }
    ['updateVisuals'](b, XT) {
        const XY = w[this['QDvlP']['prHPqq']]
          , XC = XY['skinImg']
          , Xl = this['qSEd'] / L['player']['radius'];
        if (this['bodySprite']['texture'] = x['from'](XC['baseSprite']),
        this['bodySprite']['tint'] = XY['ghillie'] ? XT['getMapDef']()['biome']['colors']['playerGhillie'] : XC['baseTint'],
        this['bodySprite']['scale']['set'](0.25, 0.25),
        this['bodySprite']['visible'] = !0x0,
        this['QDvlP']['AVSa'] && this['updateFrozenImage']) {
            const XG = XT['getMapDef']()['biome']['frozenSprites'] || [];
            if (XG['length'] > 0x0) {
                const XF = XG[Math['floor'](Math['random']() * XG['length'])]
                  , XH = e['oriToRad'](this['QDvlP']['ewgxY']) + Math['PI'] * 0.5 + (Math['random']() - 0.5) * Math['PI'] * 0.25;
                this['bodyEffectSprite']['texture'] = x['from'](XF),
                this['bodyEffectSprite']['rotation'] = XH,
                this['bodyEffectSprite']['tint'] = 0xffffff,
                this['bodyEffectSprite']['scale']['set'](0.25, 0.25);
            }
            this['updateFrozenImage'] = !0x1;
        }
        if (XT['factionMode'] && !XY['ghillie']) {
            const p0 = b['getPlayerInfo'](this['__id'])['teamId']
              , p1 = ['player-patch-01.img', 'player-patch-02.img']
              , p2 = (p0 - 0x1) % p1['length']
              , p3 = p1[p2]
              , p4 = L['teamColors'][p2]
              , p5 = e['oriToRad'](0x3) + Math['PI'] * 0.5;
            this['patchSprite']['texture'] = x['from'](p3),
            this['patchSprite']['rotation'] = p5,
            this['patchSprite']['tint'] = p4,
            this['patchSprite']['scale']['set'](0.25, 0.25),
            this['patchSprite']['visible'] = !0x0;
        } else
            this['patchSprite']['visible'] = !0x1;
        const Xd = function(p6, p7, p8) {
            p6['texture'] = x['from'](p7),
            p6['scale']['set'](0.175, 0.175),
            p6['tint'] = p8,
            p6['visible'] = !0x0;
        }
          , Xk = XY['ghillie'] ? XT['getMapDef']()['biome']['colors']['playerGhillie'] : XC['handTint'];
        Xd(this['handLSprite'], XC['handSprite'], Xk),
        Xd(this['handRSprite'], XC['handSprite'], Xk);
        const XU = function(p6, p7, p8) {
            p6['texture'] = x['from']('player-feet-01.img'),
            p6['scale']['set'](0.45, 0.45),
            p6['rotation'] = Math['PI'] * 0.5,
            p6['tint'] = p7,
            p6['visible'] = p8;
        }
          , XW = XY['ghillie'] ? XT['getMapDef']()['biome']['colors']['playerGhillie'] : XC['footTint'];
        if (XU(this['footLSprite'], XW, this['downed']),
        XU(this['footRSprite'], XW, this['downed']),
        this['PsSK']('flak_jacket') && !XY['ghillie'] ? (this['flakSprite']['texture'] = x['from']('player-armor-base-01.img'),
        this['flakSprite']['scale']['set'](0.215, 0.215),
        this['flakSprite']['tint'] = 0x380606,
        this['flakSprite']['alpha'] = 0.7,
        this['flakSprite']['visible'] = !0x0) : this['flakSprite']['visible'] = !0x1,
        this['QDvlP']['JyI'] == '' || XY['ghillie'])
            this['chestSprite']['visible'] = !0x1;
        else {
            const p6 = w[this['QDvlP']['JyI']]['skinImg'];
            this['chestSprite']['texture'] = x['from'](p6['baseSprite']),
            this['chestSprite']['scale']['set'](0.25, 0.25),
            this['chestSprite']['tint'] = p6['baseTint'],
            this['chestSprite']['visible'] = !0x0;
        }
        if (this['PsSK']('steelskin') && !XY['ghillie'] ? (this['steelskinSprite']['texture'] = x['from']('loot-melee-pan-black.img'),
        this['steelskinSprite']['scale']['set'](0.4, 0.4),
        this['steelskinSprite']['anchor']['set'](0.575, 0.5),
        this['steelskinSprite']['tint'] = 0xffffff,
        this['steelskinSprite']['visible'] = !0x0) : this['steelskinSprite']['visible'] = !0x1,
        this['QDvlP']['SMDXye'] == '' || XY['ghillie'])
            this['helmetSprite']['visible'] = !0x1;
        else {
            const p7 = w[this['QDvlP']['SMDXye']]['skinImg']
              , p8 = (this['downed'] ? 0x1 : -0x1) * 3.33;
            this['helmetSprite']['texture'] = x['from'](p7['baseSprite']),
            this['helmetSprite']['position']['set'](p8, 0x0),
            p7['spriteScale'] ? this['helmetSprite']['scale']['set'](p7['spriteScale'], p7['spriteScale']) : this['helmetSprite']['scale']['set'](0.15, 0.15);
            let p9 = p7['baseTint'];
            XT['factionMode'] && (p9 = b['getPlayerInfo'](this['__id'])['teamId'] == 0x1 ? p7['baseTintRed'] : p7['baseTintBlue']),
            this['helmetSprite']['tint'] = p9,
            this['helmetSprite']['visible'] = !0x0;
        }
        if (this['Rlf']() > 0x0 && !XY['ghillie'] && !this['downed']) {
            const pX = [10.25, 11.5, 12.75]
              , pp = this['Rlf']()
              , pb = pX[e['min'](pp - 0x1, pX['length'] - 0x1)]
              , pI = (0.4 + pp * 0.03) * 0.5;
            this['backpackSprite']['texture'] = x['from']('player-circle-base-01.img'),
            this['backpackSprite']['position']['set'](-pb, 0x0),
            this['backpackSprite']['scale']['set'](pI, pI),
            this['backpackSprite']['tint'] = XC['backpackTint'],
            this['backpackSprite']['visible'] = !0x0,
            function(pj, pf, px) {
                pj['texture'] = x['from'](pf),
                pj['tint'] = px;
            }(this['backpackSprite'], XC['backpackSprite'], XC['backpackTint']);
        } else
            this['backpackSprite']['visible'] = !0x1;
        if (this['QDvlP']['arf']) {
            const pj = w['pan']['hipImg'];
            this['hipSprite']['texture'] = x['from'](pj['sprite']),
            this['hipSprite']['position']['set'](pj['pos']['x'], pj['pos']['y']),
            this['hipSprite']['scale']['set'](pj['scale']['x'], pj['scale']['y']),
            this['hipSprite']['rotation'] = pj['rot'],
            this['hipSprite']['tint'] = pj['tint'],
            this['hipSprite']['visible'] = !0x0;
        } else
            this['hipSprite']['visible'] = !0x1;
        const XD = w[this['QDvlP']['PhmiQd']];
        if (XD['type'] == 'gun') {
            this['gunRSprites']['setType'](this['QDvlP']['PhmiQd'], Xl),
            this['gunRSprites']['setVisible'](!0x0),
            XD['isDual'] ? (this['gunLSprites']['setType'](this['QDvlP']['PhmiQd'], Xl),
            this['gunLSprites']['setVisible'](!0x0)) : this['gunLSprites']['setVisible'](!0x1);
            const pf = this['bodyContainer']['getChildIndex'](this['handRContainer'])
              , px = this['bodyContainer']['getChildIndex'](this['handRContainer']);
            let py = pf + 0x1;
            (this['gunRSprites']['magTop'] || XD['worldImg']['handsBelow']) && (py = pf - 0x1),
            py = e['max'](py, 0x0),
            px != py && this['bodyContainer']['addChildAt'](this['handLContainer'], py);
            const pg = this['handRContainer']['getChildIndex'](this['gunRSprites']['container'])
              , pQ = XD['worldImg']['handsBelow'] ? this['handRContainer']['children']['length'] : 0x0;
            pg != pQ && this['handRContainer']['addChildAt'](this['gunRSprites']['container'], pQ);
        } else
            this['gunLSprites']['setVisible'](!0x1),
            this['gunRSprites']['setVisible'](!0x1);
        if (this['downed'] != this['wasDowned']) {
            if (this['wasDowned'] = this['downed'],
            this['downed']) {
                const pZ = this['bodyContainer']['getChildIndex'](this['footLContainer']);
                this['bodyContainer']['addChildAt'](this['handLContainer'], pZ),
                this['bodyContainer']['addChildAt'](this['handRContainer'], pZ);
            } else
                this['bodyContainer']['addChild'](this['handLContainer']),
                this['bodyContainer']['addChild'](this['handRContainer']);
        }
        if (XD['type'] == 'melee' && this['QDvlP']['PhmiQd'] != 'fists') {
            const pq = XD['worldImg'];
            this['meleeSprite']['texture'] = x['from'](pq['sprite']),
            this['meleeSprite']['pivot']['set'](-pq['pos']['x'], -pq['pos']['y']),
            this['meleeSprite']['scale']['set'](pq['scale']['x'] / Xl, pq['scale']['y'] / Xl),
            this['meleeSprite']['rotation'] = pq['rot'],
            this['meleeSprite']['tint'] = pq['tint'],
            this['meleeSprite']['visible'] = !0x0;
            const pM = this['handRContainer']['getChildIndex'](this['handRSprite'])
              , pE = e['max'](pq['renderOnHand'] ? pM + 0x1 : pM - 0x1, 0x0);
            this['handRContainer']['getChildIndex'](this['meleeSprite']) != pE && this['handRContainer']['addChildAt'](this['meleeSprite'], pE);
            const pN = this['bodyContainer']['getChildIndex'](this['handRContainer'])
              , pn = e['max'](pq['leftHandOntop'] ? pN + 0x1 : pN - 0x1, 0x0);
            this['bodyContainer']['getChildIndex'](this['handLContainer']) != pn && this['bodyContainer']['addChildAt'](this['handLContainer'], pn);
        } else
            this['meleeSprite']['visible'] = !0x1;
        if (XD['type'] == 'throwable') {
            const ph = function(pP, pA) {
                if (pA['sprite'] && pA['sprite'] != 'none') {
                    let pJ = pA['sprite'];
                    XT['mapDef']['gameMode']['spookyKillSounds'] && (pJ = er[pJ] || pJ),
                    pP['texture'] = x['from'](pJ),
                    pP['position']['set'](pA['pos']?.['x'], pA['pos']?.['y']),
                    pP['scale']['set'](pA['scale'], pA['scale']),
                    pP['rotation'] = Math['PI'] * 0.5,
                    pP['visible'] = !0x0;
                } else
                    pP['visible'] = !0x1;
            }
              , pR = XD['handImg']?.[this['throwableState']];
            ph(this['objectLSprite'], pR['left']),
            ph(this['objectRSprite'], pR['right']);
        } else
            this['objectLSprite']['visible'] = !0x1,
            this['objectRSprite']['visible'] = !0x1;
        if ((this['downed'] || this['currentAnim']() == XX['Revive']) && (this['gunLSprites']['setVisible'](!0x1),
        this['gunRSprites']['setVisible'](!0x1),
        this['meleeSprite']['visible'] = !0x1,
        this['objectLSprite']['visible'] = !0x1,
        this['objectRSprite']['visible'] = !0x1),
        this['downed'] && (this['backpackSprite']['visible'] = !0x1),
        this['TvMV']['type'] != Xp['UseItem'] && this['TvMV']['type'] != Xp['Revive'] || this['QDvlP']['GUi'] || this['QDvlP']['RxB'] && !this['PsSK']('self_revive') || !this['PsSK']('aoe_heal'))
            this['auraPulseTicker'] = 0x0,
            this['auraPulseDir'] = 0x1,
            this['auraCircle']['visible'] = !0x1;
        else {
            const pP = w[this['TvMV']['item']]
              , pA = pP?.['aura'] ? pP['aura']['sprite'] : 'part-aura-circle-01.img'
              , pJ = pP?.['aura'] ? pP['aura']['tint'] : 0xff00ff
              , pS = 0.125;
            let pB = pP ? L['player']['medicHealRange'] : L['player']['medicReviveRange'];
            pB *= pS,
            this['auraCircle']['texture'] = x['from'](pA),
            this['auraCircle']['scale']['set'](pB, pB),
            this['auraCircle']['tint'] = pJ,
            this['auraCircle']['visible'] = !0x0;
        }
        if (XT['perkMode'] && this['QDvlP']['Evfg'] != '' && this['QDvlP']['SMDXye'] != '' && !XY['ghillie']) {
            const pc = w[this['QDvlP']['Evfg']]['visorImg'];
            if (pc) {
                const pu = (this['downed'] ? 0x1 : -0x1) * 3.33;
                this['visorSprite']['texture'] = x['from'](pc['baseSprite']),
                this['visorSprite']['position']['set'](pu, 0x0);
            }
            pc['spriteScale'] ? this['visorSprite']['scale']['set'](pc['spriteScale'], pc['spriteScale']) : this['visorSprite']['scale']['set'](0.15, 0.15),
            this['visorSprite']['visible'] = !0x0;
        } else
            this['visorSprite']['visible'] = !0x1;
        this['bodyContainer']['scale']['set'](Xl, Xl);
    }
    ['updateAura'](p, b, XT) {
        let XY = !0x0;
        if (b || (XY = G['testCircleAabb'](this['NLYJ'], this['Guz'], XT['viewAabb']['min'], XT['viewAabb']['max'])),
        this['auraViewFade'] = e['lerp'](p * 0x6, this['auraViewFade'], XY ? 0x1 : 0x0),
        this['auraCircle']['visible']) {
            this['auraPulseTicker'] = e['clamp'](this['auraPulseTicker'] + p * this['auraPulseDir'] * 1.5, 0x0, 0x1);
            const XC = e['easeOutExpo'](this['auraPulseTicker']) * 0.75 + 0.25;
            (this['auraPulseTicker'] >= 0x1 || this['auraPulseTicker'] <= 0x0) && (this['auraPulseDir'] *= -0x1),
            this['auraCircle']['alpha'] = XC * this['auraViewFade'];
        }
    }
    ['Zr']() {
        const p = function(XT, XY) {
            XT['position']['set'](XY['pos']['x'], XY['pos']['y']),
            XT['pivot']['set'](-XY['pivot']['x'], -XY['pivot']['y']),
            XT['rotation'] = XY['rot'];
        };
        p(this['handLContainer'], this['bones'][Pe['HandL']]),
        p(this['handRContainer'], this['bones'][Pe['HandR']]),
        p(this['footLContainer'], this['bones'][Pe['FootL']]),
        p(this['footRContainer'], this['bones'][Pe['FootR']]);
        const b = w[this['QDvlP']['PhmiQd']];
        !this['downed'] && this['currentAnim']() != XX['Revive'] && b['type'] == 'gun' && b['worldImg']['leftHandOffset'] && (this['handLContainer']['position']['x'] += b['worldImg']['leftHandOffset']['x'],
        this['handLContainer']['position']['y'] += b['worldImg']['leftHandOffset']['y']),
        this['handLContainer']['position']['x'] -= this['gunRecoilL'] * 1.125,
        this['handRContainer']['position']['x'] -= this['gunRecoilR'] * 1.125;
        const mouseX = inputManager.mousePos.x;
        const mouseY = inputManager.mousePos.y;
        //local rotation - 13031
        if (window.activeId == this.__id && !window.spectating && window.isLocalRotation) {
        this.bodyContainer.rotation = Math.atan2(
            mouseY - window.innerHeight / 2,
            mouseX - window.innerWidth / 2,
        );
        } else {
            this['bodyContainer']['rotation'] = -Math['atan2'](this['RkcQgd']['y'], this['RkcQgd']['x']);
        }
        
    }
    ['playActionStartEffect'](p, b, XT) {
        let XY = null;
        switch (this['TvMV']['type']) {
        case Xp['Reload']:
        case Xp['ReloadAlt']:
            {
                const XC = w[this['TvMV']['item']];
                XC && (XY = {
                    'sound': this['TvMV']['type'] == Xp['ReloadAlt'] ? XC['sound']['reloadAlt'] : XC['sound']['reload'],
                    'channel': p ? 'activePlayer' : 'otherPlayers'
                });
            }
            break;
        case Xp['UseItem']:
            {
                const Xl = w[this['TvMV']['item']];
                Xl && (XY = {
                    'sound': Xl['sound']['use'],
                    'channel': p ? 'activePlayer' : 'otherPlayers'
                });
            }
        }
        if (XT['stopSound'](this['actionSoundInstance']),
        XY && this['playActionStartSfx'] && (this['actionSoundInstance'] = XT['playSound'](XY['sound'], {
            'channel': XY['channel'],
            'soundPos': this['NLYJ'],
            'fallOff': 0x2,
            'layer': this['layer'],
            'filter': 'muffled'
        })),
        this['TvMV']['type'] == Xp['Reload'] || this['TvMV']['type'] == Xp['ReloadAlt']) {
            const Xd = w[this['TvMV']['item']];
            if (Xd && Xd['caseTiming'] == 'reload')
                for (let Xk = 0x0; Xk < Xd['maxReload']; Xk++) {
                    const XU = Xk % 0x2 == 0x0 ? -0x1 : 0x1
                      , XW = Math['PI'] + Math['PI'] / 0x4 * XU
                      , XD = Xd['maxReload'] <= 0x2 ? 0x1 : e['lerp'](Math['random'](), 0.8, 1.2);
                    tr(this['TvMV']['item'], XW, XD, this['NLYJ'], this['RkcQgd'], this['renderLayer'], this['renderZOrd'] + 0x1, b);
                }
        }
    }
    ['updateActionEffect'](p, b, XT, XY) {
        let XC = '';
        const Xl = {};
        switch (this['TvMV']['type']) {
        case Xp['UseItem']:
            {
                const Xd = w[this['TvMV']['item']]
                  , Xk = b['loadout'];
                Xd['type'] == 'heal' ? XC = w[Xk['heal']]['emitter'] : Xd['type'] == 'boost' && (XC = w[Xk['boost']]['emitter']),
                this['PsSK']('aoe_heal') && (Xl['scale'] = 1.5,
                Xl['radius'] = L['player']['medicHealRange'] / Xl['scale'],
                Xl['rateMult'] = 0.25);
                break;
            }
        case Xp['Revive']:
            {
                this['QDvlP']['RxB'] && (XC = 'revive_basic');
                break;
            }
        }
        XC && (!this['useItemEmitter'] || this['useItemEmitter']['type'] != XC) && (this['useItemEmitter']?.['stop'](),
        Xl['pos'] = this['NLYJ'],
        Xl['layer'] = this['layer'],
        this['useItemEmitter'] = XT['addEmitter'](XC, Xl)),
        this['useItemEmitter'] && (this['useItemEmitter']['pos'] = v['add'](this['NLYJ'], v['create'](0x0, 0.1)),
        this['useItemEmitter']['layer'] = this['renderLayer'],
        this['useItemEmitter']['zOrd'] = this['renderZOrd'] + 0x1),
        this['useItemEmitter'] && !XC && (this['useItemEmitter']['stop'](),
        this['useItemEmitter'] = null),
        XY['isSoundPlaying'](this['actionSoundInstance']) || (this['actionSoundInstance'] = null),
        this['actionSoundInstance'] && !p && XY['updateSound'](this['actionSoundInstance'], 'otherPlayers', this['NLYJ'], {
            'layer': this['layer'],
            'fallOff': 0x2,
            'filter': 'muffled'
        });
    }
    ['playItemPickupSound'](p, b) {
        const XT = w[p];
        XT && (b['playSound'](XT['sound']?.['pickup'], {
            'channel': 'ui'
        }),
        XT['type'] == 'throwable' && (this['lastThrowablePickupSfxTicker'] = 0.3));
    }
    ['selectIdlePose']() {
        const p = w[this['QDvlP']['PhmiQd']];
        let b = 'fists';
        return this['downed'] ? b = 'downed' : 'anim'in p && p['anim']['idlePose'] ? b = p['anim']['idlePose'] : p['type'] == 'gun' ? p['pistol'] ? b = p['isDual'] ? 'dualPistol' : 'pistol' : p['isBullpup'] ? b = 'bullpup' : p['isLauncher'] ? b = 'launcher' : b = p['isDual'] ? 'dualRifle' : 'rifle' : p['type'] == 'throwable' ? b = 'throwable' : b = 'fists',
        ui[b] ? b : 'fists';
    }
    ['selectAnim'](p) {
        const b = function(XT, XY) {
            return {
                'type': XT,
                'mirror': !!XY && Math['random']() < 0.5
            };
        };
        switch (p) {
        case XX['None']:
            return b('none', !0x1);
        case XX['Cook']:
            return b('cook', !0x1);
        case XX['Throw']:
            return b('throw', !0x1);
        case XX['Revive']:
            return b('revive', !0x1);
        case XX['CrawlForward']:
            return b('crawl_forward', !0x0);
        case XX['CrawlBackward']:
            return b('crawl_backward', !0x0);
        case XX['Melee']:
            {
                const XT = w[this['QDvlP']['PhmiQd']];
                if (!XT['anim']?.['attackAnims'])
                    return b('fists', !0x0);
                const XY = XT['anim']['attackAnims']
                  , XC = Math['floor'](Math['random']() * XY['length'])
                  , Xl = XY[XC];
                return b(Xl, Xl == 'fists' && XY['length'] == 0x1);
            }
        default:
            return b('none', !0x1);
        }
    }
    ['currentAnim']() {
        return this['anim']['type'];
    }
    ['playAnim'](p, b) {
        this['anim']['type'] = p,
        this['anim']['data'] = this['selectAnim'](p),
        this['anim']['seq'] = b,
        this['anim']['ticker'] = 0x0;
        for (let XT = 0x0; XT < this['bones']['length']; XT++) {
            const XY = this['anim']['bones'][XT];
            XY['weight'] = 0x0,
            XY['pose']['copy'](this['bones'][XT]);
        }
    }
    ['updateAnim'](b, XT) {
        if (this['anim']['data']['type'] == 'none' && this['playAnim'](XX['None'], this['anim']['seq']),
        this['currentAnim']() != XX['None']) {
            const XY = this['anim']['ticker'];
            this['anim']['ticker'] += b * 0x1;
            const XC = rs[this['anim']['data']['type']]
              , Xl = XC['keyframes'];
            let Xd = -0x1
              , Xk = 0x0;
            for (; this['anim']['ticker'] >= Xl[Xk]['time'] && Xk < Xl['length'] - 0x1; )
                Xd++,
                Xk++;
            Xd = e['max'](Xd, 0x0);
            const XU = Xl[Xd]['time']
              , XW = Xl[Xk]['time']
              , XD = e['min']((this['anim']['ticker'] - XU) / (XW - XU), 0x1)
              , XG = Xl[Xd]['bones']
              , XF = Xl[Xk]['bones']
              , XH = this['anim']['data']['mirror'];
            for (let p2 = 0x0; p2 < this['anim']['bones']['length']; p2++) {
                const p3 = this['anim']['bones'][p2];
                let p4 = p2;
                XH && (p4 = p2 % 0x2 == 0x0 ? p2 + 0x1 : p2 - 0x1),
                XG[p4] !== void 0x0 && XF[p4] !== void 0x0 && (p3['weight'] = Xd == Xk ? XD : 0x1,
                p3['pose']['copy'](I['lerp'](XD, XG[p4], XF[p4])),
                XH && (p3['pose']['pos']['y'] *= -0x1,
                p3['pose']['pivot']['y'] *= -0x1,
                p3['pose']['rot'] *= -0x1));
            }
            const p0 = Xk == Xl['length'] - 0x1 && e['eqAbs'](XD, 0x1);
            let p1 = this['anim']['ticker'];
            p0 && (p1 += 0x1);
            for (let p5 = 0x0; p5 < XC['effects']['length']; p5++) {
                const p6 = XC['effects'][p5];
                p6['time'] >= XY && p6['time'] < p1 && this[p6['fn']]['apply'](this, [XT, p6['args']]);
            }
            p0 && this['playAnim'](XX['None'], this['anim']['seq']);
        }
    }
    ['animPlaySound'](p, b) {
        const XT = w[this['QDvlP']['PhmiQd']]['sound'][b['sound']];
        XT && p['audioManager']?.['playSound'](XT, {
            'channel': 'sfx',
            'soundPos': this['NLYJ'],
            'fallOff': 0x3,
            'layer': this['layer'],
            'filter': 'muffled'
        });
    }
    ['animSetThrowableState'](p, b) {
        this['throwableState'] = b['state'];
    }
    ['animThrowableParticles'](p, b) {
        if (w[this['QDvlP']['PhmiQd']]['useThrowParticles']) {
            const XT = v['rotate'](v['create'](0.75, 0.75), Math['atan2'](this['RkcQgd']['y'], this['RkcQgd']['x']));
            p['particleBarn']?.['addParticle']('fragPin', this['renderLayer'], v['add'](this['NLYJ'], XT), v['mul'](v['rotate'](this['RkcQgd'], Math['PI'] * 0.5), 4.5), 0x1, Math['random']() * Math['PI'] * 0x2, null, this['renderZOrd'] + 0x1);
            const XY = v['rotate'](v['create'](0.75, -0.75), Math['atan2'](this['RkcQgd']['y'], this['RkcQgd']['x']));
            p['particleBarn']?.['addParticle']('fragLever', this['renderLayer'], v['add'](this['NLYJ'], XY), v['mul'](v['rotate'](this['RkcQgd'], -Math['PI'] * 0.25), 3.5), 0x1, Math['random']() * Math['PI'] * 0x2, null, this['renderZOrd'] + 0x1);
        }
    }
    ['animMeleeCollision'](b, XT) {
        const XY = w[this['QDvlP']['PhmiQd']];
        if (XY && XY['type'] == 'melee') {
            const XC = this['getMeleeCollider']()
              , Xl = XC['rad'] + v['length'](v['sub'](this['NLYJ'], XC['pos']))
              , Xd = []
              , Xk = b['map']?.['NmwMZ']['KGHPNo']();
            for (let XG = 0x0; XG < Xk['length']; XG++) {
                const XF = Xk[XG];
                if (XF['active'] && !XF['dead'] && !XF['isSkin'] && XF['height'] >= L['player']['meleeHeight'] && t['sameLayer'](XF['layer'], this['layer'] & 0x1)) {
                    let XH = T['intersectCircle'](XF['collider'], XC['pos'], XC['rad']);
                    if (XY['cleave'] || XY['wallCheck']) {
                        const p0 = v['normalizeSafe'](v['sub'](XF['pos'], this['NLYJ']), v['create'](0x1, 0x0))
                          , p1 = X1['intersectSegment'](b['map']?.['NmwMZ']['KGHPNo'](), this['NLYJ'], p0, Xl, 0x1, this['layer'], !0x1);
                        p1 && p1['id'] !== XF['__id'] && (XH = null);
                    }
                    if (XH) {
                        const p2 = a[XF['type']]
                          , p3 = v['add'](XC['pos'], v['mul'](v['neg'](XH['dir']), XC['rad'] - XH['pen']))
                          , p4 = v['rotate'](v['mul'](XH['dir'], 7.5), (Math['random']() - 0.5) * Math['PI'] / 0x3);
                        Xd['push']({
                            'pen': XH['pen'],
                            'prio': 0x1,
                            'pos': p3,
                            'vel': p4,
                            'layer': this['renderLayer'],
                            'zOrd': this['renderZOrd'],
                            'particle': p2['hitParticle'],
                            'sound': p2['sound']['punch'],
                            'soundFn': 'playGroup'
                        });
                    }
                }
            }
            const XU = b['playerBarn']?.['getPlayerInfo'](this['__id'])['teamId']
              , XW = b['playerBarn']?.['playerPool']['KGHPNo']();
            for (let p5 = 0x0; p5 < XW['length']; p5++) {
                const p6 = XW[p5];
                if (p6['active'] && p6['__id'] != this['__id'] && !p6['QDvlP']['GUi'] && t['sameLayer'](p6['layer'], this['layer'])) {
                    const p7 = v['normalizeSafe'](v['sub'](p6['NLYJ'], this['NLYJ']), v['create'](0x1, 0x0))
                      , p8 = G['intersectCircleCircle'](XC['pos'], XC['rad'], p6['NLYJ'], p6['Guz']);
                    if (p8 && e['eqAbs'](Xl, X1['intersectSegmentDist'](b['map']?.['NmwMZ']['KGHPNo'](), this['NLYJ'], p7, Xl, L['player']['meleeHeight'], this['layer'], !0x1))) {
                        const p9 = b['playerBarn']?.['getPlayerInfo'](p6['__id'])['teamId']
                          , pX = v['rotate'](p7, (Math['random']() - 0.5) * Math['PI'] / 0x3)
                          , pp = XY['sound'][XT['playerHit']] || XY['sound']['playerHit'];
                        window['CrazyGames'] || Xd['push']({
                            'pen': p8['pen'],
                            'prio': p9 == XU ? 0x2 : 0x0,
                            'pos': v['copy'](p6['NLYJ']),
                            'vel': pX,
                            'layer': p6['renderLayer'],
                            'zOrd': p6['renderZOrd'],
                            'particle': 'bloodSplat',
                            'sound': pp,
                            'soundFn': 'playSound'
                        });
                    }
                }
            }
            Xd['sort']( (pb, pI) => pb['prio'] == pI['prio'] ? pI['pen'] - pb['pen'] : pb['prio'] - pI['prio']);
            let XD = Xd['length'];
            XY['cleave'] || (XD = e['min'](XD, 0x1));
            for (let pb = 0x0; pb < XD; pb++) {
                const pI = Xd[pb];
                b['particleBarn']?.['addParticle'](pI['particle'], pI['layer'], pI['pos'], pI['vel'], 0x1, Math['random']() * Math['PI'] * 0x2, null, pI['zOrd'] + 0x1),
                b['audioManager']?.[pI['soundFn']](pI['sound'], {
                    'channel': 'hits',
                    'soundPos': pI['pos'],
                    'layer': this['layer'],
                    'filter': 'muffled'
                });
            }
        }
    }
    ['initSubmergeSprites']() {
        const p = function(XT, XY) {
            XT['texture'] = x['from'](XY),
            XT['anchor']['set'](0.5, 0.5),
            XT['tint'] = 0xffffff,
            XT['alpha'] = 0x0,
            XT['visible'] = !0x1;
        };
        p(this['bodySubmergeSprite'], 'player-wading-01.img'),
        p(this['handLSubmergeSprite'], 'player-hands-01.img'),
        p(this['handRSubmergeSprite'], 'player-hands-01.img'),
        p(this['footLSubmergeSprite'], 'player-feet-01.img'),
        p(this['footRSubmergeSprite'], 'player-feet-01.img');
        const b = new r();
        b['beginFill'](0xff0000, 0.5),
        b['drawCircle'](0x0, 0x0, 0x26 * 0x2 * di),
        b['position']['set'](0x0, 0x0),
        this['bodySubmergeSprite']['addChild'](b),
        this['bodySubmergeSprite']['mask'] = b,
        this['bodySubmergeSprite']['scale']['set'](0.5, 0.5);
    }
    ['updateSubmersion'](b, XT) {
        const XY = this['surface']?.['type'] == 'water';
        let XC = 0x0;
        if (XY) {
            const XW = this['surface']?.['data']['river']
              , XD = XW && !XT['isInOcean'](this['NLYJ'])
              , XG = XD ? XW['distanceToShore'](this['NLYJ']) : XT['distanceToShore'](this['NLYJ'])
              , XF = XD ? 0xc : 0x10;
            XC = e['remap'](XG, 0x0, XF, 0.6, 0x1);
        }
        this['submersion'] = e['lerp'](b * 0x4, this['submersion'], XC);
        const Xl = this['submersion'] * 0.8
          , Xd = (0.9 - this['submersion'] * 0.4) * 0x2
          , Xk = 0x1 / (Xd * di);
        this['bodySubmergeSprite']['scale']['set'](Xd, Xd),
        this['bodySubmergeSprite']['mask']['scale']['set'](Xk, Xk),
        this['bodySubmergeSprite']['alpha'] = Xl,
        this['bodySubmergeSprite']['visible'] = Xl > 0.001,
        XY && (this['bodySubmergeSprite']['tint'] = this['surface']?.['data']['waterColor']);
        const XU = [this['handLSubmergeSprite'], this['handRSubmergeSprite'], this['footLSubmergeSprite'], this['footRSubmergeSprite']];
        for (let XH = 0x0; XH < XU['length']; XH++) {
            const p0 = XU[XH];
            p0['alpha'] = this['downed'] ? Xl : 0x0,
            p0['visible'] = p0['alpha'] > 0.001,
            XY && (p0['tint'] = this['surface']?.['data']['waterColor']);
        }
    }
    ['updateFrozenState'](p) {
        this['QDvlP']['AVSa'] ? this['frozenTicker'] = 0.25 : (this['frozenTicker'] -= p,
        this['updateFrozenImage'] = !0x0),
        this['bodyEffectSprite']['alpha'] = this['QDvlP']['AVSa'] ? 0x1 : e['remap'](this['frozenTicker'], 0x0, 0.25, 0x0, 0x1),
        this['bodyEffectSprite']['visible'] = this['frozenTicker'] > 0x0;
    }
    ['addRecoil'](p, b, XT) {
        b && (this['gunRecoilL'] += p),
        XT && (this['gunRecoilR'] += p);
    }
    ['isUnderground'](p) {
        if (this['layer'] != 0x1)
            return !0x1;
        const b = p['JCfHy']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['layers']['length'] >= 0x2) {
                const XC = XY['layers'][0x1];
                if (T['intersectCircle'](XC['collision'], this['NLYJ'], this['Guz']))
                    return XC['underground'];
            }
        }
        return !0x0;
    }
}
class ir {
    ['playerPool'] = new be(us);
    ['playerInfo'] = {};
    ['playerIds'] = [];
    ['teamInfo'] = {};
    ['groupInfo'] = {};
    ['playerStatus'] = {};
    ['anonPlayerNames'] = !0x1;
    ['onMapLoad'](p) {}
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH, p0) {
        const p1 = this['playerPool']['KGHPNo']();
        for (let p6 = 0x0; p6 < p1['length']; p6++) {
            const p7 = p1[p6];
            p7['active'] && p7['Gxhh'](XT, this, XU, XD, Xd, XW, Xk, Xl, XG, XY, XF, XH, p0);
        }
        const p2 = this['getPlayerInfo'](XY)
          , p3 = this['getPlayerById'](XY);
        this['setPlayerStatus'](XY, {
            'pos': v['copy'](p3['QDvlP']['NLYJ']),
            'health': p3['KkvfHn']['izX'],
            'disconnected': !0x1,
            'dead': p3['QDvlP']['GUi'],
            'downed': p3['QDvlP']['RxB'],
            'role': p3['QDvlP']['Evfg'],
            'visible': !0x0
        });
        const p4 = X9(XU['factionMode'])
          , p5 = Object['keys'](this['playerStatus']);
        for (let p8 = 0x0; p8 < p5['length']; p8++) {
            const p9 = this['playerStatus'][p5[p8]]
              , pX = p9['playerId']
              , pp = this['getPlayerInfo'](pX)
              , pb = this['getPlayerById'](pX);
            pb ? (p9['posDelta'] = v['length'](v['sub'](pb['QDvlP']['NLYJ'], p9['pos'])),
            p9['posTarget'] = v['copy'](pb['QDvlP']['NLYJ']),
            p9['posInterp'] = e['clamp'](p9['posInterp'] + XT * 0.2, XT / p4, 0x1),
            p9['dead'] = pb['QDvlP']['GUi'],
            p9['downed'] = pb['QDvlP']['RxB']) : p9['posInterp'] = XT / p4;
            const pI = v['sub'](p9['posTarget'], p9['pos'])
              , pj = v['length'](pI)
              , pf = pj > 0.0001 ? v['div'](pI, pj) : v['create'](0x1, 0x0)
              , px = e['min'](pj, p9['posDelta'] * p9['posInterp']);
            p9['pos'] = v['add'](p9['pos'], v['mul'](pf, px)),
            p9['timeSinceVisible'] += XT,
            p9['timeSinceUpdate'] += XT;
            const py = !p9['dead'] || pp['teamId'] != p2['teamId'] && p9['role'] != 'leader' ? 0x0 : 0.6;
            p9['minimapAlpha'] = e['smoothstep'](p9['timeSinceVisible'], 0x0, 0.1) * e['lerp'](e['smoothstep'](p9['timeSinceUpdate'], 0x2, 2.5), 0x1, py),
            !XU['factionMode'] && pp['teamId'] != p2['teamId'] && (p9['minimapAlpha'] = 0x0),
            p9['minimapVisible'] = p9['minimapAlpha'] > 0.01;
        }
    }
    ['Dgc'](p, b) {
        const XT = this['playerPool']['KGHPNo']();
        for (let XY = 0x0; XY < XT['length']; XY++) {
            const XC = XT[XY];
            XC['active'] && XC['render'](p, b);
        }
    }
    ['getPlayerById'](p) {
        const b = this['playerPool']['KGHPNo']();
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT];
            if (XY['active'] && XY['__id'] === p)
                return XY;
        }
        return null;
    }
    ['setPlayerInfo'](p) {
        this['playerInfo'][p['playerId']] = {
            'playerId': p['playerId'],
            'teamId': p['teamId'],
            'groupId': p['groupId'],
            'name': p['name'],
            'nameTruncated': Q['truncateString'](p['name'] || '', 'bold\x2016px\x20arial', 0xb4),
            'anonName': 'Player' + (p['playerId'] - 0xabe),
            'loadout': t['cloneDeep'](p['loadout'])
        },
        this['playerIds']['push'](p['playerId']),
        this['playerIds']['sort']( (b, XT) => b - XT);
    }
    ['deletePlayerInfo'](p) {
        const b = this['playerIds']['indexOf'](p);
        b !== -0x1 && this['playerIds']['splice'](b, 0x1),
        delete this['playerInfo'][p],
        delete this['playerStatus'][p];
    }
    ['getPlayerInfo'](p) {
        return this['playerInfo'][p] || {
            'playerId': 0x0,
            'group': 0x0,
            'teamId': 0x0,
            'name': '',
            'nameTruncated': '',
            'anonName': '',
            'loadout': {}
        };
    }
    ['recomputeTeamData']() {
        this['teamInfo'] = {},
        this['groupInfo'] = {};
        const p = Object['keys'](this['playerInfo']);
        for (let XY = 0x0; XY < p['length']; XY++) {
            const XC = this['playerInfo'][p[XY]]
              , Xl = XC['playerId']
              , Xd = XC['teamId'];
            this['teamInfo'][Xd] = this['teamInfo'][Xd] || {
                'teamId': Xd,
                'playerIds': []
            },
            this['teamInfo'][Xd]['playerIds']['push'](Xl);
            const Xk = XC['groupId'];
            this['groupInfo'][Xk] = this['groupInfo'][Xk] || {
                'groupId': Xk,
                'playerIds': []
            },
            this['groupInfo'][Xk]['playerIds']['push'](Xl);
        }
        const b = Object['keys'](this['teamInfo']);
        for (let XU = 0x0; XU < b['length']; XU++)
            this['teamInfo'][b[XU]]['playerIds']['sort']( (XW, XD) => XW - XD);
        const XT = Object['keys'](this['groupInfo']);
        for (let XW = 0x0; XW < XT['length']; XW++)
            this['groupInfo'][XT[XW]]['playerIds']['sort']( (XD, XG) => XD - XG);
    }
    ['getTeamInfo'](p) {
        return this['teamInfo'][p];
    }
    ['getGroupInfo'](p) {
        return this['groupInfo'][p];
    }
    ['updatePlayerStatus'](p, b, XT) {
        const XY = this['getTeamInfo'](p)
          , XC = XT ? this['playerIds'] : XY['playerIds'];
        if (XC['length'] != b['players']['length']) {
            console['error']('PlayerIds\x20and\x20playerStatus.players\x20out\x20of\x20sync.\x20OurLen:\x20' + XC['length'] + '\x20MsgLen:\x20' + b['players']['length'] + '\x20FactionMode:\x20' + XT);
            return;
        }
        for (let Xl = 0x0; Xl < XC['length']; Xl++) {
            const Xd = XC[Xl]
              , Xk = b['players'][Xl];
            Xk['hasData'] && this['setPlayerStatus'](Xd, Xk);
        }
    }
    ['setPlayerStatus'](p, b) {
        const XT = this['playerStatus'][p] || {
            'playerId': p,
            'pos': v['copy'](b['pos']),
            'posTarget': v['copy'](b['pos']),
            'posDelta': v['create'](0x0, 0x0),
            'health': 0x64,
            'posInterp': 0x0,
            'visible': !0x1,
            'dead': !0x1,
            'downed': !0x1,
            'disconnected': !0x1,
            'role': '',
            'timeSinceUpdate': 0x0,
            'timeSinceVisible': 0x0,
            'minimapAlpha': 0x0,
            'minimapVisible': !0x1
        };
        XT['minimapVisible'] || (XT['pos'] = v['copy'](b['pos']),
        !XT['visible'] && b['visible'] && (XT['timeSinceVisible'] = 0x0)),
        XT['visible'] = b['visible'],
        XT['visible'] && (XT['timeSinceUpdate'] = 0x0),
        XT['posTarget'] = v['copy'](b['pos']),
        XT['posDelta'] = v['length'](v['sub'](b['pos'], XT['pos'])),
        XT['dead'] = b['dead'],
        XT['downed'] = b['downed'],
        XT['role'] = b['role'],
        b['health'] !== void 0x0 && (XT['health'] = b['health']),
        b['disconnected'] !== void 0x0 && (XT['disconnected'] = b['disconnected']),
        this['playerStatus'][p] = XT;
    }
    ['getPlayerStatus'](p) {
        return this['playerStatus'][p];
    }
    ['updateGroupStatus'](p, b) {
        const XT = this['getGroupInfo'](p);
        if (XT['playerIds']['length'] != b['players']['length']) {
            console['error']('PlayerIds\x20and\x20groupStatus.players\x20out\x20of\x20sync');
            return;
        }
        for (let XY = 0x0; XY < XT['playerIds']['length']; XY++) {
            const XC = XT['playerIds'][XY]
              , Xl = b['players'][XY]
              , Xd = this['getPlayerStatus'](XC);
            Xd && (Xd['health'] = Xl['health'],
            Xd['disconnected'] = Xl['disconnected']);
        }
    }
    ['getGroupColor'](p) {
        const b = this['getPlayerInfo'](p)
          , XT = this['getGroupInfo'](b['groupId'])
          , XY = XT ? XT['playerIds']['indexOf'](p) : 0x0;
        return XY >= 0x0 && XY < L['groupColors']['length'] ? L['groupColors'][XY] : 0xffffff;
    }
    ['getTeamColor'](p) {
        const b = p - 0x1;
        return b >= 0x0 && b < L['teamColors']['length'] ? L['teamColors'][b] : 0xffffff;
    }
    ['getPlayerName'](p, b, XT) {
        const XY = this['getPlayerInfo'](p);
        if (!XY)
            return '';
        let XC = XY['name'];
        return XT && (XC = XY['nameTruncated']),
        this['anonPlayerNames'] && this['getPlayerInfo'](b)['groupId'] != XY['groupId'] && (XC = XY['anonName']),
        XC;
    }
    ['addDeathEffect'](p, b, XT, XY, XC) {
        const Xl = this['getPlayerById'](p)
          , Xd = this['getPlayerById'](b);
        if (Xl && Xd?.['PsSK']('turkey_shoot')) {
            XY['playGroup']('cluck', {
                'soundPos': Xl['NLYJ'],
                'layer': Xl['layer'],
                'muffled': !0x0
            }),
            XY['playSound']('feather_01', {
                'channel': 'sfx',
                'soundPos': Xl['NLYJ'],
                'layer': Xl['layer'],
                'muffled': !0x0
            });
            const Xk = Math['floor'](t['random'](0x1e, 0x23));
            for (let XU = 0x0; XU < Xk; XU++) {
                const XW = v['mul'](v['randomUnit'](), t['random'](0x5, 0xf));
                XC['addParticle']('turkeyFeathersDeath', Xl['layer'], Xl['NLYJ'], XW);
            }
        }
    }
}
class ds {
    ['__id'];
    ['__type'];
    ['active'];
    ['zesp'];
    ['NLYJ'];
    ['Guz'];
    ['fgCE'];
    ['SOkbZe'];
    ['rfNkqZ']() {}
    ['dphRtI']() {
        this['zesp']['fadeOut'](),
        this['zesp'] = null;
    }
    ['wzDEnz'](p, b, XT, XY) {
        this['NLYJ'] = v['copy'](p['pos']),
        this['Guz'] = p['rad'],
        b && (this['fgCE'] = p['layer'],
        this['SOkbZe'] = p['interior']),
        XT && (this['zesp'] = XY['smokeBarn']['vQFXJ'](),
        this['zesp']?.['rfNkqZ'](this['NLYJ'], this['Guz'], this['fgCE'], this['SOkbZe'])),
        this['zesp']['posTarget'] = v['copy'](this['NLYJ']),
        this['zesp']['radTarget'] = this['Guz'];
    }
}
const fi = ['part-smoke-02.img', 'part-smoke-03.img'];
class ps {
    ['active'] = !0x1;
    ['zIdx'] = 0x0;
    ['sprite'] = y['from'](fi[Math['floor'](Math['random']() * fi['length'])]);
    ['pos'];
    ['posTarget'];
    ['rad'];
    ['radTarget'];
    ['rot'];
    ['rotVel'];
    ['fade'];
    ['fadeTicker'];
    ['fadeDuration'];
    ['tint'];
    ['layer'];
    ['interior'];
    constructor() {
        this['sprite']['anchor'] = new h(0.5,0.5),
        this['sprite']['visible'] = !0x1;
    }
    ['rfNkqZ'](p, b, XT, XY) {
        this['pos'] = v['copy'](p),
        this['posTarget'] = v['copy'](this['pos']),
        this['rad'] = b,
        this['radTarget'] = this['rad'],
        this['rot'] = t['random'](0x0, Math['PI'] * 0x2),
        this['rotVel'] = Math['PI'] * t['random'](0.25, 0.5) * (Math['random']() < 0.5 ? -0x1 : 0x1),
        this['fade'] = !0x1,
        this['fadeTicker'] = 0x0,
        this['fadeDuration'] = t['random'](0.5, 0.75),
        this['tint'] = t['rgbToInt'](t['hsvToRgb'](0x0, 0x0, t['random'](0.9, 0.95))),
        this['layer'] = XT,
        this['interior'] = XY;
    }
    ['fadeOut']() {
        this['fade'] = !0x0;
    }
}
class rr {
    ['LbSzdS'] = new be(ds);
    ['yNawk'] = [];
    ['zIdx'] = 0x7fffffff;
    ['vQFXJ']() {
        let p = null;
        for (let b = 0x0; b < this['yNawk']['length']; b++)
            if (!this['yNawk'][b]['active']) {
                p = this['yNawk'][b];
                break;
            }
        return p || (p = new ps(),
        this['yNawk']['push'](p)),
        p['active'] = !0x0,
        p['zIdx'] = this['zIdx']--,
        p;
    }
    ['Gxhh'](b, XT, XY, XC, Xl) {
        for (let Xd = 0x0; Xd < this['yNawk']['length']; Xd++) {
            const Xk = this['yNawk'][Xd];
            if (Xk['active']) {
                Xk['rad'] = e['lerp'](b * 0x3, Xk['rad'], Xk['radTarget']),
                Xk['pos'] = e['v2lerp'](b * 0x3, Xk['pos'], Xk['posTarget']),
                Xk['rotVel'] *= 0x1 / (0x1 + b * 0.1),
                Xk['rot'] += Xk['rotVel'] * b,
                Xk['fadeTicker'] += Xk['fade'] ? b : 0x0,
                Xk['active'] = Xk['fadeTicker'] < Xk['fadeDuration'];
                const XU = e['clamp'](0x1 - Xk['fadeTicker'] / Xk['fadeDuration'], 0x0, 0x1) * 0.9;
                let XW = Xk['layer'];
                (t['sameLayer'](Xk['layer'], XY['layer']) || XY['layer'] & 0x2) && (Xk['layer'] == 0x1 || !(XY['layer'] & 0x2) || !XC['insideStructureMask'](T['createCircle'](Xk['pos'], 0x1))) && (XW |= 0x2);
                const XD = Xk['interior'] ? 0x1f4 : 0x3e8;
                Xl['addPIXIObj'](Xk['sprite'], XW, XD, Xk['zIdx']);
                const XG = XT['MobS'](Xk['pos'])
                  , XF = XT['uRFX'](Xk['rad'] * 0x2 / XT['xQaJqu']);
                Xk['sprite']['position']['set'](XG['x'], XG['y']),
                Xk['sprite']['scale']['set'](XF, XF),
                Xk['sprite']['rotation'] = Xk['rot'],
                Xk['sprite']['tint'] = Xk['tint'],
                Xk['sprite']['alpha'] = XU,
                Xk['sprite']['visible'] = Xk['active'];
            }
        }
    }
}
function wi(p, b, XT) {
    const XY = b - p
      , XC = XY * XT;
    return Math['abs'](XC) < 0.01 ? XY : XC;
}
function fs() {
    const p = new r();
    return p['position']['set'](0x0, 0x0),
    p['scale']['set'](0x1, 0x1),
    p['__zOrd'] = 0x0,
    p['__zIdx'] = 0x0,
    p;
}
function gt(p, b, XT, XY, XC) {
    p['moveTo'](b, XT),
    p['lineTo'](b, XT + XC),
    p['lineTo'](b + XY, XT + XC),
    p['lineTo'](b + XY, XT),
    p['lineTo'](b, XT),
    p['closePath']();
}
class ar {
    constructor(p, b) {
        this['game'] = p,
        this['canvasMode'] = b;
        for (let XT = 0x0; XT < 0x4; XT++)
            this['layers']['push'](new ws('layer_' + XT));
        this['ground']['alpha'] = 0x0;
    }
    ['zIdx'] = 0x0;
    ['layer'] = 0x0;
    ['layerAlpha'] = 0x0;
    ['groundAlpha'] = 0x0;
    ['underground'] = !0x1;
    ['layers'] = [];
    ['ground'] = new r();
    ['layerMask'] = fs();
    ['debugLayerMask'] = null;
    ['layerMaskDirty'] = !0x0;
    ['layerMaskActive'] = !0x1;
    ['dphRtI']() {
        this['layerMask']['parent']?.['removeChild'](this['layerMask']),
        this['layerMask']['destroy'](!0x0);
    }
    ['addPIXIObj'](p, b, XT, XY) {
        if (!p['transform']) {
            const Xl = new Error()
              , Xd = JSON['stringify']({
                'type': 'addChild',
                'stack': Xl['stack'],
                'browser': navigator['userAgent'],
                'playing': this['game']['ONPnmU'],
                'gameOver': this['game']['LSU'],
                'spectating': this['game']['vQHD'],
                'time': this['game']['TmD'],
                'mode': this['game']['teamMode'],
                'layer': b,
                'zOrd': XT,
                'zIdx': XY
            });
            console['error'](Xd);
        }
        p['__layerIdx'] === void 0x0 && (p['__layerIdx'] = -0x1,
        p['__zOrd'] = -0x1,
        p['__zIdx'] = -0x1);
        let XC = b;
        b & 0x2 && (XC = XT >= 0x64 ? 0x3 : 0x2),
        !(p['parent'] == this['layers'][XC] && p['__zOrd'] == XT && (XY === void 0x0 || p['__zIdx'] == XY)) && (p['__layerIdx'] = XC,
        p['__zOrd'] = XT,
        p['__zIdx'] = XY !== void 0x0 ? XY : this['zIdx']++,
        this['layers'][XC]['addSortedChild'](p));
    }
    ['setActiveLayer'](p) {
        this['layer'] = p;
    }
    ['setUnderground'](p) {
        this['underground'] = p;
    }
    ['resize'](p, b) {
        const XT = p['mapLoaded'] ? p['getMapDef']()['biome']['colors']['underground'] : 0x1b0d03;
        this['ground']['clear'](),
        this['ground']['beginFill'](XT),
        this['ground']['drawRect'](0x0, 0x0, b['pmhI'], b['lZjK']),
        this['ground']['endFill'](),
        this['layerMaskDirty'] = !0x0;
    }
    ['redrawLayerMask'](b, XT) {
        const XY = this['layerMask'];
        if (this['canvasMode']) {
            if (XY['clear'](),
            this['layerMaskActive']) {
                XY['beginFill'](0xffffff, 0x1),
                XY['drawRect'](0x0, 0x0, b['pmhI'], b['lZjK']);
                const XC = XT['JCfHy']['KGHPNo']();
                for (let Xl = 0x0; Xl < XC['length']; Xl++) {
                    const Xd = XC[Xl];
                    if (Xd['active'])
                        for (let Xk = 0x0; Xk < Xd['mask']['length']; Xk++) {
                            const XU = Xd['mask'][Xk]
                              , XW = v['mul'](v['sub'](XU['max'], XU['min']), 0.5)
                              , XD = v['add'](XU['min'], XW)
                              , XG = b['MobS'](v['sub'](XD, XW))
                              , XF = b['MobS'](v['add'](XD, XW));
                            XY['drawRect'](XG['x'], XG['y'], XF['x'] - XG['x'], XF['y'] - XG['y']);
                        }
                }
                XY['endFill']();
            }
        } else {
            if (this['layerMaskDirty']) {
                this['layerMaskDirty'] = !0x1,
                XY['clear'](),
                XY['beginFill'](0xffffff, 0x1),
                gt(XY, 0x0, 0x0, 0x400, 0x400);
                const p1 = XT['JCfHy']['KGHPNo']();
                for (let p2 = 0x0; p2 < p1['length']; p2++) {
                    const p3 = p1[p2];
                    if (p3['active'])
                        for (let p4 = 0x0; p4 < p3['mask']['length']; p4++) {
                            const p5 = p3['mask'][p4]
                              , p6 = v['mul'](v['sub'](p5['max'], p5['min']), 0.5)
                              , p7 = v['add'](p5['min'], p6)
                              , p8 = p7['x'] - p6['x']
                              , p9 = p7['y'] - p6['y']
                              , pX = p6['x'] * 0x2
                              , pp = p6['y'] * 0x2;
                            XY['beginHole'](),
                            gt(XY, p8, p9, pX, pp),
                            XY['endHole']();
                        }
                }
                XY['endFill']();
            }
            const XH = b['MobS'](v['create'](0x0, 0x0))
              , p0 = b['KlhiR'](0x1);
            XY['position']['set'](XH['x'], XH['y']),
            XY['scale']['set'](p0, -p0);
        }
    }
    ['redrawDebugLayerMask'](b, XT) {
        const XY = this['debugLayerMask'];
        XY['clear'](),
        XY['beginFill'](0xff00ff, 0x1);
        const XC = XT['JCfHy']['KGHPNo']();
        for (let Xk = 0x0; Xk < XC['length']; Xk++) {
            const XU = XC[Xk];
            if (XU['active'])
                for (let XW = 0x0; XW < XU['mask']['length']; XW++) {
                    const XD = XU['mask'][XW]
                      , XG = v['mul'](v['sub'](XD['max'], XD['min']), 0.5)
                      , XF = v['add'](XD['min'], XG)
                      , XH = XF['x'] - XG['x']
                      , p0 = XF['y'] - XG['y']
                      , p1 = XG['x'] * 0x2
                      , p2 = XG['y'] * 0x2;
                    gt(XY, XH, p0, p1, p2);
                }
        }
        XY['endFill']();
        const Xl = b['MobS'](v['create'](0x0, 0x0));
        b['MobS'](v['create'](0x1, 0x0));
        const Xd = b['KlhiR'](0x1);
        XY['position']['set'](Xl['x'], Xl['y']),
        XY['scale']['set'](Xd, -Xd);
    }
    ['Gxhh'](p, b, XT, XY) {
        const XC = this['layer'] > 0x0 ? 0x1 : 0x0;
        this['layerAlpha'] += wi(this['layerAlpha'], XC, p * 0xc);
        const Xl = this['layer'] == 0x1 && this['underground'] ? 0x1 : 0x0;
        this['groundAlpha'] += wi(this['groundAlpha'], Xl, p * 0xc),
        this['layers'][0x0]['alpha'] = 0x1,
        this['layers'][0x1]['alpha'] = this['layerAlpha'],
        this['layers'][0x2]['alpha'] = 0x1,
        this['layers'][0x3]['alpha'] = 0x1,
        this['ground']['alpha'] = this['groundAlpha'],
        this['layers'][0x0]['visible'] = this['groundAlpha'] < 0x1,
        this['layers'][0x1]['visible'] = this['layerAlpha'] > 0x0,
        this['ground']['visible'] = this['groundAlpha'] > 0x0,
        this['redrawLayerMask'](b, XT);
        const Xd = this['layer'] == 0x0;
        Xd && !this['layerMaskActive'] ? (this['layers'][0x2]['mask'] = this['layerMask'],
        this['layers'][0x2]['addChild'](this['layerMask']),
        this['layerMaskActive'] = !0x0) : !Xd && this['layerMaskActive'] && (this['layers'][0x2]['mask'] = null,
        this['layers'][0x2]['removeChild'](this['layerMask']),
        this['layerMaskActive'] = !0x1);
        for (let Xk = 0x0; Xk < this['layers']['length']; Xk++)
            this['layers'][Xk]['checkSort']();
    }
}
class ws extends f {
    constructor(p='') {
        super(),
        this['debugName'] = p;
    }
    ['dirty'] = !0x0;
    ['addSortedChild'](p) {
        this['addChild'](p),
        this['dirty'] = !0x0;
    }
    ['checkSort']() {
        return this['dirty'] ? (this['children']['sort']( (p, b) => p['__zOrd'] == b['__zOrd'] ? p['__zIdx'] - b['__zIdx'] : p['__zOrd'] - b['__zOrd']),
        this['dirty'] = !0x1,
        !0x0) : !0x1;
    }
}
const Xe = 0x2
  , gi = 0.00001;
class gs {
    constructor(p, b) {
        this['input'] = p,
        this['config'] = b;
        const XT = function(Xk, XU) {
            const XW = y['from']('pad.img');
            return XW['anchor']['set'](0.5, 0.5),
            XW['scale']['set'](0x1, 0x1),
            XW['alpha'] = 0.2,
            XW['visible'] = !0x1,
            XW['tint'] = XU,
            Xk['addChild'](XW),
            XW;
        }
          , XY = () => ({
            'touched': !0x1,
            'centerPos': v['create'](0x0, 0x0),
            'touchPos': v['create'](0x0, 0x0),
            'centerSprite': XT(this['container'], 0x0),
            'touchSprite': XT(this['container'], 0xffffff)
        });
        this['touchPads'] = [XY(), XY()];
        const XC = function(Xk) {
            return ['locked', 'anywhere']['includes'](Xk) ? Xk : 'anywhere';
        }
          , Xl = XC(b['get']('touchMoveStyle'))
          , Xd = XC(b['get']('touchAimStyle'));
        this['setMoveStyle'](Xl),
        this['setAimStyle'](Xd),
        this['setTouchAimLine'](!!b['get']('touchAimLine')),
        this['init']();
    }
    ['container'] = new f();
    ['lineSprites'] = new Ss();
    ['padScaleBase'] = 0x1;
    ['padScaleDown'] = 0.6;
    ['padScalePos'] = 0.25;
    ['moveDetected'] = !0x1;
    ['shotDetected'] = !0x1;
    ['shotDetectedOld'] = !0x1;
    ['touchingAim'] = !0x1;
    ['display'] = !0x0;
    ['moveStyle'] = 'locked';
    ['aimStyle'] = 'locked';
    ['touchAimLine'] = !0x0;
    ['touchPads'];
    ['playerMovement'] = {
        'left': !0x1,
        'right': !0x1,
        'up': !0x1,
        'down': !0x1,
        'moveLen': 0x0
    };
    ['analogMovement'] = {
        'toMoveDir': v['create'](0x1, 0x0),
        'toMoveLen': 0x0
    };
    ['aimMovement'] = {
        'toAimDir': v['create'](0x1, 0x0),
        'toAimLen': 0x0
    };
    ['leftLockedPadCenter'] = v['create'](0x0, 0x0);
    ['rightLockedPadCenter'] = v['create'](0x0, 0x0);
    ['padPosBase'] = 0x30;
    ['padPosRange'] = 0x0;
    ['movePadDetectMult'] = 0x1;
    ['shotPadDetectMult'] = 1.075;
    ['turnDirCooldown'] = 0.5;
    ['turnDirTicker'] = 0x0;
    ['mobileOffsetLandscape'] = 0x19;
    ['mobileOffsetPortrait'] = 0x64;
    ['lockedPadOffsetLandscape'] = v['create'](0x7e, 0x64);
    ['lockedPadOffsetPortrait'] = v['create'](0x60, 0xa0);
    ['lockedPadOffsetYLandscapeSafari'] = 0x78;
    ['lockedPadOffsetYPortraitSafari'] = 0xf0;
    ['getTouchMovement'](p) {
        return this['getMovement'](p);
    }
    ['getAimMovement'](p, b) {
        const XT = p['KkvfHn']['hCoMzm'] == L['WeaponSlot']['Throwable'];
        return this['getAim'](XT, b);
    }
    ['setAimDir'](p) {
        this['aimMovement']['toAimDir'] = v['copy'](p);
    }
    ['getMovement'](b) {
        let XT = null, XY = null, XC = !0x1, Xl;
        this['moveDetected'] = !0x1;
        for (let Xk = 0x0; Xk < this['input']['touches']['length']; Xk++) {
            const XU = this['input']['touches'][Xk];
            if (!XU['isDead'] && this['isLeftSideTouch'](XU['posDown']['x'], b)) {
                const XW = this['moveStyle'] == 'anywhere' ? XU['posDown'] : this['leftLockedPadCenter']
                  , XD = v['sub'](XU['pos'], XW)
                  , XG = v['length'](XD);
                if (XG > Xe) {
                    const XF = (XG - Xe) / (this['padPosRange'] / this['movePadDetectMult'] - Xe);
                    Xl = XF > gi ? v['div'](XD, XF) : this['analogMovement']['toMoveDir'],
                    this['analogMovement'] = {
                        'toMoveDir': v['create'](Xl['x'], Xl['y'] * -0x1),
                        'toMoveLen': XF
                    },
                    this['moveDetected'] = !0x0;
                }
                XY = this['getConstrainedPos'](XW, XU['pos'], XG),
                XT = XW,
                XC = !0x0;
                break;
            }
        }
        const Xd = this['touchPads'][0x0];
        return Xd['touched'] = XC,
        XC && this['moveStyle'] == 'anywhere' ? Xd['centerPos'] = v['copy'](XT) : Xd['centerPos'] = v['copy'](this['leftLockedPadCenter']),
        Xd['touchPos']['x'] = XC ? XY['x'] : this['leftLockedPadCenter']['x'],
        Xd['touchPos']['y'] = XC ? XY['y'] : this['leftLockedPadCenter']['y'],
        this['analogMovement'];
    }
    ['getAim'](b, XT) {
        let XY = !0x1, XC = null, Xl = null, Xd;
        for (let XU = 0x0; XU < this['input']['touches']['length']; XU++) {
            const XW = this['input']['touches'][XU];
            if (!XW['isDead'] && !this['isLeftSideTouch'](XW['posDown']['x'], XT)) {
                const XD = this['aimStyle'] == 'anywhere' ? XW['posDown'] : this['rightLockedPadCenter']
                  , XG = v['sub'](XW['pos'], XD)
                  , XF = v['length'](XG);
                if (XF > Xe) {
                    const XH = v['sub'](XW['pos'], XD)
                      , p0 = v['length'](XH);
                    Xd = p0 > gi ? v['div'](XH, p0) : this['aimMovement']['toAimDir'],
                    this['aimMovement'] = {
                        'toAimDir': v['create'](Xd['x'], Xd['y'] * -0x1),
                        'toAimLen': p0
                    };
                } else
                    this['aimMovement']['toAimLen'] = 0x0;
                Xl = this['getConstrainedPos'](XD, XW['pos'], XF),
                XC = XD,
                XY = !0x0;
                break;
            }
        }
        this['shotDetectedOld'] = this['shotDetected'],
        this['shotDetected'] = this['aimMovement']['toAimLen'] > this['padPosRange'] / this['shotPadDetectMult'] && XY,
        this['touchingAim'] = XY,
        b && this['shotDetectedOld'] && XY && (this['shotDetected'] = !0x0);
        const Xk = this['touchPads'][0x1];
        return Xk['touched'] = XY,
        XY && this['aimStyle'] == 'anywhere' ? Xk['centerPos'] = v['copy'](XC) : Xk['centerPos'] = v['copy'](this['rightLockedPadCenter']),
        Xk['touchPos']['x'] = XY ? Xl['x'] : this['rightLockedPadCenter']['x'],
        Xk['touchPos']['y'] = XY ? Xl['y'] : this['rightLockedPadCenter']['y'],
        {
            'aimMovement': this['aimMovement'],
            'touched': Xk['touched']
        };
    }
    ['Gxhh'](p, b, XT, XY, XC) {
        for (let Xl = 0x0; Xl < this['touchPads']['length']; Xl++) {
            const Xd = this['touchPads'][Xl];
            Xd['centerSprite']['position']['x'] = Xd['centerPos']['x'],
            Xd['centerSprite']['position']['y'] = Xd['centerPos']['y'],
            Xd['centerSprite']['scale']['x'] = this['padScaleBase'] * this['padScaleDown'],
            Xd['centerSprite']['scale']['y'] = this['padScaleBase'] * this['padScaleDown'],
            Xd['centerSprite']['visible'] = k['touch'] && this['display'],
            Xd['touchSprite']['position']['x'] = Xd['touchPos']['x'],
            Xd['touchSprite']['position']['y'] = Xd['touchPos']['y'],
            Xd['touchSprite']['scale']['x'] = this['padScaleBase'] * this['padScalePos'],
            Xd['touchSprite']['scale']['y'] = this['padScaleBase'] * this['padScalePos'],
            Xd['touchSprite']['visible'] = k['touch'] && this['display'];
        }
        this['lineSprites']['update'](this, b, XT, XY, XC);
    }
    ['isLeftSideTouch'](p, b) {
        return p < b['pmhI'] * 0.5;
    }
    ['getConstrainedPos'](p, b, XT) {
        if (XT <= this['padPosRange'])
            return b;
        const XY = b['x'] - p['x']
          , XC = b['y'] - p['y']
          , Xl = Math['atan2'](XC, XY);
        return v['create'](Math['cos'](Xl) * this['padPosRange'] + p['x'], Math['sin'](Xl) * this['padPosRange'] + p['y']);
    }
    ['getConstrainedPosDown'](p, b, XT) {
        const XY = v['normalizeSafe'](b);
        return v['add'](p, v['mul'](XY, Math['max'](0x0, XT - this['padPosRange'])));
    }
    ['toggleMoveStyle']() {
        this['setMoveStyle'](this['moveStyle'] == 'locked' ? 'anywhere' : 'locked');
    }
    ['setMoveStyle'](p) {
        this['moveStyle'] = p,
        this['config']['set']('touchMoveStyle', p);
        const b = document['getElementById']('btn-game-move-style');
        b && (this['moveStyle'] == 'locked' ? (b['classList']['remove']('unlocked-on-icon'),
        b['classList']['add']('locked-on-icon')) : (b['classList']['remove']('locked-on-icon'),
        b['classList']['add']('unlocked-on-icon')));
    }
    ['toggleAimStyle']() {
        this['setAimStyle'](this['aimStyle'] == 'locked' ? 'anywhere' : 'locked');
    }
    ['setAimStyle'](p) {
        this['aimStyle'] = p,
        this['config']['set']('touchAimStyle', p);
        const b = document['getElementById']('btn-game-aim-style');
        this['aimStyle'] == 'locked' ? (b['classList']['remove']('unlocked-on-icon'),
        b['classList']['add']('locked-on-icon')) : (b['classList']['remove']('locked-on-icon'),
        b['classList']['add']('unlocked-on-icon'));
    }
    ['toggleAimLine']() {
        this['setTouchAimLine'](!this['touchAimLine']);
    }
    ['setTouchAimLine'](p) {
        this['touchAimLine'] = p,
        this['config']['set']('touchAimLine', this['touchAimLine']);
        const b = document['getElementById']('btn-game-aim-line');
        this['touchAimLine'] ? (b['classList']['remove']('aim-line-off-icon'),
        b['classList']['add']('aim-line-on-icon')) : (b['classList']['remove']('aim-line-on-icon'),
        b['classList']['add']('aim-line-off-icon'));
    }
    ['init']() {
        this['resize']();
    }
    ['resize']() {
        const b = k['isLandscape']
          , XT = this['lockedPadOffsetLandscape']
          , XY = this['lockedPadOffsetPortrait'];
        k['tablet'] && (XT['x'] = XT['x'] * 0x1,
        XY['x'] = XY['x'] * 1.25);
        const XC = v['create'](XT['x'], XT['y'])
          , Xl = v['create'](XY['x'], XY['y'])
          , Xd = v['create'](k['screenWidth'] - XT['x'], XT['y'])
          , Xk = v['create'](k['screenWidth'] - XY['x'], XY['y']);
        if (k['os'] == 'ios') {
            if (k['model'] == 'iphonex')
                XC['x'] = XC['x'] + 0x38,
                Xd['x'] = Xd['x'] - 0x38,
                XC['y'] = XC['y'] * 0.9,
                Xd['y'] = Xd['y'] * 0.9;
            else {
                let XD = this['lockedPadOffsetYLandscapeSafari']
                  , XG = this['lockedPadOffsetYPortraitSafari'];
                k['tablet'] && (XD *= 0x1,
                XG *= 0x1),
                XC['y'] = XD,
                Xl['y'] = XG,
                Xd['y'] = XD,
                Xk['y'] = XG;
            }
        }
        this['padScaleBase'] = b ? 0x1 : 0.8,
        this['padPosRange'] = this['padPosBase'] * this['padScaleBase'];
        const XU = b ? XC : Xl;
        this['leftLockedPadCenter'] = v['create'](XU['x'], k['screenHeight'] - XU['y']);
        const XW = b ? Xd : Xk;
        this['rightLockedPadCenter'] = v['create'](XW['x'], k['screenHeight'] - XW['y']),
        this['setMobileStyling'](b);
    }
    ['setMobileStyling'](p) {
        if (k['touch'] && (j('#btn-touch-styles')['find']('.btn-game-container')['css']('display', 'inline-block'),
        j('#ui-emote-button')['css']('display', 'block')),
        k['uiLayout'] == k['UiLayout']['Sm'] ? (j('#ui-map-wrapper')['addClass']('ui-map-wrapper-mobile')['removeClass']('ui-map-wrapper-desktop'),
        j('#ui-settings-container-mobile')['css']('display', 'block'),
        j('#ui-settings-container-desktop')['css']('display', 'none'),
        j('#ui-right-center')['addClass']('ui-right-center-mobile')['removeClass']('ui-right-center-desktop'),
        j('#ui-leaderboard-wrapper')['css']('display', 'none'),
        j('#big-map-close')['css']('display', 'block'),
        j('#ui-game-menu')['removeClass']('ui-game-menu-desktop'),
        j('#btn-game-tabs')['css']('display', 'none'),
        j('#ui-game-tab-settings')['removeClass']('ui-game-tab-settings-desktop'),
        j('.ui-ability-key')['css']('display', 'none')) : (j('#ui-map-wrapper')['removeClass']('ui-map-wrapper-mobile')['addClass']('ui-map-wrapper-desktop'),
        j('#ui-settings-container-mobile')['css']('display', 'none'),
        j('#ui-settings-container-desktop')['css']('display', 'block'),
        j('#ui-right-center')['removeClass']('ui-right-center-mobile')['addClass']('ui-right-center-desktop'),
        j('#ui-leaderboard-wrapper')['css']('display', 'block'),
        j('#big-map-close')['css']('display', 'none'),
        j('#ui-game-menu')['addClass']('ui-game-menu-desktop'),
        j('#btn-game-tabs')['css']('display', 'flex'),
        j('#ui-game-tab-settings')['addClass']('ui-game-tab-settings-desktop'),
        j('.ui-ability-key')['css']('display', 'block')),
        k['tablet'] && (p ? (k['os'] == 'ios' ? (j('#ui-bottom-right')['addClass']('ui-bottom-right-tablet-ipad-browser'),
        j('#ui-right-center')['addClass']('ui-right-center-tablet-ipad-browser')) : (j('#ui-bottom-right')['addClass']('ui-bottom-right-tablet'),
        j('#ui-right-center')['addClass']('ui-right-center-tablet')),
        j('#ui-bottom-center-left')['addClass']('ui-bottom-center-left-tablet'),
        j('#ui-bottom-center-right')['addClass']('ui-bottom-center-right-tablet'),
        j('#ui-top-left')['addClass']('ui-top-left-tablet'),
        j('#ui-spectate-options-wrapper')['addClass']('ui-spectate-options-wrapper-tablet'),
        j('#ui-killfeed-wrapper')['addClass']('ui-killfeed-wrapper-tablet'),
        j('#ui-kill-leader-wrapper')['css']('right', 0x90)) : (j('#ui-bottom-left')['removeClass']('ui-bottom-left-tablet'),
        j('#ui-bottom-right')['removeClass']('ui-bottom-right-tablet'),
        j('#ui-right-center')['removeClass']('ui-right-center-tablet'),
        j('#ui-bottom-center-right')['removeClass']('ui-bottom-center-right-tablet'),
        j('#ui-top-left')['removeClass']('ui-top-left-tablet'),
        j('#ui-spectate-options-wrapper')['removeClass']('ui-spectate-options-wrapper-tablet'),
        j('#ui-killfeed-wrapper-wrapper')['removeClass']('ui-killfeed-wrapper-tablet'))),
        k['os'] == 'ios') {
            if (k['model'] == 'iphonex') {
                const b = k['isLandscape'] ? '99%' : '90%'
                  , XT = k['isLandscape'] ? 0x0 : 0x20;
                j('#ui-game')['css']({
                    'height': b,
                    'top': XT
                }),
                j('#ui-stats-contents')['css']({
                    'transform': 'translate(-50%)\x20scale(0.95)',
                    'transform-origin': 'top'
                }),
                p ? j('#ui-game')['css']({
                    'left': '50%',
                    'transform': 'translateX(-50%)',
                    'width': '93%'
                }) : j('#ui-game')['css']({
                    'left': '',
                    'transform': '',
                    'width': ''
                });
            } else {
                if (window['navigator']['standalone'] && !k['tablet'])
                    j('#ui-game')['css']({
                        'height': '95%'
                    });
                else {
                    let XY = k['isLandscape'] ? '86%' : '82%';
                    k['tablet'] && (XY = '100%'),
                    j('#ui-game')['css']({
                        'height': XY
                    }),
                    j('#ui-right-center,\x20#ui-top-center-scopes-wrapper,\x20#ui-top-center,\x20#ui-menu-display')['css']({
                        'margin-top': 0x6
                    });
                }
            }
        }
        k['tablet'] || p ? (j('#ui-loot-50AE')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-9mm')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-308sub')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-12gauge')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-flare')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-762mm')['insertBefore']('#ui-loot-556mm'),
        j('#ui-loot-45acp')['insertBefore']('#ui-loot-556mm')) : (j('#ui-loot-9mm')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-12gauge')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-762mm')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-556mm')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-50AE')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-308sub')['insertBefore']('#ui-loot-45acp'),
        j('#ui-loot-flare')['insertBefore']('#ui-loot-45acp'));
    }
    ['hideAll']() {
        this['display'] = !0x1;
    }
}
class Ss {
    ['container'] = new f();
    ['dots'] = [];
    constructor() {
        this['container']['visible'] = !0x1;
    }
    ['createDot']() {
        const p = new y();
        return p['texture'] = x['from']('dot.img'),
        p['anchor']['set'](0.5, 0.5),
        p['position']['set'](0x0, 0x0),
        p['scale']['set'](0x1, 0x1),
        p['tint'] = 0xffffff,
        p['alpha'] = 0x1,
        p['visible'] = !0x1,
        p;
    }
    ['update'](XT, XY, XC, Xl, Xd) {
        const Xk = k['touch'] && XT['touchingAim'] && XT['touchAimLine'];
        if (Xk) {
            const XU = XY['QDvlP']['PhmiQd']
              , XW = w[XU];
            let XD = 0x1e;
            if (XW['type'] == 'gun') {
                const p9 = X7[XW['bulletType']]['distance'];
                XD = XW['barrelLength'] + p9;
            }
            const XG = XY['ulnm']()
              , XF = Math['sqrt'](XG * 1.414 * XG);
            XD = e['min'](XD, XF);
            const XH = v['copy'](XY['NLYJ']);
            let p0 = v['add'](XH, v['mul'](XY['RkcQgd'], XD));
            const p1 = XC['NmwMZ']['KGHPNo']();
            for (let pX = 0x0; pX < p1['length']; pX++) {
                const pp = p1[pX];
                if (pp['active'] && !pp['dead'] && pp['height'] >= L['bullet']['height'] && pp['collidable'] && !pp['isWindow'] && t['sameLayer'](XY['layer'], pp['layer']) && (XW['type'] != 'throwable' || pp['height'] > L['projectile']['maxHeight'])) {
                    const pb = T['intersectSegment'](pp['collider'], XH, p0);
                    if (pb) {
                        const pI = v['length'](v['sub'](pb['point'], XH));
                        pI < XD && (XD = pI,
                        p0 = pb['point']);
                    }
                }
            }
            const p2 = 3.5
              , p3 = 1.5
              , p4 = v['length'](v['sub'](p0, XH))
              , p5 = Math['max'](Math['ceil']((p4 - p2) / p3), 0x0);
            for (; this['dots']['length'] < p5; ) {
                const pj = this['createDot']();
                this['container']['addChild'](pj),
                this['dots']['push'](pj);
            }
            for (let pf = 0x0; pf < this['dots']['length']; pf++) {
                const px = this['dots'][pf]
                  , py = p2 + pf * p3
                  , pg = v['add'](XY['NLYJ'], v['mul'](XY['RkcQgd'], py))
                  , pQ = 0x1 / 0x20 * 0.375;
                px['position']['set'](pg['x'], pg['y']),
                px['scale']['set'](pQ, pQ),
                px['visible'] = pf < p5;
            }
            const p6 = Xl['MobS'](v['create'](0x0, 0x0))
              , p7 = Xl['MobS'](v['create'](0x1, 0x1))
              , p8 = v['sub'](p7, p6);
            this['container']['position']['set'](p6['x'], p6['y']),
            this['container']['scale']['set'](p8['x'], p8['y']),
            this['container']['alpha'] = 0.3,
            Xd['addPIXIObj'](this['container'], XY['layer'], 0x13, 0x0);
        }
        this['container']['visible'] = Xk;
    }
}
class ys {
    constructor(p) {
        this['mapSpriteBarn'] = p;
    }
    ['mapIndicators'] = [];
    ['idToMapIdicator'] = {};
    ['updateIndicatorData'](p) {
        for (let b = 0x0; b < p['length']; b++) {
            const XT = p[b];
            XT['dead'] ? this['removeIndicator'](XT['id']) : this['updateIndicator'](XT);
        }
    }
    ['addIndicator'](p) {
        const b = {
            'id': p['id'],
            'type': p['type'],
            'pos': v['copy'](p['pos']),
            'equipped': p['equipped'],
            'mapSprite': this['mapSpriteBarn']['addSprite'](),
            'pulseSprite': this['mapSpriteBarn']['addSprite'](),
            'pulseScale': 0.5,
            'pulseScaleMin': 0.5,
            'pulseScaleMax': 0x1,
            'pulseTicker': 0x0,
            'pulseDir': 0x1,
            'pulseSpeed': 0.3
        };
        return this['mapIndicators']['push'](b),
        this['idToMapIdicator'][p['id']] = b,
        b;
    }
    ['removeIndicator'](p) {
        for (let b = 0x0; b < this['mapIndicators']['length']; b++) {
            const XT = this['mapIndicators'][b];
            if (XT['id'] == p) {
                XT['mapSprite']['free'](),
                XT['pulseSprite']['free'](),
                this['mapIndicators']['splice'](b, 0x1),
                delete this['idToMapIdicator'][p];
                break;
            }
        }
    }
    ['updateIndicator'](p) {
        let b = this['idToMapIdicator'][p['id']];
        b ||= this['addIndicator'](p),
        b['pos'] = v['copy'](p['pos']),
        b['equipped'] = p['equipped'];
        const XT = w[b['type']]
          , XY = (k['uiLayout'] == k['UiLayout']['Sm'] ? 0.15 : 0.2) * 1.25
          , XC = b['equipped'] ? 0x9fff6 : 0x1
          , Xl = b['mapSprite'];
        if (Xl['pos'] = v['copy'](b['pos']),
        Xl['scale'] = XY,
        Xl['alpha'] = 0x1,
        Xl['zOrder'] = XC,
        Xl['visible'] = !0x0,
        Xl['sprite']['texture'] = x['from'](XT['mapIndicator']?.['sprite']),
        Xl['sprite']['tint'] = XT['mapIndicator']?.['tint'] ?? 0xffffff,
        XT['mapIndicator']?.['pulse']) {
            const Xd = b['pulseSprite'];
            Xd['pos'] = v['copy'](b['pos']),
            Xd['scale'] = 0x1,
            Xd['zOrder'] = XC - 0x1,
            Xd['visible'] = !0x0,
            Xd['sprite']['texture'] = x['from']('part-pulse-01.img'),
            Xd['sprite']['tint'] = XT['mapIndicator']['pulseTint'];
        }
    }
    ['updateIndicatorPulses'](p) {
        for (let b = 0x0; b < this['mapIndicators']['length']; b++) {
            const XT = this['mapIndicators'][b];
            XT['pulseTicker'] = e['clamp'](XT['pulseTicker'] + p * XT['pulseDir'] * XT['pulseSpeed'], XT['pulseScaleMin'], 0x1),
            XT['pulseScale'] = XT['pulseTicker'] * XT['pulseScaleMax'],
            (XT['pulseScale'] >= XT['pulseScaleMax'] || XT['pulseTicker'] <= XT['pulseScaleMin']) && (XT['pulseDir'] *= -0x1),
            XT['pulseSprite']['scale'] = XT['pulseScale'],
            XT['pulseSprite']['visible'] = XT['equipped'];
        }
    }
}
class xs extends y {
    ['__zOrder'] = -0x1;
    constructor() {
        super();
    }
}
class zs {
    ['active'] = !0x1;
    ['retained'] = !0x0;
    ['sprite'] = new xs();
    ['pos'] = v['create'](0x0, 0x0);
    ['scale'] = 0x1;
    ['alpha'] = 0x1;
    ['visible'] = !0x0;
    ['pulse'] = !0x1;
    ['lifetime'] = 0x0;
    ['ticker'] = 0x0;
    ['zOrder'] = 0x0;
    constructor() {
        this['sprite']['anchor']['set'](0.5, 0.5),
        this['sprite']['scale']['set'](0x1, 0x1),
        this['sprite']['visible'] = !0x1;
    }
    ['init']() {
        this['active'] = !0x0,
        this['retained'] = !0x0,
        this['pos'] = v['create'](0x0, 0x0),
        this['scale'] = 0x1,
        this['alpha'] = 0x1,
        this['pulse'] = !0x1,
        this['visible'] = !0x0,
        this['lifetime'] = Number['MAX_VALUE'],
        this['ticker'] = 0x0,
        this['zOrder'] = 0x0;
    }
    ['free']() {
        this['active'] = !0x1,
        this['sprite']['visible'] = !0x1;
    }
    ['release']() {
        this['retained'] = !0x1;
    }
}
class bs {
    ['container'] = new f();
    ['mapSprites'] = [];
    ['free']() {
        for (let p = 0x0; p < this['mapSprites']['length']; p++) {
            const b = this['mapSprites'][p]['sprite'];
            b['parent']?.['removeChild'](b),
            b['destroy']({
                'children': !0x0
            });
        }
    }
    ['addSprite']() {
        let p = null;
        for (let b = 0x0; b < this['mapSprites']['length']; b++)
            if (!this['mapSprites'][b]['active']) {
                p = this['mapSprites'][b];
                break;
            }
        return p || (p = new zs(),
        this['mapSprites']['push'](p),
        this['container']['addChild'](p['sprite'])),
        p['init'](),
        p;
    }
    ['update'](p, b, XT) {
        let XY = !0x1;
        for (let XC = 0x0; XC < this['mapSprites']['length']; XC++) {
            const Xl = this['mapSprites'][XC];
            if (Xl['active']) {
                Xl['zOrder'] != Xl['sprite']['__zOrder'] && (Xl['sprite']['__zOrder'] = Xl['zOrder'],
                XY = !0x0),
                Xl['ticker'] += p,
                Xl['pulse'] && (Xl['scale'] += p / 2.5);
                const Xd = b['getMapPosFromWorldPos'](Xl['pos'], XT)
                  , Xk = Xl['scale']
                  , XU = e['smoothstep'](Xl['ticker'], 0x0, 0.1) * (0x1 - e['smoothstep'](Xl['ticker'], Xl['lifetime'] - 0.5, Xl['lifetime']));
                Xl['sprite']['position']['set'](Xd['x'], Xd['y']),
                Xl['sprite']['scale']['set'](Xk, Xk),
                Xl['sprite']['alpha'] = Xl['alpha'] * XU,
                Xl['sprite']['visible'] = Xl['visible'] && Xl['sprite']['alpha'] > 0.0001,
                Xl['ticker'] >= Xl['lifetime'] && !Xl['retained'] && Xl['free']();
            }
        }
        XY && this['container']['children']['sort']( (XW, XD) => XW['__zOrder'] - XD['__zOrder']);
    }
}
const et = 0x18;
class ks {
    ['container'] = new f();
    ['timerBackground'] = y['from']('timer-background.img');
    ['counterText'] = new q();
    ['gfx'] = new r();
    ['labelText'] = new q();
    ['screenScaleFactor'] = 0x1;
    ['mobileOffset'] = 0x0;
    ['active'] = !0x1;
    ['label'] = '';
    ['elapsed'] = 0x0;
    ['duration'] = 0x0;
    constructor() {
        this['container']['visible'] = !0x1,
        this['timerBackground']['anchor']['set'](0.5, 0.5),
        this['timerBackground']['scale']['set'](0x1, 0x1),
        this['container']['addChild'](this['timerBackground']),
        this['container']['addChild'](this['gfx']),
        this['counterText']['anchor']['set'](0.5, 0.5),
        this['counterText']['style'] = {
            'fontFamily': 'Roboto\x20Condensed,\x20Arial,\x20sans-serif',
            'fontWeight': 'bold',
            'fontSize': et,
            'align': 'center',
            'fill': 0xffffff,
            'stroke': 0x0,
            'strokeThickness': 0x3
        },
        this['container']['addChild'](this['counterText']),
        this['labelText']['anchor']['set'](0.5, 0.5),
        this['labelText']['style'] = {
            'fontFamily': 'Roboto\x20Condensed,\x20Arial,\x20sans-serif',
            'fontWeight': '100',
            'fontSize': et,
            'align': 'center',
            'fill': 0xffffff
        },
        this['container']['addChild'](this['labelText']);
    }
    ['destroy']() {
        this['container']['removeChild'](this['timerBackground']),
        this['timerBackground']['destroy']({
            'children': !0x0
        }),
        this['container']['destroy']({
            'children': !0x0,
            'texture': !0x0
        });
    }
    ['start'](p, b, XT) {
        this['active'] = !0x0,
        this['label'] = p,
        this['elapsed'] = b,
        this['duration'] = XT;
    }
    ['stop']() {
        this['active'] = !0x1;
    }
    ['resize'](p, b) {
        this['screenScaleFactor'] = b,
        k['uiLayout'] == k['UiLayout']['Sm'] ? (k['tablet'] || this['container']['scale']['set'](0.5, 0.5),
        this['mobileOffset'] = k['isLandscape'] ? p['mobileOffsetLandscape'] : p['mobileOffsetPortrait']) : (this['container']['scale']['set'](0x1, 0x1),
        this['mobileOffset'] = 0x0);
    }
    ['update'](p, b) {
        if (!this['active']) {
            this['container']['visible'] = !0x1;
            return;
        }
        this['elapsed'] = e['min'](this['elapsed'] + p, this['duration']);
        const XT = 0x38 + this['label']['length'] * et * 0.45
          , XY = et * 1.5
          , XC = 0x0 - XT / 0x2
          , Xl = 87.5 - XY / 0x2
          , Xd = e['min'](this['elapsed'] / this['duration'], 0x1) * Math['PI'] * 0x2 - Math['PI'] * 0.5;
        this['gfx']['clear'](),
        this['gfx']['beginFill'](0x0, 0.5),
        this['gfx']['drawRoundedRect'](XC, Xl, XT, XY, 0x5),
        this['gfx']['endFill'](),
        this['gfx']['lineStyle'](0x6, 0xffffff),
        this['gfx']['arc'](0x0, 0x0, 0x23, -Math['PI'] * 0.5, Xd, !0x1),
        this['counterText']['text'] = e['max'](0x0, this['duration'] - this['elapsed'])['toFixed'](0x1),
        this['labelText']['position']['y'] = 87.5,
        this['labelText']['text'] = this['label'],
        this['container']['position']['set'](b['pmhI'] / 0x2, b['lZjK'] / 0x3 * this['screenScaleFactor'] + this['mobileOffset']),
        this['container']['visible'] = !0x0;
    }
}
function Si(p) {
    const b = Math['floor'](p / 0xe10)
      , XT = Math['floor'](p / 0x3c) % 0x3c
      , XY = Math['floor'](p) % 0x3c;
    let XC = '';
    return b > 0x0 && (XC += b + 'h\x20'),
    (b > 0x0 || XT > 0x0) && (XC += XT + 'm\x20'),
    XC += XY + 's';
}
function St(p, b, XT, XY) {
    const XC = p + (b - p) / XT * XY;
    return Math['floor'](XC);
}
class je {
    constructor(p, b, XT) {
        this['r'] = p,
        this['g'] = b,
        this['b'] = XT;
    }
    ['getColors']() {
        return {
            'r': this['r'],
            'g': this['g'],
            'b': this['b']
        };
    }
}
class vs {
    constructor(b, XT, XY, XC, Xl, Xd, Xk, XU, XW) {
        this['game'] = b,
        this['audioManager'] = XT,
        this['particleBarn'] = XY,
        this['planeBarn'] = XC,
        this['localization'] = Xl,
        this['canvasMode'] = Xd,
        this['touch'] = Xk,
        this['inputBinds'] = XU,
        this['inputBindUi'] = XW,
        this['game'] = b,
        this['particleBarn'] = XY,
        this['localization'] = Xl,
        this['touch'] = Xk,
        this['inputBinds'] = XU,
        this['inputBindUi'] = XW,
        this['roleMenuConfirm']['on']('click', XH => {
            XH['stopPropagation'](),
            this['roleSelected'] = this['roleDisplayed'],
            this['setRoleMenuActive'](!0x1);
        }
        ),
        j('#ui-map-wrapper')['css']('display', 'block'),
        j('#ui-team')['css']('display', 'block'),
        j('.ui-map-expand')['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        j('.ui-map-expand')['on']('click', XH => {
            k['touch'] ? this['bigmapDisplayed'] || this['displayMapLarge']() : k['uiLayout'] == k['UiLayout']['Lg'] && this['displayMapLarge'](this['bigmapDisplayed']);
        }
        ),
        j('#ui-map-minimize')['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        j('#ui-map-minimize')['on']('click', XH => {
            XH['stopPropagation'](),
            this['toggleMiniMap']();
        }
        ),
        j('#ui-menu-display')['on']('click', XH => {
            XH['stopPropagation'](),
            this['toggleEscMenu']();
        }
        ),
        this['moveStyleButton']['on']('touchstart', () => {
            Xk['toggleMoveStyle']();
        }
        ),
        this['aimStyleButton']['on']('touchstart', () => {
            Xk['toggleAimStyle']();
        }
        ),
        this['aimLineButton']['on']('touchstart', () => {
            Xk['toggleAimLine']();
        }
        ),
        this['onTouchScreen'] = XH => {
            XH['target']?.['id'] == 'cvs' && this['toggleEscMenu'](!0x0);
        }
        ,
        j(document)['on']('touchstart', this['onTouchScreen']),
        this['bigmapClose'] = j('#big-map-close'),
        this['bigmapClose']['on']('touchend', XH => {
            XH['stopPropagation'](),
            this['displayMapLarge'](!0x0);
        }
        ),
        this['bigmapClose']['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        this['bigmapClose']['on']('click', XH => {
            XH['stopPropagation'](),
            this['displayMapLarge'](!0x0);
        }
        ),
        this['gameTabBtns']['on']('click', XH => {
            this['setCurrentGameTab'](j(XH['target'])['data']('tab'));
        }
        ),
        this['setCurrentGameTab'](this['currentGameTab']),
        this['fullScreenButton']['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        this['fullScreenButton']['on']('click', () => {
            Q['toggleFullScreen'](),
            this['toggleEscMenu']();
        }
        ),
        k['os'] == 'ios',
        k['touch'],
        this['resumeButton']['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        this['resumeButton']['on']('click', () => {
            this['toggleEscMenu']();
        }
        ),
        k['touch'] && this['resumeButton']['css']('display', 'none'),
        j('#btn-spectate-quit')['on']('click', () => {
            this['quitGame']();
        }
        ),
        j('#btn-game-quit')['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        j('#btn-game-quit')['on']('click', () => {
            this['game']['OSRLcj'] = !0x0,
            this['game']['HTzAB'] = 0x1,
            this['quitGame']();
        }
        ),
        this['specStatsButton']['on']('click', () => {
            this['toggleLocalStats']();
        }
        ),
        this['specNextButton']['on']('click', () => {
            this['specNext'] = !0x0;
        }
        ),
        this['specPrevButton']['on']('click', () => {
            this['specPrev'] = !0x0;
        }
        ),
        this['interactionElems']['css']('pointer-events', 'auto'),
        this['interactionElems']['on']('touchstart', XH => {
            XH['stopPropagation'](),
            this['interactionTouched'] = !0x0;
        }
        ),
        this['reloadElems']['css']('pointer-events', 'auto'),
        this['reloadElems']['on']('touchstart', XH => {
            XH['stopPropagation'](),
            this['reloadTouched'] = !0x0;
        }
        ),
        this['gasRenderer'] = new Hi(Xd,0x0),
        this['resetWeapSlotStyling'] = () => {
            this['weapDraggedDiv'] && (this['weapSwitches']['css']({
                'left': '',
                'top': ''
            }),
            j('#ui-game')['css']({
                'pointer-events': ''
            })),
            this['weapDraggedDiv'] = null,
            this['weapDragging'] = !0x1,
            this['weapDropped'] = !0x1,
            this['weapSwitches']['hasClass']('ui-weapon-dragged') && this['weapSwitches']['removeClass']('ui-weapon-dragged'),
            this['weapNoSwitches']['hasClass']('ui-outline-hover') || this['weapNoSwitches']['addClass']('ui-outline-hover');
        }
        ,
        k['touch'] || (this['weapSwitches']['on']('mousedown', XH => {
            const p0 = XH['currentTarget'];
            XH['button'] == 0x0 && (this['weapDraggedDiv'] = j(p0),
            this['weapDraggedId'] = j(p0)['data']('slot'));
        }
        ),
        j('#ui-game')['on']('mousemove', XH => {
            this['weapDraggedDiv'] && !this['weapDropped'] && (this['weapDragging'] ? (this['weapDraggedDiv']['css']({
                'left': XH['pageX'] - 0x50,
                'top': XH['pageY'] - 0x1e
            }),
            this['weapDraggedDiv']['addClass']('ui-weapon-dragged')) : (j('#ui-game')['css']({
                'pointer-events': 'initial'
            }),
            this['weapNoSwitches']['removeClass']('ui-outline-hover'),
            this['weapDragging'] = !0x0));
        }
        ),
        j('#ui-game,\x20#ui-weapon-id-1,\x20#ui-weapon-id-2')['on']('mouseup', XH => {
            XH['button'] == 0x0 && this['weapDraggedDiv'] != null && (this['weapSwitches']['each']( () => {
                const p0 = j(XH['currentTarget'])['data']('slot');
                j(XH['currentTarget'])['is'](':hover') && this['weapDraggedId'] != p0 && (this['swapWeapSlots'] = !0x0,
                this['weapDropped'] = !0x0);
            }
            ),
            this['swapWeapSlots'] || this['resetWeapSlotStyling']());
        }
        )),
        this['mapIndicatorBarn'] = new ys(this['mapSpriteBarn']),
        this['container']['mask'] = new r(),
        this['display'] = {
            'gas': this['gasRenderer']['display'],
            'gasSafeZone': this['gasSafeZoneRenderer']['display'],
            'airstrikeZones': XC['airstrikeZoneContainer'],
            'mapSprites': this['mapSpriteBarn']['container'],
            'teammates': new f(),
            'player': new f(),
            'border': new r()
        },
        this['mapSprite']['anchor'] = new h(0.5,0.5),
        this['container']['addChild'](this['mapSprite']),
        this['container']['addChild'](this['display']['gas']),
        this['container']['addChild'](this['display']['gasSafeZone']),
        this['container']['addChild'](this['display']['airstrikeZones']),
        this['container']['addChild'](this['display']['mapSprites']),
        this['container']['addChild'](this['display']['teammates']),
        this['container']['addChild'](this['display']['player']),
        this['container']['addChild'](this['display']['border']);
        const XD = this['getMinimapMargin']()
          , XG = this['getMinimapSize']();
        this['minimapPos'] = v['create'](XD + XG / 0x2, b['Solrb']['lZjK'] - XG / 0x2 - XD),
        this['muteButtonImage'] = this['muteButton']['find']('img');
        const XF = this['audioManager']['mute'];
        this['muteButtonImage']['attr']('src', XF ? this['muteOffImg'] : this['muteOnImg']),
        this['muteButton']['on']('mousedown', XH => {
            XH['stopPropagation']();
        }
        ),
        this['muteButton']['on']('click', XH => {
            let p0 = this['audioManager']['muteToggle']();
            this['muteButtonImage']['attr']('src', p0 ? this['muteOffImg'] : this['muteOnImg']),
            p0 = null;
        }
        ),
        this['teamMemberHealthBarWidth'] = parseInt(j('.ui-team-member-health')['find']('.ui-bar-inner')['css']('width'));
        for (let XH = 0x0; XH < 0x4; XH++) {
            const p0 = this['topLeft']
              , p1 = XH;
            this['teamSelectors']['push']({
                'teamNameHtml': '',
                'groupId': j(p0)['find']('[data-id=' + p1 + ']'),
                'groupIdDisplayed': !0x1,
                'teamName': j(p0)['find']('[data-id=' + p1 + ']')['find']('.ui-team-member-name'),
                'teamIcon': j(p0)['find']('[data-id=' + p1 + ']')['find']('.ui-team-member-icon'),
                'teamStatus': j(p0)['find']('[data-id=' + p1 + ']')['find']('.ui-team-member-status'),
                'teamHealthInner': j(p0)['find']('[data-id=' + p1 + ']')['find']('.ui-health-actual'),
                'teamColor': j(p0)['find']('[data-id=' + p1 + ']')['find']('.ui-team-member-color'),
                'playerId': 0x0,
                'prevHealth': 0x0,
                'prevStatus': {
                    'disconnected': !0x1,
                    'dead': !0x1,
                    'downed': !0x1,
                    'role': ''
                },
                'indicators': {
                    'main': {
                        'elem': j('#ui-team-indicators')['find']('.ui-indicator-main[data-id=' + p1 + ']'),
                        'displayed': !0x1
                    }
                }
            });
        }
        this['init']();
    }
    ['Skv'] = new ks();
    ['gameElem'] = j('#ui-game');
    ['statsMain'] = j('#ui-stats');
    ['statsElem'] = j('#ui-stats-bg');
    ['statsContentsContainer'] = j('#ui-stats-contents');
    ['statsContents'] = j('#ui-stats-contents-inner');
    ['statsHeader'] = j('#ui-stats-header');
    ['statsInfoBox'] = j('#ui-stats-info-box');
    ['statsOptions'] = j('#ui-stats-options');
    ['statsAds'] = j('.ui-stats-ad-container');
    ['statsLogo'] = j('#ui-stats-logo');
    ['escMenuElem'] = j('#ui-game-menu');
    ['escMenuDisplayed'] = !0x1;
    ['roleMenuElemWrapper'] = j('#ui-role-menu-wrapper');
    ['roleMenuElem'] = j('#ui-role-menu');
    ['roleMenuFooterEnterElem'] = j('#ui-role-footer-enter');
    ['roleMenuFooterHtml'] = '';
    ['roleMenuActive'] = !0x1;
    ['roleMenuDisplayed'] = !0x1;
    ['roleMenuTicker'] = 0x0;
    ['roleDisplayed'] = '';
    ['roleSelected'] = '';
    ['roleMenuConfirm'] = j('#ui-role-footer-enter');
    ['roleMenuInst'] = null;
    ['topLeft'] = j('#ui-top-left');
    ['waitingForPlayers'] = !0x0;
    ['waitingText'] = j('#ui-waiting-text');
    ['spectating'] = !0x1;
    ['prevSpectatorCount'] = 0x0;
    ['spectatorCount'] = 0x0;
    ['spectatorCounterDisplayed'] = !0x1;
    ['spectatorCounterContainer'] = j('#ui-spec-counter');
    ['spectatorCounter'] = j('#ui-spec-counter-number');
    ['spectateMode'] = j('.ui-spectate-mode');
    ['spectatedPlayerText'] = j('#ui-spectate-text');
    ['spectatedPlayerName'] = '';
    ['spectatedPlayerId'] = 0x0;
    ['spectateModeStats'] = j('#ui-spectate-stats');
    ['spectateModeStatsData'] = j('#ui-spectate-stats-data');
    ['spectateOptionsWrapper'] = j('#ui-spectate-options-wrapper');
    ['rightCenter'] = j('#ui-right-center');
    ['leaderboardAlive'] = j('#ui-leaderboard-alive');
    ['playersAlive'] = j('.js-ui-players-alive');
    ['leaderboardAliveFaction'] = j('#ui-leaderboard-alive-faction');
    ['playersAliveRed'] = j('.js-ui-players-alive-red');
    ['playersAliveBlue'] = j('.js-ui-players-alive-blue');
    ['playersAliveRedCounter'] = 0x0;
    ['playersAliveBlueCounter'] = 0x0;
    ['playerKills'] = j('.js-ui-player-kills');
    ['announcement'] = j('#ui-announcement');
    ['killLeaderName'] = j('#ui-kill-leader-name');
    ['killLeaderCount'] = j('#ui-kill-leader-count');
    ['mapContainer'] = j('#ui-map-container');
    ['mapContainerBottom'] = 0x34;
    ['mapInfo'] = j('#ui-map-info');
    ['mapInfoBottom'] = 0xda;
    ['gasState'] = {};
    ['gasIcon'] = j('#ui-gas-icon');
    ['gasTimer'] = j('#ui-gas-timer');
    ['mapMinimizeButton'] = j('#ui-map-minimize');
    ['menuDisplayButton'] = j('#ui-menu-display');
    ['bottomCenterRight'] = j('#ui-bottom-center-right');
    ['actionSeq'] = -0x1;
    ['displayMapDirty'] = !0x1;
    ['displayMapClear'] = !0x1;
    ['gameTabs'] = j('.ui-game-tab');
    ['gameTabBtns'] = j('.btn-game-tab-select');
    ['gameKeybindBtns'] = j('.btn-keybind-desc');
    ['currentGameTab'] = 'settings';
    ['onTouchScreen'];
    ['bigmap'] = j('#big-map');
    ['bigmapCollision'] = j('#big-map-collision');
    ['bigmapClose'] = j('#big-map-close');
    ['moveStyleButton'] = j('#btn-game-move-style');
    ['aimLineButton'] = j('#btn-game-aim-line');
    ['aimStyleButton'] = j('#btn-game-aim-style');
    ['fullScreenButton'] = j('#btn-game-fullscreen');
    ['resumeButton'] = j('#btn-game-resume');
    ['specStatsButton'] = j('#btn-spectate-view-stats');
    ['specBegin'] = !0x1;
    ['specNext'] = !0x1;
    ['specPrev'] = !0x1;
    ['specNextButton'] = j('#btn-spectate-next-player');
    ['specPrevButton'] = j('#btn-spectate-prev-player');
    ['interactionElems'] = j('#ui-interaction-press,\x20#ui-interaction');
    ['interactionTouched'] = !0x1;
    ['reloadElems'] = j('#ui-current-clip,\x20#ui-remaining-ammo,\x20#ui-reload-button-container');
    ['reloadTouched'] = !0x1;
    ['flairElems'] = j('.ui-health-flair');
    ['flairId'] = 0x0;
    ['healthRed'] = new je(0xff,0x0,0x0);
    ['healthDarkpink'] = new je(0xff,0x2d,0x2d);
    ['healthLightpink'] = new je(0xff,0x70,0x70);
    ['healthWhite'] = new je(0xff,0xff,0xff);
    ['healthGrey'] = new je(0xb3,0xb3,0xb3);
    ['minimapDisplayed'] = !0x0;
    ['visibilityMode'] = 0x0;
    ['hudVisible'] = !0x0;
    ['gasRenderer'];
    ['gasSafeZoneRenderer'] = new ka();
    ['sentAdStatus'] = !0x1;
    ['frame'] = 0x0;
    ['weapsDirty'] = !0x1;
    ['weapSwitches'] = j('#ui-weapon-id-1,\x20#ui-weapon-id-2');
    ['weapNoSwitches'] = j('#ui-weapon-id-3,\x20#ui-weapon-id-4');
    ['weapDraggedId'] = 0x0;
    ['swapWeapSlots'] = !0x1;
    ['weapDraggedDiv'] = null;
    ['weapDragging'] = !0x1;
    ['weapDropped'] = !0x1;
    ['mapSpriteBarn'] = new bs();
    ['mapIndicatorBarn'];
    ['playerMapSprites'] = [];
    ['playerPingSprites'] = {};
    ['container'] = new f();
    ['resetWeapSlotStyling'];
    ['display'];
    ['mapSprite'] = new y(x['EMPTY']);
    ['bigmapDisplayed'] = !0x1;
    ['screenScaleFactor'] = 0x1;
    ['minimapPos'];
    ['dead'] = !0x1;
    ['muteButton'] = j('#ui-mute-ingame');
    ['muteButtonImage'];
    ['muteOffImg'] = 'audio-off.img';
    ['muteOnImg'] = 'audio-on.img';
    ['displayingStats'] = !0x1;
    ['teamMemberHealthBarWidth'];
    ['teamMemberHeight'] = 0x30;
    ['groupPlayerCount'] = 0x0;
    ['teamSelectors'] = [];
    ['displayOldMapSprites'] = !0x1;
    ['dphRtI']() {
        this['gasRenderer']['free'](),
        this['clearUI'](),
        this['roleMenuConfirm']['off']('click'),
        j('.ui-role-option')['off']('click'),
        j('.ui-map-expand')['off']('mousedown'),
        j('.ui-map-expand')['off']('click'),
        j('#ui-map-minimize')['off']('mousedown'),
        j('#ui-map-minimize')['off']('click'),
        j('#ui-menu-display')['off']('click'),
        this['moveStyleButton']['off']('touchstart'),
        this['aimStyleButton']['off']('touchstart'),
        this['aimLineButton']['off']('touchstart'),
        j(document)['off']('touchstart', this['onTouchScreen']),
        this['bigmapClose']['off']('touchend'),
        this['bigmapClose']['off']('mousedown'),
        this['bigmapClose']['off']('click'),
        this['gameTabBtns']['off']('click'),
        this['fullScreenButton']['off']('mousedown'),
        this['fullScreenButton']['off']('click'),
        this['resumeButton']['off']('mousedown'),
        this['resumeButton']['off']('click'),
        j('#btn-spectate-quit')['off']('click'),
        j('#btn-game-quit')['off']('mousedown'),
        j('#btn-game-quit')['off']('click'),
        this['specStatsButton']['off']('click'),
        this['specNextButton']['off']('click'),
        this['specPrevButton']['off']('click'),
        this['interactionElems']['off']('touchstart'),
        this['reloadElems']['off']('touchstart'),
        this['weapSwitches']['off']('mousedown'),
        j('#ui-game')['off']('mousemove'),
        j('#ui-game')['off']('mouseup'),
        j('#ui-weapon-id-1')['off']('mouseup'),
        j('#ui-weapon-id-2')['off']('mouseup'),
        this['muteButton']['off']('mousedown'),
        this['muteButton']['off']('click'),
        j('.ui-team-member-health')['find']('.ui-bar-inner')['css']('width', this['teamMemberHealthBarWidth']),
        j('#ui-center')['off']('mouseenter\x20mouseleave'),
        this['inputBinds']['menuHovered'] = !0x1,
        this['hudVisible'] || this['cycleHud'](),
        this['Skv']['destroy'](),
        this['clearStatsElems'](),
        this['setRoleMenuActive'](!0x1),
        this['init']();
    }
    ['init']() {
        j('.js-ui-map-hidden')['css']('display', 'block'),
        j('#ui-map-counter-default')['css']('display', 'inline-block'),
        j('#ui-map-counter-faction')['css']('display', 'none'),
        this['flairElems']['css']('display', 'none'),
        this['clearStatsElems'](),
        this['setSpectating'](!0x1),
        this['updateSpectatorCountDisplay'](!0x0),
        this['resetWeapSlotStyling'](),
        this['dead'] = !0x1;
        for (let p = 0x0; p < this['teamSelectors']['length']; p++)
            this['teamSelectors'][p]['teamColor']['removeAttr']('style');
    }
    ['onMapLoad'](p, b) {
        this['resize'](p, b);
        const XT = p['getMapDef']()['gameMode']['killLeaderEnabled'];
        j('#ui-kill-leader-container')['css']('display', XT ? 'block' : 'none'),
        k['mobile'] || j('#ui-killfeed-wrapper')['css']('top', XT ? '60px' : '12px');
    }
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU, XW, XD) {
        const XG = XY;
        this['weapsDirty'] && this['resetWeapSlotStyling'](),
        this['weapsDirty'] = !0x1,
        this['mapIndicatorBarn']['updateIndicatorPulses'](XT);
        const XF = e['max'](Math['floor'](Xl['duration'] * (0x1 - Xl['circleT'])), 0x0)
          , XH = {
            'mode': Xl['mode'],
            'time': XF
        };
        if (this['gasState']['mode'] != XH['mode'] || this['gasState']['time'] != XH['time']) {
            this['gasState'] = XH;
            const p6 = this['gasState']['mode'] == XI['Moving'];
            this['mapInfo']['removeClass']('icon-pulse'),
            this['gasIcon']['removeClass']('gas-icon'),
            this['gasIcon']['removeClass']('danger-icon'),
            p6 && this['mapInfo']['addClass']('icon-pulse'),
            this['gasIcon']['addClass'](p6 ? 'danger-icon' : 'gas-icon');
            const p7 = Math['floor'](this['gasState']['time'] / 0x3c)
              , p8 = ('0' + this['gasState']['time'] % 0x3c)['slice'](-0x2);
            this['gasTimer']['html'](p7 + ':' + p8);
        }
        if (this['spectatorCount'] = XY['KkvfHn']['kUHxCC'],
        this['updateSpectatorCountDisplay'](!0x1),
        XY['QDvlP']['GUi'] && !this['dead'] && (this['dead'] = !0x0,
        this['Skv']['stop']()),
        (XG['downed'] || this['dead']) && this['resetWeapSlotStyling'](),
        this['actionSeq'] != XY['TvMV']['seq'] && (this['actionSeq'] = XY['TvMV']['seq'],
        this['Skv']['stop'](),
        XY['TvMV']['type'] != Xp['None'] && !this['displayingStats'])) {
            let p9 = ''
              , pX = ''
              , pp = '';
            switch (XY['TvMV']['type']) {
            case Xp['Reload']:
            case Xp['ReloadAlt']:
                w[XY['TvMV']['item']] && (pX = this['localization']['translate']('game-reloading'));
                break;
            case Xp['UseItem']:
                w[XY['TvMV']['item']] && (pX = this['localization']['translate']('game-using'),
                pp = this['localization']['translate']('game-' + XY['TvMV']['item']));
                break;
            case Xp['Revive']:
                {
                    const pb = Xk['getPlayerInfo'](XY['TvMV']['targetId'])['name'];
                    pX = this['localization']['translate']('game-reviving'),
                    pp = XG['downed'] ? '' : pb;
                    break;
                }
            }
            (pX != '' || pp != '') && (this['localization']['translate']('word-order') == 'svo' ? (p9 += pX || '',
            p9 += pp ? '\x20' + pp : '') : this['localization']['translate']('word-order') == 'sov' && (p9 += pp ? pp + '\x20' : '',
            p9 += pX ? '\x20' + pX : ''),
            this['Skv']['start'](p9, XY['TvMV']['time'], XY['TvMV']['duration']));
        }
        this['bigmapDisplayed'] || (this['mapSprite']['x'] = this['minimapPos']['x'] + this['mapSprite']['width'] / 0x2 - XY['NLYJ']['x'] / XC['width'] * this['mapSprite']['width'],
        this['mapSprite']['y'] = this['minimapPos']['y'] - this['mapSprite']['height'] / 0x2 + XY['NLYJ']['y'] / XC['height'] * this['mapSprite']['height']);
        const p0 = v['create'](XU['pmhI'] * 0.5 / XU['cUxbv'](), XU['lZjK'] * 0.5 / XU['cUxbv']())
          , p1 = {
            'min': v['sub'](XU['NLYJ'], p0),
            'max': v['add'](XU['NLYJ'], p0)
        }
          , p2 = Xk['getPlayerInfo'](XY['__id'])['groupId']
          , p3 = Xk['getGroupInfo'](p2);
        if (!p3) {
            const pI = {
                'playerId': XY['__id'],
                'groupId': p2,
                'spectating': this['spectating'],
                'playing': this['game']['TmD'],
                'groupInfo': Xk['groupInfo']
            };
            console['error']('badTeamInfo_1:\x20' + JSON['stringify'](pI));
        }
        const p4 = k['uiLayout'] == k['UiLayout']['Sm']
          , p5 = p3['playerIds']['length'];
        for (let pj = 0x0; pj < p5; pj++) {
            const pf = this['teamSelectors'][pj]
              , px = p3['playerIds'][pj]
              , py = Xk['getPlayerInfo'](px)
              , pg = px == XG['__id']
              , pQ = Xk['getPlayerStatus'](px);
            if (pQ && XW > Xj['Solo']) {
                pf['groupIdDisplayed'] || (pf['groupId']['css']('display', 'block'),
                pf['groupIdDisplayed'] = !0x0),
                this['updateTeam'](pj, Q['htmlEscape'](py['name']), pQ['health'], {
                    'disconnected': pQ['disconnected'],
                    'dead': pQ['dead'],
                    'downed': pQ['downed'],
                    'role': pQ['role']
                }, py['playerId'], py['teamId'], Xk);
                for (const pZ in pf['indicators'])
                    if (pf['indicators']['hasOwnProperty'](pZ)) {
                        const pq = pf['indicators'][pZ]
                          , pM = pq['elem'];
                        let pE = !0x0;
                        if ((!pg || pq['displayAll']) && !XD) {
                            const pN = pQ['pos']
                              , pn = v['normalizeSafe'](v['sub'](pN, XU['NLYJ']), v['create'](0x1, 0x0))
                              , ph = G['intersectRayAabb'](XU['NLYJ'], pn, p1['min'], p1['max'])
                              , pR = Math['atan2'](pn['y'], -pn['x']) + Math['PI'] * 0.5
                              , pP = XU['MobS'](ph)
                              , pA = G['testCircleAabb'](pN, L['player']['radius'], p1['min'], p1['max']);
                            if (!pQ['dead'] && !pA) {
                                let pJ = 0x20
                                  , pS = 'translate(-50%,\x20-50%)\x20rotate(' + pR + 'rad)';
                                p4 && (pJ = 0x10,
                                pS += '\x20scale(0.5)'),
                                pE = !0x1,
                                pM['css']({
                                    'left': e['clamp'](pP['x'], pJ, XU['pmhI'] - pJ),
                                    'top': e['clamp'](pP['y'], pJ, XU['lZjK'] - pJ - 0x0),
                                    'transform': pS
                                }),
                                pq['displayed'] || (pM['css']('display', 'block'),
                                pq['displayed'] = !0x0);
                            }
                        }
                        pE && pq['displayed'] && (pM['css']('display', 'none'),
                        pq['displayed'] = !0x1);
                    }
            }
        }
        for (let pB = p5; pB < this['teamSelectors']['length']; pB++) {
            const pc = this['teamSelectors'][pB];
            for (const pu in pc['indicators'])
                if (pc['indicators']['hasOwnProperty'](pu)) {
                    const pV = pc['indicators'][pu];
                    pV['displayed'] && (pV['elem']['css']('display', 'none'),
                    pV['displayed'] = !0x1);
                }
            pc['groupIdDisplayed'] && (pc['groupId']['css']('display', 'none'),
            pc['groupIdDisplayed'] = !0x1);
        }
        if (XC['factionMode']) {
            const pz = Xk['getPlayerInfo'](XG['__id']);
            if (this['flairId'] != pz['teamId']) {
                this['flairId'] = pz['teamId'];
                const pw = this['flairId'] == 0x1 ? 'red' : 'blue';
                this['flairElems']['css']({
                    'display': 'block',
                    'background-image': 'url(../img/gui/player-patch-' + pw + '.svg)'
                });
            }
        }
        if (XW > Xj['Solo'] && this['groupPlayerCount'] != p5 && k['uiLayout'] == k['UiLayout']['Lg'] ? (this['groupPlayerCount'] = p5,
        this['spectateOptionsWrapper']['css']({
            'top': this['groupPlayerCount'] * this['teamMemberHeight'] + 0xc
        })) : XW == Xj['Solo'] && this['spectateOptionsWrapper']['css']({
            'top': 0xc
        }),
        this['updatePlayerMapSprites'](XT, XY, Xk, XC),
        this['mapSpriteBarn']['update'](XT, this, XC),
        this['Skv']['update'](XT, XU),
        this['roleMenuActive']) {
            this['roleMenuTicker'] -= XT;
            const pO = Math['ceil'](this['roleMenuTicker'])
              , pL = this['localization']['translate']('game-enter-game') + '\x20(' + pO + ')';
            pL != this['roleMenuFooterHtml'] && (this['roleMenuFooterEnterElem']['html'](pL),
            this['roleMenuFooterHtml'] = pL),
            !this['roleMenuInst'] && this['audioManager']['isSoundLoaded']('ambient_lab_01', 'ambient') && (this['roleMenuInst'] = this['audioManager']['playSound']('ambient_lab_01', {
                'channel': 'ambient'
            })),
            this['roleMenuTicker'] <= 0x0 && (this['roleSelected'] = this['roleDisplayed'],
            this['setRoleMenuActive'](!0x1));
        }
    }
    ['updatePlayerMapSprites'](XT, XY, XC, Xl) {
        const Xd = XC['getPlayerInfo'](XY['__id']);
        let Xk = 0x0;
        const XU = (XD, XG, XF, XH, p0, p1, p2) => {
            if (Xk >= this['playerMapSprites']['length']) {
                const p4 = this['mapSpriteBarn']['addSprite']();
                this['playerMapSprites']['push'](p4);
            }
            const p3 = this['playerMapSprites'][Xk++];
            p3['pos'] = v['copy'](XD),
            p3['scale'] = XG,
            p3['alpha'] = XF,
            p3['visible'] = XH,
            p3['zOrder'] = p0,
            p3['sprite']['texture'] = x['from'](p1),
            p3['sprite']['tint'] = p2;
        }
          , XW = Object['keys'](XC['playerStatus']);
        for (let XD = 0x0; XD < XW['length']; XD++) {
            const XG = XC['playerStatus'][XW[XD]]
              , XF = XG['playerId']
              , XH = XC['getPlayerInfo'](XF)
              , p0 = XH['groupId'] == Xd['groupId'];
            let p1 = 0xffff + XF * 0x2;
            XF == Xd['playerId'] && (p1 += 0xffff * 0x2);
            const p2 = Xf[XG['role']]
              , p3 = p2?.['mapIcon'];
            p3 && (p1 += 0xffff);
            let p4 = 'player-map-inner.img';
            p3 && (p4 = p2['mapIcon']['alive']),
            XG['dead'] ? (p4 = 'skull-outlined.img',
            p3 && (p4 = p2['mapIcon']['dead'])) : XG['downed'] && (p4 = p0 ? 'player-map-inner.img' : 'player-map-downed.img');
            let p5 = p0 ? XC['getGroupColor'](XF) : XC['getTeamColor'](XH['teamId']);
            Xl['factionMode'] && p3 && (p5 = XC['getTeamColor'](XH['teamId']));
            const p6 = k['uiLayout'] == k['UiLayout']['Sm'] ? 0.15 : 0.2;
            let p7 = p6;
            if (p7 = p0 ? XG['dead'] ? p6 * 1.5 : p3 ? p6 * 1.25 : p6 * 0x1 : XG['dead'] || XG['downed'] || p3 ? p6 * 1.25 : p6 * 0.75,
            XU(XG['pos'], p7, XG['minimapAlpha'], XG['minimapVisible'], p1, p4, p5),
            p0) {
                const p8 = k['uiLayout'] == k['UiLayout']['Sm'] ? 0.25 : 0.3
                  , p9 = XG['minimapVisible'] && !p3;
                XU(XG['pos'], p8, XG['minimapAlpha'], p9, p1 - 0x1, 'player-map-outer.img', 0xffffff);
            }
        }
        for (let pX = this['playerMapSprites']['length'] - 0x1; pX >= Xk; pX--)
            this['playerMapSprites'][pX]['visible'] = !0x1;
    }
    ['getMinimapMargin']() {
        return k['uiLayout'] == k['UiLayout']['Sm'] ? 0x4 : 0x10;
    }
    ['getMinimapSize']() {
        return k['uiLayout'] == k['UiLayout']['Sm'] ? 0xc0 : 0x100;
    }
    ['getMinimapBorderWidth']() {
        return k['uiLayout'] == k['UiLayout']['Sm'] ? 0x1 : 0x4;
    }
    ['createPing'](b, XT, XY, XC, Xl, Xd) {
        const Xk = C[b];
        if (Xk) {
            const XU = (XD, XG) => {
                const XF = this['mapSpriteBarn']['addSprite']();
                return XF['pos'] = v['copy'](XT),
                XF['scale'] = XD,
                XF['lifetime'] = Xk['mapLife'],
                XF['pulse'] = !0x1,
                XF['zOrder'] = 0x64,
                XF['sprite']['texture'] = x['from'](Xk['mapTexture']),
                XF['sprite']['tint'] = XG,
                XF;
            }
              , XW = XD => {
                const XG = this['mapSpriteBarn']['addSprite']();
                return XG['pos'] = v['copy'](XT),
                XG['scale'] = 0x0,
                XG['lifetime'] = Xk['pingLife'],
                XG['pulse'] = !0x0,
                XG['zOrder'] = 0x63,
                XG['sprite']['texture'] = x['from']('ping-map-pulse.img'),
                XG['sprite']['tint'] = XD,
                XG;
            }
            ;
            if (Xk['mapEvent']) {
                const XD = (k['uiLayout'] == k['UiLayout']['Sm'] ? 0.15 : 0.2) * 1.5;
                XU(XD, Xk['tint'])['release'](),
                XW(Xk['tint'])['release']();
            } else {
                let XG = 0xffffff;
                const XF = Xl['getPlayerInfo'](XC)
                  , XH = Xl['getPlayerInfo'](XY)
                  , p0 = Xl['getPlayerStatus'](XY);
                XF && XH && p0 && (p0['role'] == 'leader' ? XG = 0xff00 : XF['groupId'] == XH['groupId'] ? XG = Xl['getGroupColor'](XY) : XG = Xl['getTeamColor'](XH['teamId'])),
                this['playerPingSprites'][XY] || (this['playerPingSprites'][XY] = []);
                const p1 = this['playerPingSprites'][XY];
                for (let p5 = 0x0; p5 < p1['length']; p5++)
                    p1[p5]['free']();
                const p2 = k['uiLayout'] == k['UiLayout']['Sm'] ? 0.15 : 0.2
                  , p3 = XU(p2, XG)
                  , p4 = XW(XG);
                p1['push'](p3),
                p1['push'](p4);
            }
        }
    }
    ['updateMapSprite'](p, b, XT, XY) {
        p['displayed'] && (p['life'] != null && (p['life'] -= XY,
        p['displayed'] = p['life'] > 0x0,
        p['maxLife'] - p['life'] < 0.1 ? b['alpha'] = (p['maxLife'] - p['life']) / 0.1 : p['life'] < 0.5 ? b['alpha'] = e['max'](p['life'] / 0.5, 0x0) : b['alpha'] = 0x1),
        p['pulse'] && p['displayed'] && (p['scale'] = p['scale'] + XY / 2.5,
        b['scale']['set'](p['scale'], p['scale'])),
        b['visible'] = XT && b['alpha'] > 0x0);
    }
    ['updateMapIndicators'](p) {
        this['mapIndicatorBarn']['updateIndicatorData'](p);
    }
    ['getMapPosFromWorldPos'](p, b) {
        const XT = this['mapSprite']['x'] - this['mapSprite']['width'] / 0x2 + p['x'] / b['width'] * this['mapSprite']['width']
          , XY = this['mapSprite']['y'] + this['mapSprite']['height'] / 0x2 - p['y'] / b['height'] * this['mapSprite']['height'];
        return v['create'](XT, XY);
    }
    ['getWorldPosFromMapPos'](p, b, XT) {
        let XY = !0x1;
        if (this['bigmapDisplayed']) {
            const XC = (XT['pmhI'] - this['mapSprite']['width']) / 0x2;
            let Xl = (XT['lZjK'] - this['mapSprite']['height']) / 0x2;
            k['uiLayout'] == k['UiLayout']['Sm'] && !k['isLandscape'] && (Xl = 0x0),
            XY = p['x'] > XC && p['x'] < XT['pmhI'] - XC && p['y'] > Xl && p['y'] < XT['lZjK'] - Xl;
        } else {
            if (this['minimapDisplayed']) {
                const Xd = this['getMinimapSize']()
                  , Xk = this['getMinimapMargin']()
                  , XU = (Xd * this['screenScaleFactor'] + Xk) * 0.5;
                XY = p['x'] > this['minimapPos']['x'] - XU && p['x'] < this['minimapPos']['x'] + XU && p['y'] > this['minimapPos']['y'] - XU && p['y'] < this['minimapPos']['y'] + XU;
            }
        }
        if (XY) {
            const XW = v['create'](this['mapSprite']['x'] - this['mapSprite']['width'] / 0x2, this['mapSprite']['y'] + this['mapSprite']['height'] / 0x2)
              , XD = (p['x'] - XW['x']) / this['mapSprite']['width'] * b['width']
              , XG = (XW['y'] - p['y']) / this['mapSprite']['height'] * b['height'];
            return v['create'](XD, XG);
        }
        return !0x1;
    }
    ['hideAll']() {
        this['gameElem']['css']('display', 'none');
    }
    ['showAll']() {
        this['gameElem']['css']('display', 'block');
    }
    ['setLocalKills'](p) {
        this['playerKills']['html'](p);
    }
    ['removeAds']() {
        if (window['CrazyGames'])
            window['CrazyGames']['SDK']['banner']['clearAllBanners']();
        else {
            if (!window['aiptag'])
                return;
            const p = ['728x90', '300x250_2'];
            for (let b = 0x0; b < p['length']; b++) {
                const XT = p[b];
                window['aiptag']['cmd']['display']['push']( () => {
                    window['aipDisplayTag']['destroy']('survev-io_' + XT);
                }
                );
            }
        }
    }
    ['refreshMainPageAds']() {
        const p = ['728x90'];
        if (window['CrazyGames'])
            for (let b = 0x0; b < p['length']; b++) {
                const XT = p[b]
                  , XY = XT['split']('x')['map'](Number);
                It('survev-io_' + XT, XY[0x0], XY[0x1]);
            }
        if (window['aiptag'])
            for (let XC = 0x0; XC < p['length']; XC++) {
                const Xl = p[XC];
                window['aiptag']['cmd']['display']['push']( () => {
                    window['aipDisplayTag']['display']('survev-io_' + Xl);
                }
                );
            }
    }
    ['clearUI']() {
        this['Skv']['stop'](),
        this['curAction'] = {
            'type': Xp['None']
        },
        this['displayMapLarge'](!0x0),
        this['displayMiniMap'](),
        this['clearStatsElems'](),
        this['clearTeamUI'](),
        this['toggleEscMenu'](!0x0),
        this['toggleLocalStats'](!0x0),
        this['visibilityMode'] = 0x0,
        this['spectatorCount'] = 0x0,
        this['setLocalKills'](0x0);
    }
    ['beginSpectating']() {
        this['specBegin'] = !0x0;
    }
    ['hideStats']() {
        this['displayingStats'] = !0x1,
        this['statsMain']['css']('display', 'none'),
        this['statsElem']['stop']()['css']({
            'display': 'none',
            'opacity': 0x0
        }),
        this['statsContents']['stop']()['hide']();
    }
    ['teamModeToString'](p) {
        const b = {
            'unknown': 'game-rank',
            [Xj['Solo']]: 'game-solo-rank',
            [Xj['Duo']]: 'game-duo-rank',
            [Xj['Squad']]: 'game-squad-rank'
        }
          , XT = b[p] || b['unknown'];
        return this['localization']['translate'](XT);
    }
    ['getTitleVictoryText'](p, b) {
        if (p)
            return this['spectatedPlayerName'] + '\x20' + this['localization']['translate']('game-won-the-game');
        let XT = 'game-chicken';
        return b['turkeyMode'] && (XT = 'game-turkey'),
        this['localization']['translate'](XT);
    }
    ['getTitleDefeatText'](p, b) {
        return b ? this['spectatedPlayerName'] + '\x20' + this['localization']['translate']('game-player-died') + '.' : p > Xj['Solo'] ? this['localization']['translate']('game-team-eliminated') : this['localization']['translate']('game-You') + '\x20' + this['localization']['translate']('game-you-died') + '.';
    }
    ['getOverviewElems'](p, b, XT, XY) {
        if (XY) {
            const XC = this['localization']['translate']('game-red-team')
              , Xl = this['localization']['translate']('game-blue-team');
            return '<div\x20class=\x22ui-stats-header-right\x20ui-stats-header-red-team\x22><span\x20class=\x22ui-stats-header-stat\x22>' + XC + '\x20</span><span\x20class=\x22ui-stats-header-value\x22>' + this['playersAliveRedCounter'] + '</span></div><div\x20class=\x22ui-stats-header-left\x20ui-stats-header-blue-team\x22><span\x20class=\x22ui-stats-header-stat\x22>' + Xl + '\x20</span><span\x20class=\x22ui-stats-header-value\x22>' + this['playersAliveBlueCounter'] + '</span></div>';
        }
        return p == Xj['Solo'] ? '<div><span\x20class=\x22ui-stats-header-stat\x22>' + this['teamModeToString'](p) + '\x20</span><span\x20class=\x22ui-stats-header-value\x22>#' + b + '</span></div>' : '<div\x20class=\x22ui-stats-header-right\x22><span\x20class=\x22ui-stats-header-stat\x22>' + this['teamModeToString'](p) + '\x20</span><span\x20class=\x22ui-stats-header-value\x22>#' + b + '</span></div><div\x20class=\x22ui-stats-header-left\x22><span\x20class=\x22ui-stats-header-stat\x22>' + this['localization']['translate']('game-team-kills') + '\x20</span><span\x20class=\x22ui-stats-header-value\x22>' + XT + '</span></div>';
    }
    ['quitGame']() {
        this['game']['LSU'] = !0x0,
        this['refreshMainPageAds'](),
        this['game']['onQuit'](),
        this['game']['respawns']['push'](performance['now']());
    }
    ['showStats'](XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF, XH) {
        if (!XW || XY == Xk || Xd) {
            this['toggleEscMenu'](!0x0),
            this['displayingStats'] = !0x0,
            this['Skv']['stop'](),
            this['displayMapLarge'](!0x0),
            this['clearStatsElems'](),
            this['setSpectating'](!0x1, XU),
            this['removeAds'](),
            this['statsMain']['css']('display', 'block'),
            this['statsLogo']['css']('display', 'block'),
            this['statsContentsContainer']['css']({
                'top': ''
            }),
            this['statsInfoBox']['css']({
                'height': ''
            });
            const p0 = Xk == Xl ? 0x6d6 : 0x9c4;
            this['setBannerAd'](p0, XH);
            const p1 = Xk == Xl || XW && Xl == XY
              , p2 = XW && Xk != XY
              , p3 = p1 ? this['getTitleVictoryText'](p2, XF['getMapDef']()['gameMode']) : this['getTitleDefeatText'](XU, p2);
            let p4 = 0x0;
            for (let pf = 0x0; pf < XT['length']; pf++)
                p4 += XT[pf]['kills'];
            const p5 = this['getOverviewElems'](XU, XC, p4, XF['getMapDef']()['gameMode']['factionMode'])
              , p6 = j('<div/>')['append'](j('<div/>', {
                'class': 'ui-stats-header-title',
                'html': p3
            }))['append'](j('<div/>', {
                'class': 'ui-stats-header-overview',
                'html': p5
            }));
            this['statsHeader']['html'](p6);
            const p7 = (px, py) => j('<div/>', {
                'class': 'ui-stats-info'
            })['append'](j('<div/>', {
                'html': px
            }))['append'](j('<div/>', {
                'html': py
            }))
              , p8 = k['uiLayout'] != k['UiLayout']['Sm'] || k['tablet'] ? 0xfa : 0x7d;
            let p9 = 0x0;
            p9 -= (XT['length'] - 0x1) * p8 / 0x2,
            p9 -= (XT['length'] - 0x1) * 0xa;
            for (let px = 0x0; px < XT['length']; px++) {
                const py = XT[px]
                  , pg = XD['getPlayerInfo'](py['playerId'])
                  , pQ = Si(py['timeAlive']);
                let pZ = 'ui-stats-info-player';
                pZ += py['dead'] ? '\x20ui-stats-info-status' : '';
                const pq = (pM => j('<div/>', {
                    'class': pM
                }))(pZ);
                if (pq['css']('left', p9),
                pq['append'](j('<div/>', {
                    'class': 'ui-stats-info-player-name',
                    'html': Q['htmlEscape'](pg['name'])
                })),
                pq['append'](p7(this['localization']['translate']('game-kills'), '' + py['kills']))['append'](p7(this['localization']['translate']('game-damage-dealt'), py['damageDealt']))['append'](p7(this['localization']['translate']('game-damage-taken'), py['damageTaken']))['append'](p7(this['localization']['translate']('game-survived'), pQ)),
                XF['getMapDef']()['gameMode']['factionMode'] && Xd)
                    switch (px) {
                    case 0x1:
                        pq['append'](j('<div/>', {
                            'class': 'ui-stats-info-player-badge\x20ui-stats-info-player-red-leader'
                        }));
                        break;
                    case 0x2:
                        pq['append'](j('<div/>', {
                            'class': 'ui-stats-info-player-badge\x20ui-stats-info-player-blue-leader'
                        }));
                        break;
                    case 0x3:
                        {
                            const pM = pg['teamId'] == 0x1 ? 'ui-stats-info-player-red-ribbon' : 'ui-stats-info-player-blue-ribbon';
                            pq['append'](j('<div/>', {
                                'class': 'ui-stats-info-player-badge\x20' + pM
                            }));
                        }
                    }
                this['statsInfoBox']['append'](pq),
                p9 += 0xa;
            }
            const pX = j('<a/>', {
                'class': 'ui-stats-restart\x20btn-green\x20btn-darken\x20menu-option',
                'html': this['localization']['translate']('game-play-new-game')
            });
            if (pX['on']('click', () => {
                this['quitGame']();
            }
            ),
            this['statsOptions']['append'](pX),
            Xd || this['waitingForPlayers'])
                pX['css']({
                    'width': k['uiLayout'] != k['UiLayout']['Sm'] || k['tablet'] ? 0xe1 : 0x82
                });
            else {
                pX['css']({
                    'left': k['uiLayout'] != k['UiLayout']['Sm'] || k['tablet'] ? -0x48 : -0x2e
                });
                const pE = j('<a/>', {
                    'class': 'btn-green\x20btn-darken\x20menu-option\x20ui-stats-spectate',
                    'html': this['localization']['translate']('game-spectate')
                });
                pE['on']('click', this['beginSpectating']['bind'](this)),
                this['statsOptions']['append'](pE);
            }
            let pp = 0x0;
            const pb = 0x1f4
              , pI = 0xfa / e['max'](0x1, XT['length'])
              , pj = 0x2ee / e['max'](0x1, XT['length']);
            this['statsInfoBox']['children']()['each']( (pN, pn) => {
                const ph = j(pn);
                ph['css']('opacity', 0x0),
                ph['delay'](p0 + pj + (pp + pN) * pI)['animate']({
                    'opacity': 0x1
                }, pb, () => {
                    ph['children']()['each']( (pR, pP) => {
                        j(pP)['delay'](pR * pI)['animate']({
                            'opacity': 0x1
                        }, pb);
                    }
                    );
                }
                ),
                ph['children']()['each']( (pR, pP) => {
                    j(pP)['css']('opacity', 0x0),
                    pp++;
                }
                ),
                pp++;
            }
            ),
            this['statsOptions']['children']()['each']( (pN, pn) => {
                const ph = j(pn);
                ph['hide']();
                const pR = p0 + pj + (pp + pN) * pI + 0x1f4;
                ph['delay'](pR)['fadeIn'](pb),
                pp++;
            }
            ),
            this['statsElem']['stop'](),
            this['statsElem']['css']('display', 'block'),
            this['statsElem']['delay'](p0)['animate']({
                'opacity': 0x1
            }, 0x3e8),
            this['statsContents']['stop'](),
            this['statsContents']['css']('display', 'block'),
            this['statsContents']['delay'](p0)['animate']({
                'opacity': 0x1
            }, 0x3e8);
        }
    }
    ['clearStatsElems']() {
        this['statsHeader']['empty'](),
        this['statsInfoBox']['empty'](),
        this['statsOptions']['empty'](),
        this['statsAds']['css']('display', 'none'),
        this['statsContents']['stop'](),
        this['statsContents']['css']({
            'display': 'none',
            'opacity': 0x0
        }),
        this['statsElem']['stop'](),
        this['statsElem']['css']({
            'display': 'none',
            'opacity': 0x0
        }),
        this['statsMain']['css']('display', 'none');
    }
    ['showTeamAd'](p, b) {
        this['toggleEscMenu'](!0x0),
        this['displayMapLarge'](!0x0),
        this['clearStatsElems'](),
        this['statsMain']['css']('display', 'block'),
        this['statsLogo']['css']('display', 'none'),
        this['Skv']['stop'](),
        this['displayingStats'] = !0x0,
        this['statsHeader']['html']((( () => {
            let Xl = this['localization']['translate']('game-You');
            Xl += '\x20',
            Xl += this['localization']['translate']('game-you-died'),
            Xl += '.';
            let Xd = '<div><span\x20class=\x22ui-stats-header-stat\x22>' + this['localization']['translate']('game-kills') + '\x20</span>';
            return Xd += '<span\x20class=\x22ui-stats-header-value\x22>' + p['kills'] + '</span></div>',
            j('<div/>', {
                'class': ''
            })['append'](j('<div/>', {
                'class': 'ui-stats-header-title',
                'html': Xl
            }))['append'](j('<div/>', {
                'class': 'ui-stats-header-overview',
                'html': Xd
            }));
        }
        )())),
        this['statsContentsContainer']['css']({
            'top': '10%'
        }),
        this['statsInfoBox']['css']({
            'height': 0x0
        });
        const XT = j('<a/>', {
            'class': 'ui-stats-restart\x20btn-green\x20btn-darken\x20menu-option',
            'html': this['localization']['translate']('game-play-new-game')
        });
        XT['on']('click', () => {
            this['quitGame']();
        }
        ),
        this['statsOptions']['append'](XT),
        XT['css']({
            'left': k['uiLayout'] != k['UiLayout']['Sm'] || k['tablet'] ? -0x48 : -0x2e
        });
        const XY = j('<a/>', {
            'class': 'btn-green\x20btn-darken\x20menu-option\x20ui-stats-spectate',
            'html': this['localization']['translate']('game-spectate')
        });
        XY['on']('click', this['beginSpectating']['bind'](this)),
        this['statsOptions']['append'](XY);
        let XC = 0x0;
        this['statsOptions']['children']()['each']( (Xl, Xd) => {
            const Xk = j(Xd);
            Xk['hide']();
            const XU = 0x1004 + (XC + Xl) * 0x12c + 0x12c;
            Xk['delay'](XU)['fadeIn'](0x2ee),
            XC++;
        }
        ),
        this['statsElem']['stop'](),
        this['statsElem']['css']('display', 'block'),
        this['statsElem']['delay'](0x9c4)['animate']({
            'opacity': 0x1
        }, 0x3e8),
        this['statsContents']['stop'](),
        this['statsContents']['css']('display', 'block'),
        this['statsContents']['delay'](0x9c4)['animate']({
            'opacity': 0x1
        }, 0x3e8);
    }
    ['setBannerAd'](p, b) {
        if (!window['aiptag'])
            return;
        let XT = Math['max'](p - 0x96, 0x0);
        setTimeout( () => {
            j('#ui-stats-ad-container-desktop')['css']('display', 'inline-block'),
            window['aiptag']['cmd']['display']['push']( () => {
                window['aipDisplayTag']['display']('survev-io_300x250_2');
            }
            ),
            b['hideKillMessage']();
        }
        , XT);
    }
    ['setSpectateTarget'](p, b, XT, XY) {
        if (p != this['spectatedPlayerId']) {
            this['setSpectating'](!0x0, XT);
            const XC = XY['getPlayerName'](p, b, !0x1);
            this['spectatedPlayerId'] = p,
            this['spectatedPlayerName'] = Q['htmlEscape'](XC),
            this['spectatedPlayerText']['find']('#spectate-player')['html'](this['spectatedPlayerName']),
            this['actionSeq'] = -0x1,
            this['Skv']['stop']();
        }
    }
    ['setSpectating'](p, b) {
        if (this['spectating'] != p) {
            if (this['spectating'] = p,
            this['spectating']) {
                this['spectateMode']['css']('display', 'block'),
                j('.ui-zoom')['removeClass']('ui-zoom-hover');
                const XT = b == Xj['Solo'];
                this['specPrevButton']['css']('display', XT ? 'none' : 'block'),
                this['specNextButton']['css']('display', XT ? 'none' : 'block'),
                this['hideStats']();
            } else
                this['spectateMode']['css']('display', 'none'),
                j('.ui-zoom')['addClass']('ui-zoom-hover');
        }
    }
    ['setLocalStats'](p) {
        const b = {
            'kills': this['localization']['translate']('game-kills'),
            'damageDealt': this['localization']['translate']('game-damage-dealt'),
            'damageTaken': this['localization']['translate']('game-damage-taken'),
            'timeAlive': this['localization']['translate']('game-survived')
        };
        this['spectateModeStatsData']['empty']();
        for (const XT in b)
            if (b['hasOwnProperty'](XT)) {
                const XY = b[XT]
                  , XC = XT == 'timeAlive' ? Si(p[XT]) : p[XT]
                  , Xl = '<tr><td\x20class=\x22ui-spectate-stats-category\x22>' + XY + '</td><td\x20class=\x22ui-spectate-stats-value\x22>' + XC + '</td></tr>';
                this['spectateModeStatsData']['append'](Xl);
            }
    }
    ['toggleLocalStats'](p=!0x1) {
        const b = this['spectateModeStats']['css']('display') == 'none' && !p;
        this['spectateModeStats']['css']('display', b ? 'inline-block' : 'none'),
        this['specStatsButton']['html'](b ? this['localization']['translate']('game-hide-match-stats') : this['localization']['translate']('game-view-match-stats'));
    }
    ['updatePlayersAlive'](p) {
        this['playersAlive']['html'](p),
        this['leaderboardAlive']['css']('display', 'block'),
        this['leaderboardAliveFaction']['css']('display', 'none');
    }
    ['updatePlayersAliveRed'](p) {
        this['playersAliveRed']['html'](p),
        this['playersAliveRedCounter'] = p,
        this['leaderboardAlive']['css']('display', 'none'),
        this['leaderboardAliveFaction']['css']('display', 'block'),
        j('#ui-map-counter-default')['css']('display', 'none'),
        j('#ui-map-counter-faction')['css']('display', 'inline-block');
    }
    ['updatePlayersAliveBlue'](p) {
        this['playersAliveBlue']['html'](p),
        this['playersAliveBlueCounter'] = p,
        this['leaderboardAlive']['css']('display', 'none'),
        this['leaderboardAliveFaction']['css']('display', 'block'),
        j('#ui-map-counter-default')['css']('display', 'none'),
        j('#ui-map-counter-faction')['css']('display', 'inline-block');
    }
    ['updateKillLeader'](p, b, XT, XY) {
        const XC = p != 0x0
          , Xl = XY?.['sniperMode'] ? this['localization']['translate']('game-waiting-for-hunted') : this['localization']['translate']('game-waiting-for-new-leader');
        this['killLeaderName']['html'](XC ? b : Xl),
        this['killLeaderCount']['html'](XC ? XT : 0x0);
    }
    ['displayMapLarge'](p) {
        this['bigmapDisplayed'] = !p && !this['bigmapDisplayed'],
        this['bigmapDisplayed'] ? this['container']['alpha'] = 0x1 : this['container']['alpha'] = this['minimapDisplayed'] ? 0x1 : 0x0;
        let b = k['uiLayout'] == k['UiLayout']['Sm'] ? '.js-ui-mobile-map-hidden' : 'js-ui-desktop-map-hidden';
        b += ',\x20.js-ui-map-hidden',
        j(this['visibilityMode'] == 0x2 ? '.js-ui-hud-show' : b)['css']('display', this['bigmapDisplayed'] ? 'none' : 'block'),
        j('.js-ui-map-show')['css']('display', this['bigmapDisplayed'] ? 'block' : 'none'),
        this['updateSpectatorCountDisplay'](!0x0),
        this['redraw'](this['game']['Solrb']);
    }
    ['updateSpectatorCountDisplay'](p) {
        const b = !this['bigmapDisplayed'] && this['spectatorCount'] > 0x0;
        p = p || this['spectatorCount'] > 0x0 && !this['spectatorCounterDisplayed'] || this['spectatorCount'] == 0x0 && this['spectatorCounterDisplayed'],
        this['spectatorCount'] != this['prevSpectatorCount'] && (this['spectatorCounter']['html'](this['spectatorCount']),
        this['prevSpectatorCount'] = this['spectatorCount']),
        p && (this['spectatorCounterContainer']['css']('display', b ? 'block' : 'none'),
        this['spectatorCounterDisplayed'] = b);
    }
    ['toggleMiniMap']() {
        this['minimapDisplayed'] ? this['hideMiniMap']() : this['displayMiniMap']();
    }
    ['cycleVisibilityMode']() {
        if (!this['bigmapDisplayed'])
            switch (this['visibilityMode']) {
            case 0x0:
                this['hideMiniMap'](),
                this['visibilityMode'] = 0x1;
                break;
            case 0x1:
                this['displayMiniMap'](),
                this['visibilityMode'] = 0x0;
            }
    }
    ['cycleHud']() {
        this['gameElem']['css']('display') == 'none' ? (this['gameElem']['css']('display', 'block'),
        this['displayMiniMap'](),
        this['hudVisible'] = !0x0) : (this['gameElem']['css']('display', 'none'),
        this['hideMiniMap'](),
        this['hudVisible'] = !0x1);
    }
    ['hideMiniMap']() {
        this['bigmapDisplayed'] || (this['minimapDisplayed'] = !0x1,
        this['container']['alpha'] = 0x0,
        this['mapInfo']['css']('bottom', 'auto'),
        this['spectatorCounterContainer']['css']({
            'bottom': 0x6,
            'left': 0x62
        }));
    }
    ['displayMiniMap']() {
        if (!this['bigmapDisplayed']) {
            const p = k['uiLayout'] == k['UiLayout']['Sm'];
            this['minimapDisplayed'] = !0x0,
            this['container']['alpha'] = 0x1,
            this['mapInfo']['css']('bottom', this['mapInfoBottom']),
            this['spectatorCounterContainer']['css']({
                'bottom': p ? 0x0 : 0xda,
                'left': p ? 0x0 : 0x6
            });
        }
    }
    ['displayAnnouncement'](p) {
        p && (this['announcement']['html'](p),
        this['announcement']['fadeIn'](0x190, () => {
            setTimeout( () => {
                this['announcement']['fadeOut'](0x320);
            }
            , 0xbb8);
        }
        ));
    }
    ['displayGasAnnouncement'](p, b) {
        let XT = '';
        switch (p) {
        case XI['Waiting']:
            {
                XT = this['localization']['translate']('game-red-zone-advances');
                const XY = Math['floor'](b / 0x3c)
                  , XC = b - XY * 0x3c;
                XT += XY > 0x1 ? '\x20' + XY + '\x20' + this['localization']['translate']('game-minutes') : '',
                XT += XY == 0x1 ? '\x20' + XY + '\x20' + this['localization']['translate']('game-minute') : '',
                XT += XC > 0x0 ? '\x20' + Math['floor'](XC) + '\x20' + this['localization']['translate']('game-seconds') : '';
                break;
            }
        case XI['Moving']:
            XT = this['localization']['translate']('game-red-zone-advancing');
            break;
        }
        this['displayAnnouncement'](XT);
    }
    ['setWaitingForPlayers'](p) {
        this['waitingForPlayers'] = p,
        this['waitingText']['css']('display', p ? 'block' : 'none');
    }
    ['Dgc'](b, XT, XY, XC, Xl, Xd) {
        const Xk = XT['getCircle']()
          , XU = this['getMapPosFromWorldPos'](Xk['pos'], XC)
          , XW = this['getMapPosFromWorldPos'](v['add'](Xk['pos'], v['create'](Xk['rad'], 0x0)), XC)
          , XD = v['length'](v['sub'](XW, XU));
        this['gasRenderer']['render'](XU, XD, XT['isActive']());
        const XG = XT['circleNew']
          , XF = this['getMapPosFromWorldPos'](XG['pos'], XC)
          , XH = this['getMapPosFromWorldPos'](v['add'](XG['pos'], v['create'](XG['rad'], 0x0)), XC)
          , p0 = v['length'](v['sub'](XH, XF))
          , p1 = this['getMapPosFromWorldPos'](b, XC)
          , p2 = XT['isActive']()
          , p3 = XT['isActive']() && !this['bigmapDisplayed'];
        this['gasSafeZoneRenderer']['render'](XF, p0, p1, p2, p3),
        Xl['renderAirstrikeZones'](this, XC, Xd);
    }
    ['updateHealthBar'](b, XT, XY, XC) {
        const Xl = b;
        let Xd = XC['health'] * 0.01 * Xl;
        Xd = XC['dead'] ? 0x0 : e['max'](Xd, 0x1),
        XT['css']('width', Xd),
        Xd > 0x0 && XY?.['css']('width', Xd);
        const Xk = XC['health'];
        let XU = this['healthRed']
          , XW = this['healthDarkpink'];
        if (Xk > 0x19) {
            if (XC['downed'])
                XT['css']({
                    'backgroundColor': 'red'
                });
            else {
                e['eqAbs'](Xk, 0x64, 0.2) ? (XU = this['healthGrey'],
                XW = this['healthGrey']) : e['eqAbs'](Xk, 0x4b, 0.2) || Xk >= 0x4b ? (XU = this['healthWhite'],
                XW = this['healthWhite']) : (XU = this['healthDarkpink'],
                XW = this['healthLightpink']);
                const XD = XU['getColors']()
                  , XG = XW['getColors']()
                  , XF = St(XD['r'], XG['r'], 0x2d, Xk)
                  , XH = St(XD['g'], XG['g'], 0x2d, Xk)
                  , p0 = St(XD['b'], XG['b'], 0x2d, Xk);
                XT['css']({
                    'backgroundColor': 'rgba(' + XF + ',' + XH + ',' + p0 + ',1)'
                });
            }
            XT['removeClass']('ui-bar-danger');
        } else
            XT['addClass']('ui-bar-danger');
    }
    ['updateTeam'](b, XT, XY, XC, Xl, Xd, Xk) {
        const XU = this['teamSelectors'][b]['groupId']
          , XW = this['teamSelectors'][b]['teamName']
          , XD = this['teamSelectors'][b]['prevHealth']
          , XG = this['teamSelectors'][b]['prevStatus']
          , XF = XC['dead'] != XG['dead'] || XC['disconnected'] != XG['disconnected'] || XC['downed'] != XG['downed'] || XC['role'] != XG['role'];
        if (this['teamSelectors'][b]['playerId'] != Xl || XY != XD || XF) {
            const XH = this['teamSelectors'][b]['teamStatus']
              , p0 = this['teamSelectors'][b]['teamHealthInner'];
            this['teamSelectors'][b]['playerId'] = Xl,
            this['teamSelectors'][b]['teamNameHtml'] = XT,
            XW['html'](XT),
            this['updateHealthBar'](this['teamMemberHealthBarWidth'], p0, null, {
                'health': XY,
                'dead': XC['dead'],
                'downed': XC['downed']
            }),
            XF && (XH['attr']('class', 'ui-team-member-status'),
            XC['disconnected'] ? XH['addClass']('ui-team-member-status-disconnected') : XC['dead'] ? XH['addClass']('ui-team-member-status-dead') : XC['downed'] && XH['addClass']('ui-team-member-status-downed')['addClass']('icon-pulse'),
            XW['css']('opacity', XC['disconnected'] || XC['dead'] ? 0.3 : 0x1)),
            XU['css']('display', 'block'),
            this['teamSelectors'][b]['prevStatus'] = XC,
            this['teamSelectors'][b]['prevHealth'] = XY;
        }
    }
    ['clearTeamUI']() {
        j('.ui-team-member')['css']('display', 'none'),
        j('.ui-team-indicator')['css']('display', 'none'),
        j('.ui-team-member-name')['removeAttr']('style'),
        j('.ui-team-member-status')['removeAttr']('style'),
        j('.ui-team-member-status')['removeClass']('ui-team-member-status-downed\x20ui-team-member-status-dead\x20ui-team-member-status-disconnected\x20icon-pulse'),
        this['teamSelectors'] = [];
    }
    ['resize'](p, b) {
        this['screenScaleFactor'] = k['uiLayout'] == k['UiLayout']['Sm'] ? 0.5626 : e['min'](0x1, e['clamp'](b['pmhI'] / 0x500, 0.75, 0x1) * e['clamp'](b['lZjK'] / 0x400, 0.75, 0x1)),
        this['Skv']['resize'](this['touch'], this['screenScaleFactor']),
        this['gasRenderer']['resize'](),
        this['mapSprite']['texture'] = p['getMapTexture']();
        const XT = e['min'](0x1, e['min'](b['pmhI'] / 0x4b0, b['lZjK'] / 0x384));
        this['roleMenuElem']['css']('transform', 'translateX(-50%)\x20translateY(-50%)\x20scale(' + XT + ')'),
        this['redraw'](b);
    }
    ['redraw'](b) {
        const XT = b['pmhI']
          , XY = b['lZjK']
          , XC = this['getMinimapMargin']();
        let Xl = 0x0
          , Xd = 0x0;
        k['model'] == 'iphonex' && (k['isLandscape'] ? Xl += 0x1c : Xd += 0x20);
        const Xk = this['getMinimapSize']()
          , XU = this['getMinimapBorderWidth']()
          , XW = k['uiLayout'] == k['UiLayout']['Sm'];
        if (this['display']['border']['clear'](),
        this['container']['mask']?.['clear'](),
        this['bigmapDisplayed']) {
            const XD = e['min'](XT, XY);
            this['mapSprite']['width'] = XD,
            this['mapSprite']['height'] = XD,
            this['mapSprite']['x'] = XT / 0x2,
            this['mapSprite']['y'] = XY / 0x2,
            this['mapSprite']['alpha'] = 0x1,
            this['container']['mask']['beginFill'](0xffffff, 0x1),
            this['container']['mask']['drawRect'](this['mapSprite']['x'] - this['mapSprite']['width'] / 0x2, this['mapSprite']['y'] - this['mapSprite']['height'] / 0x2, this['mapSprite']['width'], this['mapSprite']['height']),
            this['container']['mask']['endFill'](),
            k['touch'] && this['bigmapCollision']['css']({
                'width': XY,
                'height': XT
            });
        } else {
            const XG = this['screenScaleFactor'] * 0x640 / 1.2
              , XF = Xk * this['screenScaleFactor'];
            this['mapSprite']['width'] = XG,
            this['mapSprite']['height'] = XG,
            this['mapSprite']['alpha'] = 0.8;
            let XH = {
                'zoom': this['screenScaleFactor']
            };
            document['body'] && ('WebkitTransform'in document['body']['style'] ? XH = {
                '-webkit-transform': 'scale(' + this['screenScaleFactor'] + ')'
            } : 'transform'in document['body']['style'] && (XH = {
                'transform': 'scale(' + this['screenScaleFactor'] + ')'
            })),
            this['mapContainer']['css'](XH),
            this['mapContainer']['css']('bottom', this['mapContainerBottom'] * this['screenScaleFactor']);
            const p0 = XW ? XF / 0x2 + XC : XY - XF / 0x2 - XC;
            this['minimapPos']['x'] = XC + XF / 0x2 + Xl,
            this['minimapPos']['y'] = p0 + Xd,
            this['display']['border']['lineStyle'](XU, 0x0),
            this['display']['border']['beginFill'](0x0, 0x0);
            const p1 = XW ? XC + XU / 0x2 : XY - XF - XC + XU / 0x2;
            this['display']['border']['drawRect'](XC + XU / 0x2 + Xl, p1 + Xd, XF - XU, XF - XU),
            this['display']['border']['endFill']();
            const p2 = XW ? XC : XY - XF - XC;
            this['container']['mask']['beginFill'](0xffffff, 0x1),
            this['container']['mask']['drawRect'](XC + Xl, p2 - 0.5 + Xd, XF, XF),
            this['container']['mask']['endFill']();
        }
    }
    ['toggleEscMenu'](p=!0x1) {
        this['displayingStats'] || (this['escMenuDisplayed'] || p ? (this['escMenuDisplayed'] = !0x1,
        this['escMenuElem']['css']('display', 'none'),
        this['setCurrentGameTab']('settings'),
        j('#ui-center')['off']('mouseenter\x20mouseleave'),
        this['inputBinds']['menuHovered'] = !0x1,
        this['roleMenuActive'] && this['displayRoleMenu']()) : this['bigmapDisplayed'] ? this['displayMapLarge'](!0x0) : (this['visibilityMode'] == 0x2 && this['cycleVisibilityMode'](),
        this['escMenuDisplayed'] = !0x0,
        this['escMenuElem']['css']('display', 'block'),
        j('#ui-center')['hover']( () => {
            this['inputBinds']['menuHovered'] = !0x0;
        }
        , () => {
            this['inputBinds']['menuHovered'] = !0x1;
        }
        ),
        this['inputBinds']['menuHovered'] = !0x1,
        this['roleMenuActive'] && this['hideRoleMenu']()));
    }
    ['setCurrentGameTab'](p) {
        this['currentGameTab'] = p,
        this['gameTabs']['css']('display', 'none'),
        this['gameTabBtns']['removeClass']('btn-game-menu-selected'),
        j('#ui-game-tab-' + this['currentGameTab'])['css']('display', 'block'),
        j('#btn-game-' + this['currentGameTab'])['addClass']('btn-game-menu-selected'),
        this['currentGameTab'] == 'keybinds' ? this['inputBindUi']['refresh']() : this['inputBindUi']['cancelBind']();
    }
    ['setRoleMenuActive'](p) {
        this['roleMenuActive'] = p,
        this['roleMenuActive'] ? (this['roleMenuTicker'] = 0x14,
        this['displayRoleMenu']()) : (this['roleMenuInst'] && (this['audioManager']['stopSound'](this['roleMenuInst']),
        this['roleMenuInst'] = null),
        this['hideRoleMenu']());
    }
    ['displayRoleMenu']() {
        this['roleMenuElemWrapper']['css']('display', 'block');
    }
    ['hideRoleMenu']() {
        this['roleMenuElemWrapper']['css']('display', 'none');
    }
    ['setRoleMenuOptions'](p, b) {
        j('#ui-role-header')['html']('');
        for (let XY = 0x0; XY < b['length']; XY++) {
            const XC = b[XY]
              , Xl = w[XC]
              , Xd = j('<div/>', {
                'class': 'ui-role-option',
                'data-role': XC
            });
            Xd['css']({
                'background-image': 'url(\x27' + Xl['guiImg'] + '\x27)'
            }),
            j('#ui-role-header')['append'](Xd);
        }
        j('.ui-role-option')['on']('click', Xk => {
            Xk['stopPropagation']();
            const XU = j(Xk['currentTarget']);
            this['setRoleMenuInfo'](XU['data']('role'));
        }
        );
        let XT = b[0x0];
        b['includes'](p) && (XT = p),
        this['setRoleMenuInfo'](XT);
    }
    ['setRoleMenuInfo'](b) {
        const XT = w[b];
        j('.ui-role-option')['css']({
            'background-size': 0x84,
            'opacity': 0.5
        }),
        j('#ui-role-header')['find']('[data-role=' + b + ']')['css']({
            'background-size': 0xa4,
            'opacity': 0x1
        });
        const XY = j('<div/>', {
            'class': 'ui-role-body-left'
        })
          , XC = j('<div/>', {
            'class': 'ui-role-body-name'
        })
          , Xl = j('<div/>', {
            'class': 'ui-role-body-image'
        })
          , Xd = this['localization']['translate']('game-' + b);
        XC['html'](Xd),
        Xl['css']({
            'background-image': 'url(\x27' + XT['guiImg'] + '\x27)'
        });
        const Xk = XT['color'] ? Q['colorToHexString'](XT['color']) : 'default';
        this['roleMenuElem']['css']('border-color', Xk),
        XY['append'](XC)['append'](Xl);
        const XU = j('<div/>', {
            'class': 'ui-role-body-right'
        })
          , XW = XT['perks'];
        for (let XD = 0x0; XD < XW['length']; XD++) {
            const XG = XW[XD]
              , XF = j('<div/>', {
                'class': 'ui-role-body-perk'
            })
              , XH = j('<div/>', {
                'class': 'ui-role-body-perk-image-wrapper'
            })['append'](j('<div/>', {
                'class': 'ui-role-body-perk-image-icon'
            }))
              , p0 = j('<div/>', {
                'class': 'ui-role-body-perk-name'
            })
              , p1 = Q['getSvgFromGameType'](XG instanceof Function ? XG() : XG);
            XH['find']('.ui-role-body-perk-image-icon')['css']({
                'background-image': 'url(\x27' + p1 + '\x27)'
            });
            const p2 = this['localization']['translate']('game-' + XG);
            p0['html'](p2),
            XF['append'](XH)['append'](p0),
            XU['append'](XF);
        }
        j('#ui-role-body')['html']('')['append'](XY)['append'](XU),
        this['roleDisplayed'] = b;
    }
}
const sr = 0x6
  , yi = 0.75 * 0x3e8
  , or = 0x3
  , _s = {
    [L['WeaponSlot']['Primary']]: D['EquipPrimary'],
    [L['WeaponSlot']['Secondary']]: D['EquipSecondary'],
    [L['WeaponSlot']['Melee']]: D['EquipMelee'],
    [L['WeaponSlot']['Throwable']]: D['EquipThrowable']
};
function Y(p) {
    return document['getElementById'](p);
}
function xi(p) {
    return p['button'] == 0x0;
}
function zi(p) {
    return 'which'in p ? p['which'] == 0x3 : p['button'] == 0x2;
}
function Lt(p, b, XT) {
    if (p instanceof Array) {
        for (let XY = 0x0; XY < p['length']; XY++)
            Lt(p[XY], XT !== void 0x0 ? b[XT] : b, XY);
    } else {
        if (p instanceof Object) {
            const XC = Object['keys'](p);
            for (let Xl = 0x0; Xl < XC['length']; Xl++) {
                const Xd = XC[Xl];
                Lt(p[Xd], XT !== void 0x0 ? b[XT] : b, Xd);
            }
        } else
            b[XT] = p;
    }
}
function At(p, b, XT) {
    if (b instanceof Array) {
        const XY = [];
        for (let XC = 0x0; XC < b['length']; XC++)
            XY[XC] = At(p[XC], b[XC], XT);
        return XY;
    }
    if (b instanceof Object) {
        const Xl = {}
          , Xd = Object['keys'](b);
        for (let Xk = 0x0; Xk < Xd['length']; Xk++) {
            const XU = Xd[Xk];
            Xl[XU] = At(p[XU], b[XU], XT);
        }
        return Xl;
    }
    return p != b || XT;
}
function lr() {
    const p = Object['keys'](w)
      , b = [];
    for (let XT = 0x0; XT < p['length']; XT++) {
        const XY = p[XT]
          , XC = w[XY];
        !XC['hideUi'] && (XC['type'] == 'heal' || XC['type'] == 'boost' || XC['type'] == 'ammo') && b['push'](XY);
    }
    return b;
}
class bi {
    ['mobile'] = !0x1;
    ['touch'] = !0x1;
    ['rareLootMessage'] = {
        'lootType': '',
        'ticker': 0x0,
        'duration': 0x0,
        'opacity': 0x0
    };
    ['pickupMessage'] = {
        'message': '',
        'ticker': 0x0,
        'duration': 0x0,
        'opacity': 0x0
    };
    ['killMessage'] = {
        'text': '',
        'count': '',
        'ticker': 0x0,
        'duration': 0x0,
        'opacity': 0x0
    };
    ['killFeed'] = Array['from']({
        'length': sr
    }, () => ({
        'text': '',
        'color': '#000000',
        'offset': 0x0,
        'opacity': 0x0,
        'ticker': Number['MAX_VALUE']
    }));
    ['ammo'] = {
        'current': 0x0,
        'remaining': 0x0,
        'displayCurrent': !0x1,
        'displayRemaining': !0x1
    };
    ['interaction'] = {
        'type': 0x0,
        'text': '',
        'key': '',
        'usable': !0x1
    };
    ['weapons'] = Array['from']({
        'length': L['WeaponSlot']['Count']
    }, (e, t) => ({
        'slot': t,
        'type': '',
        'ammo': 0x0,
        'equipped': !0x1,
        'selectable': !0x1,
        'opacity': 0x0,
        'width': 0x0,
        'ticker': 0x0,
        'bind': _s[t],
        'bindStr': ''
    }));
    ['scopes'] = Xx['map'](e => ({
        'type': e,
        'visible': !0x1,
        'equipped': !0x1,
        'selectable': !0x1
    }));
    ['loot'] = lr()['map'](e => ({
        'type': e,
        'count': 0x0,
        'maximum': 0x0,
        'selectable': !0x1,
        'width': 0x0,
        'ticker': 0x0
    }));
    ['perks'] = Array['from']({
        'length': or
    }, () => ({
        'type': '',
        'droppable': !0x1,
        'width': 0x0,
        'ticker': 0x0,
        'pulse': !0x1
    }));
    ['gear'] = Xy['map'](e => ({
        'type': e,
        'item': '',
        'selectable': !0x1,
        'width': 0x0,
        'ticker': 0x0,
        'rot': 0x0
    }));
    ['health'] = L['player']['health'];
    ['boost'] = 0x0;
    ['downed'] = !0x1;
}
class Is {
    constructor(b, XT) {
        this['localization'] = b,
        this['inputBinds'] = XT;
        const XY = this;
        for (let Xk = 0x0; Xk < sr; Xk++) {
            const XU = 'ui-killfeed-' + Xk;
            let XW = Y(XU);
            if (!XW) {
                XW = document['createElement']('div'),
                XW['id'] = XU,
                XW['classList']['add']('killfeed-div');
                const XD = document['createElement']('div');
                XD['classList']['add']('killfeed-text'),
                XW['appendChild'](XD),
                this['dom']['killFeed']['div']['appendChild'](XW);
            }
            this['dom']['killFeed']['lines']['push']({
                'line': XW,
                'text': XW['firstElementChild']
            });
        }
        for (let XG = 0x0; XG < L['WeaponSlot']['Count']; XG++) {
            const XF = Y('ui-weapon-id-' + (XG + 0x1))
              , XH = {
                'div': XF,
                'type': XF['getElementsByClassName']('ui-weapon-name')[0x0],
                'number': XF['getElementsByClassName']('ui-weapon-number')[0x0],
                'image': XF['getElementsByClassName']('ui-weapon-image')[0x0],
                'ammo': XF['getElementsByClassName']('ui-weapon-ammo-counter')[0x0]
            };
            this['dom']['weapons']['push'](XH);
        }
        for (let p0 = 0x0; p0 < Xx['length']; p0++) {
            const p1 = Xx[p0]
              , p2 = {
                'scopeType': p1,
                'div': Y('ui-scope-' + p1)
            };
            this['dom']['scopes']['push'](p2);
        }
        for (let p3 = lr(), p4 = 0x0; p4 < p3['length']; p4++) {
            const p5 = p3[p4]
              , p6 = Y('ui-loot-' + p5);
            if (p6) {
                const p7 = {
                    'lootType': p5,
                    'div': p6,
                    'count': p6['getElementsByClassName']('ui-loot-count')[0x0],
                    'image': p6['getElementsByClassName']('ui-loot-image')[0x0],
                    'overlay': p6['getElementsByClassName']('ui-loot-overlay')[0x0]
                };
                this['dom']['loot']['push'](p7);
            }
        }
        for (let p8 = 0x0; p8 < Xy['length']; p8++) {
            const p9 = Xy[p8]
              , pX = Y('ui-armor-' + p9)
              , pp = {
                'gearType': p9,
                'div': pX,
                'level': pX['getElementsByClassName']('ui-armor-level')[0x0],
                'image': pX['getElementsByClassName']('ui-armor-image')[0x0]
            };
            this['dom']['gear']['push'](pp);
        }
        for (let pb = 0x0; pb < or; pb++) {
            const pI = Y('ui-perk-' + pb)
              , pj = {
                'perkType': '',
                'div': pI,
                'divTitle': pI['getElementsByClassName']('tooltip-title')[0x0],
                'divDesc': pI['getElementsByClassName']('tooltip-desc')[0x0],
                'image': pI['getElementsByClassName']('ui-armor-image')[0x0]
            };
            this['dom']['perks']['push'](pj);
        }
        const XC = (pf, px, py) => {
            this['eventListeners']['push']({
                'event': pf,
                'elem': px,
                'fn': py
            }),
            px['addEventListener'](pf, py);
        }
          , Xl = (pf, px, py, pg) => {
            this['itemActions']['push']({
                'action': pf,
                'type': px,
                'data': py,
                'div': pg,
                'actionQueued': !0x1,
                'actionTime': 0x0
            });
        }
        ;
        for (let pf = 0x0; pf < this['dom']['weapons']['length']; pf++)
            Xl('use', 'weapon', pf, this['dom']['weapons'][pf]['div']),
            Xl('drop', 'weapon', pf, this['dom']['weapons'][pf]['div']);
        for (let px = 0x0; px < this['dom']['scopes']['length']; px++) {
            const py = this['dom']['scopes'][px];
            Xl('use', 'scope', py['scopeType'], py['div']),
            py['scopeType'] != '1xscope' && Xl('drop', 'loot', py['scopeType'], py['div']);
        }
        for (let pg = 0x0; pg < this['dom']['loot']['length']; pg++) {
            const pQ = this['dom']['loot'][pg]
              , pZ = w[pQ['lootType']];
            (pZ['type'] == 'heal' || pZ['type'] == 'boost') && Xl('use', 'loot', pQ['lootType'], pQ['div']),
            Xl('drop', 'loot', pQ['lootType'], pQ['div']);
        }
        for (let pq = 0x0; pq < this['dom']['gear']['length']; pq++) {
            const pM = this['dom']['gear'][pq];
            pM['gearType'] != 'backpack' && Xl('drop', 'loot', pM['gearType'], pM['div']);
        }
        for (let pE = 0x0; pE < this['dom']['perks']['length']; pE++)
            Xl('drop', 'perk', pE, this['dom']['perks'][pE]['div']);
        for (let pN = 0x0; pN < this['itemActions']['length']; pN++) {
            const pn = this['itemActions'][pN];
            XC('mousedown', pn['div'], ph => {
                (pn['action'] == 'use' && xi(ph) || pn['action'] == 'drop' && zi(ph)) && (ph['stopPropagation'](),
                pn['actionQueued'] = !0x0);
            }
            ),
            XC('mouseup', pn['div'], ph => {
                pn['actionQueued'] && (pn['action'] == 'use' && xi(ph) || pn['action'] == 'drop' && zi(ph)) && (ph['stopPropagation'](),
                this['pushAction'](pn),
                pn['actionQueued'] = !0x1);
            }
            ),
            XC('touchstart', pn['div'], ph => {
                ph['changedTouches']['length'] > 0x0 && (ph['stopPropagation'](),
                pn['actionQueued'] = !0x0,
                pn['actionTime'] = new Date()['getTime'](),
                pn['touchOsId'] = ph['changedTouches'][0x0]['identifier']);
            }
            ),
            XC('touchend', pn['div'], ph => {
                new Date()['getTime']() - pn['actionTime'] < yi && pn['actionQueued'] && pn['action'] == 'use' && this['pushAction'](pn),
                pn['actionQueued'] = !0x1;
            }
            ),
            XC('touchcancel', pn['div'], ph => {
                pn['actionQueued'] = !0x1;
            }
            );
        }
        const Xd = document['getElementById']('cvs');
        this['clearQueuedItemActions'] = () => {
            for (let ph = 0x0; ph < this['itemActions']['length']; ph++)
                this['itemActions'][ph]['actionQueued'] = !0x1;
            k['touch'] && Xd['focus']();
        }
        ,
        window['addEventListener']('mouseup', this['clearQueuedItemActions']),
        window['addEventListener']('focus', this['clearQueuedItemActions']),
        this['onKeyUp'] = ph => {
            const pR = ph['which'] || ph['keyCode']
              , pP = XY['inputBinds']['getBind'](D['Fullscreen']);
            pP && pR == pP['code'] && Q['toggleFullScreen']();
        }
        ,
        window['addEventListener']('keyup', this['onKeyUp']);
    }
    ['oldState'] = new bi();
    ['newState'] = new bi();
    ['frameCount'] = 0x0;
    ['dom'] = {
        'debugButton': Y('ui-debug-button'),
        'emoteButton': Y('ui-emote-button'),
        'menu': {
            'touchStyles': Y('btn-touch-styles'),
            'aimLine': Y('btn-game-aim-line')
        },
        'rareLootMessage': {
            'icon': Y('ui-perk-message-image-icon'),
            'imageWrapper': Y('ui-perk-message-image-wrapper'),
            'wrapper': Y('ui-perk-message-wrapper'),
            'name': Y('ui-perk-message-name'),
            'desc': Y('ui-perk-message-acquired')
        },
        'pickupMessage': Y('ui-pickup-message'),
        'killMessage': {
            'div': Y('ui-kills'),
            'text': Y('ui-kill-text'),
            'count': Y('ui-kill-count')
        },
        'killFeed': {
            'div': Y('ui-killfeed-contents'),
            'lines': []
        },
        'weapons': [],
        'ammo': {
            'current': Y('ui-current-clip'),
            'remaining': Y('ui-remaining-ammo'),
            'reloadButton': Y('ui-reload-button-container')
        },
        'interaction': {
            'div': Y('ui-interaction'),
            'key': Y('ui-interaction-press'),
            'text': Y('ui-interaction-description')
        },
        'health': {
            'inner': Y('ui-health-actual'),
            'depleted': Y('ui-health-depleted')
        },
        'boost': {
            'div': Y('ui-boost-counter'),
            'bars': [Y('ui-boost-counter-0')['firstElementChild'], Y('ui-boost-counter-1')['firstElementChild'], Y('ui-boost-counter-2')['firstElementChild'], Y('ui-boost-counter-3')['firstElementChild']]
        },
        'scopes': [],
        'loot': [],
        'gear': [],
        'perks': []
    };
    ['rareLootMessageQueue'] = [];
    ['uiEvents'] = [];
    ['eventListeners'] = [];
    ['clearQueuedItemActions'];
    ['onKeyUp'];
    ['itemActions'] = [];
    ['dphRtI']() {
        for (let p = 0x0; p < this['eventListeners']['length']; p++) {
            const b = this['eventListeners'][p];
            b['elem']['removeEventListener'](b['event'], b['fn']);
        }
        window['removeEventListener']('focus', this['clearQueuedItemActions']),
        window['removeEventListener']('mouseup', this['clearQueuedItemActions']),
        window['removeEventListener']('keyup', this['onKeyUp']);
    }
    ['pushAction'](p) {
        this['uiEvents']['push']({
            'action': p['action'],
            'type': p['type'],
            'data': p['data']
        });
    }
    ['flushInput']() {
        this['uiEvents'] = [];
    }
    ['Gxhh'](XT, XY, XC, Xl, Xd, Xk, XU) {
        const XW = this['newState'];
        if (XW['mobile'] = k['mobile'],
        XW['touch'] = k['touch'],
        XW['touch'])
            for (let pp = 0x0; pp < this['itemActions']['length']; pp++) {
                const pb = this['itemActions'][pp];
                if (pb['actionQueued'] && pb['action'] == 'drop') {
                    const pI = new Date()['getTime']();
                    pI - pb['actionTime'] >= yi && (this['pushAction'](pb),
                    pb['actionTime'] = pI,
                    pb['actionQueued'] = !0x1);
                }
            }
        if (XW['rareLootMessage']['ticker'] >= XW['rareLootMessage']['duration'] && this['rareLootMessageQueue']['length'] > 0x0) {
            const pj = this['rareLootMessageQueue']['shift']();
            XW['rareLootMessage']['lootType'] = pj,
            XW['rareLootMessage']['ticker'] = 0x0,
            XW['rareLootMessage']['duration'] = this['rareLootMessageQueue']['length'] > 0x0 ? 0x2 : 0x4,
            XW['rareLootMessage']['opacity'] = 0x0;
        }
        XW['rareLootMessage']['ticker'] += XT;
        const XD = XW['rareLootMessage']['ticker']
          , XG = XW['rareLootMessage']['duration'];
        XW['rareLootMessage']['opacity'] = 0x1 - e['smoothstep'](XD, XG - 0.2, XG),
        XW['pickupMessage']['ticker'] += XT;
        const XF = XW['pickupMessage']['ticker']
          , XH = XW['pickupMessage']['duration'];
        XW['pickupMessage']['opacity'] = e['smoothstep'](XF, 0x0, 0.2) * (0x1 - e['smoothstep'](XF, XH, XH + 0.2)) * (0x1 - XW['rareLootMessage']['opacity']),
        XW['killMessage']['ticker'] += XT;
        const p0 = XW['killMessage']['ticker']
          , p1 = XW['killMessage']['duration'];
        XW['killMessage']['opacity'] = (0x1 - e['smoothstep'](p0, p1 - 0.2, p1)) * (0x1 - XW['rareLootMessage']['opacity']);
        let p2 = 0x0;
        for (let pf = 0x0; pf < XW['killFeed']['length']; pf++) {
            const px = XW['killFeed'][pf];
            px['ticker'] += XT;
            const py = px['ticker'];
            px['offset'] = p2,
            px['opacity'] = e['smoothstep'](py, 0x0, 0.25) * (0x1 - e['smoothstep'](py, 0x6, 6.5)),
            p2 += e['min'](py / 0.25, 0x1),
            k['mobile'] && (px['opacity'] = py < 6.5 ? 0x1 : 0x0);
        }
        XW['health'] = XY['QDvlP']['GUi'] ? 0x0 : e['max'](XY['KkvfHn']['izX'], 0x1),
        XW['boost'] = XY['KkvfHn']['ytAUxB'],
        XW['downed'] = XY['QDvlP']['RxB'];
        let p3 = 0x0
          , p4 = null
          , p5 = !0x0;
        if (XY['canInteract'](Xk)) {
            let pg = null
              , pQ = 0x0;
            const pZ = Xk['NmwMZ']['KGHPNo']();
            for (let pE = 0x0; pE < pZ['length']; pE++) {
                const pN = pZ[pE];
                if (pN['active'] && !pN['dead'] && t['sameLayer'](pN['layer'], XY['layer'])) {
                    const pn = pN['getInteraction']();
                    if (pn) {
                        const ph = T['intersectCircle'](pN['collider'], XY['QDvlP']['NLYJ'], pn['rad'] + XY['Guz']);
                        ph && ph['pen'] >= pQ && (pg = pN,
                        pQ = ph['pen']);
                    }
                }
            }
            pg && (p3 = 0x4,
            p4 = pg,
            p5 = !0x0);
            const pq = Xd['getClosestLoot']();
            if (pq && !XY['QDvlP']['RxB']) {
                const pR = w[pq['type']]
                  , pP = XY['CNXJhh'](L['WeaponSlot']['Primary'])
                  , pA = XY['CNXJhh'](L['WeaponSlot']['Secondary'])
                  , pJ = pP && pA
                  , pS = pR['type'] != 'gun' || !pJ || XY['lYZ']() == 'gun';
                let pB = !0x1;
                (XW['touch'] && pR['type'] == 'helmet' && XY['MrYb']() == pR['level'] && pq['type'] != XY['QDvlP']['SMDXye'] || pR['type'] == 'chest' && XY['tsugJO']() == pR['level'] && pq['type'] != XY['QDvlP']['JyI']) && (pB = !0x0),
                (pS || k['uiLayout'] == k['UiLayout']['Sm']) && (p3 = 0x2,
                p4 = pq),
                p5 = pS && (!XW['touch'] || pR['type'] == 'gun' || pR['type'] == 'melee' || pR['type'] == 'outfit' || pR['type'] == 'perk' || pB);
            }
            const pM = XY['PsSK']('self_revive');
            if (XY['TvMV']['type'] == Xp['None'] && (!XY['QDvlP']['RxB'] || pM)) {
                const pc = Xl['getPlayerInfo'](XY['__id'])['teamId']
                  , pu = Xl['playerPool']['KGHPNo']();
                for (let pV = 0x0; pV < pu['length']; pV++) {
                    const pz = pu[pV];
                    if (pz['active']) {
                        const pw = Xl['getPlayerInfo'](pz['__id'])['teamId'];
                        (pz['__id'] != XY['__id'] || pM) && pc == pw && pz['QDvlP']['RxB'] && !pz['QDvlP']['GUi'] && pz['TvMV']['type'] != Xp['Revive'] && v['length'](v['sub'](pz['QDvlP']['NLYJ'], XY['QDvlP']['NLYJ'])) < L['player']['reviveRange'] && t['sameLayer'](pz['layer'], XY['layer']) && (p3 = 0x3,
                        p4 = pz,
                        p5 = !0x0);
                    }
                }
            }
            XY['TvMV']['type'] == Xp['Revive'] && XY['QDvlP']['RxB'] && !pM && (p3 = 0x0,
            p4 = null,
            p5 = !0x1),
            (XY['TvMV']['type'] == Xp['UseItem'] || XY['TvMV']['type'] == Xp['Revive'] && (!XY['QDvlP']['RxB'] || pM)) && !XC && (p3 = 0x1,
            p4 = null,
            p5 = !0x0);
        }
        XW['interaction']['type'] = p3,
        XW['interaction']['text'] = this['getInteractionText'](p3, p4, XY),
        XW['interaction']['key'] = this['getInteractionKey'](p3),
        XW['interaction']['usable'] = p5 && !XC;
        for (let pO = 0x0; pO < XY['KkvfHn']['MDx']['length']; pO++) {
            const pL = XY['KkvfHn']['MDx'][pO]
              , pv = XW['weapons'][pO];
            pv['type'] = pL['type'],
            pv['ammo'] = pL['ammo'],
            pO == L['WeaponSlot']['Throwable'] && (pv['ammo'] = XY['KkvfHn']['uYAn'][pL['type']] || 0x0);
            const pK = pv['equipped'];
            pv['equipped'] = pO == XY['KkvfHn']['hCoMzm'],
            pv['selectable'] = (pL['type'] != '' || pO == 0x0 || pO == 0x1) && !XC;
            const pm = pv['equipped'] ? 0x1 : 0.6
              , pT = pm - pv['opacity']
              , pY = e['min'](pT, e['sign'](pT) * XT / 0.15);
            pv['opacity'] = e['clamp'](pv['opacity'] + pY, 0x0, 0x1),
            k['mobile'] && (pv['opacity'] = pm),
            pv['type'] == 'bugle' && pv['ammo'] == 0x0 && (pv['opacity'] = 0.25),
            pv['ticker'] += XT,
            (!pv['equipped'] || !pK) && (pv['ticker'] = 0x0),
            this['frameCount'] < 0x2 && (pv['ticker'] = 0x1);
            const pC = e['min'](pv['ticker'] / 0.09, Math['PI'])
              , pl = Math['sin'](pC);
            pv['width'] = pl < 0.001 ? 0x0 : pl,
            k['mobile'] && (pv['width'] = 0x0);
            const pd = XU['getBind'](pv['bind']);
            pv['bindStr'] = pd ? pd['toString']() : '';
        }
        const p6 = XW['weapons'][XY['KkvfHn']['hCoMzm']]
          , p7 = w[p6['type']]
          , p8 = p6['ammo']
          , p9 = p7['type'] == 'gun' ? p7['ammoInfinite'] || XY['PsSK']('endless_ammo') && !p7['ignoreEndlessAmmo'] ? Number['MAX_VALUE'] : XY['KkvfHn']['uYAn'][p7['ammo']] : 0x0;
        XW['ammo']['current'] = p8,
        XW['ammo']['remaining'] = p9,
        XW['ammo']['displayCurrent'] = p7['type'] != 'melee',
        XW['ammo']['displayRemaining'] = p9 > 0x0;
        for (let pk = 0x0; pk < XW['scopes']['length']; pk++) {
            const pU = XW['scopes'][pk];
            pU['visible'] = XY['KkvfHn']['uYAn'][pU['type']] > 0x0,
            pU['equipped'] = pU['visible'] && XY['KkvfHn']['CRJZL'] == pU['type'],
            pU['selectable'] = pU['visible'] && !XC;
        }
        for (let pW = XY['Rlf'](), pD = 0x0; pD < XW['loot']['length']; pD++) {
            const pG = XW['loot'][pD]
              , pF = pG['count'];
            pG['count'] = XY['KkvfHn']['uYAn'][pG['type']] || 0x0,
            pG['maximum'] = L['bagSizes'][pG['type']][pW],
            pG['selectable'] = pG['count'] > 0x0 && !XC,
            pG['count'] > pF && (pG['ticker'] = 0x0),
            this['frameCount'] < 0x2 && (pG['ticker'] = 0x1),
            pG['ticker'] += XT;
            const pH = e['min'](pG['ticker'] / 0.05, Math['PI'])
              , b0 = Math['sin'](pH);
            pG['width'] = b0 < 0.001 ? 0x0 : b0,
            k['mobile'] && (pG['width'] = 0x0);
        }
        for (let b1 = 0x0; b1 < XW['gear']['length']; b1++) {
            const b2 = XW['gear'][b1];
            let b3 = '';
            b2['type'] == 'chest' ? b3 = XY['QDvlP']['JyI'] : b2['type'] == 'helmet' ? b3 = XY['QDvlP']['SMDXye'] : b2['type'] == 'backpack' && (b3 = XY['QDvlP']['wYo']) == 'backpack00' && (b3 = '');
            const b4 = b2['item'];
            b2['item'] = b3,
            b2['selectable'] = b3 != '' && !XC,
            b4 != b2['item'] && (b2['ticker'] = 0x0),
            this['frameCount'] < 0x2 && (b2['ticker'] = 0x1),
            b2['ticker'] += XT;
            const b5 = e['min'](b2['ticker'] / 0.05, Math['PI'])
              , b6 = Math['sin'](b5);
            b2['width'] = b6 < 0.001 ? 0x0 : b6,
            k['mobile'] && (b2['width'] = 0x0);
        }
        for (let b7 = 0x0; b7 < XW['perks']['length']; b7++) {
            const b8 = XW['perks'][b7];
            if (XY['perks']['length'] > b7) {
                const b9 = XY['perks'][b7];
                b8['type'] = b9['type'],
                b8['droppable'] = b9['droppable'],
                b9['isNew'] && (b8['ticker'] = 0x0),
                this['frameCount'] < 0x2 && (b8['ticker'] = 0x1),
                b8['ticker'] += XT;
                const bX = e['min'](b8['ticker'] / 0.05, Math['PI'])
                  , bp = Math['sin'](bX);
                b8['width'] = bp < 0.001 ? 0x0 : bp,
                k['mobile'] && (b8['width'] = 0x0),
                b8['pulse'] = !k['mobile'] && b8['ticker'] < 0x4;
            } else
                b8['type'] = '';
        }
        const pX = At(this['oldState'], this['newState'], this['frameCount']++ == 0x0);
        this['render'](pX, this['newState']),
        Lt(this['newState'], this['oldState']);
    }
    ['render'](p, b) {
        const XT = this['dom'];
        if (p['touch'] && (XT['interaction']['key']['style']['backgroundImage'] = b['touch'] ? 'url(\x27img/gui/tap.svg\x27)' : 'none',
        b['touch'] && (XT['interaction']['key']['innerHTML'] = ''),
        XT['menu']['touchStyles']['style']['display'] = b['touch'] ? 'flex' : 'none',
        XT['menu']['aimLine']['style']['display'] = b['touch'] ? 'block' : 'none',
        XT['ammo']['reloadButton']['style']['display'] = b['touch'] ? 'block' : 'none',
        XT['emoteButton']['style']['display'] = b['touch'] ? 'block' : 'none',
        XT['debugButton'] && (XT['debugButton']['style']['display'] = b['touch'] ? 'block' : 'none')),
        p['rareLootMessage']['lootType']) {
            const XY = b['rareLootMessage']['lootType']
              , XC = w[XY];
            if (XC && XC['type'] == 'xp') {
                const XU = this['localization']['translate']('game-xp-drop-desc');
                XT['rareLootMessage']['desc']['innerHTML'] = '+' + XC['xp'] + '\x20' + XU;
            } else
                XT['rareLootMessage']['desc']['innerHTML'] = '';
            const Xl = XC?.['lootImg']?.['border'] ? 'url(img/loot/' + XC['lootImg']['border']['slice'](0x0, -0x4) + '.svg)' : 'none';
            XT['rareLootMessage']['imageWrapper']['style']['backgroundImage'] = Xl;
            const Xd = Q['getSvgFromGameType'](XY);
            XT['rareLootMessage']['icon']['style']['backgroundImage'] = Xd ? 'url(\x27' + Xd + '\x27)' : 'none';
            const Xk = this['localization']['translate']('game-' + XY);
            XT['rareLootMessage']['name']['innerHTML'] = Xk;
        }
        p['rareLootMessage']['opacity'] && (XT['rareLootMessage']['wrapper']['style']['opacity'] = String(b['rareLootMessage']['opacity'])),
        p['pickupMessage']['message'] && (XT['pickupMessage']['innerHTML'] = b['pickupMessage']['message']),
        p['pickupMessage']['opacity'] && (XT['pickupMessage']['style']['opacity'] = String(b['pickupMessage']['opacity'])),
        (p['killMessage']['text'] || p['killMessage']['count']) && (XT['killMessage']['text']['innerHTML'] = b['killMessage']['text'],
        XT['killMessage']['count']['innerHTML'] = b['killMessage']['count']),
        p['killMessage']['opacity'] && (XT['killMessage']['div']['style']['opacity'] = String(b['killMessage']['opacity']));
        for (let XW = 0x0; XW < p['killFeed']['length']; XW++) {
            const XD = p['killFeed'][XW]
              , XG = XT['killFeed']['lines'][XW]
              , XF = b['killFeed'][XW];
            if (XD['text'] && (XG['text']['innerHTML'] = XF['text']),
            XD['offset']) {
                const XH = k['uiLayout'] != k['UiLayout']['Sm'] || k['tablet'] ? 0x23 : 0xf;
                XG['line']['style']['top'] = Math['floor'](XF['offset'] * XH) + 'px';
            }
            XD['color'] && (XG['text']['style']['color'] = XF['color']),
            XD['opacity'] && (XG['line']['style']['opacity'] = String(XF['opacity']));
        }
        if (p['health'] || p['downed']) {
            const p0 = [{
                'health': 0x64,
                'color': [0xb3, 0xb3, 0xb3]
            }, {
                'health': 0x64,
                'color': [0xff, 0xff, 0xff]
            }, {
                'health': 0x4b,
                'color': [0xff, 0xff, 0xff]
            }, {
                'health': 0x4b,
                'color': [0xff, 0x9e, 0x9e]
            }, {
                'health': 0x19,
                'color': [0xff, 0x52, 0x52]
            }, {
                'health': 0x19,
                'color': [0xff, 0x0, 0x0]
            }, {
                'health': 0x0,
                'color': [0xff, 0x0, 0x0]
            }];
            let p1 = 0x0;
            const p2 = Math['ceil'](b['health']);
            for (; p0[p1]['health'] > p2 && p1 < p0['length'] - 0x1; )
                p1++;
            const p3 = p0[e['max'](p1 - 0x1, 0x0)]
              , p4 = p0[p1]
              , p5 = e['delerp'](b['health'], p3['health'], p4['health']);
            let p6 = [Math['floor'](e['lerp'](p5, p3['color'][0x0], p4['color'][0x0])), Math['floor'](e['lerp'](p5, p3['color'][0x1], p4['color'][0x1])), Math['floor'](e['lerp'](p5, p3['color'][0x2], p4['color'][0x2]))];
            b['downed'] && (p6 = [0xff, 0x0, 0x0]),
            XT['health']['inner']['style']['backgroundColor'] = 'rgba(' + p6[0x0] + ',\x20' + p6[0x1] + ',\x20' + p6[0x2] + ',\x201.0)',
            XT['health']['inner']['style']['width'] = b['health'] + '%',
            XT['health']['depleted']['style']['width'] = b['health'] + '%',
            XT['health']['depleted']['style']['display'] = b['health'] > 0x0 ? 'block' : 'none',
            b['health'] > 0x19 ? XT['health']['inner']['classList']['remove']('ui-bar-danger') : XT['health']['inner']['classList']['add']('ui-bar-danger');
        }
        if (p['boost']) {
            const p7 = L['player']['boostBreakpoints'];
            let p8 = 0x0;
            for (let p9 = 0x0; p9 < p7['length']; p9++)
                p8 += p7[p9];
            for (let pX = b['boost'] / 0x64, pp = 0x0; pp < XT['boost']['bars']['length']; pp++) {
                const pb = p7[pp] / p8
                  , pI = e['clamp'](pX / pb, 0x0, 0x1);
                pX = e['max'](pX - pb, 0x0),
                XT['boost']['bars'][pp]['style']['width'] = pI * 0x64 + '%';
            }
            XT['boost']['div']['style']['opacity'] = String(b['boost'] == 0x0 ? 0x0 : 0x1);
        }
        p['interaction']['type'] && (XT['interaction']['div']['style']['display'] = b['interaction']['type'] == 0x0 ? 'none' : 'flex'),
        p['interaction']['text'] && (XT['interaction']['text']['innerHTML'] = b['interaction']['text']),
        p['interaction']['key'] && (XT['interaction']['key']['innerHTML'] = b['touch'] ? '' : b['interaction']['key'],
        XT['interaction']['key']['className'] = XT['interaction']['key']['innerHTML']['length'] > 0x1 ? 'ui-interaction-small' : 'ui-interaction-large'),
        p['interaction']['usable'] && (XT['interaction']['key']['style']['display'] = b['interaction']['usable'] ? 'block' : 'none');
        for (let pj = 0x0; pj < p['weapons']['length']; pj++) {
            const pf = p['weapons'][pj]
              , px = XT['weapons'][pj]
              , py = b['weapons'][pj];
            if (pf['type']) {
                let pg = ''
                  , pQ = '';
                const pZ = w[py['type']];
                pZ && (pg = this['localization']['translate']('game-hud-' + py['type']) || this['localization']['translate']('game-' + py['type']),
                pQ = Q['getCssTransformFromGameType'](py['type'])),
                px['type']['innerHTML'] = pg,
                px['image']['src'] = Q['getSvgFromGameType'](py['type']),
                px['image']['style']['display'] = pZ ? 'inline' : 'none',
                px['image']['style']['transform'] = pQ;
            }
            if (pf['equipped'] && (px['div']['style']['backgroundColor'] = py['equipped'] ? 'rgba(0,\x200,\x200,\x200.4)' : 'rgba(0,\x200,\x200,\x200)'),
            pf['selectable'] && (px['div']['style']['pointerEvents'] = py['type'] != '' || py['selectable'] ? 'auto' : 'none'),
            pf['width']) {
                const pq = e['lerp'](py['width'], 83.33, 0x64);
                px['div']['style']['width'] = pq + '%';
            }
            pf['opacity'] && (px['div']['style']['opacity'] = String(py['opacity'])),
            pf['ammo'] && px['ammo'] && (px['ammo']['innerHTML'] = String(py['ammo']),
            px['ammo']['style']['display'] = py['ammo'] > 0x0 ? 'block' : 'none'),
            pf['bindStr'] && (px['number']['innerHTML'] = py['bindStr'][0x0] || '');
        }
        if (p['ammo']['current']) {
            const pM = b['ammo']['current'];
            XT['ammo']['current']['innerHTML'] = String(pM),
            XT['ammo']['current']['style']['color'] = pM > 0x0 ? 'white' : 'red';
        }
        if (p['ammo']['remaining']) {
            const pE = b['ammo']['remaining'];
            XT['ammo']['remaining']['innerHTML'] = String(pE == Number['MAX_VALUE'] ? '&#8734;' : pE),
            XT['ammo']['remaining']['style']['color'] = pE != 0x0 ? 'white' : 'red';
        }
        p['ammo']['displayCurrent'] && (XT['ammo']['current']['style']['opacity'] = String(b['ammo']['displayCurrent'] ? 0x1 : 0x0)),
        p['ammo']['displayRemaining'] && (XT['ammo']['remaining']['style']['opacity'] = String(b['ammo']['displayRemaining'] ? 0x1 : 0x0),
        XT['ammo']['reloadButton']['style']['opacity'] = String(b['ammo']['displayRemaining'] ? 0x1 : 0x0));
        for (let pN = 0x0; pN < p['scopes']['length']; pN++) {
            const pn = p['scopes'][pN]
              , ph = XT['scopes'][pN]
              , pR = b['scopes'][pN];
            pn['visible'] && (pR['visible'] ? ph['div']['classList']['remove']('ui-hidden') : ph['div']['classList']['add']('ui-hidden')),
            pn['equipped'] && (pR['equipped'] ? (ph['div']['classList']['add']('ui-zoom-active'),
            ph['div']['classList']['remove']('ui-zoom-inactive')) : (ph['div']['classList']['remove']('ui-zoom-active'),
            ph['div']['classList']['add']('ui-zoom-inactive'))),
            pn['selectable'] && (ph['div']['style']['pointerEvents'] = pR['selectable'] ? 'auto' : 'none');
        }
        for (let pP = 0x0; pP < p['loot']['length']; pP++) {
            const pA = p['loot'][pP]
              , pJ = XT['loot'][pP]
              , pS = b['loot'][pP];
            if (pA && pJ && pS) {
                if ((pA['count'] || pA['maximum']) && (pJ['count']['innerHTML'] = String(pS['count']),
                pJ['div']['style']['opacity'] = String(w[pJ['lootType']]['special'] && pS['count'] == 0x0 ? 0x0 : pS['count'] > 0x0 ? 0x1 : 0.25),
                pJ['div']['style']['color'] = pS['count'] == pS['maximum'] ? '#ff9900' : '#ffffff'),
                pA['width']) {
                    const pB = 0x1 + pS['width'] * 0.33
                      , pc = 'scale(' + pB + ',\x20' + pB + ')';
                    pJ['image']['style']['transform'] = pc,
                    pJ['overlay'] && (pJ['overlay']['style']['transform'] = pc);
                }
                pA['selectable'] && (pJ['div']['style']['pointerEvents'] = pS['selectable'] ? 'auto' : 'none');
            }
        }
        for (let pu = 0x0; pu < p['gear']['length']; pu++) {
            const pV = p['gear'][pu]
              , pz = XT['gear'][pu]
              , pw = b['gear'][pu];
            if (pV['item']) {
                const pO = pw['item'] ? w[pw['item']] : null
                  , pL = pO ? pO['level'] : 0x0;
                pz['div']['style']['display'] = pO ? 'block' : 'none',
                pz['level']['innerHTML'] = this['localization']['translate']('game-level-' + pL),
                pz['level']['style']['color'] = pL >= 0x3 ? '#ff9900' : '#ffffff',
                pz['image']['src'] = Q['getSvgFromGameType'](pw['item']);
            }
            if (pV['selectable'] && (pz['div']['style']['pointerEvents'] = pw['selectable'] ? 'auto' : 'none'),
            pV['width']) {
                const pv = 0x1 + pw['width'] * 0.33;
                let pK = 'scale(' + pv + ',\x20' + pv + ')';
                const pm = w[pw['item']];
                pm?.['lootImg']['rot'] !== void 0x0 && (pK += '\x20rotate(' + pm['lootImg']['rot'] + 'rad)'),
                pz['image']['style']['transform'] = pK;
            }
        }
        for (let pT = 0x0; pT < p['perks']['length']; pT++) {
            const pY = p['perks'][pT]
              , pC = XT['perks'][pT]
              , pl = b['perks'][pT];
            if (pY['type'] && (pC['perkType'] = pl['type'],
            pC['divTitle']['innerHTML'] = this['localization']['translate']('game-' + pl['type']),
            pC['divDesc']['innerHTML'] = this['localization']['translate']('game-' + pl['type'] + '-desc'),
            pC['div']['style']['display'] = pl['type'] ? 'block' : 'none',
            pC['image']['src'] = pl['type'] ? Q['getSvgFromGameType'](pl['type']) : ''),
            pY['droppable'] && (pl['droppable'] ? (pC['div']['classList']['add']('ui-outline-hover'),
            pC['div']['classList']['remove']('ui-perk-no-drop')) : (pC['div']['classList']['remove']('ui-outline-hover'),
            pC['div']['classList']['add']('ui-perk-no-drop'))),
            pY['pulse'] && (pl['pulse'] ? pC['div']['classList']['add']('ui-perk-pulse') : pC['div']['classList']['remove']('ui-perk-pulse')),
            pY['width']) {
                const pd = 0x1 + pl['width'] * 0.33;
                pC['image']['style']['transform'] = 'scale(' + pd + ',\x20' + pd + ')';
            }
        }
    }
    ['displayPickupMessage'](p) {
        const b = this['newState']['pickupMessage'];
        b['message'] = this['getPickupMessageText'](p),
        b['ticker'] = 0x0,
        b['duration'] = 0x3;
    }
    ['displayKillMessage'](p, b) {
        const XT = this['newState']['killMessage'];
        XT['text'] = p,
        XT['count'] = b,
        XT['ticker'] = 0x0,
        XT['duration'] = 0x7;
    }
    ['hideKillMessage']() {
        this['newState']['killMessage']['ticker'] = e['max'](this['newState']['killMessage']['ticker'], this['newState']['killMessage']['duration'] - 0.2);
    }
    ['addRareLootMessage'](p, b) {
        b && (this['newState']['rareLootMessage']['ticker'] = this['newState']['rareLootMessage']['duration'],
        this['rareLootMessageQueue'] = []),
        this['rareLootMessageQueue']['push'](p);
    }
    ['removeRareLootMessage'](p) {
        const b = this['rareLootMessageQueue']['indexOf'](p);
        b >= 0x0 && this['rareLootMessageQueue']['splice'](b, 0x1),
        this['newState']['rareLootMessage']['lootType'] == p && (this['newState']['rareLootMessage']['ticker'] = this['newState']['rareLootMessage']['duration']);
    }
    ['getRareLootMessageText'](p) {
        return w[p] ? 'Acquired\x20perk:\x20' + this['localization']['translate']('game-' + p) : '';
    }
    ['addKillFeedMessage'](p, b) {
        const XT = this['newState']['killFeed']
          , XY = XT[XT['length'] - 0x1];
        XY['text'] = p,
        XY['color'] = b,
        XY['ticker'] = 0x0,
        XT['sort']( (XC, Xl) => XC['ticker'] - Xl['ticker']);
    }
    ['getKillFeedText'](p, b, XT, XY, XC) {
        switch (XY) {
        case Xg['Player']:
            return b + '\x20' + this['localization']['translate'](XC ? 'game-knocked-out' : 'game-killed') + '\x20' + p + '\x20' + this['localization']['translate']('game-with') + '\x20' + this['localization']['translate']('game-' + XT);
        case Xg['Bleeding']:
            {
                const Xl = this['localization']['translate'](b ? 'game-finally-killed' : 'game-finally-bled-out');
                return b ? b + '\x20' + Xl + '\x20' + p : p + '\x20' + Xl;
            }
        case Xg['Gas']:
            {
                let Xd, Xk;
                return XC ? (Xd = this['localization']['translate']('game-the-red-zone'),
                Xk = this['localization']['translate']('game-knocked-out')) : Xk = this['localization']['translate'](b ? 'game-finally-killed' : 'game-died-outside'),
                Xd ? Xd + '\x20' + Xk + '\x20' + p : p + '\x20' + Xk;
            }
        case Xg['Airdrop']:
            {
                const XU = a[XT]
                  , XW = this['localization']['translate']('game-the-air-drop')
                  , XD = XC ? this['localization']['translate']('game-knocked-out') : XU && !XU['airdropCrate'] ? this['localization']['translate']('game-killed') : this['localization']['translate']('game-crushed');
                return XW + '\x20' + XD + '\x20' + p;
            }
        case Xg['Airstrike']:
            {
                const XG = this['localization']['translate'](XC ? 'game-knocked-out' : 'game-killed');
                return b ? b + '\x20' + XG + '\x20' + p + '\x20' + this['localization']['translate']('game-with') + '\x20' + this['localization']['translate']('game-an-air-strike') : this['localization']['translate']('game-the-air-strike') + '\x20' + XG + '\x20' + p;
            }
        default:
            return '';
        }
    }
    ['getKillFeedColor'](p, b, XT, XY) {
        return XY ? '#efeeee' : p == b ? '#d1777c' : p == XT ? '#00bfff' : '#efeeee';
    }
    ['getRoleKillFeedColor'](p, b, XT) {
        const XY = w[p];
        return XY?.['killFeed']?.['color'] ? XY['killFeed']['color'] : Q['colorToHexString'](XT['getTeamColor'](b));
    }
    ['getRoleTranslation'](p, b) {
        let XT = 'game-' + p;
        return p == 'leader' && (XT = b == 0x1 ? 'game-red-leader' : 'game-blue-leader'),
        this['localization']['translate'](XT);
    }
    ['getRoleAnnouncementText'](p, b) {
        return this['localization']['translate']('game-youve-been-promoted-to') + '\x20' + this['getRoleTranslation'](p, b) + '!';
    }
    ['getRoleAssignedKillFeedText'](p, b, XT) {
        const XY = this['getRoleTranslation'](p, b);
        return XT + '\x20' + this['localization']['translate']('game-promoted-to') + '\x20' + XY + '!';
    }
    ['getRoleKilledKillFeedText'](p, b, XT) {
        const XY = this['getRoleTranslation'](p, b);
        return XT ? XT + '\x20' + this['localization']['translate']('game-killed') + '\x20' + XY + '!' : XY + '\x20' + this['localization']['translate']('game-is-dead') + '!';
    }
    ['getKillText'](b, XT, XY, XC, Xl, Xd, Xk, XU, XW) {
        const XD = XC && !Xl
          , XG = XW ? b : this['localization']['translate']('game-you')['toUpperCase']()
          , XF = XD ? 'game-knocked-out' : XY ? 'game-killed' : 'game-finally-killed'
          , XH = this['localization']['translate'](XF)
          , p0 = Xd ? XW ? this['localization']['translate']('game-themselves') : this['localization']['translate']('game-yourself')['toUpperCase']() : XT
          , p1 = this['localization']['translate'](XU == L['DamageType']['Airstrike'] ? 'game-an-air-strike' : 'game-' + Xk)
          , p2 = this['localization']['translate']('game-with');
        return p1 && (XY || XD) ? XG + '\x20' + XH + '\x20' + p0 + '\x20' + p2 + '\x20' + p1 : XG + '\x20' + XH + '\x20' + p0;
    }
    ['getKillCountText'](p) {
        return p + '\x20' + this['localization']['translate'](p != 0x1 ? 'game-kills' : 'game-kill');
    }
    ['getDownedText'](p, b, XT, XY, XC) {
        const Xl = XC ? b : this['localization']['translate']('game-you')['toUpperCase']();
        let Xd = p;
        Xd || (XY == L['DamageType']['Gas'] ? Xd = this['localization']['translate']('game-the-red-zone') : XY == L['DamageType']['Airdrop'] ? Xd = this['localization']['translate']('game-the-air-drop') : XY == L['DamageType']['Airstrike'] && (Xd = this['localization']['translate']('game-the-air-strike')));
        let Xk = this['localization']['translate']('game-' + XT);
        p && XY == L['DamageType']['Airstrike'] && (Xk = this['localization']['translate']('game-an-air-strike'));
        const XU = this['localization']['translate']('game-with');
        return Xk ? Xd + '\x20knocked\x20' + Xl + '\x20out\x20' + XU + '\x20' + Xk : Xd + '\x20knocked\x20' + Xl + '\x20out';
    }
    ['getPickupMessageText'](p) {
        const b = {
            [XQ['Full']]: 'game-not-enough-space',
            [XQ['AlreadyOwned']]: 'game-item-already-owned',
            [XQ['AlreadyEquipped']]: 'game-item-already-equipped',
            [XQ['BetterItemEquipped']]: 'game-better-item-equipped',
            [XQ['GunCannotFire']]: 'game-gun-cannot-fire'
        }
          , XT = b[p] || b[XQ['Full']];
        return this['localization']['translate'](XT);
    }
    ['getInteractionText'](p, b, XT) {
        switch (p) {
        case 0x0:
            return '';
        case 0x1:
            return this['localization']['translate']('game-cancel');
        case 0x3:
            return b && XT && b == XT && XT['PsSK']('self_revive') ? this['localization']['translate']('game-revive-self') : this['localization']['translate']('game-revive-teammate');
        case 0x4:
            {
                const XY = b['getInteraction']();
                return this['localization']['translate'](XY['action']) + '\x20' + this['localization']['translate'](XY['object']);
            }
        case 0x2:
            {
                const XC = b;
                let Xl = this['localization']['translate']('game-' + XC['type']) || XC['type'];
                return XC['count'] > 0x1 && (Xl += '\x20(' + XC['count'] + ')'),
                Xl;
            }
        default:
            return '';
        }
    }
    ['getInteractionKey'](p) {
        let b = null;
        switch (p) {
        case 0x1:
            b = this['inputBinds']['getBind'](D['Cancel']);
            break;
        case 0x2:
            b = this['inputBinds']['getBind'](D['Loot']) || this['inputBinds']['getBind'](D['Interact']);
            break;
        case 0x4:
            b = this['inputBinds']['getBind'](D['Use']) || this['inputBinds']['getBind'](D['Interact']);
            break;
        case 0x3:
            b = this['inputBinds']['getBind'](D['Revive']) || this['inputBinds']['getBind'](D['Interact']);
            break;
        case 0x0:
        default:
            b = this['inputBinds']['getBind'](D['Use']);
        }
        return b ? b['toString']() : '<Unbound>';
    }
}
function Ms() {
    const p = {
        'ui-loot-bandage': 'img/loot/loot-medical-bandage.svg',
        'ui-loot-healthkit': 'img/loot/loot-medical-healthkit.svg',
        'ui-loot-soda': 'img/loot/loot-medical-soda.svg',
        'ui-loot-painkiller': 'img/loot/loot-medical-pill.svg',
        'ui-loot-9mm': 'img/loot/loot-ammo-box.svg',
        'ui-loot-12gauge': 'img/loot/loot-ammo-box.svg',
        'ui-loot-762mm': 'img/loot/loot-ammo-box.svg',
        'ui-loot-556mm': 'img/loot/loot-ammo-box.svg',
        'ui-loot-50AE': 'img/loot/loot-ammo-box.svg',
        'ui-loot-308sub': 'img/loot/loot-ammo-box.svg',
        'ui-loot-flare': 'img/loot/loot-ammo-box.svg',
        'ui-loot-45acp': 'img/loot/loot-ammo-box.svg'
    };
    for (const [b,XT] of Object['entries'](p))
        Y(b)['getElementsByClassName']('ui-loot-image')[0x0]['src'] = XT;
    Y('mag-glass-white')['src'] = 'img/gui/mag-glass.svg',
    Y('ui-minimize-img')['src'] = 'img/gui/minimize.svg';
}
class Ts {
    constructor(b, XT, XY, XC, Xl, Xd, Xk, XU, XW, XD, XG, XF) {
        this['cehf'] = b,
        this['GcFc'] = XT,
        this['nXcQdw'] = XY,
        this['sfj'] = XC,
        this['oTycZ'] = Xl,
        this['zsT'] = Xd,
        this['zie'] = Xk,
        this['nCO'] = XU,
        this['dGucoK'] = XW,
        this['respawns'] = XD,
        this['onJoin'] = XG,
        this['onQuit'] = XF,
        this['cehf'] = b,
        this['GcFc'] = XT,
        this['nCO'] = XU,
        this['nXcQdw'] = XY,
        this['sfj'] = XC,
        this['oTycZ'] = Xl,
        this['zsT'] = Xd,
        this['zie'] = Xk,
        this['dGucoK'] = XW;
    }
    ['initialized'] = !0x1;
    ['teamMode'] = Xj['Solo'];
    ['victoryMusic'] = null;
    ['hwpWO'] = null;
    ['connecting'] = !0x1;
    ['connected'] = !0x1;
    ['XpRJqf'];
    ['Solrb'];
    ['eBew'];
    ['tetX'];
    ['qfLfG'];
    ['xdZjN'];
    ['MTkCb'];
    ['NDV'];
    ['ACF'];
    ['hpFatr'];
    ['UYCd'];
    ['NfHGD'];
    ['NgtzXw'];
    ['jLzt'];
    ['QfnjIN'];
    ['NOCRp'];
    ['AqOEo'];
    ['cfYfi'];
    ['PqZq'];
    ['DxRdO'];
    ['tCoR'];
    ['GsClp'];
    ['pOSlOC'];
    ['rjYbuw'];
    ['OSRLcj'];
    ['HTzAB'];
    ['FtXCz'];
    ['ONPnmU'];
    ['LSU'];
    ['vQHD'];
    ['LzLNO'];
    ['PkRzLK'];
    ['TmD'];
    ['xBFht'];
    ['vCsfL'];
    ['Lnf'];
    ['Nqo'];
    ['kEfsQ'];
    ['QwZT'];
    ['OPKT'];
    ['hIBMF'];
    ['seq'];
    ['seqInFlight'];
    ['seqSendTime'];
    ['pings'];
    ['debugPingTime'];
    ['lastUpdateTime'];
    ['updateIntervals'];
    ['tryJoinGame'](p, b, XT, XY, XC) {
        if (!this['connecting'] && !this['connected'] && !this['initialized']) {
            this['hwpWO'] && (this['hwpWO']['onerror'] = function() {}
            ,
            this['hwpWO']['onopen'] = function() {}
            ,
            this['hwpWO']['onmessage'] = function() {}
            ,
            this['hwpWO']['onclose'] = function() {}
            ,
            this['hwpWO']['close'](),
            this['hwpWO'] = null),
            this['connecting'] = !0x0,
            this['connected'] = !0x1;
            try {
                this['hwpWO'] = new WebSocket(p),
                this['hwpWO']['binaryType'] = 'arraybuffer',
                this['hwpWO']['onerror'] = Xl => {
                    this['hwpWO']?.['close']();
                }
                ,
                this['hwpWO']['onopen'] = () => {
                    this['connecting'] = !0x1,
                    this['connected'] = !0x0;
                    const Xl = this['sfj']['get']('playerName')
                      , Xd = new XZ();
                    Xd['protocol'] = L['protocolVersion'],
                    Xd['matchPriv'] = b,
                    Xd['loadoutPriv'] = XT,
                    Xd['questPriv'] = XY,
                    Xd['name'] = Xl,
                    Xd['useTouch'] = k['touch'],
                    Xd['isMobile'] = k['mobile'] || window['mobile'],
                    Xd['bot'] = !0x1,
                    Xd['loadout'] = this['sfj']['get']('loadout'),
                    this['onRgH'](Xq['Join'], Xd, 0x2000);
                }
                ,
                this['hwpWO']['onmessage'] = Xl => {
                    const Xd = new XM(Xl['data']);
                    for (; ; ) {
                        const Xk = Xd['deserializeMsgType']();
                        if (Xk == Xq['None'])
                            break;
                        this['hMOHjl'](Xk, Xd['getStream']());
                    }
                }
                ,
                this['hwpWO']['onclose'] = () => {
                    const Xl = this['cfYfi']?.['displayingStats']
                      , Xd = this['connecting']
                      , Xk = this['connected'];
                    if (this['connecting'] = !0x1,
                    this['connected'] = !0x1,
                    Xd)
                        XC();
                    else {
                        if (Xk && !this['LSU'] && !Xl) {
                            const XU = this['FtXCz'] || 'index-host-closed';
                            this['onQuit'](XU);
                        }
                    }
                }
                ;
            } catch (Xl) {
                console['error'](Xl),
                this['connecting'] = !0x1,
                this['connected'] = !0x1,
                XC();
            }
        }
    }
    ['init']() {
        this['rjYbuw'] = this['cehf']['renderer']['type'] == R['CANVAS'],
        this['XpRJqf'] = new gs(this['oTycZ'],this['sfj']),
        this['Solrb'] = new Ui(),
        this['eBew'] = new ar(this,this['rjYbuw']),
        this['tetX'] = new Ji(this['eBew']),
        this['qfLfG'] = new Yi(),
        this['xdZjN'] = new Zi(this['qfLfG']),
        this['MTkCb'] = new ir(),
        this['NDV'] = new Ba(),
        this['ACF'] = new $a(),
        this['hpFatr'] = new os(),
        this['UYCd'] = new Wa(),
        this['NfHGD'] = new is(this['GcFc']),
        this['NgtzXw'] = new Ea(),
        this['jLzt'] = new rr(),
        this['QfnjIN'] = new Fa(),
        this['NOCRp'] = new Za(),
        this['AqOEo'] = new va(this['rjYbuw']),
        this['cfYfi'] = new vs(this,this['GcFc'],this['tetX'],this['NfHGD'],this['nXcQdw'],this['rjYbuw'],this['XpRJqf'],this['zsT'],this['zie']),
        this['PqZq'] = new Is(this['nXcQdw'],this['zsT']),
        this['DxRdO'] = new ba(this['GcFc'],this['cfYfi'],this['MTkCb'],this['Solrb'],this['xdZjN']),
        this['tCoR'] = new ls();
        const p = {
            [X2['Player']]: this['MTkCb']['playerPool'],
            [X2['Obstacle']]: this['xdZjN']['NmwMZ'],
            [X2['Loot']]: this['NOCRp']['lootPool'],
            [X2['DeadBody']]: this['QfnjIN']['deadBodyPool'],
            [X2['Building']]: this['xdZjN']['nNUjss'],
            [X2['Structure']]: this['xdZjN']['JCfHy'],
            [X2['Decal']]: this['qfLfG']['decalPool'],
            [X2['Projectile']]: this['hpFatr']['projectilePool'],
            [X2['Smoke']]: this['jLzt']['LbSzdS'],
            [X2['Airdrop']]: this['NgtzXw']['airdropPool']
        };
        this['GsClp'] = new Qi();
        for (const XT in p)
            p['hasOwnProperty'](XT) && this['GsClp']['ACE'](XT, p[XT]);
        this['pOSlOC'] = new r();
        const b = [this['xdZjN']['display']['ground'], this['eBew']['layers'][0x0], this['eBew']['ground'], this['eBew']['layers'][0x1], this['eBew']['layers'][0x2], this['eBew']['layers'][0x3], this['pOSlOC'], this['AqOEo']['gasRenderer']['display'], this['XpRJqf']['container'], this['DxRdO']['container'], this['cfYfi']['container'], this['cfYfi']['Skv']['container'], this['DxRdO']['indContainer']];
        for (let XY = 0x0; XY < b['length']; XY++) {
            const XC = b[XY];
            XC && (XC['interactiveChildren'] = !0x1,
            this['cehf']['stage']['addChild'](XC));
        }
        this['FtXCz'] = '',
        this['ONPnmU'] = !0x1,
        this['LSU'] = !0x1,
        this['vQHD'] = !0x1,
        this['LzLNO'] = 0x0,
        this['PkRzLK'] = new XE(),
        this['TmD'] = 0x0,
        this['xBFht'] = 0x0,
        this['OSRLcj'] = !0x1,
        this['HTzAB'] = 0x0,
        this['vCsfL'] = 0x0,
        this['Lnf'] = 0x0,
        this['Nqo'] = null,
        this['kEfsQ'] = !0x1,
        this['QwZT'] = 0x1,
        this['OPKT'] = 0x1,
        this['hIBMF'] = !0x1,
        this['seq'] = 0x0,
        this['seqInFlight'] = !0x1,
        this['seqSendTime'] = 0x0,
        this['pings'] = [],
        this['updateIntervals'] = [],
        this['lastUpdateTime'] = 0x0,
        this['debugPingTime'] = 0x0,
        this['Solrb']['UIu'](this['sfj']['get']('screenShake')),
        this['MTkCb']['anonPlayerNames'] = this['sfj']['get']('anonPlayerNames'),
        this['initialized'] = !0x0;
    }
    ['free']() {
        if (this['hwpWO'] && (this['hwpWO']['onmessage'] = function() {}
        ,
        this['hwpWO']['close'](),
        this['hwpWO'] = null),
        this['connecting'] = !0x1,
        this['connected'] = !0x1,
        this['initialized'])
            for (this['initialized'] = !0x1,
            this['OSRLcj'] = !0x1,
            this['HTzAB'] = 0x0,
            this['DxRdO']['dphRtI'](),
            this['PqZq']['dphRtI'](),
            this['cfYfi']['dphRtI'](),
            this['AqOEo']['dphRtI'](),
            this['NgtzXw']['dphRtI'](),
            this['NfHGD']['dphRtI'](),
            this['xdZjN']['dphRtI'](),
            this['tetX']['dphRtI'](),
            this['eBew']['dphRtI'](),
            this['oTycZ']['dphRtI'](),
            this['GcFc']['stopAll'](); this['cehf']['stage']['children']['length'] > 0x0; ) {
                const p = this['cehf']['stage']['children'][0x0];
                this['cehf']['stage']['removeChild'](p),
                p['destroy']({
                    'children': !0x0
                });
            }
    }
    ['warnPageReload']() {
        return this['initialized'] && this['ONPnmU'] && !this['vQHD'] && !this['cfYfi']['displayingStats'];
    }
    ['update'](XT) {
        //global variables
        window.activeId = this['Lnf'];
        window.spectating = this['vQHD'];
        const XY = this['jLzt']['yNawk']
          , XC = {};
        this['ONPnmU'] && (this['TmD'] += XT),
        this['MTkCb']['Gxhh'](XT, this['Lnf'], this['teamMode'], this['eBew'], this['tetX'], this['Solrb'], this['xdZjN'], this['zsT'], this['GcFc'], this['PqZq'], this['DxRdO']['wheelKeyTriggered'], this['cfYfi']['displayingStats'], this['vQHD']),
        this['updateAmbience'](),
        this['Solrb']['NLYJ'] = v['copy'](this['Nqo']['NLYJ']),
        this['Solrb']['CgpTt']();
        const Xl = this['Nqo']['ulnm']()
          , Xd = e['min'](this['Solrb']['pmhI'], this['Solrb']['lZjK'])
          , Xk = e['max'](this['Solrb']['pmhI'], this['Solrb']['lZjK'])
          , XU = e['max'](Xd * (0x10 / 0x9), Xk);
        this['Solrb']['QwZT'] = XU * 0.5 / (Xl * this['Solrb']['xQaJqu']);
        const XW = this['Nqo']['zoomFast'] ? 0x3 : 0x2
          , XD = this['Nqo']['zoomFast'] ? 0x3 : 1.4
          , XG = this['Solrb']['QwZT'] > this['Solrb']['BsPd'] ? XW : XD;
        this['Solrb']['BsPd'] = e['lerp'](XT * XG, this['Solrb']['BsPd'], this['Solrb']['QwZT']),
        this['GcFc']['cameraPos'] = v['copy'](this['Solrb']['NLYJ']),
        this['oTycZ']['keyPressed'](H['Escape']) && this['cfYfi']['toggleEscMenu'](),
        (this['zsT']['isBindPressed'](D['ToggleMap']) || this['oTycZ']['keyPressed'](H['G']) && !this['zsT']['isKeyBound'](H['G'])) && this['cfYfi']['displayMapLarge'](!0x1),
        this['zsT']['isBindPressed'](D['CycleUIMode']) && this['cfYfi']['cycleVisibilityMode'](),
        (this['zsT']['isBindPressed'](D['HideUI']) || this['oTycZ']['keyPressed'](H['Escape']) && !this['cfYfi']['hudVisible']) && this['cfYfi']['cycleHud']();
        const XF = this['Nqo']['NLYJ']
          , XH = this['Solrb']['vrnvjL'](this['oTycZ']['mousePos'])
          , p0 = v['sub'](XH, XF);
        let p1 = v['length'](p0)
          , p2 = p1 > 0.00001 ? v['div'](p0, p1) : v['create'](0x1, 0x0);
        this['DxRdO']['wheelDisplayed'] && (p1 = this['PkRzLK']['toMouseLen'],
        p2 = this['PkRzLK']['toMouseDir']);
        const p3 = new XE();
        if (p3['seq'] = this['seq'],
        !this['vQHD']) {
            if (k['touch']) {
                const pb = this['XpRJqf']['getTouchMovement'](this['Solrb'])
                  , pI = this['XpRJqf']['getAimMovement'](this['Nqo'], this['Solrb']);
                let pj = v['copy'](pI['aimMovement']['toAimDir']);
                if (this['XpRJqf']['turnDirTicker'] -= XT,
                this['XpRJqf']['moveDetected'] && !pI['touched']) {
                    const py = v['normalizeSafe'](pb['toMoveDir'], v['create'](0x1, 0x0))
                      , pg = this['XpRJqf']['turnDirTicker'] < 0x0 ? py : pI['aimMovement']['toAimDir'];
                    this['XpRJqf']['setAimDir'](pg),
                    pj = pg;
                }
                pI['touched'] && (this['XpRJqf']['turnDirTicker'] = this['XpRJqf']['turnDirCooldown']),
                this['XpRJqf']['moveDetected'] ? (p3['touchMoveDir'] = v['normalizeSafe'](pb['toMoveDir'], v['create'](0x1, 0x0)),
                p3['touchMoveLen'] = Math['round'](e['clamp'](pb['toMoveLen'], 0x0, 0x1) * 0xff)) : p3['touchMoveLen'] = 0x0,
                p3['touchMoveActive'] = !0x0;
                const pf = pI['aimMovement']['toAimLen']
                  , px = e['clamp'](pf / this['XpRJqf']['padPosRange'], 0x0, 0x1) * L['player']['throwableMaxMouseDist'];
                p3['toMouseLen'] = px,
                p3['toMouseDir'] = pj;
            } else
                p3['moveLeft'] = this['zsT']['isBindDown'](D['MoveLeft']) || this['oTycZ']['keyDown'](H['Left']) && !this['zsT']['isKeyBound'](H['Left']),
                p3['moveRight'] = this['zsT']['isBindDown'](D['MoveRight']) || this['oTycZ']['keyDown'](H['Right']) && !this['zsT']['isKeyBound'](H['Right']),
                p3['moveUp'] = this['zsT']['isBindDown'](D['MoveUp']) || this['oTycZ']['keyDown'](H['Up']) && !this['zsT']['isKeyBound'](H['Up']),
                p3['moveDown'] = this['zsT']['isBindDown'](D['MoveDown']) || this['oTycZ']['keyDown'](H['Down']) && !this['zsT']['isKeyBound'](H['Down']),
                p3['toMouseDir'] = v['copy'](p2),
                p3['toMouseLen'] = p1;
            p3['touchMoveDir'] = v['normalizeSafe'](p3['touchMoveDir'], v['create'](0x1, 0x0)),
            p3['touchMoveLen'] = e['clamp'](p3['touchMoveLen'], 0x0, 0xff),
            p3['toMouseDir'] = v['normalizeSafe'](p3['toMouseDir'], v['create'](0x1, 0x0)),
            p3['toMouseLen'] = e['clamp'](p3['toMouseLen'], 0x0, m['MouseMaxDist']),
            p3['shootStart'] = this['zsT']['isBindPressed'](D['Fire']) || this['XpRJqf']['shotDetected'],
            p3['shootHold'] = this['zsT']['isBindDown'](D['Fire']) || this['XpRJqf']['shotDetected'],
            p3['portrait'] = this['Solrb']['pmhI'] < this['Solrb']['lZjK'];
            const pX = [D['Reload'], D['Revive'], D['Use'], D['Loot'], D['Cancel'], D['EquipPrimary'], D['EquipSecondary'], D['EquipThrowable'], D['EquipMelee'], D['EquipNextWeap'], D['EquipPrevWeap'], D['EquipLastWeap'], D['EquipOtherGun'], D['EquipPrevScope'], D['EquipNextScope'], D['StowWeapons']];
            for (let pQ = 0x0; pQ < pX['length']; pQ++) {
                const pZ = pX[pQ];
                this['zsT']['isBindPressed'](pZ) && p3['addInput'](pZ);
            }
            if (this['zsT']['isBindPressed'](D['Interact'])) {
                const pq = []
                  , pM = [D['Revive'], D['Use'], D['Loot']];
                for (let pE = 0x0; pE < pM['length']; pE++) {
                    const pN = pM[pE];
                    this['zsT']['getBind'](pN) || pq['push'](pN);
                }
                if (pq['length'] == pM['length'])
                    p3['addInput'](D['Interact']);
                else {
                    for (let pn = 0x0; pn < pq['length']; pn++)
                        p3['addInput'](pq[pn]);
                }
            }
            (this['zsT']['isBindPressed'](D['SwapWeapSlots']) || this['cfYfi']['swapWeapSlots']) && (p3['addInput'](D['SwapWeapSlots']),
            this['Nqo']['gunSwitchCooldown'] = 0x0),
            this['cfYfi']['reloadTouched'] && p3['addInput'](D['Reload']),
            this['cfYfi']['interactionTouched'] && (p3['addInput'](D['Interact']),
            p3['addInput'](D['Cancel']));
            for (let ph = 0x0; ph < this['PqZq']['uiEvents']['length']; ph++) {
                const pR = this['PqZq']['uiEvents'][ph];
                if (pR['action'] == 'use') {
                    if (pR['type'] == 'weapon') {
                        const pP = {
                            [XN['Primary']]: D['EquipPrimary'],
                            [XN['Secondary']]: D['EquipSecondary'],
                            [XN['Melee']]: D['EquipMelee'],
                            [XN['Throwable']]: D['EquipThrowable']
                        }[pR['data']];
                        pP && p3['addInput'](pP);
                    } else
                        p3['useItem'] = pR['data'];
                }
            }
            this['zsT']['isBindPressed'](D['UseBandage']) ? p3['useItem'] = 'bandage' : this['zsT']['isBindPressed'](D['UseHealthKit']) ? p3['useItem'] = 'healthkit' : this['zsT']['isBindPressed'](D['UseSoda']) ? p3['useItem'] = 'soda' : this['zsT']['isBindPressed'](D['UsePainkiller']) && (p3['useItem'] = 'painkiller');
            let pp = !0x1;
            for (let pA = 0x0; pA < this['PqZq']['uiEvents']['length']; pA++) {
                const pJ = this['PqZq']['uiEvents'][pA];
                if (pJ['action'] == 'drop') {
                    const pS = new Xn();
                    if (pJ['type'] == 'weapon') {
                        const pB = pJ['data']
                          , pc = this['Nqo']['KkvfHn']['MDx'];
                        pS['item'] = pc[pB]['type'],
                        pS['weapIdx'] = pB;
                    } else {
                        if (pJ['type'] == 'perk') {
                            const pu = pJ['data']
                              , pV = this['Nqo']['QDvlP']['vJBLNe']
                              , pz = pV['length'] > pu ? pV[pu] : null;
                            pz?.['droppable'] && (pS['item'] = pz['type']);
                        } else {
                            const pw = pJ['data'] == 'helmet' ? this['Nqo']['QDvlP']['SMDXye'] : pJ['data'] == 'chest' ? this['Nqo']['QDvlP']['JyI'] : pJ['data'];
                            pS['item'] = pw;
                        }
                    }
                    pS['item'] != '' && (this['onRgH'](Xq['DropItem'], pS, 0x80),
                    pS['item'] != 'fists' && (pp = !0x0));
                }
            }
            if (pp && this['GcFc']['playSound']('loot_drop_01', {
                'channel': 'ui'
            }),
            this['cfYfi']['roleSelected']) {
                const pO = new Xh();
                pO['role'] = this['cfYfi']['roleSelected'],
                this['onRgH'](Xq['PerkModeRoleSelect'], pO, 0x80),
                this['sfj']['set']('perkModeRole', pO['role']);
            }
        }
        const p4 = this['cfYfi']['specBegin']
          , p5 = this['cfYfi']['specNext'] || this['vQHD'] && this['oTycZ']['keyPressed'](H['Right'])
          , p6 = this['cfYfi']['specPrev'] || this['vQHD'] && this['oTycZ']['keyPressed'](H['Left'])
          , p7 = this['oTycZ']['keyPressed'](H['Right']) || this['oTycZ']['keyPressed'](H['Left']);
        if (p4 || this['vQHD'] && p5 || p6) {
            const pL = new XR();
            pL['specBegin'] = p4,
            pL['specNext'] = p5,
            pL['specPrev'] = p6,
            pL['specForce'] = p7,
            this['onRgH'](Xq['Spectate'], pL, 0x80);
        }
        this['cfYfi']['specBegin'] = !0x1,
        this['cfYfi']['specNext'] = !0x1,
        this['cfYfi']['specPrev'] = !0x1,
        this['cfYfi']['reloadTouched'] = !0x1,
        this['cfYfi']['interactionTouched'] = !0x1,
        this['cfYfi']['swapWeapSlots'] = !0x1,
        this['cfYfi']['roleSelected'] = '';
        let p8 = !0x1;
        for (const pv in p3)
            if (p3['hasOwnProperty'](pv)) {
                if (pv == 'inputs')
                    p8 = p3[pv]['length'] > 0x0;
                else {
                    if (pv == 'toMouseDir' || pv == 'touchMoveDir') {
                        const pK = e['clamp'](v['dot'](p3[pv], this['PkRzLK'][pv]), -0x1, 0x1);
                        p8 = e['rad2deg'](Math['acos'](pK)) > 0.1;
                    } else
                        pv == 'toMouseLen' ? p8 = Math['abs'](this['PkRzLK'][pv] - p3[pv]) > 0.5 : pv == 'shootStart' ? p8 = p3[pv] || p3[pv] != this['PkRzLK'][pv] : this['PkRzLK'][pv] != p3[pv] && (p8 = !0x0);
                }
                if (p8)
                    break;
            }
        this['LzLNO'] -= XT,
        (p8 || this['LzLNO'] < 0x0) && (this['seqInFlight'] || (this['seq'] = (this['seq'] + 0x1) % 0x100,
        this['seqSendTime'] = Date['now'](),
        this['seqInFlight'] = !0x0,
        p3['seq'] = this['seq']),
        this['onRgH'](Xq['Input'], p3, 0x80),
        this['LzLNO'] = 0x1,
        this['PkRzLK'] = p3),
        this['PqZq']['flushInput'](),
        this['xdZjN']['Gxhh'](XT, this['Nqo'], this['MTkCb'], this['tetX'], this['GcFc'], this['nCO'], this['eBew'], this['Solrb'], XY, XC),
        this['NOCRp']['Gxhh'](XT, this['Nqo'], this['xdZjN'], this['GcFc'], this['Solrb'], XC),
        this['NDV']['Gxhh'](XT, this['MTkCb'], this['xdZjN'], this['Solrb'], this['Nqo'], this['eBew'], this['tetX'], this['GcFc']),
        this['ACF']['Gxhh'](XT, this['MTkCb'], this['xdZjN'], this['Solrb'], this['Nqo'], this['eBew'], this['tetX'], this['GcFc']),
        this['hpFatr']['Gxhh'](XT, this['tetX'], this['GcFc'], this['Nqo'], this['xdZjN'], this['eBew'], this['Solrb']),
        this['UYCd']['Gxhh'](XT, this['xdZjN'], this['MTkCb'], this['Solrb'], this['tetX'], this['GcFc'], XC),
        this['NgtzXw']['Gxhh'](XT, this['Nqo'], this['Solrb'], this['xdZjN'], this['tetX'], this['eBew'], this['GcFc']),
        this['NfHGD']['Gxhh'](XT, this['Solrb'], this['Nqo'], this['xdZjN'], this['eBew']),
        this['jLzt']['Gxhh'](XT, this['Solrb'], this['Nqo'], this['xdZjN'], this['eBew']),
        this['tCoR']['Gxhh'](XT, this['Lnf'], this['MTkCb'], this['tetX'], this['GcFc']),
        this['tetX']['Gxhh'](XT, this['Solrb'], XC),
        this['QfnjIN']['Gxhh'](XT, this['MTkCb'], this['Nqo'], this['xdZjN'], this['Solrb'], this['eBew']),
        this['qfLfG']['Gxhh'](XT, this['Solrb'], this['eBew'], XC),
        this['cfYfi']['Gxhh'](XT, this['Nqo'], this['xdZjN'], this['AqOEo'], this['NOCRp'], this['MTkCb'], this['Solrb'], this['teamMode'], this['xdZjN']['factionMode']),
        this['PqZq']['Gxhh'](XT, this['Nqo'], this['vQHD'], this['MTkCb'], this['NOCRp'], this['xdZjN'], this['zsT']),
        this['DxRdO']['Gxhh'](XT, this['vCsfL'], this['Nqo'], this['teamMode'], this['QfnjIN'], this['xdZjN'], this['eBew'], this['oTycZ'], this['zsT'], this['vQHD']),
        this['XpRJqf']['Gxhh'](XT, this['Nqo'], this['xdZjN'], this['Solrb'], this['eBew']),
        this['eBew']['Gxhh'](XT, this['Solrb'], this['xdZjN'], XC);
        for (let pm = 0x0; pm < this['DxRdO']['newPings']['length']; pm++) {
            const pT = this['DxRdO']['newPings'][pm]
              , pY = new XP();
            pY['type'] = pT['type'],
            pY['pos'] = pT['pos'],
            pY['isPing'] = !0x0,
            this['onRgH'](Xq['Emote'], pY, 0x80);
        }
        this['DxRdO']['newPings'] = [];
        for (let pC = 0x0; pC < this['DxRdO']['newEmotes']['length']; pC++) {
            const pl = this['DxRdO']['newEmotes'][pC]
              , pd = new XP();
            pd['type'] = pl['type'],
            pd['pos'] = pl['pos'],
            pd['isPing'] = !0x1,
            this['onRgH'](Xq['Emote'], pd, 0x80);
        }
        this['DxRdO']['newEmotes'] = [];
        const p9 = Date['now']();
        if (p9 > this['debugPingTime']) {
            let pk = function(pF, pH) {
                return ('\x20'['repeat'](pH) + pF)['slice'](-0x7);
            };
            this['debugPingTime'] = p9 + 0x4e20;
            const pU = this['pings']['sort']( (pF, pH) => pF - pH)
              , pW = pU['length'];
            if (pW > 0x0) {
                const pF = pU[Math['floor'](pW * 0.5)]
                  , pH = pU[Math['floor'](pW * 0.95)]
                  , b0 = pU[pW - 0x1];
                console['log']('Ping\x20\x20\x20\x20\x20min:', pk(pU[0x0]['toFixed'](0x2), 0x7), 'med:', pk(pF['toFixed'](0x2), 0x7), 'p95:', pk(pH['toFixed'](0x2), 0x7), 'max:', pk(b0['toFixed'](0x2), 0x7));
            }
            this['pings'] = [];
            const pD = this['updateIntervals']['sort']( (b1, b2) => b1 - b2)
              , pG = pD['length'];
            if (pG > 0x0) {
                const b1 = pD[Math['floor'](pG * 0.5)]
                  , b2 = pD[Math['floor'](pG * 0.95)]
                  , b3 = pD[pG - 0x1];
                console['log']('Interval\x20min:', pk(pD[0x0]['toFixed'](0x2), 0x7), 'med:', pk(b1['toFixed'](0x2), 0x7), 'p95:', pk(b2['toFixed'](0x2), 0x7), 'max:', pk(b3['toFixed'](0x2), 0x7));
            }
            this['updateIntervals'] = [];
        }
        this['Dgc'](XT, XC);
    }
    ['Dgc'](p, b) {
        const XT = this['xdZjN']['mapLoaded'] ? this['xdZjN']['getMapDef']()['biome']['colors']['grass'] : 0x80af49;
        this['cehf']['renderer']['background']['color'] = XT,
        this['MTkCb']['Dgc'](this['Solrb'], b),
        this['NDV']['Dgc'](this['Solrb'], b),
        this['ACF']['Dgc'](this['Solrb']),
        this['qfLfG']['Dgc'](this['Solrb'], b, this['Nqo']['layer']),
        this['xdZjN']['Dgc'](this['Solrb']),
        this['AqOEo']['Dgc'](this['Solrb']),
        this['cfYfi']['Dgc'](this['Nqo']['NLYJ'], this['AqOEo'], this['Solrb'], this['xdZjN'], this['NfHGD'], b),
        this['DxRdO']['Dgc'](this['Solrb']),
        k['debug'] && he['Dgc'](this['Solrb'], this['pOSlOC']),
        he['flush']();
    }
    ['updateAmbience']() {
        const b = this['Nqo']['NLYJ'];
        let XT = 0x0
          , XY = 0x0
          , XC = 0x1;
        if (this['xdZjN']['isInOcean'](b))
            XT = 0x1,
            XY = 0x0,
            XC = 0x0;
        else {
            const Xl = this['xdZjN']['distanceToShore'](b);
            XT = e['delerp'](Xl, 0x32, 0x0),
            XY = 0x0;
            for (let Xd = 0x0; Xd < this['xdZjN']['terrain']['rivers']['length']; Xd++) {
                const Xk = this['xdZjN']['terrain']?.['rivers'][Xd]
                  , XU = Xk['spline']['getClosestTtoPoint'](b)
                  , XW = Xk['spline']['getPos'](XU)
                  , XD = v['length'](v['sub'](XW, b))
                  , XG = Xk['waterWidth'] + 0x2
                  , XF = e['delerp'](XD, 0x1e + XG, XG)
                  , XH = e['clamp'](Xk['waterWidth'] / 0x8, 0.25, 0x1);
                XY = e['max'](XF * XH, XY);
            }
            this['Nqo']['layer'] == 0x1 && (XY = 0x0),
            XC = 0x1;
        }
        this['nCO']['getTrack']('wind')['weight'] = XC,
        this['nCO']['getTrack']('river')['weight'] = XY,
        this['nCO']['getTrack']('waves')['weight'] = XT;
    }
    ['resize']() {
        this['Solrb']['pmhI'] = k['screenWidth'],
        this['Solrb']['lZjK'] = k['screenHeight'],
        this['xdZjN']['resize'](this['cehf']['renderer'], this['rjYbuw']),
        this['AqOEo']['resize'](),
        this['cfYfi']['resize'](this['xdZjN'], this['Solrb']),
        this['XpRJqf']['resize'](),
        this['eBew']['resize'](this['xdZjN'], this['Solrb']);
    }
    ['miJMX'](p) {
        const b = {
            'audioManager': this['GcFc'],
            'renderer': this['eBew'],
            'particleBarn': this['tetX'],
            'map': this['xdZjN'],
            'smokeBarn': this['jLzt'],
            'decalBarn': this['qfLfG']
        };
        p['activePlayerIdDirty'] && (this['Lnf'] = p['activePlayerId']);
        for (let XC = 0x0; XC < p['playerInfos']['length']; XC++)
            this['MTkCb']['setPlayerInfo'](p['playerInfos'][XC]);
        for (let Xl = 0x0; Xl < p['deletedPlayerIds']['length']; Xl++) {
            const Xd = p['deletedPlayerIds'][Xl];
            this['MTkCb']['deletePlayerInfo'](Xd);
        }
        if ((p['playerInfos']['length'] > 0x0 || p['deletedPlayerIds']['length'] > 0x0) && this['MTkCb']['recomputeTeamData'](),
        p['playerStatusDirty']) {
            const Xk = this['MTkCb']['getPlayerInfo'](this['Lnf'])['teamId'];
            this['MTkCb']['updatePlayerStatus'](Xk, p['playerStatus'], this['xdZjN']['factionMode']);
        }
        if (p['groupStatusDirty']) {
            const XU = this['MTkCb']['getPlayerInfo'](this['Lnf'])['groupId'];
            this['MTkCb']['updateGroupStatus'](XU, p['groupStatus']);
        }
        for (let XW = 0x0; XW < p['delObjIds']['length']; XW++)
            this['GsClp']['DaWtm'](p['delObjIds'][XW]);
        for (let XD = 0x0; XD < p['fullObjects']['length']; XD++) {
            const XG = p['fullObjects'][XD];
            this['GsClp']['gLpEK'](XG['__type'], XG['__id'], XG, b);
        }
        for (let XF = 0x0; XF < p['partObjects']['length']; XF++) {
            const XH = p['partObjects'][XF];
            this['GsClp']['cZVtOf'](XH['__id'], XH, b);
        }
        this['vQHD'] = this['Lnf'] != this['vCsfL'],
        this['Nqo'] = this['MTkCb']['getPlayerById'](this['Lnf']),
        this['Nqo']['BOCg'](p['activePlayerData'], this['MTkCb']),
        p['activePlayerData']['weapsDirty'] && (this['cfYfi']['weapsDirty'] = !0x0),
        this['vQHD'] && (this['cfYfi']['setSpectateTarget'](this['Lnf'], this['vCsfL'], this['teamMode'], this['MTkCb']),
        this['XpRJqf']['hideAll']()),
        this['Nqo']['layer'] = this['Nqo']['QDvlP']['fgCE'],
        this['eBew']['setActiveLayer'](this['Nqo']['layer']),
        this['GcFc']['activeLayer'] = this['Nqo']['layer'];
        const XT = this['Nqo']['isUnderground'](this['xdZjN']);
        this['eBew']['setUnderground'](XT),
        this['GcFc']['underground'] = XT,
        p['gasDirty'] && this['AqOEo']['setFullState'](p['gasT'], p['gasData'], this['xdZjN'], this['cfYfi']),
        p['gasTDirty'] && this['AqOEo']['setProgress'](p['gasT']);
        for (let p0 = 0x0; p0 < p['bullets']['length']; p0++) {
            const p1 = p['bullets'][p0];
            Oa(p1, this['NDV'], this['ACF'], this['MTkCb'], this['eBew']),
            p1['shotFx'] && this['tCoR']['addShot'](p1);
        }
        for (let p2 = 0x0; p2 < p['explosions']['length']; p2++) {
            const p3 = p['explosions'][p2];
            this['UYCd']['addExplosion'](p3['type'], p3['pos'], p3['layer']);
        }
        for (let p4 = 0x0; p4 < p['emotes']['length']; p4++) {
            const p5 = p['emotes'][p4];
            p5['isPing'] ? this['DxRdO']['addPing'](p5, this['xdZjN']['factionMode']) : this['DxRdO']['addEmote'](p5);
        }
        this['NfHGD']['updatePlanes'](p['planes'], this['xdZjN']);
        for (let p6 = 0x0; p6 < p['airstrikeZones']['length']; p6++)
            this['NfHGD']['createAirstrikeZone'](p['airstrikeZones'][p6]);
        if (this['cfYfi']['updateMapIndicators'](p['mapIndicators']),
        p['killLeaderDirty']) {
            const p7 = Q['htmlEscape'](this['MTkCb']['getPlayerName'](p['killLeaderId'], this['Lnf'], !0x0));
            this['cfYfi']['updateKillLeader'](p['killLeaderId'], p7, p['killLeaderKills'], this['xdZjN']['getMapDef']()['gameMode']);
        }
        const XY = Date['now']();
        if (this['xBFht']++,
        p['ack'] == this['seq'] && this['seqInFlight']) {
            this['seqInFlight'] = !0x1;
            const p8 = XY - this['seqSendTime'];
            this['pings']['push'](p8);
        }
        if (this['lastUpdateTime'] > 0x0) {
            const p9 = XY - this['lastUpdateTime'];
            this['updateIntervals']['push'](p9);
        }
        this['lastUpdateTime'] = XY;
    }
    ['hMOHjl'](b, XT) {
        switch (b) {
        case Xq['Joined']:
            {
                const XY = new XO();
                XY['deserialize'](XT),
                this['onJoin'](),
                this['teamMode'] = XY['teamMode'],
                this['vCsfL'] = XY['playerId'],
                this['kEfsQ'] = !0x0,
                this['DxRdO']['updateEmoteWheel'](XY['emotes']),
                XY['started'] || this['cfYfi']['setWaitingForPlayers'](!0x0),
                this['cfYfi']['removeAds'](),
                this['victoryMusic'] && (this['victoryMusic']['stop'](),
                this['victoryMusic'] = null),
                document['hasFocus']() || this['GcFc']['playSound']('notification_start_01', {
                    'channel': 'ui'
                }),
                this['sfj']['get']('ENV') === 'CrazyGames' ? window['CrazyGames']['SDK']['game']['gameplayStart']() : this['sfj']['get']('ENV') === 'POKI' && window['PokiSDK']['gameplayStart']();
                break;
            }
        case Xq['Map']:
            {
                const XC = new Xw();
                if (XC['deserialize'](XT),
                this['xdZjN']['loadMap'](XC, this['Solrb'], this['rjYbuw'], this['tetX']),
                this['dGucoK']['loadMapAssets'](this['xdZjN']['mapName']),
                this['xdZjN']['renderMap'](this['cehf']['renderer'], this['rjYbuw']),
                this['MTkCb']['onMapLoad'](this['xdZjN']),
                this['NDV']['onMapLoad'](this['xdZjN']),
                this['tetX']['onMapLoad'](this['xdZjN']),
                this['cfYfi']['onMapLoad'](this['xdZjN'], this['Solrb']),
                this['xdZjN']['perkMode']) {
                    const Xl = this['sfj']['get']('perkModeRole');
                    this['cfYfi']['setRoleMenuOptions'](Xl, this['xdZjN']['getMapDef']()['gameMode']['perkModeRoles']),
                    this['cfYfi']['setRoleMenuActive'](!0x0);
                } else
                    this['cfYfi']['setRoleMenuActive'](!0x1);
                break;
            }
        case Xq['Update']:
            {
                const Xd = new Xo();
                Xd['deserialize'](XT, this['GsClp']),
                this['ONPnmU'] = !0x0,
                this['miJMX'](Xd);
                break;
            }
        case Xq['Kill']:
            {
                const Xk = new Xz();
                Xk['deserialize'](XT);
                const XU = Xk['itemSourceType'] || Xk['mapSourceType']
                  , XW = this['MTkCb']['getPlayerInfo'](this['Lnf'])['teamId']
                  , XD = Xk['downed'] && !Xk['killed'] || Xk['damageType'] == L['DamageType']['Gas'] || Xk['damageType'] == L['DamageType']['Bleeding'] || Xk['damageType'] == L['DamageType']['Airdrop']
                  , XG = this['MTkCb']['getPlayerInfo'](Xk['targetId'])
                  , XF = this['MTkCb']['getPlayerInfo'](Xk['killCreditId'])
                  , XH = XD ? XF : this['MTkCb']['getPlayerInfo'](Xk['killerId']);
                let p0 = this['MTkCb']['getPlayerName'](XG['playerId'], this['Lnf'], !0x0)
                  , p1 = this['MTkCb']['getPlayerName'](XF['playerId'], this['Lnf'], !0x0)
                  , p2 = this['MTkCb']['getPlayerName'](XH['playerId'], this['Lnf'], !0x0);
                if (p0 = Q['htmlEscape'](p0),
                p1 = Q['htmlEscape'](p1),
                p2 = Q['htmlEscape'](p2),
                Xk['killCreditId'] == this['Lnf']) {
                    const p5 = Xk['killerId'] == this['Lnf']
                      , p6 = Xk['killerId'] == Xk['targetId'] || Xk['killCreditId'] == Xk['targetId']
                      , p7 = this['PqZq']['getKillText'](p1, p0, p5, Xk['downed'], Xk['killed'], p6, XU, Xk['damageType'], this['vQHD'])
                      , p8 = Xk['killed'] && !p6 ? this['PqZq']['getKillCountText'](Xk['killerKills']) : '';
                    this['PqZq']['displayKillMessage'](p7, p8);
                } else {
                    if (Xk['targetId'] == this['Lnf'] && Xk['downed'] && !Xk['killed']) {
                        const p9 = this['PqZq']['getDownedText'](p1, p0, XU, Xk['damageType'], this['vQHD']);
                        this['PqZq']['displayKillMessage'](p9, '');
                    }
                }
                Xk['killCreditId'] == this['vCsfL'] && Xk['killed'] && this['cfYfi']['setLocalKills'](Xk['killerKills']);
                const p3 = this['PqZq']['getKillFeedText'](p0, XH['teamId'] ? p2 : '', XU, Xk['damageType'], Xk['downed'] && !Xk['killed'])
                  , p4 = this['PqZq']['getKillFeedColor'](XW, XG['teamId'], XF['teamId'], this['xdZjN']['factionMode']);
                this['PqZq']['addKillFeedMessage'](p3, p4),
                Xk['killed'] && this['MTkCb']['addDeathEffect'](Xk['targetId'], Xk['killerId'], XU, this['GcFc'], this['tetX']),
                Xk['damageType'] == L['DamageType']['Player'] && this['NDV']['createBulletHit'](this['MTkCb'], Xk['targetId'], this['GcFc']);
                break;
            }
        case Xq['RoleAnnouncement']:
            {
                const pX = new XV();
                pX['deserialize'](XT);
                const pp = Xf[pX['role']];
                if (!pp)
                    break;
                const pb = this['MTkCb']['getPlayerInfo'](pX['playerId'])
                  , pI = Q['htmlEscape'](this['MTkCb']['getPlayerName'](pX['playerId'], this['Lnf'], !0x0));
                if (pX['assigned']) {
                    if (pp['sound']?.['assign'] && (pX['role'] == 'kill_leader' && this['xdZjN']['getMapDef']()['gameMode']['spookyKillSounds'] ? this['GcFc']['playGroup']('kill_leader_assigned', {
                        'channel': 'ui'
                    }) : (pX['role'] == 'kill_leader' || !this['xdZjN']['perkMode'] || this['vCsfL'] == pX['playerId']) && this['GcFc']['playSound'](pp['sound']['assign'], {
                        'channel': 'ui'
                    })),
                    this['xdZjN']['perkMode'] && this['vCsfL'] == pX['playerId'] && this['cfYfi']['setRoleMenuActive'](!0x1),
                    pp['killFeed']?.['assign']) {
                        const pj = this['PqZq']['getRoleAssignedKillFeedText'](pX['role'], pb['teamId'], pI)
                          , pf = this['PqZq']['getRoleKillFeedColor'](pX['role'], pb['teamId'], this['MTkCb']);
                        this['PqZq']['addKillFeedMessage'](pj, pf);
                    }
                    if (pp['announce'] && this['vCsfL'] == pX['playerId']) {
                        const px = this['PqZq']['getRoleAnnouncementText'](pX['role'], pb['teamId']);
                        this['cfYfi']['displayAnnouncement'](px['toUpperCase']());
                    }
                } else {
                    if (pX['killed']) {
                        if (pp['killFeed']?.['dead']) {
                            let py = Q['htmlEscape'](this['MTkCb']['getPlayerName'](pX['killerId'], this['Lnf'], !0x0));
                            pX['playerId'] == pX['killerId'] && (py = '');
                            const pg = this['PqZq']['getRoleKilledKillFeedText'](pX['role'], pb['teamId'], py)
                              , pQ = this['PqZq']['getRoleKillFeedColor'](pX['role'], pb['teamId'], this['MTkCb']);
                            this['PqZq']['addKillFeedMessage'](pg, pQ);
                        }
                        pp['sound']?.['dead'] && (this['xdZjN']['getMapDef']()['gameMode']['spookyKillSounds'] ? this['GcFc']['playGroup']('kill_leader_dead', {
                            'channel': 'ui'
                        }) : this['GcFc']['playSound'](pp['sound']['dead'], {
                            'channel': 'ui'
                        }));
                    }
                }
                break;
            }
        case Xq['PlayerStats']:
            {
                const pZ = new Xu();
                pZ['deserialize'](XT),
                this['cfYfi']['setLocalStats'](pZ['playerStats']),
                this['cfYfi']['showTeamAd'](pZ['playerStats'], this['PqZq']);
                break;
            }
        case Xq['Stats']:
            {
                XT['readString']();
                break;
            }
        case Xq['GameOver']:
            {
                const pq = new Xc();
                pq['deserialize'](XT),
                this['LSU'] = pq['gameOver'];
                const pM = this['MTkCb']['getPlayerInfo'](this['vCsfL'])['teamId'];
                for (let pE = 0x0; pE < pq['playerStats']['length']; pE++) {
                    const pN = pq['playerStats'][pE];
                    if (pN['playerId'] == this['vCsfL']) {
                        this['cfYfi']['setLocalStats'](pN);
                        break;
                    }
                }
                this['cfYfi']['showStats'](pq['playerStats'], pq['teamId'], pq['teamRank'], pq['winningTeamId'], pq['gameOver'], pM, this['teamMode'], this['vQHD'], this['MTkCb'], this['GcFc'], this['xdZjN'], this['PqZq']),
                pM == pq['winningTeamId'] && (this['victoryMusic'] = this['GcFc']['playSound']('menu_music', {
                    'channel': 'music',
                    'delay': 0x514,
                    'forceStart': !0x0
                })),
                this['XpRJqf']['hideAll']();
                break;
            }
        case Xq['Pickup']:
            {
                const pn = new XB();
                if (pn['deserialize'](XT),
                pn['type'] == XQ['Success'] && pn['item']) {
                    this['Nqo']['playItemPickupSound'](pn['item'], this['GcFc']);
                    const ph = w[pn['item']];
                    ph && ph['type'] == 'xp' && this['PqZq']['addRareLootMessage'](pn['item'], !0x0);
                } else
                    this['PqZq']['displayPickupMessage'](pn['type']);
                break;
            }
        case Xq['UpdatePass']:
            {
                new XS()['deserialize'](XT),
                this['OSRLcj'] = !0x0,
                this['HTzAB'] = 0x0;
                break;
            }
        case Xq['AliveCounts']:
            {
                const pR = new XJ();
                pR['deserialize'](XT),
                pR['teamAliveCounts']['length'] == 0x1 ? this['cfYfi']['updatePlayersAlive'](pR['teamAliveCounts'][0x0]) : pR['teamAliveCounts']['length'] >= 0x2 && (this['cfYfi']['updatePlayersAliveRed'](pR['teamAliveCounts'][0x0]),
                this['cfYfi']['updatePlayersAliveBlue'](pR['teamAliveCounts'][0x1]));
                break;
            }
        case Xq['Disconnect']:
            {
                const pP = new XA();
                pP['deserialize'](XT),
                this['FtXCz'] = pP['reason'];
            }
        }
    }
    ['onRgH'](p, b, XT) {
        const XY = XT || 0x80
          , XC = new XM(new ArrayBuffer(XY));
        XC['serializeMsg'](p, b),
        this['colHd'](XC);
    }
    ['colHd'](p) {
        if (this['hwpWO'] && this['hwpWO']['readyState'] == this['hwpWO']['OPEN'])
            try {
                this['hwpWO']['send'](p['getBuffer']());
            } catch (b) {
                console['error']('sendMessageException', b),
                this['hwpWO']['close']();
            }
    }
}
const Ps = [0x0, 0xc0c1, 0xc181, 0x140, 0xc301, 0x3c0, 0x280, 0xc241, 0xc601, 0x6c0, 0x780, 0xc741, 0x500, 0xc5c1, 0xc481, 0x440, 0xcc01, 0xcc0, 0xd80, 0xcd41, 0xf00, 0xcfc1, 0xce81, 0xe40, 0xa00, 0xcac1, 0xcb81, 0xb40, 0xc901, 0x9c0, 0x880, 0xc841, 0xd801, 0x18c0, 0x1980, 0xd941, 0x1b00, 0xdbc1, 0xda81, 0x1a40, 0x1e00, 0xdec1, 0xdf81, 0x1f40, 0xdd01, 0x1dc0, 0x1c80, 0xdc41, 0x1400, 0xd4c1, 0xd581, 0x1540, 0xd701, 0x17c0, 0x1680, 0xd641, 0xd201, 0x12c0, 0x1380, 0xd341, 0x1100, 0xd1c1, 0xd081, 0x1040, 0xf001, 0x30c0, 0x3180, 0xf141, 0x3300, 0xf3c1, 0xf281, 0x3240, 0x3600, 0xf6c1, 0xf781, 0x3740, 0xf501, 0x35c0, 0x3480, 0xf441, 0x3c00, 0xfcc1, 0xfd81, 0x3d40, 0xff01, 0x3fc0, 0x3e80, 0xfe41, 0xfa01, 0x3ac0, 0x3b80, 0xfb41, 0x3900, 0xf9c1, 0xf881, 0x3840, 0x2800, 0xe8c1, 0xe981, 0x2940, 0xeb01, 0x2bc0, 0x2a80, 0xea41, 0xee01, 0x2ec0, 0x2f80, 0xef41, 0x2d00, 0xedc1, 0xec81, 0x2c40, 0xe401, 0x24c0, 0x2580, 0xe541, 0x2700, 0xe7c1, 0xe681, 0x2640, 0x2200, 0xe2c1, 0xe381, 0x2340, 0xe101, 0x21c0, 0x2080, 0xe041, 0xa001, 0x60c0, 0x6180, 0xa141, 0x6300, 0xa3c1, 0xa281, 0x6240, 0x6600, 0xa6c1, 0xa781, 0x6740, 0xa501, 0x65c0, 0x6480, 0xa441, 0x6c00, 0xacc1, 0xad81, 0x6d40, 0xaf01, 0x6fc0, 0x6e80, 0xae41, 0xaa01, 0x6ac0, 0x6b80, 0xab41, 0x6900, 0xa9c1, 0xa881, 0x6840, 0x7800, 0xb8c1, 0xb981, 0x7940, 0xbb01, 0x7bc0, 0x7a80, 0xba41, 0xbe01, 0x7ec0, 0x7f80, 0xbf41, 0x7d00, 0xbdc1, 0xbc81, 0x7c40, 0xb401, 0x74c0, 0x7580, 0xb541, 0x7700, 0xb7c1, 0xb681, 0x7640, 0x7200, 0xb2c1, 0xb381, 0x7340, 0xb101, 0x71c0, 0x7080, 0xb041, 0x5000, 0x90c1, 0x9181, 0x5140, 0x9301, 0x53c0, 0x5280, 0x9241, 0x9601, 0x56c0, 0x5780, 0x9741, 0x5500, 0x95c1, 0x9481, 0x5440, 0x9c01, 0x5cc0, 0x5d80, 0x9d41, 0x5f00, 0x9fc1, 0x9e81, 0x5e40, 0x5a00, 0x9ac1, 0x9b81, 0x5b40, 0x9901, 0x59c0, 0x5880, 0x9841, 0x8801, 0x48c0, 0x4980, 0x8941, 0x4b00, 0x8bc1, 0x8a81, 0x4a40, 0x4e00, 0x8ec1, 0x8f81, 0x4f40, 0x8d01, 0x4dc0, 0x4c80, 0x8c41, 0x4400, 0x84c1, 0x8581, 0x4540, 0x8701, 0x47c0, 0x4680, 0x8641, 0x8201, 0x42c0, 0x4380, 0x8341, 0x4100, 0x81c1, 0x8081, 0x4040];
function ki(p) {
    let b = 0x0;
    for (let XT = 0x0; XT < p['length']; XT++) {
        const XY = p[XT];
        b = (Ps[(b ^ XY) & 0xff] ^ b >> 0x8) & 0xffff;
    }
    return b;
}
function J(p, b) {
    return {
        'name': p,
        'defaultValue': b
    };
}
function oe(p) {
    return new Ze(ve['Key'],p);
}
function vi(p) {
    return new Ze(ve['MouseButton'],p);
}
function _i(p) {
    return new Ze(ve['MouseWheel'],p);
}
const Ue = {
    [D['MoveLeft']]: J('Move\x20Left', oe(H['A'])),
    [D['MoveRight']]: J('Move\x20Right', oe(H['D'])),
    [D['MoveUp']]: J('Move\x20Up', oe(H['W'])),
    [D['MoveDown']]: J('Move\x20Down', oe(H['S'])),
    [D['Fire']]: J('Fire', vi(Tt['Left'])),
    [D['Reload']]: J('Reload', oe(H['R'])),
    [D['Cancel']]: J('Cancel', oe(H['X'])),
    [D['Interact']]: J('Interact', oe(H['F'])),
    [D['Revive']]: J('Revive', null),
    [D['Use']]: J('Open/Use', null),
    [D['Loot']]: J('Loot', null),
    [D['EquipPrimary']]: J('Equip\x20Primary', oe(H['One'])),
    [D['EquipSecondary']]: J('Equip\x20Secondary', oe(H['Two'])),
    [D['EquipMelee']]: J('Equip\x20Melee', oe(H['Three'])),
    [D['EquipThrowable']]: J('Equip\x20Throwable', oe(H['Four'])),
    [D['EquipNextWeap']]: J('Equip\x20Next\x20Weapon', _i(Pt['Down'])),
    [D['EquipPrevWeap']]: J('Equip\x20Previous\x20Weapon', _i(Pt['Up'])),
    [D['EquipLastWeap']]: J('Equip\x20Last\x20Weapon', oe(H['Q'])),
    [D['StowWeapons']]: J('Stow\x20Weapons', oe(H['E'])),
    [D['EquipPrevScope']]: J('Equip\x20Previous\x20Scope', null),
    [D['EquipNextScope']]: J('Equip\x20Next\x20Scope', null),
    [D['UseBandage']]: J('Use\x20Bandage', oe(H['Seven'])),
    [D['UseHealthKit']]: J('Use\x20Med\x20Kit', oe(H['Eight'])),
    [D['UseSoda']]: J('Use\x20Soda', oe(H['Nine'])),
    [D['UsePainkiller']]: J('Use\x20Pills', oe(H['Zero'])),
    [D['SwapWeapSlots']]: J('Switch\x20Gun\x20Slots', oe(H['T'])),
    [D['ToggleMap']]: J('Toggle\x20Map', oe(H['M'])),
    [D['CycleUIMode']]: J('Toggle\x20Minimap', oe(H['V'])),
    [D['EmoteMenu']]: J('Emote\x20Menu', vi(Tt['Right'])),
    [D['TeamPingMenu']]: J('Team\x20Ping\x20Hold', oe(H['C'])),
    [D['EquipOtherGun']]: J('Equip\x20Other\x20Gun', null),
    [D['Fullscreen']]: J('Full\x20Screen', oe(H['L'])),
    [D['HideUI']]: J('Hide\x20UI', null),
    [D['TeamPingSingle']]: J('Team\x20Ping\x20Menu', null)
};
class Cs {
    constructor(p, b) {
        this['input'] = p,
        this['config'] = b,
        this['input'] = p,
        this['config'] = b,
        this['loadBinds']();
    }
    ['binds'] = [];
    ['boundKeys'] = {};
    ['menuHovered'] = !0x1;
    ['toArray']() {
        const p = new ArrayBuffer(this['binds']['length'] * 0x2 + 0x1)
          , b = new P['BitStream'](p);
        b['writeUint8'](0x1);
        for (let Xl = 0x0; Xl < this['binds']['length']; Xl++) {
            const Xd = this['binds'][Xl]
              , Xk = Xd ? Xd['type'] : 0x0
              , XU = Xd ? Xd['code'] : 0x0;
            b['writeBits'](Xk & 0x3, 0x2),
            b['writeUint8'](XU & 0xff);
        }
        const XT = new Uint8Array(p,0x0,b['byteIndex'])
          , XY = ki(XT)
          , XC = new Uint8Array(XT['length'] + 0x2);
        return XC['set'](XT),
        XC[XC['length'] - 0x2] = XY >> 0x8 & 0xff,
        XC[XC['length'] - 0x1] = XY & 0xff,
        XC;
    }
    ['fromArray'](b) {
        let XT = new Uint8Array(b);
        if (!XT || XT['length'] < 0x3)
            return !0x1;
        const XY = XT[XT['length'] - 0x2] << 0x8 | XT[XT['length'] - 0x1];
        if (XT = XT['slice'](0x0, XT['length'] - 0x2),
        ki(XT) != XY)
            return !0x1;
        const XC = new ArrayBuffer(XT['length'])
          , Xl = new Uint8Array(XC);
        for (let XU = 0x0; XU < XT['length']; XU++)
            Xl[XU] = XT[XU];
        const Xd = new P['BitStream'](XC)
          , Xk = Xd['readUint8']();
        this['clearAllBinds']();
        for (let XW = 0x0; Xd['length'] - Xd['index'] >= 0xa; ) {
            const XD = XW++
              , XG = Xd['readBits'](0x2)
              , XF = Xd['readUint8']();
            XD >= 0x0 && XD < D['Count'] && XG != ve['None'] && this['setBind'](XD, XG != 0x0 ? new Ze(XG,XF) : null);
        }
        return Xk < 0x1 && (this['upgradeBinds'](Xk),
        this['saveBinds']()),
        !0x0;
    }
    ['toBase64']() {
        return i['fromByteArray'](this['toArray']());
    }
    ['fromBase64'](p) {
        let b = !0x1;
        try {
            b = this['fromArray'](i['toByteArray'](p));
        } catch (XT) {
            console['error']('Error', XT);
        }
        return b;
    }
    ['saveBinds']() {
        this['config']['set']('binds', this['toBase64']());
    }
    ['loadBinds']() {
        this['fromBase64'](this['config']['get']('binds') || '') || (this['loadDefaultBinds'](),
        this['saveBinds']());
    }
    ['upgradeBinds'](p) {
        const b = [];
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT]
              , XC = Ue[XY]['defaultValue'];
            for (let Xl = 0x0; Xl < this['binds']['length'] && !this['binds'][Xl]?.['equals'](XC); Xl++)
                ;
            this['setBind'](XY, XC);
        }
    }
    ['clearAllBinds']() {
        for (let p = 0x0; p < D['Count']; p++)
            this['binds'][p] = null;
        this['boundKeys'] = {};
    }
    ['setBind'](p, b) {
        if (b) {
            for (let XY = 0x0; XY < this['binds']['length']; XY++)
                this['binds'][XY]?.['equals'](b) && (this['binds'][XY] = null);
        }
        const XT = this['binds'][p];
        XT && XT['type'] == ve['Key'] && (this['boundKeys'][XT['code']] = null),
        this['binds'][p] = b,
        b && b['type'] == ve['Key'] && (this['boundKeys'][b['code']] = !0x0);
    }
    ['getBind'](p) {
        return this['binds'][p];
    }
    ['preventMenuBind'](p) {
        return p && this['menuHovered'] && (p['type'] == 0x2 || p['type'] == 0x3);
    }
    ['isKeyBound'](p) {
        return this['boundKeys'][p];
    }
    ['isBindPressed'](p) {
        const b = this['binds'][p];
        return !this['preventMenuBind'](b) && b && this['input']['isInputValuePressed'](b);
    }
    ['isBindReleased'](p) {
        const b = this['binds'][p];
        return !this['preventMenuBind'](b) && b && this['input']['isInputValueReleased'](b);
    }
    ['isBindDown'](p) {
        const b = this['binds'][p];
        return !this['preventMenuBind'](b) && b && this['input']['isInputValueDown'](b);
    }
    ['loadDefaultBinds']() {
        this['clearAllBinds']();
        const p = Object['keys'](Ue);
        for (let b = 0x0; b < p['length']; b++) {
            const XT = p[b]
              , XY = Ue[XT];
            this['setBind'](parseInt(XT), XY['defaultValue']);
        }
    }
}
class Ds {
    constructor(p, b) {
        this['input'] = p,
        this['inputBinds'] = b,
        this['input'] = p,
        this['inputBinds'] = b,
        j('.js-btn-keybind-restore')['on']('click', () => {
            this['inputBinds']['loadDefaultBinds'](),
            this['inputBinds']['saveBinds'](),
            this['refresh']();
        }
        );
    }
    ['cancelBind']() {
        this['input']['captureNextInput'](null);
    }
    ['refresh']() {
        const p = Object['keys'](Ue)
          , b = this['inputBinds']['binds']
          , XT = j('.js-keybind-list');
        XT['empty']();
        for (let XY = 0x0; XY < p['length']; XY++) {
            const XC = p[XY]
              , Xl = Ue[XC]
              , Xd = b[XC]
              , Xk = j('<a/>', {
                'class': 'btn-game-menu\x20btn-darken\x20btn-keybind-desc',
                'text': Xl['name']
            })
              , XU = j('<div/>', {
                'class': 'btn-keybind-display',
                'text': Xd ? Xd['toString']() : ''
            });
            Xk['on']('click', XW => {
                const XD = j(XW['target']);
                XD['addClass']('btn-keybind-desc-selected'),
                this['input']['captureNextInput']( (XG, XF) => {
                    XG['preventDefault'](),
                    XG['stopPropagation']();
                    const XH = [H['Control'], H['Shift'], H['Alt'], H['Windows'], H['ContextMenu'], H['F1'], H['F2'], H['F3'], H['F4'], H['F5'], H['F6'], H['F7'], H['F8'], H['F9'], H['F10'], H['F11'], H['F12']];
                    if (XF['type'] == ve['Key'] && XH['includes'](XF['code']))
                        return !0x1;
                    if (XD['removeClass']('btn-keybind-desc-selected'),
                    !XF['equals'](oe(H['Escape']))) {
                        let p0 = XF;
                        XF['equals'](oe(H['Backspace'])) && (p0 = null),
                        this['inputBinds']['setBind'](parseInt(XC), p0),
                        this['inputBinds']['saveBinds'](),
                        this['refresh']();
                    }
                    return !0x0;
                }
                );
            }
            ),
            XT['append'](j('<div/>', {
                'class': 'ui-keybind-container'
            })['append'](Xk)['append'](XU));
        }
        j('#keybind-link')['html'](this['inputBinds']['toBase64']());
    }
}
var yt = [{
    'region': 'na',
    'zone': 'na',
    'url': 'usr.mathsiscoolfun.com:8001',
    'https': !0x0
}, {
    'region': 'eu',
    'zone': 'eu',
    'url': 'eur.mathsiscoolfun.com:8001',
    'https': !0x0
}, {
    'region': 'asia',
    'zone': 'asia',
    'url': 'asr.mathsiscoolfun.com:8001',
    'https': !0x0
}, {
    'region': 'sa',
    'zone': 'sa',
    'url': 'sa.mathsiscoolfun.com:8001',
    'https': !0x0
}];
class Ls {
    ['ptcDataBuf'] = new ArrayBuffer(0x1);
    ['tests'] = yt['map'](e => ({
        'region': e['region'],
        'zone': e['zone'],
        'url': e['url'],
        'https': e['https'],
        'ping': 0x270f,
        'active': !0x1,
        'complete': !0x1,
        'ws': null,
        'sendDelay': 0x0,
        'sendTime': 0x0,
        'sendCount': 0x0,
        'recvCount': 0x0,
        'recvCountMax': 0x6,
        'retryCount': 0x0,
        'retryCountMax': 0x1
    }));
    ['testsStarted'] = 0x0;
    ['testsCompleted'] = 0x0;
    ['printSummary'] = !0x0;
    ['start'](p) {
        if ('WebSocket'in window) {
            let b = 0x0;
            for (let XT = 0x0; XT < this['tests']['length']; XT++) {
                const XY = this['tests'][XT];
                !XY['active'] && !XY['complete'] && p['includes'](XY['region']) && (XY['active'] = !0x0,
                this['testsStarted']++,
                b++);
            }
            b > 0x0 && (this['printSummary'] = !0x0);
        }
    }
    ['update'](p) {
        const b = XY => {
            XY['active'] = !0x1,
            XY['complete'] = !0x0,
            this['testsCompleted']++;
        }
          , XT = function(XY) {
            XY['ws'] && (XY['ws']['close'](),
            XY['ws'] = null),
            XY['complete'] || XY['retryCount']++ >= XY['retryCountMax'] && b(XY);
        };
        for (let XY = 0x0; XY < this['tests']['length']; XY++) {
            const XC = this['tests'][XY];
            if (!XC['active'])
                return 'continue';
            if (!XC['ws']) {
                const Xl = new WebSocket('ws' + (XC['https'] ? 's' : '') + '://' + XC['url'] + '/ptc');
                Xl['binaryType'] = 'arraybuffer',
                Xl['onopen'] = function() {}
                ,
                Xl['onmessage'] = function(Xd) {
                    const Xk = (Date['now']() - XC['sendTime']) / 0x3e8;
                    XC['ping'] = Math['min'](XC['ping'], Xk),
                    XC['recvCount']++,
                    XC['sendDelay'] = 0.125;
                }
                ,
                Xl['onerror'] = function(Xd) {
                    XT(XC);
                }
                ,
                Xl['onclose'] = function() {
                    XT(XC);
                }
                ,
                XC['ws'] = Xl,
                XC['sendDelay'] = 0x0,
                XC['sendCount'] = 0x0,
                XC['recvCount'] = 0x0;
            }
            if (XC['ws']['readyState'] == XC['ws']['OPEN']) {
                if (XC['sendDelay'] -= p,
                XC['sendCount'] == XC['recvCount'] && XC['sendDelay'] < 0x0) {
                    XC['sendTime'] = Date['now'](),
                    XC['sendCount']++;
                    try {
                        XC['ws']['send'](this['ptcDataBuf']);
                    } catch {
                        XC['ws']['close']();
                    }
                }
                XC['recvCount'] >= XC['recvCountMax'] && (b(XC),
                XC['ws']['close']());
            }
        }
        if (this['printSummary'] && this['isComplete']()) {
            const Xd = this['tests']['sort']( (Xk, XU) => Xk['ping'] - XU['ping']);
            console['log']('Ping\x20test\x20results'),
            console['log']('----------------------------------------');
            for (let Xk = 0x0; Xk < Xd['length']; Xk++) {
                const XU = Xd[Xk];
                console['log']('region', XU['region'], 'zone\x20\x20', XU['zone'], 'ping\x20\x20', XU['ping']);
            }
            this['printSummary'] = !0x1;
        }
    }
    ['isComplete']() {
        return this['testsCompleted'] == this['testsStarted'] && this['testsStarted'] > 0x0;
    }
    ['getRegionList']() {
        const p = [];
        for (let b = 0x0; b < yt['length']; b++) {
            const XT = yt[b]['region'];
            p['includes'](XT) || p['push'](XT);
        }
        return p;
    }
    ['getRegion']() {
        return this['tests']['sort']( (p, b) => p['ping'] - b['ping']),
        this['tests'][0x0]['region'];
    }
    ['getZones'](p) {
        const b = this['tests']['sort']( (XY, XC) => XY['ping'] - XC['ping'])
          , XT = [];
        for (let XY = 0x0; XY < b['length']; XY++) {
            const XC = b[XY];
            XC['region'] == p && XT['push'](XC['zone']);
        }
        return XT;
    }
}
const As = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22loadout-0-100-71653988.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22part-aura-circle-01.img\x22:{\x22frame\x22:{\x22x\x22:508,\x22y\x22:2,\x22w\x22:284,\x22h\x22:282},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:3,\x22w\x22:284,\x22h\x22:282},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22ping-map-pulse.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:502,\x22h\x22:502},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:502,\x22h\x22:502},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22part-shell-05.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:508,\x22w\x22:63,\x22h\x22:260},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:63,\x22h\x22:260},\x22sourceSize\x22:{\x22w\x22:63,\x22h\x22:260}},\x22emote-circle-outer.img\x22:{\x22frame\x22:{\x22x\x22:69,\x22y\x22:508,\x22w\x22:252,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:252,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22part-smoke-03.img\x22:{\x22frame\x22:{\x22x\x22:325,\x22y\x22:508,\x22w\x22:255,\x22h\x22:251},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:255,\x22h\x22:251},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22part-smoke-02.img\x22:{\x22frame\x22:{\x22x\x22:796,\x22y\x22:2,\x22w\x22:256,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:256,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22gun-scarssr-01.img\x22:{\x22frame\x22:{\x22x\x22:796,\x22y\x22:256,\x22w\x22:62,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:62,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:248}},\x22gun-potato-cannon-01.img\x22:{\x22frame\x22:{\x22x\x22:862,\x22y\x22:256,\x22w\x22:58,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:58,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:248}},\x22gun-awc-02.img\x22:{\x22frame\x22:{\x22x\x22:924,\x22y\x22:256,\x22w\x22:47,\x22h\x22:228},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:9,\x22w\x22:47,\x22h\x22:228},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:236}},\x22gun-awc-01.img\x22:{\x22frame\x22:{\x22x\x22:975,\x22y\x22:256,\x22w\x22:47,\x22h\x22:228},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:9,\x22w\x22:47,\x22h\x22:228},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:236}},\x22gun-m249-top-01.img\x22:{\x22frame\x22:{\x22x\x22:796,\x22y\x22:510,\x22w\x22:38,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:17,\x22w\x22:38,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22gun-garand-01.img\x22:{\x22frame\x22:{\x22x\x22:838,\x22y\x22:510,\x22w\x22:34,\x22h\x22:214},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:19,\x22w\x22:34,\x22h\x22:214},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:232}},\x22gun-potato-smg-01.img\x22:{\x22frame\x22:{\x22x\x22:876,\x22y\x22:510,\x22w\x22:101,\x22h\x22:212},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:37,\x22w\x22:101,\x22h\x22:212},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:248}},\x22gun-usas-01.img\x22:{\x22frame\x22:{\x22x\x22:981,\x22y\x22:510,\x22w\x22:43,\x22h\x22:210},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:23,\x22w\x22:43,\x22h\x22:210},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22gun-vss-01.img\x22:{\x22frame\x22:{\x22x\x22:508,\x22y\x22:288,\x22w\x22:40,\x22h\x22:210},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:210},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:208}},\x22pad.img\x22:{\x22frame\x22:{\x22x\x22:552,\x22y\x22:288,\x22w\x22:208,\x22h\x22:208},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:208,\x22h\x22:208},\x22sourceSize\x22:{\x22w\x22:208,\x22h\x22:208}},\x22gun-scorpion-01.img\x22:{\x22frame\x22:{\x22x\x22:584,\x22y\x22:508,\x22w\x22:41,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:9,\x22w\x22:41,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:208}},\x22gun-pkp-top-01.img\x22:{\x22frame\x22:{\x22x\x22:629,\x22y\x22:508,\x22w\x22:36,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:39,\x22w\x22:36,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22gun-grozas-01.img\x22:{\x22frame\x22:{\x22x\x22:669,\x22y\x22:508,\x22w\x22:40,\x22h\x22:191},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:18,\x22w\x22:40,\x22h\x22:191},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:208}},\x22part-shell-02.img\x22:{\x22frame\x22:{\x22x\x22:713,\x22y\x22:508,\x22w\x22:63,\x22h\x22:190},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:63,\x22h\x22:190},\x22sourceSize\x22:{\x22w\x22:63,\x22h\x22:190}},\x22gun-m4a1-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:772,\x22w\x22:44,\x22h\x22:189},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:8,\x22w\x22:44,\x22h\x22:189},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:196}},\x22gun-long-01.img\x22:{\x22frame\x22:{\x22x\x22:50,\x22y\x22:772,\x22w\x22:31,\x22h\x22:186},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:31,\x22h\x22:186},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:188}},\x22part-shell-03.img\x22:{\x22frame\x22:{\x22x\x22:85,\x22y\x22:772,\x22w\x22:63,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:63,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:63,\x22h\x22:180}},\x22player-helmet-forest.img\x22:{\x22frame\x22:{\x22x\x22:152,\x22y\x22:772,\x22w\x22:150,\x22h\x22:178},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:150,\x22h\x22:178},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22gun-saiga-01.img\x22:{\x22frame\x22:{\x22x\x22:306,\x22y\x22:772,\x22w\x22:40,\x22h\x22:174},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:6,\x22w\x22:40,\x22h\x22:174},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:196}},\x22player-wading-01.img\x22:{\x22frame\x22:{\x22x\x22:350,\x22y\x22:772,\x22w\x22:170,\x22h\x22:170},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:170,\x22h\x22:170},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:172}},\x22gun-famas-01.img\x22:{\x22frame\x22:{\x22x\x22:524,\x22y\x22:772,\x22w\x22:38,\x22h\x22:168},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:41,\x22w\x22:38,\x22h\x22:168},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:208}},\x22part-shell-04.img\x22:{\x22frame\x22:{\x22x\x22:566,\x22y\x22:772,\x22w\x22:55,\x22h\x22:164},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:55,\x22h\x22:164},\x22sourceSize\x22:{\x22w\x22:55,\x22h\x22:164}},\x22loot-melee-machete-taiga.img\x22:{\x22frame\x22:{\x22x\x22:625,\x22y\x22:772,\x22w\x22:44,\x22h\x22:164},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:60,\x22y\x22:3,\x22w\x22:44,\x22h\x22:164},\x22sourceSize\x22:{\x22w\x22:168,\x22h\x22:168}},\x22part-airdrop-03.img\x22:{\x22frame\x22:{\x22x\x22:673,\x22y\x22:772,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22part-airdrop-02x.img\x22:{\x22frame\x22:{\x22x\x22:837,\x22y\x22:772,\x22w\x22:38,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:38,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:160}},\x22part-airdrop-02.img\x22:{\x22frame\x22:{\x22x\x22:879,\x22y\x22:772,\x22w\x22:38,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:38,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:160}},\x22proj-bomb-iron-01.img\x22:{\x22frame\x22:{\x22x\x22:921,\x22y\x22:772,\x22w\x22:66,\x22h\x22:157},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:47,\x22y\x22:2,\x22w\x22:66,\x22h\x22:157},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22proj-smoke-nopin.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:2,\x22w\x22:152,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:3,\x22w\x22:152,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22proj-smoke-pin.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:161,\x22w\x22:152,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:3,\x22w\x22:152,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-melee-bonesaw-healer.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:320,\x22w\x22:60,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:10,\x22w\x22:60,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:168,\x22h\x22:168}},\x22loot-melee-bonesaw-rusted.img\x22:{\x22frame\x22:{\x22x\x22:1120,\x22y\x22:320,\x22w\x22:54,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:81,\x22y\x22:22,\x22w\x22:54,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:192}},\x22loot-melee-kukri-sniper.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:479,\x22w\x22:40,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:54,\x22y\x22:3,\x22w\x22:40,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-melee-kukri-trad.img\x22:{\x22frame\x22:{\x22x\x22:1100,\x22y\x22:479,\x22w\x22:40,\x22h\x22:155},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:54,\x22y\x22:3,\x22w\x22:40,\x22h\x22:155},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-melee-spade-assault.img\x22:{\x22frame\x22:{\x22x\x22:1144,\x22y\x22:479,\x22w\x22:54,\x22h\x22:150},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:53,\x22y\x22:5,\x22w\x22:54,\x22h\x22:150},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22gun-groza-01.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:638,\x22w\x22:40,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:61,\x22w\x22:40,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:208}},\x22player-circle-base-01.img\x22:{\x22frame\x22:{\x22x\x22:1056,\x22y\x22:790,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22player-circle-base-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:965,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22player-armor-base-01.img\x22:{\x22frame\x22:{\x22x\x22:152,\x22y\x22:965,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22player-helmet-moon.img\x22:{\x22frame\x22:{\x22x\x22:302,\x22y\x22:965,\x22w\x22:120,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:15,\x22w\x22:120,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22proj-smoke-nopin-nolever.img\x22:{\x22frame\x22:{\x22x\x22:1100,\x22y\x22:638,\x22w\x22:76,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:42,\x22y\x22:7,\x22w\x22:76,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-circle-outer-05.img\x22:{\x22frame\x22:{\x22x\x22:426,\x22y\x22:965,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22ping-border.img\x22:{\x22frame\x22:{\x22x\x22:574,\x22y\x22:965,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-circle-outer-02.img\x22:{\x22frame\x22:{\x22x\x22:722,\x22y\x22:965,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22loot-circle-outer-01.img\x22:{\x22frame\x22:{\x22x\x22:870,\x22y\x22:965,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22proj-mirv-nopin.img\x22:{\x22frame\x22:{\x22x\x22:1018,\x22y\x22:965,\x22w\x22:102,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:2,\x22w\x22:102,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:148}},\x22proj-mirv-pin.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:2,\x22w\x22:102,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:102,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:148}},\x22proj-mirv-nopin-nolever.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:150,\x22w\x22:76,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:2,\x22w\x22:76,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:148}},\x22gun-bugle-01.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:298,\x22w\x22:64,\x22h\x22:143},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:89,\x22w\x22:64,\x22h\x22:143},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:232}},\x22player-star.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1115,\x22w\x22:148,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:148,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22star.img\x22:{\x22frame\x22:{\x22x\x22:154,\x22y\x22:1115,\x22w\x22:148,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:148,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22player-ripple-01.img\x22:{\x22frame\x22:{\x22x\x22:306,\x22y\x22:1115,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:142,\x22h\x22:142}},\x22part-plank-01.img\x22:{\x22frame\x22:{\x22x\x22:452,\x22y\x22:1115,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22part-panel-01.img\x22:{\x22frame\x22:{\x22x\x22:598,\x22y\x22:1115,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22part-woodchip-01.img\x22:{\x22frame\x22:{\x22x\x22:744,\x22y\x22:1115,\x22w\x22:141,\x22h\x22:140},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:141,\x22h\x22:140},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22player-the-hunted.img\x22:{\x22frame\x22:{\x22x\x22:889,\x22y\x22:1115,\x22w\x22:140,\x22h\x22:138},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:3,\x22w\x22:140,\x22h\x22:138},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22part-book-01.img\x22:{\x22frame\x22:{\x22x\x22:1033,\x22y\x22:1115,\x22w\x22:104,\x22h\x22:138},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:3,\x22w\x22:104,\x22h\x22:138},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-melee-crowbar-scout.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:445,\x22w\x22:37,\x22h\x22:138},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:54,\x22y\x22:7,\x22w\x22:37,\x22h\x22:138},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-melee-crowbar-recon.img\x22:{\x22frame\x22:{\x22x\x22:1253,\x22y\x22:445,\x22w\x22:37,\x22h\x22:138},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:54,\x22y\x22:7,\x22w\x22:37,\x22h\x22:138},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-helmet-last-man-01.img\x22:{\x22frame\x22:{\x22x\x22:1141,\x22y\x22:1115,\x22w\x22:139,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:20,\x22w\x22:139,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-last-man-02.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:2,\x22w\x22:139,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:20,\x22w\x22:139,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-base-02.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:142,\x22w\x22:136,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:136,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-01.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:282,\x22w\x22:136,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:136,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22part-pot-01.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:422,\x22w\x22:94,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:4,\x22w\x22:94,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22player-base-outfitParmaPrestige.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:562,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22player-base-outfitLumber.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:700,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-outfitWheat.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:838,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-outfitHeaven.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:976,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-outfitTurkey.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:1114,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-outfitDC.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1261,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22player-base-outfitSpetsnaz.img\x22:{\x22frame\x22:{\x22x\x22:140,\x22y\x22:1261,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:140}},\x22loot-circle-outer-04.img\x22:{\x22frame\x22:{\x22x\x22:278,\x22y\x22:1261,\x22w\x22:140,\x22h\x22:133},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:140,\x22h\x22:133},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22part-shell-01.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:587,\x22w\x22:56,\x22h\x22:133},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:133},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:133}},\x22player-king-woods.img\x22:{\x22frame\x22:{\x22x\x22:422,\x22y\x22:1261,\x22w\x22:140,\x22h\x22:132},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:8,\x22w\x22:140,\x22h\x22:132},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22part-plate-01.img\x22:{\x22frame\x22:{\x22x\x22:566,\x22y\x22:1261,\x22w\x22:138,\x22h\x22:132},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:138,\x22h\x22:132},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-melee-warhammer-tank.img\x22:{\x22frame\x22:{\x22x\x22:708,\x22y\x22:1261,\x22w\x22:255,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:18,\x22w\x22:255,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:264,\x22h\x22:152}},\x22part-splat-02.img\x22:{\x22frame\x22:{\x22x\x22:967,\x22y\x22:1261,\x22w\x22:123,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:8,\x22w\x22:123,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22gun-mp220-01.img\x22:{\x22frame\x22:{\x22x\x22:1416,\x22y\x22:422,\x22w\x22:40,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:128}},\x22flag-colombia.img\x22:{\x22frame\x22:{\x22x\x22:1094,\x22y\x22:1261,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-croatia.img\x22:{\x22frame\x22:{\x22x\x22:1226,\x22y\x22:1261,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-czech-republic.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:2,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-denmark.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:134,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-dominican-republic.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:266,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-ecuador.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:398,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-egypt.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:530,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-estonia.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:662,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-finland.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:794,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-france.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:926,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-georgia.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:1058,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-germany.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:1190,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-greece.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-guatemala.img\x22:{\x22frame\x22:{\x22x\x22:134,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-honduras.img\x22:{\x22frame\x22:{\x22x\x22:266,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-scope-00.img\x22:{\x22frame\x22:{\x22x\x22:398,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-hungary.img\x22:{\x22frame\x22:{\x22x\x22:530,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-india.img\x22:{\x22frame\x22:{\x22x\x22:662,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-indonesia.img\x22:{\x22frame\x22:{\x22x\x22:794,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-israel.img\x22:{\x22frame\x22:{\x22x\x22:926,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-italy.img\x22:{\x22frame\x22:{\x22x\x22:1058,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-japan.img\x22:{\x22frame\x22:{\x22x\x22:1190,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-kazakhstan.img\x22:{\x22frame\x22:{\x22x\x22:1322,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-latvia.img\x22:{\x22frame\x22:{\x22x\x22:1454,\x22y\x22:1399,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-lithuania.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:2,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-malaysia.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:134,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-mexico.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:266,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-moldova.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:398,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-morocco.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:530,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-netherlands.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:662,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-new-zealand.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:794,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-norway.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:926,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-peru.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:1058,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-philippines.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:1190,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-portugal.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:1322,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-republic-of-poland.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-romania.img\x22:{\x22frame\x22:{\x22x\x22:134,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-russia.img\x22:{\x22frame\x22:{\x22x\x22:266,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-serbia.img\x22:{\x22frame\x22:{\x22x\x22:398,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-singapore.img\x22:{\x22frame\x22:{\x22x\x22:530,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-slovakia.img\x22:{\x22frame\x22:{\x22x\x22:662,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-south-korea.img\x22:{\x22frame\x22:{\x22x\x22:794,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-spain.img\x22:{\x22frame\x22:{\x22x\x22:926,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-sweden.img\x22:{\x22frame\x22:{\x22x\x22:1058,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-switzerland.img\x22:{\x22frame\x22:{\x22x\x22:1190,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-taiwan.img\x22:{\x22frame\x22:{\x22x\x22:1322,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-thailand.img\x22:{\x22frame\x22:{\x22x\x22:1454,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-trinidad-and-tobago.img\x22:{\x22frame\x22:{\x22x\x22:1586,\x22y\x22:1531,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-turkey.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:2,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-ukraine.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:134,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-united-arab-emirates.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:266,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-united-kingdom.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:398,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-united-states-of-america.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:530,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-uruguay.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:662,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-venezuela.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:794,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-vietnam.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:926,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-scope-02.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1058,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-hong-kong.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1190,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-scope-01.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1322,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-angel-treat.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1454,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-scope-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-crosshair.img\x22:{\x22frame\x22:{\x22x\x22:134,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-ammo-box.img\x22:{\x22frame\x22:{\x22x\x22:266,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-albania.img\x22:{\x22frame\x22:{\x22x\x22:398,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-scope-04.img\x22:{\x22frame\x22:{\x22x\x22:530,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-algeria.img\x22:{\x22frame\x22:{\x22x\x22:662,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-argentina.img\x22:{\x22frame\x22:{\x22x\x22:794,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-deagle-dual.img\x22:{\x22frame\x22:{\x22x\x22:926,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-australia.img\x22:{\x22frame\x22:{\x22x\x22:1058,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-austria.img\x22:{\x22frame\x22:{\x22x\x22:1190,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-azerbaijan.img\x22:{\x22frame\x22:{\x22x\x22:1322,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-belarus.img\x22:{\x22frame\x22:{\x22x\x22:1454,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m93r-dual.img\x22:{\x22frame\x22:{\x22x\x22:1586,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-belgium.img\x22:{\x22frame\x22:{\x22x\x22:1718,\x22y\x22:1663,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-bolivia.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:2,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-bosnia-and-herzegovina.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:134,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-brazil.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:266,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-canada.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:398,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-chile.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:530,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flag-china.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:662,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-map-coming.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:794,\x22w\x22:112,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:112,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:256}},\x22loot-weapon-flare-gun-dual.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:926,\x22w\x22:110,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:110,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m93r.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1058,\x22w\x22:100,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:0,\x22w\x22:100,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-helmet-potato.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1190,\x22w\x22:99,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:24,\x22w\x22:99,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-medic.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1322,\x22w\x22:97,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:24,\x22w\x22:97,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-lieutenant.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1454,\x22w\x22:97,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:24,\x22w\x22:97,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-leader.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1586,\x22w\x22:97,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:24,\x22w\x22:97,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22indicator.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:724,\x22w\x22:90,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:0,\x22w\x22:90,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-airdrop-04.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:856,\x22w\x22:54,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:128}},\x22ping-map-danger.img\x22:{\x22frame\x22:{\x22x\x22:1272,\x22y\x22:587,\x22w\x22:40,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:44,\x22y\x22:0,\x22w\x22:40,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-aoe-heal.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1795,\x22w\x22:127,\x22h\x22:127},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:127,\x22h\x22:127},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-circle-outer-03.img\x22:{\x22frame\x22:{\x22x\x22:133,\x22y\x22:1795,\x22w\x22:146,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:146,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22ping-team-danger.img\x22:{\x22frame\x22:{\x22x\x22:283,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-poo.img\x22:{\x22frame\x22:{\x22x\x22:413,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-team-unlock.img\x22:{\x22frame\x22:{\x22x\x22:543,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-team-airdrop.img\x22:{\x22frame\x22:{\x22x\x22:673,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-team-help.img\x22:{\x22frame\x22:{\x22x\x22:803,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-team-coming.img\x22:{\x22frame\x22:{\x22x\x22:933,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-team-airstrike.img\x22:{\x22frame\x22:{\x22x\x22:1063,\x22y\x22:1795,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-imp-trick.img\x22:{\x22frame\x22:{\x22x\x22:1193,\x22y\x22:1795,\x22w\x22:124,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:124,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-thinking.img\x22:{\x22frame\x22:{\x22x\x22:1321,\x22y\x22:1795,\x22w\x22:124,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-grozas.img\x22:{\x22frame\x22:{\x22x\x22:1449,\x22y\x22:1795,\x22w\x22:122,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:122,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ot38-dual.img\x22:{\x22frame\x22:{\x22x\x22:1575,\x22y\x22:1795,\x22w\x22:121,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:121,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-colt45-dual.img\x22:{\x22frame\x22:{\x22x\x22:1700,\x22y\x22:1795,\x22w\x22:120,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:120,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mkg45.img\x22:{\x22frame\x22:{\x22x\x22:1824,\x22y\x22:1795,\x22w\x22:116,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:116,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m4a1.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:2,\x22w\x22:116,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:116,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m1014.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:132,\x22w\x22:110,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:1,\x22w\x22:110,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-svd.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:262,\x22w\x22:110,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:1,\x22w\x22:110,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-vss.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:392,\x22w\x22:108,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:108,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ots38-dual.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:522,\x22w\x22:105,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:1,\x22w\x22:105,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-helmet-grenadier.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:652,\x22w\x22:95,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:28,\x22y\x22:25,\x22w\x22:95,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-bugler.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:782,\x22w\x22:95,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:28,\x22y\x22:25,\x22w\x22:95,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-helmet-recon.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:912,\x22w\x22:95,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:28,\x22y\x22:25,\x22w\x22:95,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22player-visor-scout.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1042,\x22w\x22:77,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:76,\x22y\x22:25,\x22w\x22:77,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22gun-deagle-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1172,\x22w\x22:42,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:107,\x22w\x22:42,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22gun-med-01.img\x22:{\x22frame\x22:{\x22x\x22:2070,\x22y\x22:1042,\x22w\x22:30,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:30,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:128}},\x22proj-strobe-unarmed.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1926,\x22w\x22:147,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:25,\x22w\x22:147,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22star-red.img\x22:{\x22frame\x22:{\x22x\x22:153,\x22y\x22:1926,\x22w\x22:132,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:6,\x22w\x22:132,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22star-blue.img\x22:{\x22frame\x22:{\x22x\x22:289,\x22y\x22:1926,\x22w\x22:132,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:6,\x22w\x22:132,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22face-alien.img\x22:{\x22frame\x22:{\x22x\x22:425,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22snowflake.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1302,\x22w\x22:114,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:114,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-dp28.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1431,\x22w\x22:114,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:114,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-boost-naturalize.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1560,\x22w\x22:94,\x22h\x22:125},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:2,\x22w\x22:94,\x22h\x22:125},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-imp.img\x22:{\x22frame\x22:{\x22x\x22:553,\x22y\x22:1926,\x22w\x22:126,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:126,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-heart.img\x22:{\x22frame\x22:{\x22x\x22:683,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-sob.img\x22:{\x22frame\x22:{\x22x\x22:811,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-sad.img\x22:{\x22frame\x22:{\x22x\x22:939,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-upsidedown.img\x22:{\x22frame\x22:{\x22x\x22:1067,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-monocle.img\x22:{\x22frame\x22:{\x22x\x22:1195,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-joy.img\x22:{\x22frame\x22:{\x22x\x22:1323,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-log-01.img\x22:{\x22frame\x22:{\x22x\x22:1451,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-emote.img\x22:{\x22frame\x22:{\x22x\x22:1579,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-sunglass.img\x22:{\x22frame\x22:{\x22x\x22:1707,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-happy.img\x22:{\x22frame\x22:{\x22x\x22:1835,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-disappoint.img\x22:{\x22frame\x22:{\x22x\x22:1963,\x22y\x22:1926,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-targeting.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-bandaged.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:130,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-angry.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:258,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-picasso.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:386,\x22w\x22:122,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:122,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-splinter.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:514,\x22w\x22:116,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:116,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22campfire.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:642,\x22w\x22:116,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:116,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-an94.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:770,\x22w\x22:114,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:114,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-pkp.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:898,\x22w\x22:114,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:114,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m1a1.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1026,\x22w\x22:113,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:113,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-scorpion.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1154,\x22w\x22:113,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:113,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-potato-smg.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1282,\x22w\x22:111,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:2,\x22w\x22:111,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22reload.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1410,\x22w\x22:108,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:2,\x22w\x22:108,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22trash.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1538,\x22w\x22:108,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:2,\x22w\x22:108,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22thumbs-up.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1666,\x22w\x22:104,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:2,\x22w\x22:104,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22bullets.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1794,\x22w\x22:86,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:2,\x22w\x22:86,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-splat-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2055,\x22w\x22:126,\x22h\x22:123},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:9,\x22w\x22:126,\x22h\x22:123},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-weapon-saiga.img\x22:{\x22frame\x22:{\x22x\x22:2109,\x22y\x22:1922,\x22w\x22:112,\x22h\x22:123},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:3,\x22w\x22:112,\x22h\x22:123},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22tombstone.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1689,\x22w\x22:112,\x22h\x22:123},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:112,\x22h\x22:123},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m39.img\x22:{\x22frame\x22:{\x22x\x22:132,\x22y\x22:2055,\x22w\x22:108,\x22h\x22:123},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:3,\x22w\x22:108,\x22h\x22:123},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22police.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:988,\x22w\x22:100,\x22h\x22:123},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:2,\x22w\x22:100,\x22h\x22:123},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-gotw.img\x22:{\x22frame\x22:{\x22x\x22:244,\x22y\x22:2055,\x22w\x22:128,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:128,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-leadership.img\x22:{\x22frame\x22:{\x22x\x22:376,\x22y\x22:2055,\x22w\x22:128,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:128,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-firepower.img\x22:{\x22frame\x22:{\x22x\x22:508,\x22y\x22:2055,\x22w\x22:126,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:126,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-bar.img\x22:{\x22frame\x22:{\x22x\x22:638,\x22y\x22:2055,\x22w\x22:126,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:126,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-scarssr.img\x22:{\x22frame\x22:{\x22x\x22:768,\x22y\x22:2055,\x22w\x22:125,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:125,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22heart.img\x22:{\x22frame\x22:{\x22x\x22:897,\x22y\x22:2055,\x22w\x22:124,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:4,\x22w\x22:124,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22surviv.img\x22:{\x22frame\x22:{\x22x\x22:1025,\x22y\x22:2055,\x22w\x22:122,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:122,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-hunted.img\x22:{\x22frame\x22:{\x22x\x22:1151,\x22y\x22:2055,\x22w\x22:122,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:122,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22emote.img\x22:{\x22frame\x22:{\x22x\x22:1277,\x22y\x22:2055,\x22w\x22:122,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:122,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-potato-cannon.img\x22:{\x22frame\x22:{\x22x\x22:1403,\x22y\x22:2055,\x22w\x22:122,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:122,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mk12.img\x22:{\x22frame\x22:{\x22x\x22:1529,\x22y\x22:2055,\x22w\x22:114,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:3,\x22w\x22:114,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22cupcake.img\x22:{\x22frame\x22:{\x22x\x22:1647,\x22y\x22:2055,\x22w\x22:108,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:3,\x22w\x22:108,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22candy-corn.img\x22:{\x22frame\x22:{\x22x\x22:1759,\x22y\x22:2055,\x22w\x22:104,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:3,\x22w\x22:104,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-heal-tomoe.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:2055,\x22w\x22:104,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:3,\x22w\x22:104,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22snowman.img\x22:{\x22frame\x22:{\x22x\x22:1358,\x22y\x22:1261,\x22w\x22:96,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:3,\x22w\x22:96,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-rare-potato.img\x22:{\x22frame\x22:{\x22x\x22:1975,\x22y\x22:2055,\x22w\x22:90,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:3,\x22w\x22:90,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-smoke.img\x22:{\x22frame\x22:{\x22x\x22:1124,\x22y\x22:965,\x22w\x22:84,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:3,\x22w\x22:84,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ice-cream.img\x22:{\x22frame\x22:{\x22x\x22:2035,\x22y\x22:1172,\x22w\x22:66,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:31,\x22y\x22:3,\x22w\x22:66,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-p30l-01.img\x22:{\x22frame\x22:{\x22x\x22:2199,\x22y\x22:1794,\x22w\x22:33,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:111,\x22w\x22:33,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22loadout-melee.img\x22:{\x22frame\x22:{\x22x\x22:2069,\x22y\x22:2055,\x22w\x22:123,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:123,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-awc.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:2,\x22w\x22:122,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:6,\x22w\x22:122,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-l86.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:127,\x22w\x22:118,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:118,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m249.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:252,\x22w\x22:116,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:4,\x22w\x22:116,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-pin-02.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:377,\x22w\x22:110,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:6,\x22w\x22:110,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-pin-01.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:502,\x22w\x22:110,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:6,\x22w\x22:110,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-nopin-01.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:627,\x22w\x22:109,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:6,\x22w\x22:109,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-nopin-02.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:752,\x22w\x22:109,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:6,\x22w\x22:109,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-nopin-nolever-01.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:877,\x22w\x22:90,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:6,\x22w\x22:90,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-nopin-nolever-02.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1002,\x22w\x22:90,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:6,\x22w\x22:90,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22chicken-dinner.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2182,\x22w\x22:128,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:128,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-splat-03.img\x22:{\x22frame\x22:{\x22x\x22:134,\x22y\x22:2182,\x22w\x22:123,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:6,\x22w\x22:123,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-weapon-usas.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1127,\x22w\x22:122,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:122,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-chambered.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1251,\x22w\x22:120,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:120,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22rainbow.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1375,\x22w\x22:119,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:119,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-qbb97.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1499,\x22w\x22:118,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:118,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ak.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1623,\x22w\x22:102,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:4,\x22w\x22:102,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22egg.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1747,\x22w\x22:98,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:4,\x22w\x22:98,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-colt45.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1871,\x22w\x22:96,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:4,\x22w\x22:96,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ots38.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:1995,\x22w\x22:81,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:4,\x22w\x22:81,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-chest-02.img\x22:{\x22frame\x22:{\x22x\x22:261,\x22y\x22:2182,\x22w\x22:76,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:4,\x22w\x22:76,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m1911-dual.img\x22:{\x22frame\x22:{\x22x\x22:341,\x22y\x22:2182,\x22w\x22:128,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:128,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m1100.img\x22:{\x22frame\x22:{\x22x\x22:473,\x22y\x22:2182,\x22w\x22:119,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:7,\x22w\x22:119,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m1911.img\x22:{\x22frame\x22:{\x22x\x22:596,\x22y\x22:2182,\x22w\x22:107,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:5,\x22w\x22:107,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-hk416.img\x22:{\x22frame\x22:{\x22x\x22:707,\x22y\x22:2182,\x22w\x22:105,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:4,\x22w\x22:105,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:816,\x22y\x22:2182,\x22w\x22:94,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:4,\x22w\x22:94,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-windwalk.img\x22:{\x22frame\x22:{\x22x\x22:914,\x22y\x22:2182,\x22w\x22:86,\x22h\x22:119},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:6,\x22w\x22:86,\x22h\x22:119},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m9-dual.img\x22:{\x22frame\x22:{\x22x\x22:1004,\x22y\x22:2182,\x22w\x22:128,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:128,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22salt.img\x22:{\x22frame\x22:{\x22x\x22:1136,\x22y\x22:2182,\x22w\x22:124,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:5,\x22w\x22:124,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-sv98.img\x22:{\x22frame\x22:{\x22x\x22:1264,\x22y\x22:2182,\x22w\x22:121,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:7,\x22w\x22:121,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22skull.img\x22:{\x22frame\x22:{\x22x\x22:1389,\x22y\x22:2182,\x22w\x22:120,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:120,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22donut.img\x22:{\x22frame\x22:{\x22x\x22:1513,\x22y\x22:2182,\x22w\x22:120,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:120,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-kill-icon.img\x22:{\x22frame\x22:{\x22x\x22:1637,\x22y\x22:2182,\x22w\x22:120,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:120,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-feather-01.img\x22:{\x22frame\x22:{\x22x\x22:1761,\x22y\x22:2182,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-fabricate.img\x22:{\x22frame\x22:{\x22x\x22:1883,\x22y\x22:2182,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-stump-01.img\x22:{\x22frame\x22:{\x22x\x22:2005,\x22y\x22:2182,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-feather-02.img\x22:{\x22frame\x22:{\x22x\x22:2127,\x22y\x22:2182,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-heal-basic.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:2,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-chest-01.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:124,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22mag-glass.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:246,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-boost-basic.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:368,\x22w\x22:116,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:5,\x22w\x22:116,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-heal-moon.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:490,\x22w\x22:114,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:5,\x22w\x22:114,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ump9.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:612,\x22w\x22:114,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:5,\x22w\x22:114,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-famas.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:734,\x22w\x22:112,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:5,\x22w\x22:112,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-vector45.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:856,\x22w\x22:104,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:5,\x22w\x22:104,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-04.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:978,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-01.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1100,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-chest-03.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1222,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m9.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1344,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-02.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1466,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-06.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1588,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-03.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1710,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-book-05.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1832,\x22w\x22:96,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:5,\x22w\x22:96,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-pack-00.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:1954,\x22w\x22:90,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:5,\x22w\x22:90,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-pack-02.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:2076,\x22w\x22:88,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:5,\x22w\x22:88,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ok.img\x22:{\x22frame\x22:{\x22x\x22:2249,\x22y\x22:2182,\x22w\x22:84,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:5,\x22w\x22:84,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-bayonet-rugged.img\x22:{\x22frame\x22:{\x22x\x22:2322,\x22y\x22:1995,\x22w\x22:36,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:46,\x22y\x22:5,\x22w\x22:36,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22crosshair022.img\x22:{\x22frame\x22:{\x22x\x22:3033,\x22y\x22:92,\x22w\x22:12,\x22h\x22:8},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:28,\x22w\x22:12,\x22h\x22:8},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-strobe-arming.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2306,\x22w\x22:134,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:27,\x22w\x22:134,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22proj-strobe-armed.img\x22:{\x22frame\x22:{\x22x\x22:140,\x22y\x22:2306,\x22w\x22:134,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:27,\x22w\x22:134,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-perk-steelskin.img\x22:{\x22frame\x22:{\x22x\x22:278,\x22y\x22:2306,\x22w\x22:82,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:5,\x22w\x22:82,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-heal-heart.img\x22:{\x22frame\x22:{\x22x\x22:364,\x22y\x22:2306,\x22w\x22:118,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:11,\x22w\x22:118,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mosin.img\x22:{\x22frame\x22:{\x22x\x22:486,\x22y\x22:2306,\x22w\x22:118,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:6,\x22w\x22:118,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-m870.img\x22:{\x22frame\x22:{\x22x\x22:608,\x22y\x22:2306,\x22w\x22:117,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:117,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-06.img\x22:{\x22frame\x22:{\x22x\x22:729,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-04.img\x22:{\x22frame\x22:{\x22x\x22:849,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-05.img\x22:{\x22frame\x22:{\x22x\x22:969,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-spark-01.img\x22:{\x22frame\x22:{\x22x\x22:1089,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22part-spark-02.img\x22:{\x22frame\x22:{\x22x\x22:1209,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22gas.img\x22:{\x22frame\x22:{\x22x\x22:1329,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-heal.img\x22:{\x22frame\x22:{\x22x\x22:1449,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-03.img\x22:{\x22frame\x22:{\x22x\x22:1569,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22target.img\x22:{\x22frame\x22:{\x22x\x22:1689,\x22y\x22:2306,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-boost.img\x22:{\x22frame\x22:{\x22x\x22:1809,\x22y\x22:2306,\x22w\x22:114,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:114,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22flex.img\x22:{\x22frame\x22:{\x22x\x22:1927,\x22y\x22:2306,\x22w\x22:109,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:6,\x22w\x22:109,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-medical-bandage.img\x22:{\x22frame\x22:{\x22x\x22:2040,\x22y\x22:2306,\x22w\x22:106,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:6,\x22w\x22:106,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22acorn.img\x22:{\x22frame\x22:{\x22x\x22:2150,\x22y\x22:2306,\x22w\x22:104,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:6,\x22w\x22:104,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ghost-base.img\x22:{\x22frame\x22:{\x22x\x22:2258,\x22y\x22:2306,\x22w\x22:104,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:6,\x22w\x22:104,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-scar.img\x22:{\x22frame\x22:{\x22x\x22:2366,\x22y\x22:2306,\x22w\x22:104,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:6,\x22w\x22:104,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-pack-01.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:2,\x22w\x22:94,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:6,\x22w\x22:94,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22bugle-inspiration-red.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:122,\x22w\x22:88,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:6,\x22w\x22:88,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22bugle-inspiration-blue.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:242,\x22w\x22:88,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:6,\x22w\x22:88,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-flare-gun.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:362,\x22w\x22:82,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:82,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-bowie-vintage.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:482,\x22w\x22:42,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:43,\x22y\x22:6,\x22w\x22:42,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-bowie-frontier.img\x22:{\x22frame\x22:{\x22x\x22:2531,\x22y\x22:482,\x22w\x22:42,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:43,\x22y\x22:6,\x22w\x22:42,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-huntsman-burnished.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:602,\x22w\x22:24,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:52,\x22y\x22:6,\x22w\x22:24,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-huntsman-rugged.img\x22:{\x22frame\x22:{\x22x\x22:2513,\x22y\x22:602,\x22w\x22:24,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:52,\x22y\x22:6,\x22w\x22:24,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22sleepy.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2427,\x22w\x22:124,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:7,\x22w\x22:124,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-bugle.img\x22:{\x22frame\x22:{\x22x\x22:130,\x22y\x22:2427,\x22w\x22:122,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:7,\x22w\x22:122,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-boost-star.img\x22:{\x22frame\x22:{\x22x\x22:256,\x22y\x22:2427,\x22w\x22:120,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:7,\x22w\x22:120,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22chick.img\x22:{\x22frame\x22:{\x22x\x22:380,\x22y\x22:2427,\x22w\x22:114,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:114,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-garand.img\x22:{\x22frame\x22:{\x22x\x22:498,\x22y\x22:2427,\x22w\x22:112,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:112,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22pumpkin.img\x22:{\x22frame\x22:{\x22x\x22:614,\x22y\x22:2427,\x22w\x22:106,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:7,\x22w\x22:106,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-deagle.img\x22:{\x22frame\x22:{\x22x\x22:724,\x22y\x22:2427,\x22w\x22:104,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:7,\x22w\x22:104,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-pack-03.img\x22:{\x22frame\x22:{\x22x\x22:832,\x22y\x22:2427,\x22w\x22:104,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:7,\x22w\x22:104,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-spas12.img\x22:{\x22frame\x22:{\x22x\x22:940,\x22y\x22:2427,\x22w\x22:96,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:7,\x22w\x22:96,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mp5.img\x22:{\x22frame\x22:{\x22x\x22:1040,\x22y\x22:2427,\x22w\x22:96,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:7,\x22w\x22:96,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22tap.img\x22:{\x22frame\x22:{\x22x\x22:1140,\x22y\x22:2427,\x22w\x22:96,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:7,\x22w\x22:96,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-ot38.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:722,\x22w\x22:90,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:7,\x22w\x22:90,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-visor-tank.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:840,\x22w\x22:73,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:84,\x22y\x22:31,\x22w\x22:73,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22part-boost-shuriken.img\x22:{\x22frame\x22:{\x22x\x22:1240,\x22y\x22:2427,\x22w\x22:117,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:117,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-blossom-04.img\x22:{\x22frame\x22:{\x22x\x22:1361,\x22y\x22:2427,\x22w\x22:115,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:9,\x22w\x22:115,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-pan-black-side.img\x22:{\x22frame\x22:{\x22x\x22:2541,\x22y\x22:602,\x22w\x22:19,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:55,\x22y\x22:7,\x22w\x22:19,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-p30l-dual.img\x22:{\x22frame\x22:{\x22x\x22:1480,\x22y\x22:2427,\x22w\x22:124,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:8,\x22w\x22:124,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22cattle.img\x22:{\x22frame\x22:{\x22x\x22:1608,\x22y\x22:2427,\x22w\x22:118,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:8,\x22w\x22:118,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitLumber.img\x22:{\x22frame\x22:{\x22x\x22:1730,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitKeyLime.img\x22:{\x22frame\x22:{\x22x\x22:1850,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitHeaven.img\x22:{\x22frame\x22:{\x22x\x22:1970,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitDev.img\x22:{\x22frame\x22:{\x22x\x22:2090,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitDesertCamo.img\x22:{\x22frame\x22:{\x22x\x22:2210,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitDarkShirt.img\x22:{\x22frame\x22:{\x22x\x22:2330,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitDarkGloves.img\x22:{\x22frame\x22:{\x22x\x22:2450,\x22y\x22:2427,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitRoyalFortune.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:2,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitCobaltShell.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:118,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitWheat.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:234,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitCarbonFiber.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:350,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitCamo.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:466,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitBase.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:582,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitTurkey.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:698,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-01.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:814,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitRed.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:930,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitWoodland.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1046,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitSpetsnaz.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1162,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-blr.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1278,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitWhite.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1394,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitParmaPrestige.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1510,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-outfit.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1626,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitParma.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1742,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-shirt-outfitMod.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1858,\x22w\x22:116,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:116,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-blossom-03.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:1974,\x22w\x22:115,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:10,\x22w\x22:115,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-12gauge.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:2090,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-50AE.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:2206,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-556mm.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:2322,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-308sub.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-45acp.img\x22:{\x22frame\x22:{\x22x\x22:119,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-762mm.img\x22:{\x22frame\x22:{\x22x\x22:236,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-broken-arrow.img\x22:{\x22frame\x22:{\x22x\x22:353,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:5,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-9mm.img\x22:{\x22frame\x22:{\x22x\x22:470,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-box.img\x22:{\x22frame\x22:{\x22x\x22:587,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ammo-flare.img\x22:{\x22frame\x22:{\x22x\x22:704,\x22y\x22:2545,\x22w\x22:113,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:113,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-vector.img\x22:{\x22frame\x22:{\x22x\x22:821,\x22y\x22:2545,\x22w\x22:109,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:8,\x22w\x22:109,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22bugle-final-red.img\x22:{\x22frame\x22:{\x22x\x22:934,\x22y\x22:2545,\x22w\x22:104,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:8,\x22w\x22:104,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22bugle-final-blue.img\x22:{\x22frame\x22:{\x22x\x22:1042,\x22y\x22:2545,\x22w\x22:104,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:8,\x22w\x22:104,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-bone-01.img\x22:{\x22frame\x22:{\x22x\x22:1150,\x22y\x22:2545,\x22w\x22:102,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:10,\x22w\x22:102,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-p30l.img\x22:{\x22frame\x22:{\x22x\x22:1256,\x22y\x22:2545,\x22w\x22:102,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:8,\x22w\x22:102,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-field-medic.img\x22:{\x22frame\x22:{\x22x\x22:1362,\x22y\x22:2545,\x22w\x22:98,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:11,\x22w\x22:98,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-mirv.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:958,\x22w\x22:82,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:8,\x22w\x22:82,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22pineapple.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1074,\x22w\x22:68,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:1,\x22w\x22:68,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-small-arms.img\x22:{\x22frame\x22:{\x22x\x22:1464,\x22y\x22:2545,\x22w\x22:107,\x22h\x22:111},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:8,\x22w\x22:107,\x22h\x22:111},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-visor-sniper.img\x22:{\x22frame\x22:{\x22x\x22:1575,\x22y\x22:2545,\x22w\x22:103,\x22h\x22:111},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:32,\x22w\x22:103,\x22h\x22:111},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22logo-surviv.img\x22:{\x22frame\x22:{\x22x\x22:1682,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-storm.img\x22:{\x22frame\x22:{\x22x\x22:1814,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-twins.img\x22:{\x22frame\x22:{\x22x\x22:1946,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-meteor.img\x22:{\x22frame\x22:{\x22x\x22:2078,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-hydra.img\x22:{\x22frame\x22:{\x22x\x22:2210,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-hatchet.img\x22:{\x22frame\x22:{\x22x\x22:2342,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-egg.img\x22:{\x22frame\x22:{\x22x\x22:2474,\x22y\x22:2545,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-crossing.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-conch.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:116,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-cloud.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:230,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22link.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:344,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-caduceus.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:458,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-swine.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:572,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22logo-chrysanthemum.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:686,\x22w\x22:128,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:128,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-glock-dual.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:800,\x22w\x22:122,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:9,\x22w\x22:122,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-scout.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:914,\x22w\x22:118,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:9,\x22w\x22:118,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-emote.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1028,\x22w\x22:112,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:10,\x22w\x22:112,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-gui.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1142,\x22w\x22:112,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:10,\x22w\x22:112,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loadout-player-icon.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1256,\x22w\x22:112,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:9,\x22w\x22:112,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1370,\x22w\x22:94,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:9,\x22w\x22:94,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1484,\x22w\x22:94,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:9,\x22w\x22:94,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-glock.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1598,\x22w\x22:90,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:9,\x22w\x22:90,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-medical-soda.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1712,\x22w\x22:60,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:9,\x22w\x22:60,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22santa-hat.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1826,\x22w\x22:113,\x22h\x22:109},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:7,\x22w\x22:113,\x22h\x22:109},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-model94.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:1939,\x22w\x22:118,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:10,\x22w\x22:118,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22danger.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2051,\x22w\x22:118,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:10,\x22w\x22:118,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-explosive.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2163,\x22w\x22:110,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:10,\x22w\x22:110,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-donut-01.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2275,\x22w\x22:110,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:10,\x22w\x22:110,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-02.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2387,\x22w\x22:108,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:10,\x22w\x22:108,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-blossom-02.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2499,\x22w\x22:105,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:105,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-blossom-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2661,\x22w\x22:105,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:10,\x22w\x22:105,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22hide.img\x22:{\x22frame\x22:{\x22x\x22:111,\x22y\x22:2661,\x22w\x22:126,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:11,\x22w\x22:126,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-01.img\x22:{\x22frame\x22:{\x22x\x22:241,\x22y\x22:2661,\x22w\x22:122,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:11,\x22w\x22:122,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mp220.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:1816,\x22w\x22:114,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:11,\x22w\x22:114,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-trick-size.img\x22:{\x22frame\x22:{\x22x\x22:367,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-trick-nothing.img\x22:{\x22frame\x22:{\x22x\x22:477,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-snowball-01.img\x22:{\x22frame\x22:{\x22x\x22:587,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-takedown.img\x22:{\x22frame\x22:{\x22x\x22:697,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22leek.img\x22:{\x22frame\x22:{\x22x\x22:807,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-snowball-02.img\x22:{\x22frame\x22:{\x22x\x22:917,\x22y\x22:2661,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-visor-assault.img\x22:{\x22frame\x22:{\x22x\x22:1027,\x22y\x22:2661,\x22w\x22:105,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:67,\x22y\x22:35,\x22w\x22:105,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22ping-map-airdrop.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1190,\x22w\x22:74,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:10,\x22w\x22:74,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-visor-healer.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1300,\x22w\x22:65,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:94,\x22y\x22:35,\x22w\x22:65,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22loot-perk-flak-jacket.img\x22:{\x22frame\x22:{\x22x\x22:1136,\x22y\x22:2661,\x22w\x22:102,\x22h\x22:105},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:8,\x22w\x22:102,\x22h\x22:105},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22hamburger.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:2661,\x22w\x22:128,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:12,\x22w\x22:128,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-bonus-assault.img\x22:{\x22frame\x22:{\x22x\x22:1374,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-trick-m9.img\x22:{\x22frame\x22:{\x22x\x22:1498,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-bonus-9mm.img\x22:{\x22frame\x22:{\x22x\x22:1622,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-treat-12g.img\x22:{\x22frame\x22:{\x22x\x22:1746,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-bonus-45.img\x22:{\x22frame\x22:{\x22x\x22:1870,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-treat-762.img\x22:{\x22frame\x22:{\x22x\x22:1994,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-treat-556.img\x22:{\x22frame\x22:{\x22x\x22:2118,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-treat-9mm.img\x22:{\x22frame\x22:{\x22x\x22:2242,\x22y\x22:2661,\x22w\x22:120,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:12,\x22w\x22:120,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-medical-healthkit.img\x22:{\x22frame\x22:{\x22x\x22:2363,\x22y\x22:2198,\x22w\x22:118,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:12,\x22w\x22:118,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-trick-chatty.img\x22:{\x22frame\x22:{\x22x\x22:2366,\x22y\x22:2661,\x22w\x22:110,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:10,\x22w\x22:110,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-glasses-01.img\x22:{\x22frame\x22:{\x22x\x22:2480,\x22y\x22:2661,\x22w\x22:104,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:12,\x22w\x22:104,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-mac10.img\x22:{\x22frame\x22:{\x22x\x22:2588,\x22y\x22:2661,\x22w\x22:102,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:12,\x22w\x22:102,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ribbon-red.img\x22:{\x22frame\x22:{\x22x\x22:2694,\x22y\x22:2661,\x22w\x22:98,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:22,\x22w\x22:98,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22ribbon-blue.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2,\x22w\x22:98,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:22,\x22w\x22:98,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22turkey-animal.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2773,\x22w\x22:120,\x22h\x22:103},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:13,\x22w\x22:120,\x22h\x22:103},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22movement.img\x22:{\x22frame\x22:{\x22x\x22:2583,\x22y\x22:2438,\x22w\x22:104,\x22h\x22:103},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:12,\x22w\x22:104,\x22h\x22:103},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-map-airstrike.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:110,\x22w\x22:44,\x22h\x22:103},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:42,\x22y\x22:13,\x22w\x22:44,\x22h\x22:103},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-helmet-01.img\x22:{\x22frame\x22:{\x22x\x22:126,\x22y\x22:2773,\x22w\x22:112,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:13,\x22w\x22:112,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22eggplant.img\x22:{\x22frame\x22:{\x22x\x22:242,\x22y\x22:2773,\x22w\x22:106,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:13,\x22w\x22:106,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-martyrdom.img\x22:{\x22frame\x22:{\x22x\x22:352,\x22y\x22:2773,\x22w\x22:106,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:13,\x22w\x22:106,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-frag.img\x22:{\x22frame\x22:{\x22x\x22:462,\x22y\x22:2773,\x22w\x22:100,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:13,\x22w\x22:100,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-map-help.img\x22:{\x22frame\x22:{\x22x\x22:566,\x22y\x22:2773,\x22w\x22:100,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:13,\x22w\x22:100,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-potato.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:217,\x22w\x22:92,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:13,\x22w\x22:92,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22question.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:323,\x22w\x22:68,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:13,\x22w\x22:68,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-ots38-01.img\x22:{\x22frame\x22:{\x22x\x22:2883,\x22y\x22:110,\x22w\x22:36,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:131,\x22w\x22:36,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:232}},\x22loot-perk-scavenger.img\x22:{\x22frame\x22:{\x22x\x22:670,\x22y\x22:2773,\x22w\x22:108,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:14,\x22w\x22:108,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22trunk.img\x22:{\x22frame\x22:{\x22x\x22:782,\x22y\x22:2773,\x22w\x22:106,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:14,\x22w\x22:106,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-weapon-groza.img\x22:{\x22frame\x22:{\x22x\x22:892,\x22y\x22:2773,\x22w\x22:104,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:14,\x22w\x22:104,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22crab.img\x22:{\x22frame\x22:{\x22x\x22:1000,\x22y\x22:2773,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:14,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-visor-demo.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:429,\x22w\x22:66,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:85,\x22y\x22:38,\x22w\x22:66,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22face-dab.img\x22:{\x22frame\x22:{\x22x\x22:1104,\x22y\x22:2773,\x22w\x22:144,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:23,\x22w\x22:144,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22baguette.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:533,\x22w\x22:98,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:15,\x22w\x22:98,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-short-01.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:635,\x22w\x22:31,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:31,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:100}},\x22crosshair.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:737,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22loot-perk-endless-ammo.img\x22:{\x22frame\x22:{\x22x\x22:1252,\x22y\x22:2773,\x22w\x22:102,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:15,\x22w\x22:102,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22potato.img\x22:{\x22frame\x22:{\x22x\x22:1358,\x22y\x22:2773,\x22w\x22:100,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:16,\x22w\x22:100,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-xp-compass-01.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:838,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-airdrop-01.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:938,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22part-airdrop-01x.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1038,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22copy.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1138,\x22w\x22:88,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:16,\x22w\x22:88,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22minimize.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1238,\x22w\x22:95,\x22h\x22:95},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:16,\x22w\x22:95,\x22h\x22:95},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-tree-climbing.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1337,\x22w\x22:94,\x22h\x22:95},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:16,\x22w\x22:94,\x22h\x22:95},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22skull-leader.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1436,\x22w\x22:90,\x22h\x22:95},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:90,\x22h\x22:95},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22whale.img\x22:{\x22frame\x22:{\x22x\x22:1462,\x22y\x22:2773,\x22w\x22:118,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:17,\x22w\x22:118,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-pumpkin-01.img\x22:{\x22frame\x22:{\x22x\x22:1584,\x22y\x22:2773,\x22w\x22:106,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:17,\x22w\x22:106,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22fish.img\x22:{\x22frame\x22:{\x22x\x22:1694,\x22y\x22:2773,\x22w\x22:128,\x22h\x22:92},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:18,\x22w\x22:128,\x22h\x22:92},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22teabag.img\x22:{\x22frame\x22:{\x22x\x22:1826,\x22y\x22:2773,\x22w\x22:107,\x22h\x22:91},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:19,\x22w\x22:107,\x22h\x22:91},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22forest.img\x22:{\x22frame\x22:{\x22x\x22:1937,\x22y\x22:2773,\x22w\x22:124,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:19,\x22w\x22:124,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-treat-super.img\x22:{\x22frame\x22:{\x22x\x22:2065,\x22y\x22:2773,\x22w\x22:124,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:19,\x22w\x22:124,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-medical-pill.img\x22:{\x22frame\x22:{\x22x\x22:2193,\x22y\x22:2773,\x22w\x22:118,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:19,\x22w\x22:118,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22coconut.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:2773,\x22w\x22:110,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:19,\x22w\x22:110,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-strobe.img\x22:{\x22frame\x22:{\x22x\x22:2429,\x22y\x22:2773,\x22w\x22:103,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:23,\x22w\x22:103,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22face-headshot.img\x22:{\x22frame\x22:{\x22x\x22:2536,\x22y\x22:2773,\x22w\x22:127,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:24,\x22w\x22:127,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22pilgrim-hat.img\x22:{\x22frame\x22:{\x22x\x22:2667,\x22y\x22:2773,\x22w\x22:118,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:20,\x22w\x22:118,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-flare-01.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1535,\x22w\x22:88,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:88,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22loot-melee-pan-black.img\x22:{\x22frame\x22:{\x22x\x22:2789,\x22y\x22:2773,\x22w\x22:118,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:21,\x22w\x22:118,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-helmet-03.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2,\x22w\x22:112,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:21,\x22w\x22:112,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-mash-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2880,\x22w\x22:160,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:166,\x22y\x22:2880,\x22w\x22:160,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22ping-map-woods-king.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:92,\x22w\x22:92,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:22,\x22w\x22:92,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22cog.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:180,\x22w\x22:84,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:22,\x22w\x22:84,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-throwable-snowball.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:268,\x22w\x22:84,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:22,\x22w\x22:84,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22eye.img\x22:{\x22frame\x22:{\x22x\x22:330,\x22y\x22:2880,\x22w\x22:126,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:23,\x22w\x22:126,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-trick-drain.img\x22:{\x22frame\x22:{\x22x\x22:460,\x22y\x22:2880,\x22w\x22:118,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:23,\x22w\x22:118,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22chicken.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:356,\x22w\x22:106,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:23,\x22w\x22:106,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-snow-02.img\x22:{\x22frame\x22:{\x22x\x22:582,\x22y\x22:2880,\x22w\x22:145,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:145,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-mash-02.img\x22:{\x22frame\x22:{\x22x\x22:731,\x22y\x22:2880,\x22w\x22:145,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:145,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22audio-on.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:442,\x22w\x22:92,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:24,\x22w\x22:92,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22audio-off.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:526,\x22w\x22:92,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:24,\x22w\x22:92,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-fireaxe.img\x22:{\x22frame\x22:{\x22x\x22:880,\x22y\x22:2880,\x22w\x22:152,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:-1,\x22w\x22:152,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:152,\x22h\x22:76}},\x22loot-weapon-fists.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:610,\x22w\x22:74,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:27,\x22y\x22:25,\x22w\x22:74,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-map-unlock.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:692,\x22w\x22:60,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:25,\x22w\x22:60,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-hook-silver.img\x22:{\x22frame\x22:{\x22x\x22:3001,\x22y\x22:692,\x22w\x22:42,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:43,\x22y\x22:25,\x22w\x22:42,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-helmet-02.img\x22:{\x22frame\x22:{\x22x\x22:1036,\x22y\x22:2880,\x22w\x22:118,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:26,\x22w\x22:118,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-mirv-mini-02.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:774,\x22w\x22:84,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:10,\x22w\x22:84,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22proj-mirv-mini-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:854,\x22w\x22:84,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:10,\x22w\x22:84,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22player-mash-03.img\x22:{\x22frame\x22:{\x22x\x22:1158,\x22y\x22:2880,\x22w\x22:149,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:149,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-snow-03.img\x22:{\x22frame\x22:{\x22x\x22:1311,\x22y\x22:2880,\x22w\x22:149,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:149,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22loot-perk-scavenger_adv.img\x22:{\x22frame\x22:{\x22x\x22:1464,\x22y\x22:2880,\x22w\x22:118,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:27,\x22w\x22:118,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-hands-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:934,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:76,\x22h\x22:76}},\x22player-hands-02.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1012,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:76,\x22h\x22:76}},\x22gg.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1718,\x22w\x22:114,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:28,\x22w\x22:114,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-dp28-top-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1090,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-map-inner.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1166,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22timer-background.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1242,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-map-outer.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1318,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22quit.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1394,\x22w\x22:68,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:28,\x22w\x22:68,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-patch-01.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1586,\x22w\x22:116,\x22h\x22:71},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:1,\x22w\x22:116,\x22h\x22:71},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-patch-red.img\x22:{\x22frame\x22:{\x22x\x22:1593,\x22y\x22:1454,\x22w\x22:116,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:45,\x22w\x22:116,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22part-cloth-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1470,\x22w\x22:70,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:70,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22ping-indicator.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1544,\x22w\x22:88,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:60,\x22w\x22:88,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-smoke-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1616,\x22w\x22:70,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:70,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22close.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1688,\x22w\x22:68,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:68,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1760,\x22w\x22:68,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:68,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-frag-burst-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1832,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-frag-burst-02.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1902,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-strobe-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:1972,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2042,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22submit.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2112,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-pulse-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2182,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22checked.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2252,\x22w\x22:66,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22resume.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2322,\x22w\x22:64,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:36,\x22y\x22:31,\x22w\x22:64,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-self-revive.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:1322,\x22w\x22:126,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:32,\x22w\x22:126,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-potato-smg-top-01.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2392,\x22w\x22:66,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:66,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22crosshair064.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2460,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair001.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2528,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22unlock.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2596,\x22w\x22:48,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:48,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22lock.img\x22:{\x22frame\x22:{\x22x\x22:2989,\x22y\x22:2596,\x22w\x22:48,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:48,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22keyboard.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2664,\x22w\x22:104,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:33,\x22w\x22:104,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-map-downed.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2730,\x22w\x22:72,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:72,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22globe.img\x22:{\x22frame\x22:{\x22x\x22:2937,\x22y\x22:2796,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair086.img\x22:{\x22frame\x22:{\x22x\x22:2870,\x22y\x22:635,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair010.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1627,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair007.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1693,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-patch-02.img\x22:{\x22frame\x22:{\x22x\x22:1586,\x22y\x22:2880,\x22w\x22:116,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:1,\x22w\x22:116,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22player-patch-blue.img\x22:{\x22frame\x22:{\x22x\x22:1706,\x22y\x22:2880,\x22w\x22:116,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:50,\x22w\x22:116,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22crosshair080.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1759,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair005.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1823,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair094.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1887,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair109.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:1951,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22skull-outlined.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2015,\x22w\x22:52,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:52,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-stonehammer.img\x22:{\x22frame\x22:{\x22x\x22:1826,\x22y\x22:2880,\x22w\x22:150,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:3,\x22w\x22:150,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:60}},\x22loot-melee-knuckles-heroic.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2079,\x22w\x22:92,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:35,\x22w\x22:92,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-knuckles-rusted.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2141,\x22w\x22:92,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:35,\x22w\x22:92,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-frag-pin-01.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2203,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:35,\x22y\x22:35,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22proj-frag-pin-part.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2265,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:35,\x22y\x22:35,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-woodaxe-bloody.img\x22:{\x22frame\x22:{\x22x\x22:1980,\x22y\x22:2880,\x22w\x22:150,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:150,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:54}},\x22loot-melee-woodaxe.img\x22:{\x22frame\x22:{\x22x\x22:2134,\x22y\x22:2880,\x22w\x22:150,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:150,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:54}},\x22crosshair027.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2327,\x22w\x22:57,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:57,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair124.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2387,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22skull-team.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2447,\x22w\x22:48,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:4,\x22w\x22:48,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-bullet-trail-03.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1090,\x22w\x22:35,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:35,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:56}},\x22dc.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2507,\x22w\x22:52,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:52,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22down.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2563,\x22w\x22:52,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:52,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-part-quarter.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2619,\x22w\x22:88,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:1,\x22w\x22:88,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-part-quarter-highlight.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2674,\x22w\x22:88,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:1,\x22w\x22:88,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-pkp-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:2703,\x22y\x22:2611,\x22w\x22:78,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:78,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:76,\x22h\x22:44}},\x22crosshair177.img\x22:{\x22frame\x22:{\x22x\x22:2767,\x22y\x22:1712,\x22w\x22:56,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crown.img\x22:{\x22frame\x22:{\x22x\x22:2767,\x22y\x22:1762,\x22w\x22:54,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:9,\x22w\x22:54,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-part-eighth-highlight.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1410,\x22w\x22:51,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:20,\x22w\x22:51,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-part-eighth.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1457,\x22w\x22:51,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:20,\x22w\x22:51,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22pumpkin-play.img\x22:{\x22frame\x22:{\x22x\x22:3009,\x22y\x22:1394,\x22w\x22:40,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:40,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22loot-melee-karambit-rugged.img\x22:{\x22frame\x22:{\x22x\x22:2237,\x22y\x22:2119,\x22w\x22:100,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:43,\x22w\x22:100,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-karambit-prismatic.img\x22:{\x22frame\x22:{\x22x\x22:584,\x22y\x22:712,\x22w\x22:100,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:43,\x22w\x22:100,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-melee-karambit-drowned.img\x22:{\x22frame\x22:{\x22x\x22:688,\x22y\x22:712,\x22w\x22:100,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:43,\x22w\x22:100,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-m249-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1504,\x22w\x22:74,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:74,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:76,\x22h\x22:44}},\x22crosshair158.img\x22:{\x22frame\x22:{\x22x\x22:2835,\x22y\x22:2729,\x22w\x22:62,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:12,\x22w\x22:62,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-frag-lever-01.img\x22:{\x22frame\x22:{\x22x\x22:2485,\x22y\x22:1550,\x22w\x22:48,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:40,\x22y\x22:44,\x22w\x22:48,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22crosshair101.img\x22:{\x22frame\x22:{\x22x\x22:3007,\x22y\x22:1832,\x22w\x22:42,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:8,\x22w\x22:42,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair102.img\x22:{\x22frame\x22:{\x22x\x22:3007,\x22y\x22:1902,\x22w\x22:42,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:8,\x22w\x22:42,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-katana-demo.img\x22:{\x22frame\x22:{\x22x\x22:796,\x22y\x22:730,\x22w\x22:226,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:226,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:40}},\x22loot-melee-katana-rusted.img\x22:{\x22frame\x22:{\x22x\x22:2288,\x22y\x22:2880,\x22w\x22:226,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:226,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:40}},\x22loot-melee-katana-orchid.img\x22:{\x22frame\x22:{\x22x\x22:2518,\x22y\x22:2880,\x22w\x22:226,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:226,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:40}},\x22loot-melee-katana.img\x22:{\x22frame\x22:{\x22x\x22:2748,\x22y\x22:2880,\x22w\x22:226,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:226,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:40}},\x22hatchet.img\x22:{\x22frame\x22:{\x22x\x22:3005,\x22y\x22:2322,\x22w\x22:44,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:5,\x22w\x22:44,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22crosshair045.img\x22:{\x22frame\x22:{\x22x\x22:3011,\x22y\x22:1470,\x22w\x22:38,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:13,\x22w\x22:38,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-feet-01.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:610,\x22w\x22:26,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:26,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:38}},\x22player-feet-02.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:934,\x22w\x22:26,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:26,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:38}},\x22loot-melee-naginata.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2969,\x22w\x22:345,\x22h\x22:37},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:14,\x22w\x22:345,\x22h\x22:37},\x22sourceSize\x22:{\x22w\x22:350,\x22h\x22:54}},\x22crosshair184.img\x22:{\x22frame\x22:{\x22x\x22:3011,\x22y\x22:1616,\x22w\x22:37,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:14,\x22w\x22:37,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair040.img\x22:{\x22frame\x22:{\x22x\x22:3009,\x22y\x22:1688,\x22w\x22:37,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:14,\x22w\x22:37,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-frag-burst-03.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1166,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22player-bullet-trail-02.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1242,\x22w\x22:35,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:35,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22crosshair038.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:652,\x22w\x22:33,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:16,\x22w\x22:33,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair000.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:976,\x22w\x22:33,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:16,\x22w\x22:33,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22dot.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:1012,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22crosshair173.img\x22:{\x22frame\x22:{\x22x\x22:3015,\x22y\x22:1048,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair181.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1206,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gun-qbb97-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:2870,\x22y\x22:701,\x22w\x22:62,\x22h\x22:30},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:30},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:32}},\x22ping-part-circle-auto-highlight.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1282,\x22w\x22:29,\x22h\x22:29},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:29,\x22h\x22:29},\x22sourceSize\x22:{\x22w\x22:29,\x22h\x22:29}},\x22ping-part-circle-auto.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1318,\x22w\x22:28,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:28,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:28}},\x22ping-part-circle-highlight.img\x22:{\x22frame\x22:{\x22x\x22:3013,\x22y\x22:1350,\x22w\x22:28,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:50,\x22y\x22:50,\x22w\x22:28,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-part-circle.img\x22:{\x22frame\x22:{\x22x\x22:3011,\x22y\x22:1512,\x22w\x22:28,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:50,\x22y\x22:50,\x22w\x22:28,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22ping-part-circle-auto-outer.img\x22:{\x22frame\x22:{\x22x\x22:3011,\x22y\x22:1656,\x22w\x22:28,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:28,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:28}},\x22crosshair125.img\x22:{\x22frame\x22:{\x22x\x22:3025,\x22y\x22:180,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:20,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-bayonet-woodland.img\x22:{\x22frame\x22:{\x22x\x22:1270,\x22y\x22:856,\x22w\x22:36,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:46,\x22y\x22:5,\x22w\x22:36,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}}}}]')
  , Rs = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22shared-0-100-8b417e22.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-building-police-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1438,\x22y\x22:2,\x22w\x22:2112,\x22h\x22:1568},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:2112,\x22h\x22:1568},\x22sourceSize\x22:{\x22w\x22:2112,\x22h\x22:1568}},\x22map-building-bathhouse-basement-01e.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1432,\x22h\x22:1592},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1432,\x22h\x22:1592},\x22sourceSize\x22:{\x22w\x22:1432,\x22h\x22:1592}},\x22map-building-mansion-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1598,\x22w\x22:1825,\x22h\x22:1218},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:1825,\x22h\x22:1218},\x22sourceSize\x22:{\x22w\x22:1826,\x22h\x22:1218}},\x22map-building-barn-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1831,\x22y\x22:1598,\x22w\x22:1600,\x22h\x22:1088},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1600,\x22h\x22:1088},\x22sourceSize\x22:{\x22w\x22:1600,\x22h\x22:1088}},\x22map-building-police-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3554,\x22y\x22:2,\x22w\x22:530,\x22h\x22:1080},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:530,\x22h\x22:1080},\x22sourceSize\x22:{\x22w\x22:530,\x22h\x22:1082}},\x22map-building-cabin-floor.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2820,\x22w\x22:1216,\x22h\x22:992},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1216,\x22h\x22:992},\x22sourceSize\x22:{\x22w\x22:1216,\x22h\x22:992}},\x22map-building-bathhouse-basement-01b.img\x22:{\x22frame\x22:{\x22x\x22:1222,\x22y\x22:2820,\x22w\x22:1304,\x22h\x22:918},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1304,\x22h\x22:918},\x22sourceSize\x22:{\x22w\x22:1304,\x22h\x22:920}},\x22map-building-bank-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2530,\x22y\x22:2820,\x22w\x22:556,\x22h\x22:888},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:50,\x22w\x22:556,\x22h\x22:888},\x22sourceSize\x22:{\x22w\x22:556,\x22h\x22:940}},\x22map-bunker-conch-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3090,\x22y\x22:2820,\x22w\x22:942,\x22h\x22:880},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:50,\x22y\x22:0,\x22w\x22:942,\x22h\x22:880},\x22sourceSize\x22:{\x22w\x22:992,\x22h\x22:880}},\x22map-building-hut-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3554,\x22y\x22:1086,\x22w\x22:130,\x22h\x22:767},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:130,\x22h\x22:767},\x22sourceSize\x22:{\x22w\x22:136,\x22h\x22:768}},\x22map-building-container-open-floor.img\x22:{\x22frame\x22:{\x22x\x22:3688,\x22y\x22:1086,\x22w\x22:180,\x22h\x22:684},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:180,\x22h\x22:684},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:692}},\x22map-building-dock-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:3872,\x22y\x22:1086,\x22w\x22:162,\x22h\x22:662},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:162,\x22h\x22:662},\x22sourceSize\x22:{\x22w\x22:162,\x22h\x22:664}},\x22map-wall-18.img\x22:{\x22frame\x22:{\x22x\x22:4038,\x22y\x22:1086,\x22w\x22:32,\x22h\x22:576},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:576},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:576}},\x22map-bunker-conch-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3554,\x22y\x22:1857,\x22w\x22:488,\x22h\x22:560},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:488,\x22h\x22:560},\x22sourceSize\x22:{\x22w\x22:488,\x22h\x22:560}},\x22map-club-bar-01.img\x22:{\x22frame\x22:{\x22x\x22:3435,\x22y\x22:1598,\x22w\x22:54,\x22h\x22:480},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:480},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:480}},\x22map-wall-14.img\x22:{\x22frame\x22:{\x22x\x22:4046,\x22y\x22:1857,\x22w\x22:32,\x22h\x22:448},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:448},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:448}},\x22map-wall-14-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3493,\x22y\x22:1598,\x22w\x22:32,\x22h\x22:448},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:448},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:448}},\x22map-wall-13-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3435,\x22y\x22:2082,\x22w\x22:32,\x22h\x22:416},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:416},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:416}},\x22map-wall-13.img\x22:{\x22frame\x22:{\x22x\x22:3471,\x22y\x22:2082,\x22w\x22:32,\x22h\x22:416},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:416},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:416}},\x22map-building-hut-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3554,\x22y\x22:2421,\x22w\x22:378,\x22h\x22:393},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:15,\x22w\x22:378,\x22h\x22:393},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:408}},\x22map-wall-glass-12-2.img\x22:{\x22frame\x22:{\x22x\x22:3936,\x22y\x22:2421,\x22w\x22:64,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:384}},\x22map-wall-12.img\x22:{\x22frame\x22:{\x22x\x22:4004,\x22y\x22:2421,\x22w\x22:32,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:384}},\x22map-wall-glass-12.img\x22:{\x22frame\x22:{\x22x\x22:4040,\x22y\x22:2421,\x22w\x22:32,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:384}},\x22map-wall-12-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3507,\x22y\x22:2082,\x22w\x22:32,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:384}},\x22map-wall-11-rounded.img\x22:{\x22frame\x22:{\x22x\x22:4036,\x22y\x22:2820,\x22w\x22:32,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:352}},\x22map-wall-11.img\x22:{\x22frame\x22:{\x22x\x22:4036,\x22y\x22:3176,\x22w\x22:32,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:352}},\x22map-stone-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3816,\x22w\x22:276,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:276,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22map-tree-03.img\x22:{\x22frame\x22:{\x22x\x22:282,\x22y\x22:3816,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-tree-07su.img\x22:{\x22frame\x22:{\x22x\x22:542,\x22y\x22:3816,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-wall-08-rounded.img\x22:{\x22frame\x22:{\x22x\x22:802,\x22y\x22:3816,\x22w\x22:32,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:256}},\x22map-bunker-conch-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:838,\x22y\x22:3816,\x22w\x22:580,\x22h\x22:252},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:2,\x22w\x22:580,\x22h\x22:252},\x22sourceSize\x22:{\x22w\x22:600,\x22h\x22:256}},\x22map-building-club-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1422,\x22y\x22:3816,\x22w\x22:177,\x22h\x22:242},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:177,\x22h\x22:242},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:242}},\x22map-wall-shack-right.img\x22:{\x22frame\x22:{\x22x\x22:1603,\x22y\x22:3816,\x22w\x22:24,\x22h\x22:241},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:24,\x22h\x22:241},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:242}},\x22map-pipes-03.img\x22:{\x22frame\x22:{\x22x\x22:1631,\x22y\x22:3816,\x22w\x22:684,\x22h\x22:236},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:684,\x22h\x22:236},\x22sourceSize\x22:{\x22w\x22:684,\x22h\x22:236}},\x22map-hut-res-01.img\x22:{\x22frame\x22:{\x22x\x22:2319,\x22y\x22:3816,\x22w\x22:236,\x22h\x22:236},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:130,\x22y\x22:136,\x22w\x22:236,\x22h\x22:236},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-chute-01.img\x22:{\x22frame\x22:{\x22x\x22:2559,\x22y\x22:3816,\x22w\x22:232,\x22h\x22:232},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:12,\x22w\x22:232,\x22h\x22:232},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-building-mansion-cellar-01b.img\x22:{\x22frame\x22:{\x22x\x22:2795,\x22y\x22:3816,\x22w\x22:225,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:225,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:226,\x22h\x22:230}},\x22map-bunker-generic-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3024,\x22y\x22:3816,\x22w\x22:192,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:192,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-building-mansion-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:3220,\x22y\x22:3816,\x22w\x22:225,\x22h\x22:228},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:225,\x22h\x22:228},\x22sourceSize\x22:{\x22w\x22:226,\x22h\x22:228}},\x22map-building-club-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3449,\x22y\x22:3816,\x22w\x22:225,\x22h\x22:226},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:225,\x22h\x22:226},\x22sourceSize\x22:{\x22w\x22:226,\x22h\x22:226}},\x22map-building-saferoom-floor.img\x22:{\x22frame\x22:{\x22x\x22:3678,\x22y\x22:3816,\x22w\x22:352,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:224}},\x22map-wall-07.img\x22:{\x22frame\x22:{\x22x\x22:4034,\x22y\x22:3816,\x22w\x22:32,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:224}},\x22part-wedge-01.img\x22:{\x22frame\x22:{\x22x\x22:3435,\x22y\x22:2502,\x22w\x22:55,\x22h\x22:170},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:55,\x22h\x22:170},\x22sourceSize\x22:{\x22w\x22:63,\x22h\x22:180}},\x22proj-wedge-01.img\x22:{\x22frame\x22:{\x22x\x22:3494,\x22y\x22:2502,\x22w\x22:55,\x22h\x22:170},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:55,\x22h\x22:170},\x22sourceSize\x22:{\x22w\x22:63,\x22h\x22:180}},\x22map-wall-04-cobalt.img\x22:{\x22frame\x22:{\x22x\x22:4036,\x22y\x22:3532,\x22w\x22:40,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:40,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:160}},\x22pass-level-bg.img\x22:{\x22frame\x22:{\x22x\x22:1831,\x22y\x22:2690,\x22w\x22:146,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:146,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22pass.img\x22:{\x22frame\x22:{\x22x\x22:1981,\x22y\x22:2690,\x22w\x22:126,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:126,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22player-helmet-marksman.img\x22:{\x22frame\x22:{\x22x\x22:2111,\x22y\x22:2690,\x22w\x22:95,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:28,\x22y\x22:25,\x22w\x22:95,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22map-wall-outhouse-bot.img\x22:{\x22frame\x22:{\x22x\x22:3348,\x22y\x22:3712,\x22w\x22:72,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:24}},\x22map-crate-05.img\x22:{\x22frame\x22:{\x22x\x22:2338,\x22y\x22:2690,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:124,\x22h\x22:124}},\x22map-toilet-01.img\x22:{\x22frame\x22:{\x22x\x22:2466,\x22y\x22:2690,\x22w\x22:97,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:2,\x22w\x22:97,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-toilet-02.img\x22:{\x22frame\x22:{\x22x\x22:2567,\x22y\x22:2690,\x22w\x22:97,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:2,\x22w\x22:97,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-hotw.img\x22:{\x22frame\x22:{\x22x\x22:2668,\x22y\x22:2690,\x22w\x22:106,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:3,\x22w\x22:106,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-decal-oil-01.img\x22:{\x22frame\x22:{\x22x\x22:2778,\x22y\x22:2690,\x22w\x22:86,\x22h\x22:122},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:3,\x22w\x22:86,\x22h\x22:122},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-vat-res.img\x22:{\x22frame\x22:{\x22x\x22:2868,\x22y\x22:2690,\x22w\x22:108,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:11,\x22w\x22:108,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-case-chrys-01.img\x22:{\x22frame\x22:{\x22x\x22:2980,\x22y\x22:2690,\x22w\x22:156,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:120}},\x22map-case-ring-01.img\x22:{\x22frame\x22:{\x22x\x22:3140,\x22y\x22:2690,\x22w\x22:156,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:120}},\x22map-decal-initiative.img\x22:{\x22frame\x22:{\x22x\x22:3300,\x22y\x22:2690,\x22w\x22:120,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:120,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22loot-perk-halloween-mystery.img\x22:{\x22frame\x22:{\x22x\x22:3424,\x22y\x22:2690,\x22w\x22:106,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:2,\x22w\x22:106,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-building-house-window-res-01.img\x22:{\x22frame\x22:{\x22x\x22:4046,\x22y\x22:2309,\x22w\x22:32,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:104}},\x22map-wall-02-5-rounded.img\x22:{\x22frame\x22:{\x22x\x22:4038,\x22y\x22:1666,\x22w\x22:32,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:80}},\x22map-towelrack-01.img\x22:{\x22frame\x22:{\x22x\x22:3688,\x22y\x22:1774,\x22w\x22:192,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:192,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:96}},\x22map-deposit-box-02.img\x22:{\x22frame\x22:{\x22x\x22:3884,\x22y\x22:1774,\x22w\x22:160,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:74}},\x22map-potato-res.img\x22:{\x22frame\x22:{\x22x\x22:1222,\x22y\x22:3742,\x22w\x22:56,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:15,\x22w\x22:56,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-fire-ext-01.img\x22:{\x22frame\x22:{\x22x\x22:1282,\x22y\x22:3742,\x22w\x22:83,\x22h\x22:65},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:83,\x22h\x22:65},\x22sourceSize\x22:{\x22w\x22:84,\x22h\x22:70}},\x22map-bookshelf-01.img\x22:{\x22frame\x22:{\x22x\x22:1369,\x22y\x22:3742,\x22w\x22:224,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:64}},\x22map-bookshelf-02.img\x22:{\x22frame\x22:{\x22x\x22:1597,\x22y\x22:3742,\x22w\x22:224,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:64}},\x22map-building-porch-01.img\x22:{\x22frame\x22:{\x22x\x22:1825,\x22y\x22:3742,\x22w\x22:128,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:64}},\x22map-column-01.img\x22:{\x22frame\x22:{\x22x\x22:1957,\x22y\x22:3742,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair160.img\x22:{\x22frame\x22:{\x22x\x22:2025,\x22y\x22:3742,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-wall-02.img\x22:{\x22frame\x22:{\x22x\x22:4048,\x22y\x22:1774,\x22w\x22:32,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:64}},\x22map-wall-02-rounded.img\x22:{\x22frame\x22:{\x22x\x22:2093,\x22y\x22:3742,\x22w\x22:32,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:64}},\x22crosshair136.img\x22:{\x22frame\x22:{\x22x\x22:2129,\x22y\x22:3742,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-sledgehammer.img\x22:{\x22frame\x22:{\x22x\x22:2195,\x22y\x22:3742,\x22w\x22:150,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:150,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:58}},\x22crosshair118.img\x22:{\x22frame\x22:{\x22x\x22:2349,\x22y\x22:3742,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-bush-res-02.img\x22:{\x22frame\x22:{\x22x\x22:2413,\x22y\x22:3742,\x22w\x22:59,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:42,\x22y\x22:45,\x22w\x22:59,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bathhouse-pool-01.img\x22:{\x22frame\x22:{\x22x\x22:2476,\x22y\x22:3742,\x22w\x22:36,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:60}},\x22map-screen-res-01.img\x22:{\x22frame\x22:{\x22x\x22:2516,\x22y\x22:3742,\x22w\x22:116,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:116,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:124,\x22h\x22:58}},\x22map-drawers-res.img\x22:{\x22frame\x22:{\x22x\x22:2636,\x22y\x22:3742,\x22w\x22:93,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:5,\x22w\x22:93,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:64}},\x22map-fire-ext-res.img\x22:{\x22frame\x22:{\x22x\x22:2733,\x22y\x22:3742,\x22w\x22:46,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:36,\x22y\x22:8,\x22w\x22:46,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:84,\x22h\x22:70}},\x22map-decal-oil-05.img\x22:{\x22frame\x22:{\x22x\x22:2783,\x22y\x22:3742,\x22w\x22:34,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:4,\x22w\x22:34,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-gun-mount-04.img\x22:{\x22frame\x22:{\x22x\x22:2821,\x22y\x22:3742,\x22w\x22:128,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:56}},\x22map-barrel-res-03.img\x22:{\x22frame\x22:{\x22x\x22:2953,\x22y\x22:3742,\x22w\x22:76,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:86,\x22w\x22:76,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-woodpile-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3033,\x22y\x22:3742,\x22w\x22:72,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:22,\x22w\x22:72,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-candle-01.img\x22:{\x22frame\x22:{\x22x\x22:3109,\x22y\x22:3742,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:52}},\x22map-locker-03.img\x22:{\x22frame\x22:{\x22x\x22:3163,\x22y\x22:3742,\x22w\x22:96,\x22h\x22:49},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:49},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:50}},\x22map-locker-02.img\x22:{\x22frame\x22:{\x22x\x22:3263,\x22y\x22:3742,\x22w\x22:96,\x22h\x22:49},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:49},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:50}},\x22map-locker-01.img\x22:{\x22frame\x22:{\x22x\x22:3363,\x22y\x22:3742,\x22w\x22:96,\x22h\x22:49},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:49},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:50}},\x22map-screen-01.img\x22:{\x22frame\x22:{\x22x\x22:3463,\x22y\x22:3742,\x22w\x22:256,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:48}},\x22map-gun-mount-05.img\x22:{\x22frame\x22:{\x22x\x22:3723,\x22y\x22:3742,\x22w\x22:144,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:56}},\x22map-gun-mount-01.img\x22:{\x22frame\x22:{\x22x\x22:3871,\x22y\x22:3742,\x22w\x22:144,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:56}},\x22map-decal-oil-04.img\x22:{\x22frame\x22:{\x22x\x22:4019,\x22y\x22:3742,\x22w\x22:54,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:8,\x22w\x22:54,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-wall-shack-top.img\x22:{\x22frame\x22:{\x22x\x22:2530,\x22y\x22:3712,\x22w\x22:360,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:24}},\x22map-wall-shack-bot.img\x22:{\x22frame\x22:{\x22x\x22:2894,\x22y\x22:3712,\x22w\x22:242,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:242,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:242,\x22h\x22:24}},\x22map-wall-outhouse-top.img\x22:{\x22frame\x22:{\x22x\x22:3140,\x22y\x22:3712,\x22w\x22:204,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:204,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:204,\x22h\x22:24}},\x22proj-martyrdom-01.img\x22:{\x22frame\x22:{\x22x\x22:2210,\x22y\x22:2690,\x22w\x22:124,\x22h\x22:124},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:124,\x22h\x22:124},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}}}},{\x22meta\x22:{\x22image\x22:\x22shared-1-100-b0df365a.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-building-house-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1448,\x22y\x22:2,\x22w\x22:960,\x22h\x22:864},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:960,\x22h\x22:864},\x22sourceSize\x22:{\x22w\x22:960,\x22h\x22:864}},\x22map-building-club-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1442,\x22h\x22:866},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1442,\x22h\x22:866},\x22sourceSize\x22:{\x22w\x22:1442,\x22h\x22:866}},\x22map-building-house-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:872,\x22w\x22:960,\x22h\x22:864},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:960,\x22h\x22:864},\x22sourceSize\x22:{\x22w\x22:960,\x22h\x22:864}},\x22map-building-bank-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1740,\x22w\x22:1696,\x22h\x22:802},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1696,\x22h\x22:802},\x22sourceSize\x22:{\x22w\x22:1696,\x22h\x22:802}},\x22map-building-mansion-cellar-01a.img\x22:{\x22frame\x22:{\x22x\x22:966,\x22y\x22:872,\x22w\x22:865,\x22h\x22:801},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:865,\x22h\x22:801},\x22sourceSize\x22:{\x22w\x22:866,\x22h\x22:802}},\x22map-building-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2412,\x22y\x22:2,\x22w\x22:1000,\x22h\x22:800},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1000,\x22h\x22:800},\x22sourceSize\x22:{\x22w\x22:1000,\x22h\x22:800}},\x22map-building-mansion-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:2412,\x22y\x22:806,\x22w\x22:912,\x22h\x22:800},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:912,\x22h\x22:800},\x22sourceSize\x22:{\x22w\x22:1024,\x22h\x22:864}},\x22map-building-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2412,\x22y\x22:1610,\x22w\x22:880,\x22h\x22:800},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:880,\x22h\x22:800},\x22sourceSize\x22:{\x22w\x22:880,\x22h\x22:800}},\x22map-building-shilo-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2546,\x22w\x22:960,\x22h\x22:768},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:960,\x22h\x22:768},\x22sourceSize\x22:{\x22w\x22:960,\x22h\x22:768}},\x22map-building-shilo-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:966,\x22y\x22:2546,\x22w\x22:960,\x22h\x22:768},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:960,\x22h\x22:768},\x22sourceSize\x22:{\x22w\x22:960,\x22h\x22:768}},\x22map-building-bathhouse-sideroom-02.img\x22:{\x22frame\x22:{\x22x\x22:1930,\x22y\x22:2546,\x22w\x22:1110,\x22h\x22:727},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:1110,\x22h\x22:727},\x22sourceSize\x22:{\x22w\x22:1112,\x22h\x22:729}},\x22map-building-bridge-lg-floor.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3318,\x22w\x22:1011,\x22h\x22:704},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:1011,\x22h\x22:704},\x22sourceSize\x22:{\x22w\x22:1012,\x22h\x22:708}},\x22map-bunker-egg-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1017,\x22y\x22:3318,\x22w\x22:726,\x22h\x22:698},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:0,\x22w\x22:726,\x22h\x22:698},\x22sourceSize\x22:{\x22w\x22:738,\x22h\x22:706}},\x22map-bunker-storm-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1747,\x22y\x22:3318,\x22w\x22:1268,\x22h\x22:696},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:1268,\x22h\x22:696},\x22sourceSize\x22:{\x22w\x22:1280,\x22h\x22:704}},\x22map-building-police-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1702,\x22y\x22:1740,\x22w\x22:609,\x22h\x22:640},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:65,\x22w\x22:609,\x22h\x22:640},\x22sourceSize\x22:{\x22w\x22:610,\x22h\x22:1570}},\x22map-building-bank-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1835,\x22y\x22:872,\x22w\x22:505,\x22h\x22:552},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:48,\x22w\x22:505,\x22h\x22:552},\x22sourceSize\x22:{\x22w\x22:505,\x22h\x22:600}},\x22map-building-bathhouse-sideroom-01.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:2,\x22w\x22:536,\x22h\x22:536},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:536,\x22h\x22:536},\x22sourceSize\x22:{\x22w\x22:536,\x22h\x22:536}},\x22map-building-container-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:542,\x22w\x22:180,\x22h\x22:531},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:531},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:536}},\x22map-tree-08f.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:1077,\x22w\x22:512,\x22h\x22:510},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:512,\x22h\x22:510},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-tree-08su.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:1591,\x22w\x22:512,\x22h\x22:510},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:512,\x22h\x22:510},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-silo-01.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:2105,\x22w\x22:504,\x22h\x22:502},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:504,\x22h\x22:502},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-building-club-floor-01e.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:2611,\x22w\x22:353,\x22h\x22:482},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:353,\x22h\x22:482},\x22sourceSize\x22:{\x22w\x22:354,\x22h\x22:482}},\x22map-building-police-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:3097,\x22w\x22:504,\x22h\x22:480},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:504,\x22h\x22:480},\x22sourceSize\x22:{\x22w\x22:504,\x22h\x22:480}},\x22map-building-barn-basement-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3019,\x22y\x22:3318,\x22w\x22:374,\x22h\x22:468},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:374,\x22h\x22:468},\x22sourceSize\x22:{\x22w\x22:376,\x22h\x22:472}},\x22map-building-club-ceiling-01c.img\x22:{\x22frame\x22:{\x22x\x22:3416,\x22y\x22:3581,\x22w\x22:400,\x22h\x22:433},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:400,\x22h\x22:433},\x22sourceSize\x22:{\x22w\x22:402,\x22h\x22:434}},\x22map-building-barn-basement-stairs.img\x22:{\x22frame\x22:{\x22x\x22:3600,\x22y\x22:542,\x22w\x22:288,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:384}},\x22map-building-panicroom-floor.img\x22:{\x22frame\x22:{\x22x\x22:3044,\x22y\x22:2546,\x22w\x22:288,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:384}},\x22map-decal-club-02.img\x22:{\x22frame\x22:{\x22x\x22:3773,\x22y\x22:2611,\x22w\x22:100,\x22h\x22:358},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:100,\x22h\x22:358},\x22sourceSize\x22:{\x22w\x22:104,\x22h\x22:360}},\x22map-pipes-04.img\x22:{\x22frame\x22:{\x22x\x22:3820,\x22y\x22:3581,\x22w\x22:88,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:88,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:352}},\x22map-building-vault-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:3044,\x22y\x22:2934,\x22w\x22:321,\x22h\x22:337},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:321,\x22h\x22:337},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:337}},\x22map-saloon-bar-01.img\x22:{\x22frame\x22:{\x22x\x22:3892,\x22y\x22:542,\x22w\x22:54,\x22h\x22:324},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:324},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:324}},\x22map-wall-10-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2611,\x22w\x22:32,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:320}},\x22map-wall-10.img\x22:{\x22frame\x22:{\x22x\x22:3913,\x22y\x22:2611,\x22w\x22:32,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:320}},\x22map-wall-glass-10.img\x22:{\x22frame\x22:{\x22x\x22:3912,\x22y\x22:3581,\x22w\x22:32,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:320}},\x22map-pipes-01.img\x22:{\x22frame\x22:{\x22x\x22:3296,\x22y\x22:1610,\x22w\x22:90,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:288}},\x22map-wall-09-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3328,\x22y\x22:806,\x22w\x22:32,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:288}},\x22map-wall-09.img\x22:{\x22frame\x22:{\x22x\x22:3364,\x22y\x22:806,\x22w\x22:32,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:288}},\x22map-wall-glass-9.img\x22:{\x22frame\x22:{\x22x\x22:3328,\x22y\x22:1098,\x22w\x22:32,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:288}},\x22map-building-saferoom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1835,\x22y\x22:1428,\x22w\x22:352,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:224}},\x22map-building-outhouse-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:3019,\x22y\x22:3790,\x22w\x22:272,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:272,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:316}},\x22map-door-02.img\x22:{\x22frame\x22:{\x22x\x22:3296,\x22y\x22:1902,\x22w\x22:80,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:224}},\x22map-wall-07-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3364,\x22y\x22:1098,\x22w\x22:32,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:224}},\x22map-wall-shack-left.img\x22:{\x22frame\x22:{\x22x\x22:3924,\x22y\x22:2105,\x22w\x22:24,\x22h\x22:222},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:222},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:222}},\x22map-bed-02.img\x22:{\x22frame\x22:{\x22x\x22:2191,\x22y\x22:1428,\x22w\x22:176,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:176,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:216}},\x22map-bed-01.img\x22:{\x22frame\x22:{\x22x\x22:3296,\x22y\x22:2130,\x22w\x22:96,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:216}},\x22map-wall-outhouse-side.img\x22:{\x22frame\x22:{\x22x\x22:3924,\x22y\x22:2331,\x22w\x22:24,\x22h\x22:198},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:198},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:198}},\x22map-pipes-05.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:1740,\x22w\x22:90,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:192}},\x22map-wall-06-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3328,\x22y\x22:1390,\x22w\x22:32,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:192}},\x22map-wall-06.img\x22:{\x22frame\x22:{\x22x\x22:3364,\x22y\x22:1390,\x22w\x22:32,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:192}},\x22role-assault.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2,\x22w\x22:130,\x22h\x22:166},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:166},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22role-healer.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:172,\x22w\x22:130,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22role-tank.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:338,\x22w\x22:130,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22role-sniper.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:504,\x22w\x22:130,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22role-demo.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:670,\x22w\x22:130,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22role-scout.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:836,\x22w\x22:130,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:6,\x22w\x22:130,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:176}},\x22map-wall-04-stone.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1002,\x22w\x22:40,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:40,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:160}},\x22map-wall-05.img\x22:{\x22frame\x22:{\x22x\x22:4000,\x22y\x22:1002,\x22w\x22:32,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:160}},\x22map-wall-05-rounded.img\x22:{\x22frame\x22:{\x22x\x22:4036,\x22y\x22:1002,\x22w\x22:32,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:160}},\x22map-bed-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1166,\x22w\x22:89,\x22h\x22:158},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:16,\x22w\x22:89,\x22h\x22:158},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:192}},\x22map-bed-res-02.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1328,\x22w\x22:89,\x22h\x22:158},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:16,\x22w\x22:89,\x22h\x22:158},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:192}},\x22map-wheel-01.img\x22:{\x22frame\x22:{\x22x\x22:1702,\x22y\x22:2384,\x22w\x22:312,\x22h\x22:156},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:312,\x22h\x22:156},\x22sourceSize\x22:{\x22w\x22:312,\x22h\x22:156}},\x22map-crate-res-03.img\x22:{\x22frame\x22:{\x22x\x22:2018,\x22y\x22:2384,\x22w\x22:216,\x22h\x22:154},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:216,\x22h\x22:154},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:156}},\x22map-crate-11.img\x22:{\x22frame\x22:{\x22x\x22:2238,\x22y\x22:2384,\x22w\x22:148,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-sandbags-02.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1490,\x22w\x22:114,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:1,\x22w\x22:114,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-bush-07.img\x22:{\x22frame\x22:{\x22x\x22:3600,\x22y\x22:930,\x22w\x22:135,\x22h\x22:143},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:135,\x22h\x22:143},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-stone-01.img\x22:{\x22frame\x22:{\x22x\x22:3739,\x22y\x22:930,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-door-slot-02.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1640,\x22w\x22:38,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:38,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:136}},\x22map-door-slot-01.img\x22:{\x22frame\x22:{\x22x\x22:3998,\x22y\x22:1640,\x22w\x22:38,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:38,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:134}},\x22map-switch-02.img\x22:{\x22frame\x22:{\x22x\x22:1462,\x22y\x22:1677,\x22w\x22:30,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:34}},\x22map-bush-07x.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1914,\x22w\x22:126,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:126,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-stone-res-06.img\x22:{\x22frame\x22:{\x22x\x22:2412,\x22y\x22:2414,\x22w\x22:288,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:128}},\x22map-stairs-broken-01.img\x22:{\x22frame\x22:{\x22x\x22:2704,\x22y\x22:2414,\x22w\x22:160,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:128}},\x22map-table-01.img\x22:{\x22frame\x22:{\x22x\x22:2868,\x22y\x22:2414,\x22w\x22:160,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:128}},\x22map-vat-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2048,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bathhouse-column-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2180,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-note-02.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2312,\x22w\x22:90,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:0,\x22w\x22:90,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-note-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2444,\x22w\x22:86,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:86,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-door-04.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2576,\x22w\x22:54,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:128}},\x22map-wall-04-rounded.img\x22:{\x22frame\x22:{\x22x\x22:4049,\x22y\x22:1166,\x22w\x22:32,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:128}},\x22map-wall-04.img\x22:{\x22frame\x22:{\x22x\x22:4049,\x22y\x22:1328,\x22w\x22:32,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:128}},\x22map-door-01.img\x22:{\x22frame\x22:{\x22x\x22:4040,\x22y\x22:1640,\x22w\x22:24,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:128}},\x22map-door-05.img\x22:{\x22frame\x22:{\x22x\x22:4050,\x22y\x22:2312,\x22w\x22:24,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:128}},\x22map-barrel-res-02.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2708,\x22w\x22:130,\x22h\x22:127},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:130,\x22h\x22:127},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-weapon-m9-cursed.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2839,\x22w\x22:98,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:4,\x22w\x22:98,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22timer.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:2963,\x22w\x22:128,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:128,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-chimney-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3085,\x22w\x22:120,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:120,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22map-stone-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3207,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22player-medic.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3329,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:13,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-squash-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3451,\x22w\x22:124,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:11,\x22w\x22:124,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-stone-res-04.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3571,\x22w\x22:116,\x22h\x22:116},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:116,\x22h\x22:116},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22map-case-flare-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3691,\x22w\x22:128,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:10,\x22w\x22:128,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-case-hatchet-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3810,\x22w\x22:128,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:10,\x22w\x22:128,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-perk-inspiration.img\x22:{\x22frame\x22:{\x22x\x22:3773,\x22y\x22:2973,\x22w\x22:114,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:5,\x22w\x22:114,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-building-boarded-window-01.img\x22:{\x22frame\x22:{\x22x\x22:4014,\x22y\x22:2576,\x22w\x22:44,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:7,\x22w\x22:44,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:128}},\x22map-case-basement-01.img\x22:{\x22frame\x22:{\x22x\x22:3032,\x22y\x22:2414,\x22w\x22:148,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:112}},\x22map-tree-09.img\x22:{\x22frame\x22:{\x22x\x22:3184,\x22y\x22:2414,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22map-tree-04.img\x22:{\x22frame\x22:{\x22x\x22:3300,\x22y\x22:2414,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22loot-perk-final-bugle.img\x22:{\x22frame\x22:{\x22x\x22:3295,\x22y\x22:3790,\x22w\x22:104,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:4,\x22w\x22:104,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-door-03.img\x22:{\x22frame\x22:{\x22x\x22:4046,\x22y\x22:2444,\x22w\x22:32,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:112}},\x22map-bollard-01.img\x22:{\x22frame\x22:{\x22x\x22:3295,\x22y\x22:3906,\x22w\x22:112,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:18,\x22w\x22:112,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-building-bank-window-01.img\x22:{\x22frame\x22:{\x22x\x22:3885,\x22y\x22:930,\x22w\x22:56,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:104}},\x22map-building-house-window-01.img\x22:{\x22frame\x22:{\x22x\x22:3891,\x22y\x22:2973,\x22w\x22:32,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:104}},\x22map-decal-oil-02.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:1936,\x22w\x22:90,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:14,\x22w\x22:90,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-toilet-03.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:2040,\x22w\x22:66,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:1,\x22w\x22:66,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-toilet-04.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:2142,\x22w\x22:66,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:1,\x22w\x22:66,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-recorder-01.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:872,\x22w\x22:64,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:96}},\x22map-recorder-02.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:972,\x22w\x22:64,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:96}},\x22map-wall-03-rounded.img\x22:{\x22frame\x22:{\x22x\x22:3380,\x22y\x22:1902,\x22w\x22:32,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:96}},\x22map-wall-03.img\x22:{\x22frame\x22:{\x22x\x22:3380,\x22y\x22:2002,\x22w\x22:32,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:96}},\x22map-toilet-res-02.img\x22:{\x22frame\x22:{\x22x\x22:2315,\x22y\x22:2244,\x22w\x22:80,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:24,\x22y\x22:17,\x22w\x22:80,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-oven-01.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:3929,\x22w\x22:108,\x22h\x22:93},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:108,\x22h\x22:93},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:94}},\x22map-saloon-bar-02.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:1072,\x22w\x22:54,\x22h\x22:92},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:92},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:92}},\x22map-recorder-03.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:1168,\x22w\x22:48,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:80}},\x22map-recorder-04.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:1252,\x22w\x22:48,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:80}},\x22map-power-box-01.img\x22:{\x22frame\x22:{\x22x\x22:3820,\x22y\x22:3937,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3892,\x22y\x22:870,\x22w\x22:52,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:46,\x22y\x22:48,\x22w\x22:52,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22crosshair098.img\x22:{\x22frame\x22:{\x22x\x22:3896,\x22y\x22:3937,\x22w\x22:56,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-tree-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3364,\x22y\x22:1326,\x22w\x22:48,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:48,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-bush-res-04.img\x22:{\x22frame\x22:{\x22x\x22:3296,\x22y\x22:2350,\x22w\x22:47,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:47,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:54}},\x22map-gun-mount-02.img\x22:{\x22frame\x22:{\x22x\x22:966,\x22y\x22:1677,\x22w\x22:128,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:56}},\x22map-gun-mount-03.img\x22:{\x22frame\x22:{\x22x\x22:1098,\x22y\x22:1677,\x22w\x22:128,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:56}},\x22map-decal-flyer-01.img\x22:{\x22frame\x22:{\x22x\x22:3347,\x22y\x22:2350,\x22w\x22:36,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:36,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-building-bank-window-res-01.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:1336,\x22w\x22:44,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:46,\x22y\x22:55,\x22w\x22:44,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22cobalt.img\x22:{\x22frame\x22:{\x22x\x22:1230,\x22y\x22:1677,\x22w\x22:42,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:42,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22crosshair051.img\x22:{\x22frame\x22:{\x22x\x22:2344,\x22y\x22:1383,\x22w\x22:40,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:12,\x22w\x22:40,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-barrel-04.img\x22:{\x22frame\x22:{\x22x\x22:1276,\x22y\x22:1677,\x22w\x22:89,\x22h\x22:35},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:89,\x22h\x22:35},\x22sourceSize\x22:{\x22w\x22:89,\x22h\x22:35}},\x22map-barrel-03.img\x22:{\x22frame\x22:{\x22x\x22:1369,\x22y\x22:1677,\x22w\x22:89,\x22h\x22:35},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:89,\x22h\x22:35},\x22sourceSize\x22:{\x22w\x22:89,\x22h\x22:35}},\x22map-bottle-04.img\x22:{\x22frame\x22:{\x22x\x22:3885,\x22y\x22:1038,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-switch-03.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2935,\x22w\x22:30,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:34}},\x22map-switch-01.img\x22:{\x22frame\x22:{\x22x\x22:3911,\x22y\x22:2935,\x22w\x22:30,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:34}},\x22crosshair176.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1428,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-bottle-01.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1464,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bottle-02.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1500,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-wall-01-rounded.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1536,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bottle-05.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1572,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bottle-03.img\x22:{\x22frame\x22:{\x22x\x22:2371,\x22y\x22:1608,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bush-01f.img\x22:{\x22frame\x22:{\x22x\x22:3956,\x22y\x22:1780,\x22w\x22:126,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:126,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}}}},{\x22meta\x22:{\x22image\x22:\x22shared-2-100-55e4ae31.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-building-barn-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:726,\x22y\x22:2,\x22w\x22:1200,\x22h\x22:624},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1200,\x22h\x22:624},\x22sourceSize\x22:{\x22w\x22:1200,\x22h\x22:624}},\x22map-building-house-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:720,\x22h\x22:648},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:720,\x22h\x22:648},\x22sourceSize\x22:{\x22w\x22:720,\x22h\x22:648}},\x22map-building-teahouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:654,\x22w\x22:934,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:16,\x22w\x22:934,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:960,\x22h\x22:640}},\x22map-building-club-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:940,\x22y\x22:654,\x22w\x22:737,\x22h\x22:593},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:737,\x22h\x22:593},\x22sourceSize\x22:{\x22w\x22:738,\x22h\x22:594}},\x22map-building-club-floor-01g.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1266,\x22w\x22:800,\x22h\x22:578},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:800,\x22h\x22:578},\x22sourceSize\x22:{\x22w\x22:802,\x22h\x22:578}},\x22map-building-cabin-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:806,\x22y\x22:1266,\x22w\x22:912,\x22h\x22:576},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:912,\x22h\x22:576},\x22sourceSize\x22:{\x22w\x22:912,\x22h\x22:576}},\x22map-building-teahouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1930,\x22y\x22:2,\x22w\x22:896,\x22h\x22:576},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:896,\x22h\x22:576},\x22sourceSize\x22:{\x22w\x22:896,\x22h\x22:576}},\x22map-building-bridge-lg-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1848,\x22w\x22:1088,\x22h\x22:544},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:1088,\x22h\x22:544},\x22sourceSize\x22:{\x22w\x22:1088,\x22h\x22:576}},\x22map-building-police-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1094,\x22y\x22:1848,\x22w\x22:1008,\x22h\x22:480},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1008,\x22h\x22:480},\x22sourceSize\x22:{\x22w\x22:1008,\x22h\x22:480}},\x22map-building-barn-basement-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1930,\x22y\x22:582,\x22w\x22:662,\x22h\x22:468},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:662,\x22h\x22:468},\x22sourceSize\x22:{\x22w\x22:664,\x22h\x22:472}},\x22map-building-bank-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1930,\x22y\x22:1054,\x22w\x22:864,\x22h\x22:448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:864,\x22h\x22:448},\x22sourceSize\x22:{\x22w\x22:1088,\x22h\x22:448}},\x22map-building-hut-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2106,\x22y\x22:1848,\x22w\x22:448,\x22h\x22:448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:32,\x22w\x22:448,\x22h\x22:448},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-building-warehouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:2,\x22w\x22:832,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:832,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:832,\x22h\x22:432}},\x22map-building-warehouse-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:438,\x22w\x22:720,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:720,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:720,\x22h\x22:432}},\x22map-bunker-conch-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:874,\x22w\x22:400,\x22h\x22:430},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:430},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:448}},\x22map-bunker-conch-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2396,\x22w\x22:1239,\x22h\x22:408},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:28,\x22w\x22:1239,\x22h\x22:408},\x22sourceSize\x22:{\x22w\x22:1306,\x22h\x22:464}},\x22map-building-shack-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:1308,\x22w\x22:568,\x22h\x22:408},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:568,\x22h\x22:408},\x22sourceSize\x22:{\x22w\x22:576,\x22h\x22:448}},\x22map-building-hut-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3234,\x22y\x22:874,\x22w\x22:378,\x22h\x22:393},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:15,\x22w\x22:378,\x22h\x22:393},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:408}},\x22map-building-hut-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:1720,\x22w\x22:378,\x22h\x22:393},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:15,\x22w\x22:378,\x22h\x22:393},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:408}},\x22map-building-panicroom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:3212,\x22y\x22:1720,\x22w\x22:288,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:384}},\x22map-bunker-conch-chamber-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1245,\x22y\x22:2396,\x22w\x22:1393,\x22h\x22:382},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:43,\x22y\x22:43,\x22w\x22:1393,\x22h\x22:382},\x22sourceSize\x22:{\x22w\x22:1520,\x22h\x22:432}},\x22map-bunker-storm-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2642,\x22y\x22:2396,\x22w\x22:320,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:384}},\x22map-building-container-open-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3402,\x22y\x22:1308,\x22w\x22:180,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:156,\x22w\x22:180,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:692}},\x22map-building-container-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2596,\x22y\x22:582,\x22w\x22:180,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:536}},\x22map-building-container-ceiling-05.img\x22:{\x22frame\x22:{\x22x\x22:1681,\x22y\x22:654,\x22w\x22:180,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:536}},\x22map-building-container-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1722,\x22y\x22:1266,\x22w\x22:180,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:536}},\x22map-building-container-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2558,\x22y\x22:1848,\x22w\x22:180,\x22h\x22:380},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:380},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:536}},\x22map-building-bridge-md-floor.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2808,\x22w\x22:896,\x22h\x22:368},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:896,\x22h\x22:368},\x22sourceSize\x22:{\x22w\x22:896,\x22h\x22:368}},\x22map-building-bank-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:2966,\x22y\x22:2396,\x22w\x22:216,\x22h\x22:360},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:192,\x22w\x22:216,\x22h\x22:360},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:552}},\x22map-building-bathhouse-basement-01c.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:2808,\x22w\x22:566,\x22h\x22:342},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:566,\x22h\x22:342},\x22sourceSize\x22:{\x22w\x22:567,\x22h\x22:343}},\x22map-building-bathhouse-sideroom-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1930,\x22y\x22:1506,\x22w\x22:512,\x22h\x22:336},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:512,\x22h\x22:336},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:336}},\x22map-building-shack-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3186,\x22y\x22:2396,\x22w\x22:381,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:20,\x22w\x22:381,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:420,\x22h\x22:340}},\x22map-building-shack-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2446,\x22y\x22:1506,\x22w\x22:320,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-building-mansion-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1472,\x22y\x22:2808,\x22w\x22:802,\x22h\x22:317},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:802,\x22h\x22:317},\x22sourceSize\x22:{\x22w\x22:802,\x22h\x22:322}},\x22map-building-outhouse-floor.img\x22:{\x22frame\x22:{\x22x\x22:2278,\x22y\x22:2808,\x22w\x22:240,\x22h\x22:308},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:80,\x22y\x22:4,\x22w\x22:240,\x22h\x22:308},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:316}},\x22map-bunker-storm-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2522,\x22y\x22:2808,\x22w\x22:592,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:112,\x22w\x22:592,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:592,\x22h\x22:416}},\x22map-bunker-egg-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3118,\x22y\x22:2808,\x22w\x22:320,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:144,\x22w\x22:320,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:448}},\x22map-building-bathhouse-basement-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3180,\x22w\x22:225,\x22h\x22:290},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:225,\x22h\x22:290},\x22sourceSize\x22:{\x22w\x22:226,\x22h\x22:290}},\x22map-building-club-floor-01h.img\x22:{\x22frame\x22:{\x22x\x22:231,\x22y\x22:3180,\x22w\x22:321,\x22h\x22:289},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:321,\x22h\x22:289},\x22sourceSize\x22:{\x22w\x22:322,\x22h\x22:290}},\x22map-building-shack-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:556,\x22y\x22:3180,\x22w\x22:408,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:24,\x22y\x22:0,\x22w\x22:408,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:336}},\x22map-bunker-generic-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:968,\x22y\x22:3180,\x22w\x22:295,\x22h\x22:281},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:0,\x22w\x22:295,\x22h\x22:281},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-bunker-generic-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1267,\x22y\x22:3180,\x22w\x22:295,\x22h\x22:281},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:0,\x22w\x22:295,\x22h\x22:281},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-building-bathhouse-sideroom-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2830,\x22y\x22:2117,\x22w\x22:256,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:224}},\x22map-building-teahouse-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3090,\x22y\x22:2117,\x22w\x22:282,\x22h\x22:208},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:115,\x22y\x22:152,\x22w\x22:282,\x22h\x22:208},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-building-shack-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1566,\x22y\x22:3180,\x22w\x22:315,\x22h\x22:207},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:315,\x22h\x22:207},\x22sourceSize\x22:{\x22w\x22:315,\x22h\x22:255}},\x22map-vat-02.img\x22:{\x22frame\x22:{\x22x\x22:3376,\x22y\x22:2117,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-stone-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1681,\x22y\x22:1038,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-building-club-floor-01d.img\x22:{\x22frame\x22:{\x22x\x22:1885,\x22y\x22:3180,\x22w\x22:322,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:322,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:322,\x22h\x22:194}},\x22map-building-bathhouse-basement-01d.img\x22:{\x22frame\x22:{\x22x\x22:2211,\x22y\x22:3180,\x22w\x22:258,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:258,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:258,\x22h\x22:194}},\x22map-building-club-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:3442,\x22y\x22:2808,\x22w\x22:194,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:194,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:194}},\x22map-bunker-conch-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2473,\x22y\x22:3180,\x22w\x22:496,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:496,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:496,\x22h\x22:192}},\x22map-building-barn-basement-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2973,\x22y\x22:3180,\x22w\x22:304,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:304,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:304,\x22h\x22:208}},\x22map-building-crossing-bathroom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:3281,\x22y\x22:3180,\x22w\x22:288,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:192}},\x22map-building-shack-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2,\x22w\x22:240,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:240,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:240,\x22h\x22:240}},\x22map-hedgehog-01.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:198,\x22w\x22:192,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:192}},\x22map-building-barn-basement-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:394,\x22w\x22:164,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:164,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:164,\x22h\x22:208}},\x22map-building-mansion-floor-01d.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3474,\x22w\x22:1090,\x22h\x22:186},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1090,\x22h\x22:186},\x22sourceSize\x22:{\x22w\x22:1090,\x22h\x22:194}},\x22map-shack-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1096,\x22y\x22:3474,\x22w\x22:305,\x22h\x22:181},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:60,\x22y\x22:49,\x22w\x22:305,\x22h\x22:181},\x22sourceSize\x22:{\x22w\x22:420,\x22h\x22:340}},\x22map-bunker-conch-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1405,\x22y\x22:3474,\x22w\x22:380,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:380,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:380,\x22h\x22:180}},\x22map-bunker-egg-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:590,\x22w\x22:192,\x22h\x22:179},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:192,\x22h\x22:179},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:180}},\x22map-smoke-res.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:773,\x22w\x22:170,\x22h\x22:178},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:47,\x22y\x22:39,\x22w\x22:170,\x22h\x22:178},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-storm-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:955,\x22w\x22:192,\x22h\x22:177},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:192,\x22h\x22:177},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:178}},\x22map-bunker-conch-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1789,\x22y\x22:3474,\x22w\x22:488,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:488,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:488,\x22h\x22:176}},\x22map-shack-res-02.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:1136,\x22w\x22:220,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:100,\x22y\x22:69,\x22w\x22:220,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:420,\x22h\x22:340}},\x22map-shack-res-03.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:1316,\x22w\x22:220,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:100,\x22y\x22:69,\x22w\x22:220,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:420,\x22h\x22:340}},\x22map-building-club-vault-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:1496,\x22w\x22:160,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:176}},\x22map-pipes-02.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:1676,\x22w\x22:236,\x22h\x22:172},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:236,\x22h\x22:172},\x22sourceSize\x22:{\x22w\x22:238,\x22h\x22:172}},\x22map-snow-07.img\x22:{\x22frame\x22:{\x22x\x22:2281,\x22y\x22:3474,\x22w\x22:496,\x22h\x22:168},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:12,\x22w\x22:496,\x22h\x22:168},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:192}},\x22map-crate-04.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:1852,\x22w\x22:164,\x22h\x22:164},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:164,\x22h\x22:164},\x22sourceSize\x22:{\x22w\x22:164,\x22h\x22:164}},\x22map-stove-01.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2020,\x22w\x22:208,\x22h\x22:161},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:208,\x22h\x22:161},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:176}},\x22map-table-02.img\x22:{\x22frame\x22:{\x22x\x22:2781,\x22y\x22:3474,\x22w\x22:288,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:160}},\x22map-airdrop-02.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2185,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-building-dock-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2349,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:162}},\x22map-airdrop-01.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2513,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-table-03.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2677,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-wheel-03.img\x22:{\x22frame\x22:{\x22x\x22:3073,\x22y\x22:3474,\x22w\x22:312,\x22h\x22:149},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:312,\x22h\x22:149},\x22sourceSize\x22:{\x22w\x22:312,\x22h\x22:156}},\x22map-wheel-02.img\x22:{\x22frame\x22:{\x22x\x22:3389,\x22y\x22:3474,\x22w\x22:297,\x22h\x22:149},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:297,\x22h\x22:149},\x22sourceSize\x22:{\x22w\x22:312,\x22h\x22:156}},\x22map-crate-10.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2841,\x22w\x22:148,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-sandbags-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3664,\x22w\x22:256,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:256,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:148}},\x22map-building-cabin-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:3504,\x22y\x22:2016,\x22w\x22:148,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:76}},\x22map-crate-14a.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:2993,\x22w\x22:156,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:144}},\x22map-crate-14.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:3141,\x22w\x22:156,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:144}},\x22map-crate-09.img\x22:{\x22frame\x22:{\x22x\x22:3666,\x22y\x22:3289,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22loot-circle-outer-06.img\x22:{\x22frame\x22:{\x22x\x22:3504,\x22y\x22:1720,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22pass-unlock-type-bg.img\x22:{\x22frame\x22:{\x22x\x22:3504,\x22y\x22:1868,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22map-stone-05.img\x22:{\x22frame\x22:{\x22x\x22:1722,\x22y\x22:1650,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22pass-unlock-bg.img\x22:{\x22frame\x22:{\x22x\x22:3690,\x22y\x22:3474,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:146,\x22h\x22:146}},\x22map-stone-04.img\x22:{\x22frame\x22:{\x22x\x22:682,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-08.img\x22:{\x22frame\x22:{\x22x\x22:830,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-07.img\x22:{\x22frame\x22:{\x22x\x22:978,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-01.img\x22:{\x22frame\x22:{\x22x\x22:1126,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-02.img\x22:{\x22frame\x22:{\x22x\x22:1274,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-02sv.img\x22:{\x22frame\x22:{\x22x\x22:1422,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-03.img\x22:{\x22frame\x22:{\x22x\x22:1570,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-barrel-01.img\x22:{\x22frame\x22:{\x22x\x22:1718,\x22y\x22:3664,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-barrel-02.img\x22:{\x22frame\x22:{\x22x\x22:1864,\x22y\x22:3664,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bunker-vent-02.img\x22:{\x22frame\x22:{\x22x\x22:2010,\x22y\x22:3664,\x22w\x22:132,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:132,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:136,\x22h\x22:136}},\x22map-bunker-vent-03.img\x22:{\x22frame\x22:{\x22x\x22:2146,\x22y\x22:3664,\x22w\x22:132,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:132,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:136,\x22h\x22:136}},\x22map-outhouse-res.img\x22:{\x22frame\x22:{\x22x\x22:2282,\x22y\x22:3664,\x22w\x22:150,\x22h\x22:132},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:125,\x22y\x22:42,\x22w\x22:150,\x22h\x22:132},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:312}},\x22map-table-res.img\x22:{\x22frame\x22:{\x22x\x22:2436,\x22y\x22:3664,\x22w\x22:131,\x22h\x22:132},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:131,\x22h\x22:132},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-building-club-floor-01f.img\x22:{\x22frame\x22:{\x22x\x22:2571,\x22y\x22:3664,\x22w\x22:194,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:194,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:130}},\x22map-building-mansion-cellar-01c.img\x22:{\x22frame\x22:{\x22x\x22:2769,\x22y\x22:3664,\x22w\x22:354,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:354,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:354,\x22h\x22:130}},\x22map-crate-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3127,\x22y\x22:3664,\x22w\x22:138,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:9,\x22w\x22:138,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-control-panel-01.img\x22:{\x22frame\x22:{\x22x\x22:3269,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:110}},\x22map-control-panel-04.img\x22:{\x22frame\x22:{\x22x\x22:3417,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:110}},\x22map-control-panel-05.img\x22:{\x22frame\x22:{\x22x\x22:3565,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:110}},\x22map-control-panel-02.img\x22:{\x22frame\x22:{\x22x\x22:3713,\x22y\x22:3664,\x22w\x22:144,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:110}},\x22map-case-deagle-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2,\x22w\x22:144,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:108}},\x22map-case-deagle-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:114,\x22w\x22:144,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:108}},\x22news.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:226,\x22w\x22:110,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:10,\x22w\x22:110,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-crate-20.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:338,\x22w\x22:108,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:108,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:108}},\x22loot-perk-turkey_shoot.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:450,\x22w\x22:102,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:10,\x22w\x22:102,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-toilet-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:562,\x22w\x22:98,\x22h\x22:107},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:7,\x22w\x22:98,\x22h\x22:107},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-decal-club-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:673,\x22w\x22:100,\x22h\x22:105},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:116,\x22w\x22:100,\x22h\x22:105},\x22sourceSize\x22:{\x22w\x22:104,\x22h\x22:360}},\x22map-stove-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:782,\x22w\x22:98,\x22h\x22:105},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:98,\x22h\x22:105},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22emote-medical-healthkit.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:891,\x22w\x22:118,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:12,\x22w\x22:118,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-leaf-01sv.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:999,\x22w\x22:108,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:12,\x22w\x22:108,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-case-flare-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1107,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-case-hatchet-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1213,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-chest-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1319,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-chest-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1425,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-chest-03.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1531,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22part-takedown-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1637,\x22w\x22:126,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:13,\x22w\x22:126,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-grill-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1743,\x22w\x22:120,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:13,\x22w\x22:120,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-crate-06.img\x22:{\x22frame\x22:{\x22x\x22:3442,\x22y\x22:3005,\x22w\x22:164,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:164,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:164,\x22h\x22:100}},\x22map-couch-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3814,\x22w\x22:288,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:96}},\x22map-couch-02.img\x22:{\x22frame\x22:{\x22x\x22:294,\x22y\x22:3814,\x22w\x22:192,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:96}},\x22map-woodpile-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1849,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-bathrocks-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:1949,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-couch-03.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2049,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-control-panel-06.img\x22:{\x22frame\x22:{\x22x\x22:490,\x22y\x22:3814,\x22w\x22:192,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:94}},\x22map-vending-soda-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2149,\x22w\x22:108,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:108,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:94}},\x22map-refrigerator-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2247,\x22w\x22:108,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:108,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:94}},\x22map-tree-res-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2345,\x22w\x22:96,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:96,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-control-panel-03.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2443,\x22w\x22:96,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:94}},\x22map-pot-03.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2541,\x22w\x22:94,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:94,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-pot-04.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2639,\x22w\x22:94,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:94,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-pot-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2737,\x22w\x22:94,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:94,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-pot-05.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2835,\x22w\x22:94,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:94,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-pot-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:2933,\x22w\x22:94,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:94,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-decal-oil-03.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3031,\x22w\x22:89,\x22h\x22:92},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:18,\x22w\x22:89,\x22h\x22:92},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-drawers-01.img\x22:{\x22frame\x22:{\x22x\x22:686,\x22y\x22:3814,\x22w\x22:160,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:90}},\x22map-drawers-02.img\x22:{\x22frame\x22:{\x22x\x22:850,\x22y\x22:3814,\x22w\x22:160,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:90}},\x22map-stand-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3127,\x22w\x22:80,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:90}},\x22map-crate-mil-04.img\x22:{\x22frame\x22:{\x22x\x22:1014,\x22y\x22:3814,\x22w\x22:172,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:172,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:89}},\x22map-crate-mil-03.img\x22:{\x22frame\x22:{\x22x\x22:1190,\x22y\x22:3814,\x22w\x22:172,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:172,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:89}},\x22map-crate-mil-02.img\x22:{\x22frame\x22:{\x22x\x22:1366,\x22y\x22:3814,\x22w\x22:172,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:172,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:89}},\x22map-crate-mil-01.img\x22:{\x22frame\x22:{\x22x\x22:1542,\x22y\x22:3814,\x22w\x22:172,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:172,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:89}},\x22map-crate-mil-05.img\x22:{\x22frame\x22:{\x22x\x22:1718,\x22y\x22:3814,\x22w\x22:172,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:172,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:172,\x22h\x22:89}},\x22map-building-teahouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3221,\x22w\x22:128,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:88}},\x22map-decal-oil-06.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3313,\x22w\x22:94,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:17,\x22y\x22:21,\x22w\x22:94,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-couch-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3403,\x22w\x22:79,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:5,\x22w\x22:79,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-bunker-vent-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3493,\x22w\x22:82,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:82,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:84,\x22h\x22:84}},\x22map-vending-res.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3581,\x22w\x22:93,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:5,\x22w\x22:93,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:94}},\x22map-squash-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3910,\x22y\x22:3667,\x22w\x22:84,\x22h\x22:81},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:12,\x22w\x22:84,\x22h\x22:81},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-pot-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3818,\x22y\x22:2841,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:32,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-piano-01.img\x22:{\x22frame\x22:{\x22x\x22:1894,\x22y\x22:3814,\x22w\x22:240,\x22h\x22:75},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:240,\x22h\x22:75},\x22sourceSize\x22:{\x22w\x22:240,\x22h\x22:75}},\x22map-deposit-box-01.img\x22:{\x22frame\x22:{\x22x\x22:2596,\x22y\x22:966,\x22w\x22:160,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:74}},\x22map-building-barn-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:262,\x22y\x22:3664,\x22w\x22:416,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:416,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:416,\x22h\x22:144}}}}]')
  , Ns = [{
    'meta': {
        'image': 'halloween-0-100-cd0fab16.png',
        'size': {
            'w': 0x800,
            'h': 0x800
        },
        'scale': 0x1
    },
    'frames': {
        'map-bunker-eye-compartment-floor-01.img': {
            'frame': {
                'x': 0x2c6,
                'y': 0x2,
                'w': 0x2c0,
                'h': 0x2c0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x2c0,
                'h': 0x2c0
            },
            'sourceSize': {
                'w': 0x2c0,
                'h': 0x2c0
            }
        },
        'map-bunker-eye-chamber-floor-01a.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x2c0,
                'h': 0x540
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x20,
                'w': 0x2c0,
                'h': 0x540
            },
            'sourceSize': {
                'w': 0x2c0,
                'h': 0x560
            }
        },
        'map-bunker-eye-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x2c6,
                'y': 0x2c6,
                'w': 0x140,
                'h': 0x220
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x140,
                'h': 0x220
            },
            'sourceSize': {
                'w': 0x140,
                'h': 0x220
            }
        },
        'map-tree-08.img': {
            'frame': {
                'x': 0x58a,
                'y': 0x2,
                'w': 0x200,
                'h': 0x1fe
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1,
                'w': 0x200,
                'h': 0x1fe
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-tree-08sp.img': {
            'frame': {
                'x': 0x58a,
                'y': 0x204,
                'w': 0x200,
                'h': 0x1fe
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1,
                'w': 0x200,
                'h': 0x1fe
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-tree-05.img': {
            'frame': {
                'x': 0x2,
                'y': 0x546,
                'w': 0x1e9,
                'h': 0x1e0
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xc,
                'y': 0x11,
                'w': 0x1e9,
                'h': 0x1e0
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-bunker-eye-compartment-ceiling-01.img': {
            'frame': {
                'x': 0x40a,
                'y': 0x2c6,
                'w': 0x140,
                'h': 0x140
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x140,
                'h': 0x140
            },
            'sourceSize': {
                'w': 0x140,
                'h': 0x140
            }
        },
        'map-tree-07.img': {
            'frame': {
                'x': 0x58a,
                'y': 0x406,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-tree-07sp.img': {
            'frame': {
                'x': 0x1ef,
                'y': 0x546,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bunker-eye-chamber-floor-01b.img': {
            'frame': {
                'x': 0x68e,
                'y': 0x406,
                'w': 0xc0,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xc0,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0xc0,
                'h': 0x100
            }
        },
        'map-bush-06.img': {
            'frame': {
                'x': 0x40a,
                'y': 0x40a,
                'w': 0xbe,
                'h': 0xbc
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x2,
                'w': 0xbe,
                'h': 0xbc
            },
            'sourceSize': {
                'w': 0xc0,
                'h': 0xc0
            }
        },
        'map-airdrop-01h.img': {
            'frame': {
                'x': 0x4cc,
                'y': 0x40a,
                'w': 0xa0,
                'h': 0xa0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xa0
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xa0
            }
        },
        'map-bush-res-06.img': {
            'frame': {
                'x': 0x752,
                'y': 0x406,
                'w': 0x32,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2f,
                'y': 0x30,
                'w': 0x32,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-web-01.img': {
            'frame': {
                'x': 0x397,
                'y': 0x546,
                'w': 0x98,
                'h': 0x9e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1,
                'w': 0x98,
                'h': 0x9e
            },
            'sourceSize': {
                'w': 0x98,
                'h': 0xa0
            }
        },
        'map-crate-11h.img': {
            'frame': {
                'x': 0x433,
                'y': 0x546,
                'w': 0x92,
                'h': 0x92
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x1,
                'w': 0x92,
                'h': 0x92
            },
            'sourceSize': {
                'w': 0x94,
                'h': 0x94
            }
        },
        'map-bush-07sp.img': {
            'frame': {
                'x': 0x4c9,
                'y': 0x546,
                'w': 0x87,
                'h': 0x8f
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x6,
                'y': 0x0,
                'w': 0x87,
                'h': 0x8f
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-pumpkin-02.img': {
            'frame': {
                'x': 0x554,
                'y': 0x546,
                'w': 0x8c,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x8c,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-pumpkin-01.img': {
            'frame': {
                'x': 0x5e4,
                'y': 0x546,
                'w': 0x8c,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x8c,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-pumpkin-res-01.img': {
            'frame': {
                'x': 0x674,
                'y': 0x546,
                'w': 0x87,
                'h': 0x84
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x8,
                'w': 0x87,
                'h': 0x84
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-tree-04h.img': {
            'frame': {
                'x': 0x6ff,
                'y': 0x546,
                'w': 0x70,
                'h': 0x70
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0x70
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0x70
            }
        },
        'map-pumpkin-03.img': {
            'frame': {
                'x': 0x1ef,
                'y': 0x64a,
                'w': 0x5f,
                'h': 0x61
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x16,
                'y': 0x19,
                'w': 0x5f,
                'h': 0x61
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'part-airdrop-01h.img': {
            'frame': {
                'x': 0x2c6,
                'y': 0x4ea,
                'w': 0x58,
                'h': 0x58
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x4,
                'y': 0x4,
                'w': 0x58,
                'h': 0x58
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-pumpkin-res-03.img': {
            'frame': {
                'x': 0x322,
                'y': 0x4ea,
                'w': 0x56,
                'h': 0x52
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x9,
                'w': 0x56,
                'h': 0x52
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'part-airdrop-02h.img': {
            'frame': {
                'x': 0x37c,
                'y': 0x4ea,
                'w': 0x50,
                'h': 0x50
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x50
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x50
            }
        },
        'map-airdrop-02h.img': {
            'frame': {
                'x': 0x2f3,
                'y': 0x546,
                'w': 0xa0,
                'h': 0xa0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xa0
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xa0
            }
        }
    }
}]
  , Es = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22snow-0-100-23291c9e.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:2,\x22w\x22:767,\x22h\x22:863},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:767,\x22h\x22:863},\x22sourceSize\x22:{\x22w\x22:768,\x22h\x22:864}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1695,\x22h\x22:1448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:1695,\x22h\x22:1448},\x22sourceSize\x22:{\x22w\x22:1704,\x22h\x22:1448}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1454,\x22w\x22:704,\x22h\x22:798},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:704,\x22h\x22:798},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:832}},\x22map-bunker-chrys-compartment-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:710,\x22y\x22:1454,\x22w\x22:800,\x22h\x22:772},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:800,\x22h\x22:772},\x22sourceSize\x22:{\x22w\x22:804,\x22h\x22:804}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1514,\x22y\x22:1454,\x22w\x22:336,\x22h\x22:740},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:44,\x22y\x22:0,\x22w\x22:336,\x22h\x22:740},\x22sourceSize\x22:{\x22w\x22:392,\x22h\x22:744}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2472,\x22y\x22:2,\x22w\x22:706,\x22h\x22:738},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:706,\x22h\x22:738},\x22sourceSize\x22:{\x22w\x22:706,\x22h\x22:738}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2256,\x22w\x22:736,\x22h\x22:656},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:736,\x22h\x22:656},\x22sourceSize\x22:{\x22w\x22:816,\x22h\x22:720}},\x22map-building-greenhouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:742,\x22y\x22:2256,\x22w\x22:832,\x22h\x22:642},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:832,\x22h\x22:642},\x22sourceSize\x22:{\x22w\x22:834,\x22h\x22:642}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2472,\x22y\x22:744,\x22w\x22:704,\x22h\x22:640},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:704,\x22h\x22:640},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:640}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:1578,\x22y\x22:2256,\x22w\x22:768,\x22h\x22:628},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:768,\x22h\x22:628},\x22sourceSize\x22:{\x22w\x22:772,\x22h\x22:628}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2916,\x22w\x22:930,\x22h\x22:626},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:930,\x22h\x22:626},\x22sourceSize\x22:{\x22w\x22:932,\x22h\x22:628}},\x22map-building-greenhouse-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2472,\x22y\x22:1388,\x22w\x22:400,\x22h\x22:624},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:624},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:624}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:936,\x22y\x22:2916,\x22w\x22:864,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:864,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:864,\x22h\x22:608}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2876,\x22y\x22:1388,\x22w\x22:228,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:34,\x22w\x22:228,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:644}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3108,\x22y\x22:1388,\x22w\x22:60,\x22h\x22:528},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:528},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:528}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:869,\x22w\x22:703,\x22h\x22:507},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:703,\x22h\x22:507},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:512}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1854,\x22y\x22:1454,\x22w\x22:354,\x22h\x22:368},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:354,\x22h\x22:368},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:372}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1854,\x22y\x22:1826,\x22w\x22:320,\x22h\x22:360},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:360},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:360}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2212,\x22y\x22:1454,\x22w\x22:192,\x22h\x22:350},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:350},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:350}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2350,\x22y\x22:2256,\x22w\x22:320,\x22h\x22:344},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:344},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:352}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:2674,\x22y\x22:2256,\x22w\x22:352,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:352,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:308}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:2916,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2350,\x22y\x22:2604,\x22w\x22:448,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:448,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:448,\x22h\x22:272}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:2240,\x22y\x22:2916,\x22w\x22:400,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:272}},\x22map-stone-03x.img\x22:{\x22frame\x22:{\x22x\x22:2178,\x22y\x22:1826,\x22w\x22:276,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:276,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22map-planter-06.img\x22:{\x22frame\x22:{\x22x\x22:3030,\x22y\x22:2256,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:2802,\x22y\x22:2604,\x22w\x22:320,\x22h\x22:270},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:270},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:270}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:2644,\x22y\x22:2916,\x22w\x22:352,\x22h\x22:258},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:352,\x22h\x22:258},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:260}},\x22map-tree-10.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:3224,\x22w\x22:254,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:254,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-tree-11.img\x22:{\x22frame\x22:{\x22x\x22:2062,\x22y\x22:3224,\x22w\x22:250,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:250,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-chute-01x.img\x22:{\x22frame\x22:{\x22x\x22:2472,\x22y\x22:2016,\x22w\x22:232,\x22h\x22:232},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:12,\x22w\x22:232,\x22h\x22:232},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2708,\x22y\x22:2016,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-snowball-res.img\x22:{\x22frame\x22:{\x22x\x22:3622,\x22y\x22:1008,\x22w\x22:69,\x22h\x22:69},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:13,\x22w\x22:69,\x22h\x22:69},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3036,\x22y\x22:2016,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3100,\x22y\x22:2016,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-snow-02.img\x22:{\x22frame\x22:{\x22x\x22:2316,\x22y\x22:3224,\x22w\x22:208,\x22h\x22:208},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:24,\x22y\x22:24,\x22w\x22:208,\x22h\x22:208},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-stone-res-02x.img\x22:{\x22frame\x22:{\x22x\x22:2528,\x22y\x22:3224,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:2732,\x22y\x22:3224,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2936,\x22y\x22:3224,\x22w\x22:193,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:193,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:194}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3000,\x22y\x22:2916,\x22w\x22:112,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:192}},\x22map-bunker-chrys-compartment-floor-02c.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:2,\x22w\x22:512,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:0,\x22w\x22:512,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:548,\x22h\x22:180}},\x22map-snow-03.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:186,\x22w\x22:312,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:24,\x22y\x22:8,\x22w\x22:312,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:192}},\x22map-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:366,\x22w\x22:212,\x22h\x22:173},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:41,\x22w\x22:212,\x22h\x22:173},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-table-02x.img\x22:{\x22frame\x22:{\x22x\x22:3398,\x22y\x22:366,\x22w\x22:288,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:160}},\x22map-airdrop-01x.img\x22:{\x22frame\x22:{\x22x\x22:3498,\x22y\x22:186,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-table-03x.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:543,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-airdrop-02x.img\x22:{\x22frame\x22:{\x22x\x22:3346,\x22y\x22:543,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-crate-01x.img\x22:{\x22frame\x22:{\x22x\x22:3510,\x22y\x22:543,\x22w\x22:152,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:152,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-stone-01x.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:707,\x22w\x22:151,\x22h\x22:149},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:151,\x22h\x22:149},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3337,\x22y\x22:707,\x22w\x22:160,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:32,\x22w\x22:160,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:180}},\x22map-crate-03x.img\x22:{\x22frame\x22:{\x22x\x22:3501,\x22y\x22:707,\x22w\x22:148,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-crate-02x.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:860,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-planter-res-02.img\x22:{\x22frame\x22:{\x22x\x22:3330,\x22y\x22:860,\x22w\x22:76,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:76,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:136}},\x22map-bush-01x.img\x22:{\x22frame\x22:{\x22x\x22:3410,\x22y\x22:860,\x22w\x22:126,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:126,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-table-01x.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:1008,\x22w\x22:160,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:128}},\x22map-stone-res-01x.img\x22:{\x22frame\x22:{\x22x\x22:3540,\x22y\x22:860,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22map-snow-06.img\x22:{\x22frame\x22:{\x22x\x22:3346,\x22y\x22:1008,\x22w\x22:178,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:8,\x22w\x22:178,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:128}},\x22map-snow-05.img\x22:{\x22frame\x22:{\x22x\x22:3528,\x22y\x22:1008,\x22w\x22:90,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:12,\x22w\x22:90,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-chest-03x.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:1140,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-planter-07.img\x22:{\x22frame\x22:{\x22x\x22:3326,\x22y\x22:1140,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-snow-04.img\x22:{\x22frame\x22:{\x22x\x22:3430,\x22y\x22:1140,\x22w\x22:100,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:15,\x22w\x22:100,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:3182,\x22y\x22:1246,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:3410,\x22y\x22:1246,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-planter-res-03.img\x22:{\x22frame\x22:{\x22x\x22:3534,\x22y\x22:1140,\x22w\x22:82,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:82,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:86}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2872,\x22y\x22:2016,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}}}}]')
  , Os = [{
    'meta': {
        'image': 'faction-0-100-99af9e64.png',
        'size': {
            'w': 0x1000,
            'h': 0x1000
        },
        'scale': 0x1
    },
    'frames': {
        'map-building-bridge-xlg-floor.img': {
            'frame': {
                'x': 0x516,
                'y': 0x2,
                'w': 0x9a0,
                'h': 0x3c0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x9a0,
                'h': 0x3c0
            },
            'sourceSize': {
                'w': 0x9a0,
                'h': 0x3c0
            }
        },
        'map-complex-warehouse-floor-04.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x510,
                'h': 0x800
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x510,
                'h': 0x800
            },
            'sourceSize': {
                'w': 0x510,
                'h': 0x800
            }
        },
        'map-bunker-chrys-compartment-floor-03a.img': {
            'frame': {
                'x': 0x516,
                'y': 0x3c6,
                'w': 0x2ff,
                'h': 0x35f
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1,
                'w': 0x2ff,
                'h': 0x35f
            },
            'sourceSize': {
                'w': 0x300,
                'h': 0x360
            }
        },
        'map-bunker-chrys-compartment-floor-01b.img': {
            'frame': {
                'x': 0x819,
                'y': 0x3c6,
                'w': 0x320,
                'h': 0x304
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x320,
                'h': 0x304
            },
            'sourceSize': {
                'w': 0x324,
                'h': 0x324
            }
        },
        'map-building-greenhouse-floor-01.img': {
            'frame': {
                'x': 0xb3d,
                'y': 0x3c6,
                'w': 0x340,
                'h': 0x281
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x0,
                'w': 0x340,
                'h': 0x281
            },
            'sourceSize': {
                'w': 0x342,
                'h': 0x282
            }
        },
        'map-bunker-chrys-compartment-floor-02a.img': {
            'frame': {
                'x': 0x2,
                'y': 0x806,
                'w': 0x300,
                'h': 0x274
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x300,
                'h': 0x274
            },
            'sourceSize': {
                'w': 0x304,
                'h': 0x274
            }
        },
        'map-bunker-chrys-chamber-floor-01b.img': {
            'frame': {
                'x': 0x306,
                'y': 0x806,
                'w': 0x3a2,
                'h': 0x272
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x3a2,
                'h': 0x272
            },
            'sourceSize': {
                'w': 0x3a4,
                'h': 0x274
            }
        },
        'map-bunker-chrys-compartment-floor-01a.img': {
            'frame': {
                'x': 0x6ac,
                'y': 0x806,
                'w': 0xe4,
                'h': 0x260
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x22,
                'w': 0xe4,
                'h': 0x260
            },
            'sourceSize': {
                'w': 0xe4,
                'h': 0x284
            }
        },
        'map-complex-warehouse-floor-02.img': {
            'frame': {
                'x': 0x794,
                'y': 0x806,
                'w': 0x3c,
                'h': 0x210
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0x210
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0x210
            }
        },
        'map-bunker-chrys-compartment-ceiling-01b.img': {
            'frame': {
                'x': 0x7d4,
                'y': 0x806,
                'w': 0x162,
                'h': 0x170
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x2,
                'w': 0x162,
                'h': 0x170
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x174
            }
        },
        'map-building-greenhouse-ceiling-01.img': {
            'frame': {
                'x': 0x93a,
                'y': 0x806,
                'w': 0x190,
                'h': 0x13a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x190,
                'h': 0x13a
            },
            'sourceSize': {
                'w': 0x194,
                'h': 0x13c
            }
        },
        'map-bunker-chrys-compartment-ceiling-03b.img': {
            'frame': {
                'x': 0xace,
                'y': 0x806,
                'w': 0x160,
                'h': 0x132
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x160,
                'h': 0x132
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x134
            }
        },
        'map-statue-01.img': {
            'frame': {
                'x': 0xc32,
                'y': 0x806,
                'w': 0x11a,
                'h': 0x11a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x43,
                'y': 0x43,
                'w': 0x11a,
                'h': 0x11a
            },
            'sourceSize': {
                'w': 0x1a0,
                'h': 0x1a0
            }
        },
        'map-bunker-chrys-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0xa7e,
                'w': 0x1c0,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1c0,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x1c0,
                'h': 0x110
            }
        },
        'map-stone-03f.img': {
            'frame': {
                'x': 0xd50,
                'y': 0x806,
                'w': 0x114,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x6,
                'y': 0x8,
                'w': 0x114,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x120,
                'h': 0x120
            }
        },
        'map-planter-03.img': {
            'frame': {
                'x': 0x1c6,
                'y': 0xa7e,
                'w': 0x90,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x110
            }
        },
        'map-planter-01.img': {
            'frame': {
                'x': 0x25a,
                'y': 0xa7e,
                'w': 0x90,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x110
            }
        },
        'map-planter-02.img': {
            'frame': {
                'x': 0x2ee,
                'y': 0xa7e,
                'w': 0x90,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x110
            }
        },
        'map-bunker-chrys-compartment-ceiling-02b.img': {
            'frame': {
                'x': 0x382,
                'y': 0xa7e,
                'w': 0x160,
                'h': 0x102
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x160,
                'h': 0x102
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x104
            }
        },
        'map-airdrop-04.img': {
            'frame': {
                'x': 0x4e6,
                'y': 0xa7e,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bunker-chrys-compartment-ceiling-03a.img': {
            'frame': {
                'x': 0xd81,
                'y': 0x64b,
                'w': 0xe0,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x60
            }
        },
        'map-crate-13.img': {
            'frame': {
                'x': 0x6ee,
                'y': 0xa7e,
                'w': 0xf0,
                'h': 0xf0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xf0,
                'h': 0xf0
            },
            'sourceSize': {
                'w': 0xf0,
                'h': 0xf0
            }
        },
        'map-crate-12.img': {
            'frame': {
                'x': 0x7e2,
                'y': 0xa7e,
                'w': 0xf0,
                'h': 0xf0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xf0,
                'h': 0xf0
            },
            'sourceSize': {
                'w': 0xf0,
                'h': 0xf0
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0x8d6,
                'y': 0xa7e,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x97a,
                'y': 0xa7e,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        },
        'map-complex-warehouse-floor-03.img': {
            'frame': {
                'x': 0xe68,
                'y': 0x806,
                'w': 0x3c,
                'h': 0xe0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0xe0
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0xe0
            }
        },
        'map-complex-warehouse-floor-01.img': {
            'frame': {
                'x': 0xa1e,
                'y': 0xa7e,
                'w': 0x3c,
                'h': 0xe0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0xe0
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0xe0
            }
        },
        'map-stone-res-02f.img': {
            'frame': {
                'x': 0x516,
                'y': 0x729,
                'w': 0xc8,
                'h': 0xc8
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xc8,
                'h': 0xc8
            },
            'sourceSize': {
                'w': 0xc8,
                'h': 0xc8
            }
        },
        'map-bunker-chrys-compartment-ceiling-01a.img': {
            'frame': {
                'x': 0x5e2,
                'y': 0x729,
                'w': 0x70,
                'h': 0xc0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0xc0
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0xc0
            }
        },
        'map-bunker-chrys-compartment-floor-02b.img': {
            'frame': {
                'x': 0x656,
                'y': 0x729,
                'w': 0x200,
                'h': 0xb4
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x12,
                'y': 0x0,
                'w': 0x200,
                'h': 0xb4
            },
            'sourceSize': {
                'w': 0x224,
                'h': 0xb4
            }
        },
        'map-bunker-chrys-chamber-floor-01a.img': {
            'frame': {
                'x': 0x85a,
                'y': 0x729,
                'w': 0xa0,
                'h': 0x94
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x22,
                'y': 0x20,
                'w': 0xa0,
                'h': 0x94
            },
            'sourceSize': {
                'w': 0xe4,
                'h': 0xb4
            }
        },
        'map-crate-02f.img': {
            'frame': {
                'x': 0x8fe,
                'y': 0x729,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-crate-22.img': {
            'frame': {
                'x': 0x992,
                'y': 0x729,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-statue-top-02.img': {
            'frame': {
                'x': 0xa26,
                'y': 0x729,
                'w': 0x117,
                'h': 0x8e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x83,
                'y': 0x85,
                'w': 0x117,
                'h': 0x8e
            },
            'sourceSize': {
                'w': 0x1a0,
                'h': 0x1a0
            }
        },
        'map-statue-top-01.img': {
            'frame': {
                'x': 0xb41,
                'y': 0x729,
                'w': 0x117,
                'h': 0x8e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x83,
                'y': 0x85,
                'w': 0x117,
                'h': 0x8e
            },
            'sourceSize': {
                'w': 0x1a0,
                'h': 0x1a0
            }
        },
        'map-planter-res-01.img': {
            'frame': {
                'x': 0xc5c,
                'y': 0x729,
                'w': 0x4c,
                'h': 0x86
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x1,
                'w': 0x4c,
                'h': 0x86
            },
            'sourceSize': {
                'w': 0x56,
                'h': 0x88
            }
        },
        'map-chest-03f.img': {
            'frame': {
                'x': 0xb3d,
                'y': 0x64b,
                'w': 0x8c,
                'h': 0x66
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x8c,
                'h': 0x66
            },
            'sourceSize': {
                'w': 0x8c,
                'h': 0x66
            }
        },
        'map-planter-04.img': {
            'frame': {
                'x': 0xbcd,
                'y': 0x64b,
                'w': 0x64,
                'h': 0x64
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x64,
                'h': 0x64
            },
            'sourceSize': {
                'w': 0x64,
                'h': 0x64
            }
        },
        'map-planter-05.img': {
            'frame': {
                'x': 0xc35,
                'y': 0x64b,
                'w': 0x64,
                'h': 0x64
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x64,
                'h': 0x64
            },
            'sourceSize': {
                'w': 0x64,
                'h': 0x64
            }
        },
        'map-bunker-chrys-compartment-ceiling-02a.img': {
            'frame': {
                'x': 0xc9d,
                'y': 0x64b,
                'w': 0xe0,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x60
            }
        },
        'map-airdrop-03.img': {
            'frame': {
                'x': 0x5ea,
                'y': 0xa7e,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        }
    }
}]
  , Bs = [{
    'meta': {
        'image': 'desert-0-100-9f8523dd.png',
        'size': {
            'w': 0x1000,
            'h': 0x1000
        },
        'scale': 0x1
    },
    'frames': {
        'map-complex-warehouse-floor-05.img': {
            'frame': {
                'x': 0x526,
                'y': 0x2,
                'w': 0x20a,
                'h': 0x3a4
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x3f0,
                'w': 0x20a,
                'h': 0x3a4
            },
            'sourceSize': {
                'w': 0x510,
                'h': 0x800
            }
        },
        'map-building-saloon-floor-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x520,
                'h': 0x520
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x520,
                'h': 0x520
            },
            'sourceSize': {
                'w': 0x520,
                'h': 0x520
            }
        },
        'map-bunker-chrys-compartment-floor-03a.img': {
            'frame': {
                'x': 0x734,
                'y': 0x2,
                'w': 0x2ff,
                'h': 0x35f
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1,
                'w': 0x2ff,
                'h': 0x35f
            },
            'sourceSize': {
                'w': 0x300,
                'h': 0x360
            }
        },
        'map-bunker-chrys-compartment-floor-01c.img': {
            'frame': {
                'x': 0x2,
                'y': 0x526,
                'w': 0x320,
                'h': 0x304
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x320,
                'h': 0x304
            },
            'sourceSize': {
                'w': 0x324,
                'h': 0x324
            }
        },
        'map-building-saloon-cellar-01.img': {
            'frame': {
                'x': 0x326,
                'y': 0x526,
                'w': 0x420,
                'h': 0x2a0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x420,
                'h': 0x2a0
            },
            'sourceSize': {
                'w': 0x420,
                'h': 0x2a0
            }
        },
        'map-building-greenhouse-floor-02.img': {
            'frame': {
                'x': 0xa37,
                'y': 0x2,
                'w': 0x340,
                'h': 0x282
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x0,
                'w': 0x340,
                'h': 0x282
            },
            'sourceSize': {
                'w': 0x342,
                'h': 0x282
            }
        },
        'map-bunker-chrys-compartment-floor-02a.img': {
            'frame': {
                'x': 0xa37,
                'y': 0x288,
                'w': 0x300,
                'h': 0x274
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x300,
                'h': 0x274
            },
            'sourceSize': {
                'w': 0x304,
                'h': 0x274
            }
        },
        'map-bunker-chrys-chamber-floor-01b.img': {
            'frame': {
                'x': 0x2,
                'y': 0x82e,
                'w': 0x3a2,
                'h': 0x272
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x3a2,
                'h': 0x272
            },
            'sourceSize': {
                'w': 0x3a4,
                'h': 0x274
            }
        },
        'map-building-saloon-ceiling-01.img': {
            'frame': {
                'x': 0xa37,
                'y': 0x500,
                'w': 0x271,
                'h': 0x270
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x271,
                'h': 0x270
            },
            'sourceSize': {
                'w': 0x290,
                'h': 0x290
            }
        },
        'map-building-greenhouse-ceiling-02.img': {
            'frame': {
                'x': 0x74a,
                'y': 0x526,
                'w': 0x190,
                'h': 0x270
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x190,
                'h': 0x270
            },
            'sourceSize': {
                'w': 0x190,
                'h': 0x270
            }
        },
        'map-bunker-chrys-compartment-floor-01a.img': {
            'frame': {
                'x': 0x8de,
                'y': 0x526,
                'w': 0xe4,
                'h': 0x260
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x22,
                'w': 0xe4,
                'h': 0x260
            },
            'sourceSize': {
                'w': 0xe4,
                'h': 0x284
            }
        },
        'map-bunker-statue-chamber-floor-01.img': {
            'frame': {
                'x': 0x3a8,
                'y': 0x82e,
                'w': 0xfa,
                'h': 0x21d
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x20,
                'w': 0xfa,
                'h': 0x21d
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x240
            }
        },
        'map-tree-05c.img': {
            'frame': {
                'x': 0x4a6,
                'y': 0x82e,
                'w': 0x1d6,
                'h': 0x1ec
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x15,
                'y': 0xa,
                'w': 0x1d6,
                'h': 0x1ec
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-bunker-chrys-compartment-ceiling-01b.img': {
            'frame': {
                'x': 0x734,
                'y': 0x365,
                'w': 0x162,
                'h': 0x170
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x2,
                'w': 0x162,
                'h': 0x170
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x174
            }
        },
        'map-bunker-chrys-compartment-ceiling-03b.img': {
            'frame': {
                'x': 0x89a,
                'y': 0x365,
                'w': 0x160,
                'h': 0x132
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x160,
                'h': 0x132
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x134
            }
        },
        'map-statue-03.img': {
            'frame': {
                'x': 0x526,
                'y': 0x3aa,
                'w': 0x120,
                'h': 0x11a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x43,
                'y': 0x43,
                'w': 0x120,
                'h': 0x11a
            },
            'sourceSize': {
                'w': 0x1a0,
                'h': 0x1a0
            }
        },
        'map-statue-04.img': {
            'frame': {
                'x': 0x680,
                'y': 0x82e,
                'w': 0x120,
                'h': 0x11a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x43,
                'y': 0x43,
                'w': 0x120,
                'h': 0x11a
            },
            'sourceSize': {
                'w': 0x1a0,
                'h': 0x1a0
            }
        },
        'map-bunker-chrys-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x7a4,
                'y': 0x82e,
                'w': 0x1c0,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1c0,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x1c0,
                'h': 0x110
            }
        },
        'map-stone-03b.img': {
            'frame': {
                'x': 0x968,
                'y': 0x82e,
                'w': 0x114,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x6,
                'y': 0x8,
                'w': 0x114,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x120,
                'h': 0x120
            }
        },
        'map-planter-06.img': {
            'frame': {
                'x': 0xcac,
                'y': 0x500,
                'w': 0x90,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x110
            }
        },
        'map-bunker-chrys-compartment-ceiling-02b.img': {
            'frame': {
                'x': 0xa80,
                'y': 0x82e,
                'w': 0x160,
                'h': 0x102
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x160,
                'h': 0x102
            },
            'sourceSize': {
                'w': 0x164,
                'h': 0x104
            }
        },
        'map-tree-06.img': {
            'frame': {
                'x': 0xbe4,
                'y': 0x82e,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bush-res-05.img': {
            'frame': {
                'x': 0xd3b,
                'y': 0x288,
                'w': 0x38,
                'h': 0x32
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2c,
                'y': 0x2f,
                'w': 0x38,
                'h': 0x32
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x64a,
                'y': 0x3aa,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        },
        'map-bunker-chrys-compartment-ceiling-01a.img': {
            'frame': {
                'x': 0xce8,
                'y': 0x82e,
                'w': 0x70,
                'h': 0xc0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0xc0
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0xc0
            }
        },
        'map-bunker-chrys-compartment-floor-02c.img': {
            'frame': {
                'x': 0xa37,
                'y': 0x774,
                'w': 0x200,
                'h': 0xb4
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x12,
                'y': 0x0,
                'w': 0x200,
                'h': 0xb4
            },
            'sourceSize': {
                'w': 0x224,
                'h': 0xb4
            }
        },
        'map-building-saloon-ceiling-02.img': {
            'frame': {
                'x': 0xc3b,
                'y': 0x774,
                'w': 0xc0,
                'h': 0xa0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xc0,
                'h': 0xa0
            },
            'sourceSize': {
                'w': 0xc0,
                'h': 0xa0
            }
        },
        'map-bunker-chrys-chamber-floor-01a.img': {
            'frame': {
                'x': 0x680,
                'y': 0x94c,
                'w': 0xa0,
                'h': 0x94
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x22,
                'y': 0x20,
                'w': 0xa0,
                'h': 0x94
            },
            'sourceSize': {
                'w': 0xe4,
                'h': 0xb4
            }
        },
        'map-crate-22.img': {
            'frame': {
                'x': 0x724,
                'y': 0x94c,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-crate-02f.img': {
            'frame': {
                'x': 0x7b8,
                'y': 0x94c,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-crate-18.img': {
            'frame': {
                'x': 0x84c,
                'y': 0x94c,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bush-05.img': {
            'frame': {
                'x': 0x8e0,
                'y': 0x94c,
                'w': 0x8c,
                'h': 0x8b
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x8c,
                'h': 0x8b
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-planter-res-02.img': {
            'frame': {
                'x': 0xcff,
                'y': 0x774,
                'w': 0x4c,
                'h': 0x86
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x1,
                'w': 0x4c,
                'h': 0x86
            },
            'sourceSize': {
                'w': 0x56,
                'h': 0x88
            }
        },
        'map-building-archway-ceiling-01.img': {
            'frame': {
                'x': 0x970,
                'y': 0x94c,
                'w': 0x2a0,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x2a0,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x2a0,
                'h': 0x80
            }
        },
        'map-stone-06.img': {
            'frame': {
                'x': 0xc14,
                'y': 0x94c,
                'w': 0x120,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x120,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x120,
                'h': 0x80
            }
        },
        'map-stone-res-01b.img': {
            'frame': {
                'x': 0x2,
                'y': 0xaa4,
                'w': 0x76,
                'h': 0x76
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x1,
                'w': 0x76,
                'h': 0x76
            },
            'sourceSize': {
                'w': 0x78,
                'h': 0x78
            }
        },
        'map-case-meteor-res-01.img': {
            'frame': {
                'x': 0x7c,
                'y': 0xaa4,
                'w': 0x80,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xd,
                'y': 0xa,
                'w': 0x80,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-chest-03d.img': {
            'frame': {
                'x': 0xcac,
                'y': 0x6fe,
                'w': 0x8c,
                'h': 0x66
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x8c,
                'h': 0x66
            },
            'sourceSize': {
                'w': 0x8c,
                'h': 0x66
            }
        },
        'map-case-meteor-01.img': {
            'frame': {
                'x': 0x100,
                'y': 0xaa4,
                'w': 0x8c,
                'h': 0x66
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x8c,
                'h': 0x66
            },
            'sourceSize': {
                'w': 0x8c,
                'h': 0x66
            }
        },
        'map-planter-07.img': {
            'frame': {
                'x': 0x9c6,
                'y': 0x526,
                'w': 0x64,
                'h': 0x64
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x64,
                'h': 0x64
            },
            'sourceSize': {
                'w': 0x64,
                'h': 0x64
            }
        },
        'map-bunker-chrys-compartment-ceiling-02a.img': {
            'frame': {
                'x': 0x326,
                'y': 0x7ca,
                'w': 0xe0,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x60
            }
        },
        'map-bunker-chrys-compartment-ceiling-03a.img': {
            'frame': {
                'x': 0x40a,
                'y': 0x7ca,
                'w': 0xe0,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x60
            }
        },
        'map-archway-res-01.img': {
            'frame': {
                'x': 0x526,
                'y': 0x4c8,
                'w': 0x167,
                'h': 0x5a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x2,
                'w': 0x167,
                'h': 0x5a
            },
            'sourceSize': {
                'w': 0x168,
                'h': 0x60
            }
        },
        'map-planter-res-03.img': {
            'frame': {
                'x': 0x691,
                'y': 0x4c8,
                'w': 0x52,
                'h': 0x4a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x6,
                'w': 0x52,
                'h': 0x4a
            },
            'sourceSize': {
                'w': 0x56,
                'h': 0x56
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0xcac,
                'y': 0x614,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        }
    }
}]
  , qs = [{
    'meta': {
        'image': 'gradient-0-100-51ab76b6.png',
        'size': {
            'w': 0x400,
            'h': 0x400
        },
        'scale': 0x1
    },
    'frames': {
        'map-barrel-res-01.img': {
            'frame': {
                'x': 0xee,
                'y': 0x2,
                'w': 0xe2,
                'h': 0xd8
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xf,
                'y': 0x15,
                'w': 0xe2,
                'h': 0xd8
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-building-club-gradient-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0xe8,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x22,
                'y': 0xa,
                'w': 0xe8,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x124,
                'h': 0x118
            }
        },
        'map-building-mansion-gradient-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x106,
                'w': 0xe8,
                'h': 0xca
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0x9,
                'w': 0xe8,
                'h': 0xca
            },
            'sourceSize': {
                'w': 0xf8,
                'h': 0xdc
            }
        },
        'map-plane-01.img': {
            'frame': {
                'x': 0xee,
                'y': 0x106,
                'w': 0xb4,
                'h': 0xc9
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x26,
                'y': 0xb,
                'w': 0xb4,
                'h': 0xc9
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-plane-02.img': {
            'frame': {
                'x': 0x1d4,
                'y': 0x2,
                'w': 0x54,
                'h': 0xa9
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x56,
                'y': 0x2,
                'w': 0x54,
                'h': 0xa9
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bush-04cb.img': {
            'frame': {
                'x': 0x110,
                'y': 0x1d4,
                'w': 0x88,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x7,
                'y': 0xb,
                'w': 0x88,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x96,
                'h': 0x96
            }
        },
        'map-bush-01cb.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x9e,
                'w': 0x8e,
                'h': 0x8e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x1,
                'w': 0x8e,
                'h': 0x8e
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-light-01.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x130,
                'w': 0x8c,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x8c,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bush-04.img': {
            'frame': {
                'x': 0x2,
                'y': 0x1d4,
                'w': 0x88,
                'h': 0x82
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x7,
                'y': 0x9,
                'w': 0x88,
                'h': 0x82
            },
            'sourceSize': {
                'w': 0x96,
                'h': 0x96
            }
        },
        'map-bush-01.img': {
            'frame': {
                'x': 0x8e,
                'y': 0x1d4,
                'w': 0x7e,
                'h': 0x82
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0x7,
                'w': 0x7e,
                'h': 0x82
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bush-03.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x2,
                'w': 0x94,
                'h': 0x98
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x0,
                'w': 0x94,
                'h': 0x98
            },
            'sourceSize': {
                'w': 0x98,
                'h': 0x98
            }
        }
    }
}]
  , js = [{
    'meta': {
        'image': 'savannah-0-100-35753cd3.png',
        'size': {
            'w': 0x800,
            'h': 0x800
        },
        'scale': 0x1
    },
    'frames': {
        'map-tree-12.img': {
            'frame': {
                'x': 0x42,
                'y': 0x2,
                'w': 0x1fc,
                'h': 0x1fc
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x1fc,
                'h': 0x1fc
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-complex-warehouse-floor-02.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x3c,
                'h': 0x210
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0x210
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0x210
            }
        },
        'map-stone-07.img': {
            'frame': {
                'x': 0x242,
                'y': 0x2,
                'w': 0x1f8,
                'h': 0x1fa
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x4,
                'y': 0x3,
                'w': 0x1f8,
                'h': 0x1fa
            },
            'sourceSize': {
                'w': 0x200,
                'h': 0x200
            }
        },
        'map-stone-res-07.img': {
            'frame': {
                'x': 0x2,
                'y': 0x216,
                'w': 0x19a,
                'h': 0x19c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x4,
                'w': 0x19a,
                'h': 0x19c
            },
            'sourceSize': {
                'w': 0x1a4,
                'h': 0x1a4
            }
        },
        'map-building-perch-ceiling.img': {
            'frame': {
                'x': 0x1a0,
                'y': 0x216,
                'w': 0x16b,
                'h': 0x159
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xe,
                'y': 0x17,
                'w': 0x16b,
                'h': 0x159
            },
            'sourceSize': {
                'w': 0x190,
                'h': 0x180
            }
        },
        'map-building-perch-floor.img': {
            'frame': {
                'x': 0x43e,
                'y': 0x2,
                'w': 0x190,
                'h': 0x140
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x190,
                'h': 0x140
            },
            'sourceSize': {
                'w': 0x190,
                'h': 0x140
            }
        },
        'map-tree-03sv.img': {
            'frame': {
                'x': 0x43e,
                'y': 0x146,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-wall-08-grassy.img': {
            'frame': {
                'x': 0x542,
                'y': 0x146,
                'w': 0x2d,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x0,
                'w': 0x2d,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x40,
                'h': 0x100
            }
        },
        'map-wall-08-grassy-res.img': {
            'frame': {
                'x': 0x573,
                'y': 0x146,
                'w': 0x14,
                'h': 0xfc
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x16,
                'y': 0x2,
                'w': 0x14,
                'h': 0xfc
            },
            'sourceSize': {
                'w': 0x40,
                'h': 0x100
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0x43e,
                'y': 0x24a,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x4e2,
                'y': 0x24a,
                'w': 0xa0,
                'h': 0xe6
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xe6
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xe6
            }
        },
        'map-complex-warehouse-floor-01.img': {
            'frame': {
                'x': 0x58b,
                'y': 0x146,
                'w': 0x3c,
                'h': 0xe0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0xe0
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0xe0
            }
        },
        'map-bush-res-01sv.img': {
            'frame': {
                'x': 0x576,
                'y': 0x334,
                'w': 0x2c,
                'h': 0x22
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x32,
                'y': 0x37,
                'w': 0x2c,
                'h': 0x22
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-brush-01sv.img': {
            'frame': {
                'x': 0x30f,
                'y': 0x216,
                'w': 0xba,
                'h': 0xb8
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x4,
                'w': 0xba,
                'h': 0xb8
            },
            'sourceSize': {
                'w': 0xc0,
                'h': 0xc0
            }
        },
        'map-brush-02sv.img': {
            'frame': {
                'x': 0x2,
                'y': 0x3b6,
                'w': 0xb6,
                'h': 0xb6
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x5,
                'w': 0xb6,
                'h': 0xb6
            },
            'sourceSize': {
                'w': 0xc0,
                'h': 0xc0
            }
        },
        'map-perch-res-01.img': {
            'frame': {
                'x': 0x30f,
                'y': 0x2d2,
                'w': 0xb0,
                'h': 0x9c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x28,
                'y': 0x32,
                'w': 0xb0,
                'h': 0x9c
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-crate-21.img': {
            'frame': {
                'x': 0xbc,
                'y': 0x3b6,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bush-01sv.img': {
            'frame': {
                'x': 0x150,
                'y': 0x3b6,
                'w': 0x8c,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x8c,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-propane-01.img': {
            'frame': {
                'x': 0x43e,
                'y': 0x334,
                'w': 0x60,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x60,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-wall-03-grassy.img': {
            'frame': {
                'x': 0x4a2,
                'y': 0x334,
                'w': 0x22,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xf,
                'y': 0x0,
                'w': 0x22,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x40,
                'h': 0x60
            }
        },
        'map-wall-03-grassy-res.img': {
            'frame': {
                'x': 0x4c8,
                'y': 0x334,
                'w': 0x15,
                'h': 0x5c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x15,
                'y': 0x2,
                'w': 0x15,
                'h': 0x5c
            },
            'sourceSize': {
                'w': 0x40,
                'h': 0x60
            }
        },
        'map-tree-res-12.img': {
            'frame': {
                'x': 0x4e1,
                'y': 0x334,
                'w': 0x4f,
                'h': 0x46
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0xd,
                'w': 0x4f,
                'h': 0x46
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-brush-res-02sv.img': {
            'frame': {
                'x': 0x534,
                'y': 0x334,
                'w': 0x3e,
                'h': 0x3e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x11,
                'y': 0x11,
                'w': 0x3e,
                'h': 0x3e
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-complex-warehouse-floor-03.img': {
            'frame': {
                'x': 0x586,
                'y': 0x24a,
                'w': 0x3c,
                'h': 0xe0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0xe0
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0xe0
            }
        }
    }
}]
  , Fs = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22main-0-100-075ad988.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:2,\x22w\x22:1504,\x22h\x22:928},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1504,\x22h\x22:928},\x22sourceSize\x22:{\x22w\x22:1504,\x22h\x22:928}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1695,\x22h\x22:1448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:1695,\x22h\x22:1448},\x22sourceSize\x22:{\x22w\x22:1704,\x22h\x22:1448}},\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1454,\x22w\x22:767,\x22h\x22:863},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:767,\x22h\x22:863},\x22sourceSize\x22:{\x22w\x22:768,\x22h\x22:864}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:773,\x22y\x22:1454,\x22w\x22:704,\x22h\x22:798},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:704,\x22h\x22:798},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:832}},\x22map-bunker-chrys-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1481,\x22y\x22:1454,\x22w\x22:800,\x22h\x22:772},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:800,\x22h\x22:772},\x22sourceSize\x22:{\x22w\x22:804,\x22h\x22:804}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2285,\x22y\x22:1454,\x22w\x22:336,\x22h\x22:740},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:44,\x22y\x22:0,\x22w\x22:336,\x22h\x22:740},\x22sourceSize\x22:{\x22w\x22:392,\x22h\x22:744}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2321,\x22w\x22:706,\x22h\x22:738},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:706,\x22h\x22:738},\x22sourceSize\x22:{\x22w\x22:706,\x22h\x22:738}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:712,\x22y\x22:2321,\x22w\x22:736,\x22h\x22:656},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:736,\x22h\x22:656},\x22sourceSize\x22:{\x22w\x22:816,\x22h\x22:720}},\x22map-building-greenhouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1452,\x22y\x22:2321,\x22w\x22:832,\x22h\x22:641},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:832,\x22h\x22:641},\x22sourceSize\x22:{\x22w\x22:834,\x22h\x22:642}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2288,\x22y\x22:2321,\x22w\x22:704,\x22h\x22:640},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:704,\x22h\x22:640},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:640}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2,\x22w\x22:768,\x22h\x22:628},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:768,\x22h\x22:628},\x22sourceSize\x22:{\x22w\x22:772,\x22h\x22:628}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3063,\x22w\x22:930,\x22h\x22:626},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:930,\x22h\x22:626},\x22sourceSize\x22:{\x22w\x22:932,\x22h\x22:628}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:936,\x22y\x22:3063,\x22w\x22:864,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:864,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:864,\x22h\x22:608}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:634,\x22w\x22:318,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:318,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:608}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3531,\x22y\x22:634,\x22w\x22:228,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:34,\x22w\x22:228,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:644}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3763,\x22y\x22:634,\x22w\x22:60,\x22h\x22:528},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:528},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:528}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:1246,\x22w\x22:703,\x22h\x22:507},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:703,\x22h\x22:507},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:512}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:1757,\x22w\x22:720,\x22h\x22:496},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:720,\x22h\x22:496},\x22sourceSize\x22:{\x22w\x22:720,\x22h\x22:496}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2257,\x22w\x22:354,\x22h\x22:368},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:354,\x22h\x22:368},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:372}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3567,\x22y\x22:2257,\x22w\x22:320,\x22h\x22:360},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:360},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:360}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:3063,\x22w\x22:1828,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1828,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:1830,\x22h\x22:354}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2629,\x22w\x22:192,\x22h\x22:350},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:350},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:350}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3405,\x22y\x22:2629,\x22w\x22:320,\x22h\x22:344},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:344},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:352}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:934,\x22w\x22:320,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-building-greenhouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2025,\x22y\x22:934,\x22w\x22:400,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:400,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:404,\x22h\x22:316}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:2429,\x22y\x22:934,\x22w\x22:352,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:352,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:308}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2625,\x22y\x22:1454,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:2609,\x22y\x22:1258,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2625,\x22y\x22:1762,\x22w\x22:448,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:448,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:448,\x22h\x22:272}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:2785,\x22y\x22:934,\x22w\x22:400,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:272}},\x22map-planter-03.img\x22:{\x22frame\x22:{\x22x\x22:3729,\x22y\x22:2629,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-planter-02.img\x22:{\x22frame\x22:{\x22x\x22:3061,\x22y\x22:1454,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-planter-01.img\x22:{\x22frame\x22:{\x22x\x22:2996,\x22y\x22:2321,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3636,\x22y\x22:3063,\x22w\x22:320,\x22h\x22:270},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:270},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:270}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3693,\x22w\x22:352,\x22h\x22:258},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:352,\x22h\x22:258},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:260}},\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:358,\x22y\x22:3693,\x22w\x22:704,\x22h\x22:253},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:320,\x22w\x22:704,\x22h\x22:253},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:3419,\x22w\x22:704,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:323,\x22w\x22:704,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2512,\x22y\x22:3419,\x22w\x22:1136,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1136,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:1136,\x22h\x22:240}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2996,\x22y\x22:2597,\x22w\x22:192,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:192,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3652,\x22y\x22:3419,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3816,\x22y\x22:3419,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3916,\x22y\x22:1246,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3916,\x22y\x22:1474,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:1066,\x22y\x22:3693,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1270,\x22y\x22:3693,\x22w\x22:574,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:574,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:610,\x22h\x22:194}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1848,\x22y\x22:3693,\x22w\x22:193,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:193,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:194}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:2045,\x22y\x22:3693,\x22w\x22:192,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:192,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:194}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3827,\x22y\x22:942,\x22w\x22:112,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:192}},\x22map-bunker-chrys-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:1258,\x22w\x22:512,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:0,\x22w\x22:512,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:548,\x22h\x22:180}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2217,\x22y\x22:1258,\x22w\x22:160,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:32,\x22w\x22:160,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:180}},\x22map-planter-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3891,\x22y\x22:2257,\x22w\x22:76,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:76,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:136}},\x22map-planter-04.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2629,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-planter-05.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2733,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:2381,\x22y\x22:1258,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3827,\x22y\x22:634,\x22w\x22:128,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:304}}}}]')
  , Gs = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22potato-0-100-9e6e65b1.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:2,\x22w\x22:1504,\x22h\x22:928},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1504,\x22h\x22:928},\x22sourceSize\x22:{\x22w\x22:1504,\x22h\x22:928}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1695,\x22h\x22:1448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:1695,\x22h\x22:1448},\x22sourceSize\x22:{\x22w\x22:1704,\x22h\x22:1448}},\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1454,\x22w\x22:767,\x22h\x22:863},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:767,\x22h\x22:863},\x22sourceSize\x22:{\x22w\x22:768,\x22h\x22:864}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:773,\x22y\x22:1454,\x22w\x22:704,\x22h\x22:798},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:704,\x22h\x22:798},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:832}},\x22map-bunker-chrys-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1481,\x22y\x22:1454,\x22w\x22:800,\x22h\x22:772},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:800,\x22h\x22:772},\x22sourceSize\x22:{\x22w\x22:804,\x22h\x22:804}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2285,\x22y\x22:1454,\x22w\x22:336,\x22h\x22:740},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:44,\x22y\x22:0,\x22w\x22:336,\x22h\x22:740},\x22sourceSize\x22:{\x22w\x22:392,\x22h\x22:744}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2321,\x22w\x22:706,\x22h\x22:738},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:706,\x22h\x22:738},\x22sourceSize\x22:{\x22w\x22:706,\x22h\x22:738}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:712,\x22y\x22:2321,\x22w\x22:736,\x22h\x22:656},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:736,\x22h\x22:656},\x22sourceSize\x22:{\x22w\x22:816,\x22h\x22:720}},\x22map-building-greenhouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1452,\x22y\x22:2321,\x22w\x22:832,\x22h\x22:641},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:832,\x22h\x22:641},\x22sourceSize\x22:{\x22w\x22:834,\x22h\x22:642}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2288,\x22y\x22:2321,\x22w\x22:704,\x22h\x22:640},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:704,\x22h\x22:640},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:640}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2,\x22w\x22:768,\x22h\x22:628},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:768,\x22h\x22:628},\x22sourceSize\x22:{\x22w\x22:772,\x22h\x22:628}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3063,\x22w\x22:930,\x22h\x22:626},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:930,\x22h\x22:626},\x22sourceSize\x22:{\x22w\x22:932,\x22h\x22:628}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:936,\x22y\x22:3063,\x22w\x22:864,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:864,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:864,\x22h\x22:608}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:634,\x22w\x22:318,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:318,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:608}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3531,\x22y\x22:634,\x22w\x22:228,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:34,\x22w\x22:228,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:644}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:3763,\x22y\x22:634,\x22w\x22:60,\x22h\x22:528},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:528},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:528}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:1246,\x22w\x22:703,\x22h\x22:507},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:703,\x22h\x22:507},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:512}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:1757,\x22w\x22:720,\x22h\x22:496},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:720,\x22h\x22:496},\x22sourceSize\x22:{\x22w\x22:720,\x22h\x22:496}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2257,\x22w\x22:354,\x22h\x22:368},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:354,\x22h\x22:368},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:372}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3567,\x22y\x22:2257,\x22w\x22:320,\x22h\x22:360},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:360},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:360}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:3063,\x22w\x22:1828,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1828,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:1830,\x22h\x22:354}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3209,\x22y\x22:2629,\x22w\x22:192,\x22h\x22:350},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:350},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:350}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3405,\x22y\x22:2629,\x22w\x22:320,\x22h\x22:344},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:344},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:352}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:934,\x22w\x22:320,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-building-greenhouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2025,\x22y\x22:934,\x22w\x22:400,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:400,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:404,\x22h\x22:316}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:2429,\x22y\x22:934,\x22w\x22:352,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:352,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:308}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2625,\x22y\x22:1454,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3827,\x22y\x22:634,\x22w\x22:128,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:304}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2625,\x22y\x22:1762,\x22w\x22:448,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:448,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:448,\x22h\x22:272}},\x22map-potato-03.img\x22:{\x22frame\x22:{\x22x\x22:3891,\x22y\x22:2482,\x22w\x22:72,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:72,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-planter-03.img\x22:{\x22frame\x22:{\x22x\x22:3729,\x22y\x22:2629,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-planter-02.img\x22:{\x22frame\x22:{\x22x\x22:3061,\x22y\x22:1454,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-planter-01.img\x22:{\x22frame\x22:{\x22x\x22:2996,\x22y\x22:2321,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3636,\x22y\x22:3063,\x22w\x22:320,\x22h\x22:270},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:270},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:270}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3693,\x22w\x22:352,\x22h\x22:258},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:352,\x22h\x22:258},\x22sourceSize\x22:{\x22w\x22:356,\x22h\x22:260}},\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:358,\x22y\x22:3693,\x22w\x22:704,\x22h\x22:253},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:320,\x22w\x22:704,\x22h\x22:253},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1804,\x22y\x22:3419,\x22w\x22:704,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:323,\x22w\x22:704,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2512,\x22y\x22:3419,\x22w\x22:1136,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1136,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:1136,\x22h\x22:240}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2996,\x22y\x22:2597,\x22w\x22:192,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:192,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3652,\x22y\x22:3419,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3816,\x22y\x22:3419,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3916,\x22y\x22:1246,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3916,\x22y\x22:1474,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:1066,\x22y\x22:3693,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1270,\x22y\x22:3693,\x22w\x22:574,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:574,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:610,\x22h\x22:194}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1848,\x22y\x22:3693,\x22w\x22:193,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:193,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:194}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:2045,\x22y\x22:3693,\x22w\x22:192,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:192,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:194}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3827,\x22y\x22:942,\x22w\x22:112,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:192}},\x22map-bunker-chrys-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:1258,\x22w\x22:512,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:0,\x22w\x22:512,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:548,\x22h\x22:180}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2217,\x22y\x22:1258,\x22w\x22:160,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:34,\x22y\x22:32,\x22w\x22:160,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:228,\x22h\x22:180}},\x22map-planter-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3891,\x22y\x22:2257,\x22w\x22:76,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:76,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:136}},\x22map-planter-05.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2629,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-planter-04.img\x22:{\x22frame\x22:{\x22x\x22:3877,\x22y\x22:2733,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:2381,\x22y\x22:1258,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:2609,\x22y\x22:1258,\x22w\x22:224,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:96}},\x22map-potato-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3891,\x22y\x22:2395,\x22w\x22:85,\x22h\x22:83},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:29,\x22y\x22:36,\x22w\x22:85,\x22h\x22:83},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:3763,\x22y\x22:1166,\x22w\x22:72,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:72,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:3839,\x22y\x22:1166,\x22w\x22:72,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:72,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:2785,\x22y\x22:934,\x22w\x22:400,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:272}}}}]')
  , Vs = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22woods-0-100-49fced28.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-bunker-hatchet-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:710,\x22y\x22:2,\x22w\x22:1184,\x22h\x22:924},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1184,\x22h\x22:924},\x22sourceSize\x22:{\x22w\x22:1184,\x22h\x22:928}},\x22map-bunker-eye-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:704,\x22h\x22:1344},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:704,\x22h\x22:1344},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:1376}},\x22map-bunker-eye-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1898,\x22y\x22:2,\x22w\x22:704,\x22h\x22:704},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:704,\x22h\x22:704},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:704}},\x22map-bunker-hatchet-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1350,\x22w\x22:728,\x22h\x22:696},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:728,\x22h\x22:696},\x22sourceSize\x22:{\x22w\x22:738,\x22h\x22:706}},\x22map-bunker-hatchet-compartment-floor-02c.img\x22:{\x22frame\x22:{\x22x\x22:734,\x22y\x22:1350,\x22w\x22:254,\x22h\x22:654},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:254,\x22h\x22:654},\x22sourceSize\x22:{\x22w\x22:258,\x22h\x22:674}},\x22map-building-pavilion-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1898,\x22y\x22:710,\x22w\x22:623,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:16,\x22w\x22:623,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:640,\x22h\x22:640}},\x22map-bunker-hatchet-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:992,\x22y\x22:1350,\x22w\x22:898,\x22h\x22:590},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:898,\x22h\x22:590},\x22sourceSize\x22:{\x22w\x22:898,\x22h\x22:594}},\x22map-building-pavilion-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1894,\x22y\x22:1350,\x22w\x22:576,\x22h\x22:576},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:576,\x22h\x22:576},\x22sourceSize\x22:{\x22w\x22:576,\x22h\x22:576}},\x22map-bunker-eye-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2050,\x22w\x22:320,\x22h\x22:544},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:544},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:544}},\x22map-tree-08.img\x22:{\x22frame\x22:{\x22x\x22:326,\x22y\x22:2050,\x22w\x22:512,\x22h\x22:510},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:512,\x22h\x22:510},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-bunker-hatchet-compartment-floor-03b.img\x22:{\x22frame\x22:{\x22x\x22:842,\x22y\x22:2050,\x22w\x22:732,\x22h\x22:508},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:732,\x22h\x22:508},\x22sourceSize\x22:{\x22w\x22:738,\x22h\x22:514}},\x22map-bunker-hatchet-compartment-floor-03d.img\x22:{\x22frame\x22:{\x22x\x22:1578,\x22y\x22:2050,\x22w\x22:380,\x22h\x22:508},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:22,\x22w\x22:380,\x22h\x22:508},\x22sourceSize\x22:{\x22w\x22:386,\x22h\x22:530}},\x22map-bunker-hatchet-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1962,\x22y\x22:2050,\x22w\x22:512,\x22h\x22:496},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:512,\x22h\x22:496},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:496}},\x22map-tree-05.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:2,\x22w\x22:489,\x22h\x22:480},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:17,\x22w\x22:489,\x22h\x22:480},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-bunker-hatchet-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:710,\x22y\x22:930,\x22w\x22:512,\x22h\x22:400},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:512,\x22h\x22:400},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:400}},\x22map-bunker-hatchet-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:486,\x22w\x22:226,\x22h\x22:367},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:226,\x22h\x22:367},\x22sourceSize\x22:{\x22w\x22:226,\x22h\x22:385}},\x22map-bunker-hatchet-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2598,\x22w\x22:670,\x22h\x22:322},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:670,\x22h\x22:322},\x22sourceSize\x22:{\x22w\x22:690,\x22h\x22:322}},\x22map-bunker-eye-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:857,\x22w\x22:320,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-bunker-hatchet-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1226,\x22y\x22:930,\x22w\x22:608,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:608,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:608,\x22h\x22:304}},\x22map-bunker-hatchet-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:1181,\x22w\x22:416,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:416,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:416,\x22h\x22:304}},\x22map-bunker-hatchet-compartment-floor-03c.img\x22:{\x22frame\x22:{\x22x\x22:2836,\x22y\x22:486,\x22w\x22:193,\x22h\x22:278},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:22,\x22w\x22:193,\x22h\x22:278},\x22sourceSize\x22:{\x22w\x22:193,\x22h\x22:306}},\x22map-stone-03x.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:1489,\x22w\x22:276,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:8,\x22w\x22:276,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22map-planter-06.img\x22:{\x22frame\x22:{\x22x\x22:2930,\x22y\x22:857,\x22w\x22:144,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:272}},\x22map-tree-07.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:1765,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-eye-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2886,\x22y\x22:1489,\x22w\x22:192,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:256}},\x22map-tree-10.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:2025,\x22w\x22:254,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:254,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-tree-11.img\x22:{\x22frame\x22:{\x22x\x22:2606,\x22y\x22:2283,\x22w\x22:250,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:250,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-woodpile-res-02.img\x22:{\x22frame\x22:{\x22x\x22:2864,\x22y\x22:2217,\x22w\x22:121,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:121,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:64}},\x22map-bunker-hatchet-compartment-floor-02d.img\x22:{\x22frame\x22:{\x22x\x22:1054,\x22y\x22:2598,\x22w\x22:378,\x22h\x22:210},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:0,\x22w\x22:378,\x22h\x22:210},\x22sourceSize\x22:{\x22w\x22:401,\x22h\x22:210}},\x22map-stone-res-02x.img\x22:{\x22frame\x22:{\x22x\x22:2866,\x22y\x22:1765,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-woodpile-02.img\x22:{\x22frame\x22:{\x22x\x22:1436,\x22y\x22:2598,\x22w\x22:384,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:384,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:384,\x22h\x22:192}},\x22map-bush-06.img\x22:{\x22frame\x22:{\x22x\x22:2864,\x22y\x22:2025,\x22w\x22:190,\x22h\x22:188},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:190,\x22h\x22:188},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:192}},\x22map-building-pavilion-res-01.img\x22:{\x22frame\x22:{\x22x\x22:2860,\x22y\x22:2283,\x22w\x22:178,\x22h\x22:188},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:167,\x22y\x22:162,\x22w\x22:178,\x22h\x22:188},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:512}},\x22map-bunker-hatchet-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1824,\x22y\x22:2598,\x22w\x22:192,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:192,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:177}},\x22map-table-02x.img\x22:{\x22frame\x22:{\x22x\x22:2020,\x22y\x22:2598,\x22w\x22:288,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:160}},\x22map-table-03x.img\x22:{\x22frame\x22:{\x22x\x22:2312,\x22y\x22:2598,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-crate-01x.img\x22:{\x22frame\x22:{\x22x\x22:2476,\x22y\x22:2598,\x22w\x22:152,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:152,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-stone-01x.img\x22:{\x22frame\x22:{\x22x\x22:2632,\x22y\x22:2598,\x22w\x22:151,\x22h\x22:149},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:151,\x22h\x22:149},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-crate-03x.img\x22:{\x22frame\x22:{\x22x\x22:2787,\x22y\x22:2598,\x22w\x22:148,\x22h\x22:148},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:148,\x22h\x22:148},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-crate-19.img\x22:{\x22frame\x22:{\x22x\x22:2939,\x22y\x22:2598,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-crate-02x.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2924,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bush-07sp.img\x22:{\x22frame\x22:{\x22x\x22:150,\x22y\x22:2924,\x22w\x22:135,\x22h\x22:143},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:135,\x22h\x22:143},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-planter-res-02.img\x22:{\x22frame\x22:{\x22x\x22:2525,\x22y\x22:710,\x22w\x22:76,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:76,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:136}},\x22map-bush-01x.img\x22:{\x22frame\x22:{\x22x\x22:2474,\x22y\x22:1350,\x22w\x22:126,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:126,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-table-01x.img\x22:{\x22frame\x22:{\x22x\x22:289,\x22y\x22:2924,\x22w\x22:160,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:128}},\x22map-stone-res-01x.img\x22:{\x22frame\x22:{\x22x\x22:2474,\x22y\x22:1484,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22map-tree-switch-03.img\x22:{\x22frame\x22:{\x22x\x22:2474,\x22y\x22:1606,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22map-tree-switch-04.img\x22:{\x22frame\x22:{\x22x\x22:2474,\x22y\x22:1722,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22map-tree-switch-01.img\x22:{\x22frame\x22:{\x22x\x22:2478,\x22y\x22:2050,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22map-tree-switch-02.img\x22:{\x22frame\x22:{\x22x\x22:2478,\x22y\x22:2166,\x22w\x22:112,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:112}},\x22map-chest-03x.img\x22:{\x22frame\x22:{\x22x\x22:453,\x22y\x22:2924,\x22w\x22:140,\x22h\x22:102},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:140,\x22h\x22:102},\x22sourceSize\x22:{\x22w\x22:140,\x22h\x22:102}},\x22map-planter-07.img\x22:{\x22frame\x22:{\x22x\x22:2478,\x22y\x22:2282,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-planter-res-03.img\x22:{\x22frame\x22:{\x22x\x22:2836,\x22y\x22:768,\x22w\x22:82,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:82,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:86}},\x22map-snowball-res.img\x22:{\x22frame\x22:{\x22x\x22:2922,\x22y\x22:768,\x22w\x22:69,\x22h\x22:69},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:13,\x22w\x22:69,\x22h\x22:69},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-bunker-hatchet-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:676,\x22y\x22:2598,\x22w\x22:374,\x22h\x22:226},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:374,\x22h\x22:226},\x22sourceSize\x22:{\x22w\x22:386,\x22h\x22:226}}}}]')
  , Us = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22cobalt-0-100-c45e6f2b.png\x22,\x22size\x22:{\x22w\x22:4096,\x22h\x22:4096},\x22scale\x22:1},\x22frames\x22:{\x22map-bunker-twins-chamber-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:2,\x22w\x22:1472,\x22h\x22:1152},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:96,\x22y\x22:128,\x22w\x22:1472,\x22h\x22:1152},\x22sourceSize\x22:{\x22w\x22:1664,\x22h\x22:1408}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:1695,\x22h\x22:1448},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:1695,\x22h\x22:1448},\x22sourceSize\x22:{\x22w\x22:1704,\x22h\x22:1448}},\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1454,\x22w\x22:1504,\x22h\x22:928},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1504,\x22h\x22:928},\x22sourceSize\x22:{\x22w\x22:1504,\x22h\x22:928}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1510,\x22y\x22:1454,\x22w\x22:704,\x22h\x22:798},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:704,\x22h\x22:798},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:832}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2218,\x22y\x22:1454,\x22w\x22:336,\x22h\x22:740},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:44,\x22y\x22:0,\x22w\x22:336,\x22h\x22:740},\x22sourceSize\x22:{\x22w\x22:392,\x22h\x22:744}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2386,\x22w\x22:706,\x22h\x22:738},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:706,\x22h\x22:738},\x22sourceSize\x22:{\x22w\x22:706,\x22h\x22:738}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:712,\x22y\x22:2386,\x22w\x22:736,\x22h\x22:656},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:736,\x22h\x22:656},\x22sourceSize\x22:{\x22w\x22:816,\x22h\x22:720}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1452,\x22y\x22:2386,\x22w\x22:704,\x22h\x22:640},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:704,\x22h\x22:640},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:640}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2160,\x22y\x22:2386,\x22w\x22:864,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:864,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:864,\x22h\x22:608}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2558,\x22y\x22:1454,\x22w\x22:318,\x22h\x22:608},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:318,\x22h\x22:608},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:608}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2880,\x22y\x22:1454,\x22w\x22:60,\x22h\x22:528},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:528},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:528}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:2,\x22w\x22:703,\x22h\x22:507},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:703,\x22h\x22:507},\x22sourceSize\x22:{\x22w\x22:704,\x22h\x22:512}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3128,\x22w\x22:720,\x22h\x22:496},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:720,\x22h\x22:496},\x22sourceSize\x22:{\x22w\x22:720,\x22h\x22:496}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:513,\x22w\x22:320,\x22h\x22:360},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:360},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:360}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:726,\x22y\x22:3128,\x22w\x22:1828,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1828,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:1830,\x22h\x22:354}},\x22map-bunker-twins-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:877,\x22w\x22:512,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:512,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:352}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3501,\x22y\x22:513,\x22w\x22:192,\x22h\x22:350},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:350},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:350}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:1233,\x22w\x22:320,\x22h\x22:344},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:344},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:352}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3501,\x22y\x22:1233,\x22w\x22:320,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:1581,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:3697,\x22y\x22:513,\x22w\x22:128,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:304}},\x22map-stone-03cb.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:1889,\x22w\x22:278,\x22h\x22:278},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:278,\x22h\x22:278},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3459,\x22y\x22:1889,\x22w\x22:400,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:400,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:400,\x22h\x22:272}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:2171,\x22w\x22:320,\x22h\x22:270},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:320,\x22h\x22:270},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:270}},\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1701,\x22y\x22:1158,\x22w\x22:704,\x22h\x22:253},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:320,\x22w\x22:704,\x22h\x22:253},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-tree-03cb.img\x22:{\x22frame\x22:{\x22x\x22:3613,\x22y\x22:1581,\x22w\x22:254,\x22h\x22:252},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:254,\x22h\x22:252},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2409,\x22y\x22:1158,\x22w\x22:704,\x22h\x22:250},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:32,\x22y\x22:323,\x22w\x22:704,\x22h\x22:250},\x22sourceSize\x22:{\x22w\x22:736,\x22h\x22:576}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2558,\x22y\x22:3128,\x22w\x22:1136,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1136,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:1136,\x22h\x22:240}},\x22map-bunker-twins-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3501,\x22y\x22:2171,\x22w\x22:192,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:192,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:2445,\x22w\x22:192,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:64,\x22y\x22:0,\x22w\x22:192,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:288}},\x22part-class-shell-03b.img\x22:{\x22frame\x22:{\x22x\x22:3825,\x22y\x22:1301,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:64}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:3697,\x22y\x22:2171,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3373,\x22y\x22:2445,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:3437,\x22y\x22:2445,\x22w\x22:60,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:224}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:3501,\x22y\x22:2445,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-stone-res-02cb.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:2679,\x22w\x22:200,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:200}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:3177,\x22y\x22:2883,\x22w\x22:574,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:574,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:610,\x22h\x22:194}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:3381,\x22y\x22:2679,\x22w\x22:193,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:193,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:194,\x22h\x22:194}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:3578,\x22y\x22:2679,\x22w\x22:192,\x22h\x22:193},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:192,\x22h\x22:193},\x22sourceSize\x22:{\x22w\x22:230,\x22h\x22:194}},\x22map-class-shell-03b.img\x22:{\x22frame\x22:{\x22x\x22:3705,\x22y\x22:2445,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-class-shell-03a.img\x22:{\x22frame\x22:{\x22x\x22:2944,\x22y\x22:1454,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-class-shell-01a.img\x22:{\x22frame\x22:{\x22x\x22:2944,\x22y\x22:1604,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-class-shell-01b.img\x22:{\x22frame\x22:{\x22x\x22:2944,\x22y\x22:1754,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-class-shell-02a.img\x22:{\x22frame\x22:{\x22x\x22:3698,\x22y\x22:3128,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-class-shell-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:3628,\x22w\x22:146,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:146,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-stone-01cb.img\x22:{\x22frame\x22:{\x22x\x22:3028,\x22y\x22:2386,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-class-crate-assault.img\x22:{\x22frame\x22:{\x22x\x22:3028,\x22y\x22:2534,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-scout.img\x22:{\x22frame\x22:{\x22x\x22:3028,\x22y\x22:2680,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-sniper.img\x22:{\x22frame\x22:{\x22x\x22:3028,\x22y\x22:2826,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-healer.img\x22:{\x22frame\x22:{\x22x\x22:152,\x22y\x22:3628,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-tank.img\x22:{\x22frame\x22:{\x22x\x22:298,\x22y\x22:3628,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-demo.img\x22:{\x22frame\x22:{\x22x\x22:444,\x22y\x22:3628,\x22w\x22:142,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:142,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-03.img\x22:{\x22frame\x22:{\x22x\x22:726,\x22y\x22:3484,\x22w\x22:134,\x22h\x22:134},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:134,\x22h\x22:134},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-class-crate-res-01.img\x22:{\x22frame\x22:{\x22x\x22:3755,\x22y\x22:2883,\x22w\x22:125,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:15,\x22w\x22:125,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:148,\x22h\x22:148}},\x22map-stone-res-01cb.img\x22:{\x22frame\x22:{\x22x\x22:3693,\x22y\x22:1111,\x22w\x22:118,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:118,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22part-class-shell-01a.img\x22:{\x22frame\x22:{\x22x\x22:3774,\x22y\x22:2679,\x22w\x22:88,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:88,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22part-class-shell-02a.img\x22:{\x22frame\x22:{\x22x\x22:3774,\x22y\x22:2771,\x22w\x22:88,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:88,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22part-class-shell-03a.img\x22:{\x22frame\x22:{\x22x\x22:2558,\x22y\x22:2066,\x22w\x22:88,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:88,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22part-class-shell-01b.img\x22:{\x22frame\x22:{\x22x\x22:3815,\x22y\x22:1111,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:64}},\x22part-class-shell-02b.img\x22:{\x22frame\x22:{\x22x\x22:3825,\x22y\x22:1233,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:64}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:3693,\x22y\x22:877,\x22w\x22:160,\x22h\x22:230},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:230},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:230}}}}]')
  , Hs = {
    'loadout': As,
    'shared': Rs,
    'halloween': Ns,
    'snow': Es,
    'faction': Os,
    'desert': Bs,
    'gradient': qs,
    'savannah': js,
    'main': Fs,
    'potato': Gs,
    'woods': Vs,
    'cobalt': Us
}
  , Ws = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22loadout-0-50-c16c5245.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22part-aura-circle-01.img\x22:{\x22frame\x22:{\x22x\x22:260,\x22y\x22:2,\x22w\x22:144,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22ping-map-pulse.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:254,\x22h\x22:253},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:254,\x22h\x22:253},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22part-shell-05.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:259,\x22w\x22:32,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:130}},\x22part-smoke-02.img\x22:{\x22frame\x22:{\x22x\x22:38,\x22y\x22:259,\x22w\x22:130,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:0,\x22w\x22:130,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22part-smoke-03.img\x22:{\x22frame\x22:{\x22x\x22:172,\x22y\x22:259,\x22w\x22:129,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:-1,\x22w\x22:129,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22emote-circle-outer.img\x22:{\x22frame\x22:{\x22x\x22:408,\x22y\x22:2,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22gun-scarssr-01.img\x22:{\x22frame\x22:{\x22x\x22:408,\x22y\x22:134,\x22w\x22:32,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:32,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:124}},\x22gun-potato-cannon-01.img\x22:{\x22frame\x22:{\x22x\x22:444,\x22y\x22:134,\x22w\x22:30,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:30,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:124}},\x22gun-awc-02.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:134,\x22w\x22:28,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:28,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:118}},\x22gun-awc-01.img\x22:{\x22frame\x22:{\x22x\x22:408,\x22y\x22:264,\x22w\x22:28,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:28,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:118}},\x22gun-m249-top-01.img\x22:{\x22frame\x22:{\x22x\x22:510,\x22y\x22:134,\x22w\x22:24,\x22h\x22:111},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:6,\x22w\x22:24,\x22h\x22:111},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22gun-garand-01.img\x22:{\x22frame\x22:{\x22x\x22:440,\x22y\x22:264,\x22w\x22:22,\x22h\x22:110},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:7,\x22w\x22:22,\x22h\x22:110},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:116}},\x22gun-potato-smg-01.img\x22:{\x22frame\x22:{\x22x\x22:466,\x22y\x22:264,\x22w\x22:55,\x22h\x22:109},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:16,\x22w\x22:55,\x22h\x22:109},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:124}},\x22gun-usas-01.img\x22:{\x22frame\x22:{\x22x\x22:305,\x22y\x22:259,\x22w\x22:26,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:9,\x22w\x22:26,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22gun-vss-01.img\x22:{\x22frame\x22:{\x22x\x22:335,\x22y\x22:259,\x22w\x22:24,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:-1,\x22w\x22:24,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:104}},\x22pad.img\x22:{\x22frame\x22:{\x22x\x22:260,\x22y\x22:150,\x22w\x22:104,\x22h\x22:104},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:104,\x22h\x22:104},\x22sourceSize\x22:{\x22w\x22:104,\x22h\x22:104}},\x22gun-scorpion-01.img\x22:{\x22frame\x22:{\x22x\x22:368,\x22y\x22:150,\x22w\x22:24,\x22h\x22:103},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:2,\x22w\x22:24,\x22h\x22:103},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:104}},\x22gun-pkp-top-01.img\x22:{\x22frame\x22:{\x22x\x22:363,\x22y\x22:259,\x22w\x22:23,\x22h\x22:99},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:18,\x22w\x22:23,\x22h\x22:99},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22gun-grozas-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:393,\x22w\x22:24,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:24,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:104}},\x22gun-m4a1-01.img\x22:{\x22frame\x22:{\x22x\x22:30,\x22y\x22:393,\x22w\x22:25,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:2,\x22w\x22:25,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:98}},\x22gun-long-01.img\x22:{\x22frame\x22:{\x22x\x22:59,\x22y\x22:393,\x22w\x22:18,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:18,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:94}},\x22part-shell-02.img\x22:{\x22frame\x22:{\x22x\x22:81,\x22y\x22:393,\x22w\x22:32,\x22h\x22:95},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:95},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:95}},\x22gun-saiga-01.img\x22:{\x22frame\x22:{\x22x\x22:117,\x22y\x22:393,\x22w\x22:22,\x22h\x22:91},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:22,\x22h\x22:91},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:98}},\x22player-helmet-forest.img\x22:{\x22frame\x22:{\x22x\x22:143,\x22y\x22:393,\x22w\x22:78,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:78,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22part-shell-03.img\x22:{\x22frame\x22:{\x22x\x22:225,\x22y\x22:393,\x22w\x22:32,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:90}},\x22player-wading-01.img\x22:{\x22frame\x22:{\x22x\x22:261,\x22y\x22:393,\x22w\x22:88,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:88,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:86}},\x22gun-famas-01.img\x22:{\x22frame\x22:{\x22x\x22:353,\x22y\x22:393,\x22w\x22:22,\x22h\x22:87},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:18,\x22w\x22:22,\x22h\x22:87},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:104}},\x22loot-melee-machete-taiga.img\x22:{\x22frame\x22:{\x22x\x22:379,\x22y\x22:393,\x22w\x22:24,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:29,\x22y\x22:0,\x22w\x22:24,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:84,\x22h\x22:84}},\x22part-shell-04.img\x22:{\x22frame\x22:{\x22x\x22:407,\x22y\x22:393,\x22w\x22:28,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:28,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:82}},\x22proj-smoke-nopin.img\x22:{\x22frame\x22:{\x22x\x22:439,\x22y\x22:393,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22part-airdrop-03.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:2,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22proj-smoke-pin.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:86,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22proj-bomb-iron-01.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:170,\x22w\x22:36,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:22,\x22y\x22:0,\x22w\x22:36,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-melee-bonesaw-healer.img\x22:{\x22frame\x22:{\x22x\x22:580,\x22y\x22:170,\x22w\x22:34,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:4,\x22w\x22:34,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:84,\x22h\x22:84}},\x22loot-melee-bonesaw-rusted.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:254,\x22w\x22:30,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:39,\x22y\x22:10,\x22w\x22:30,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22loot-melee-kukri-sniper.img\x22:{\x22frame\x22:{\x22x\x22:574,\x22y\x22:254,\x22w\x22:23,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:0,\x22w\x22:23,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-melee-kukri-trad.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:338,\x22w\x22:23,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:0,\x22w\x22:23,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22part-airdrop-02x.img\x22:{\x22frame\x22:{\x22x\x22:601,\x22y\x22:254,\x22w\x22:19,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:19,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:80}},\x22part-airdrop-02.img\x22:{\x22frame\x22:{\x22x\x22:567,\x22y\x22:338,\x22w\x22:19,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:19,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:80}},\x22player-helmet-moon.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:495,\x22w\x22:64,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:5,\x22w\x22:64,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22loot-melee-spade-assault.img\x22:{\x22frame\x22:{\x22x\x22:590,\x22y\x22:338,\x22w\x22:30,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:1,\x22w\x22:30,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22gun-groza-01.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:495,\x22w\x22:24,\x22h\x22:77},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:28,\x22w\x22:24,\x22h\x22:77},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:104}},\x22player-armor-base-01.img\x22:{\x22frame\x22:{\x22x\x22:98,\x22y\x22:495,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22player-circle-base-01.img\x22:{\x22frame\x22:{\x22x\x22:178,\x22y\x22:495,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22player-circle-base-02.img\x22:{\x22frame\x22:{\x22x\x22:258,\x22y\x22:495,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22proj-smoke-nopin-nolever.img\x22:{\x22frame\x22:{\x22x\x22:338,\x22y\x22:495,\x22w\x22:42,\x22h\x22:75},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:2,\x22w\x22:42,\x22h\x22:75},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22star.img\x22:{\x22frame\x22:{\x22x\x22:384,\x22y\x22:495,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22player-star.img\x22:{\x22frame\x22:{\x22x\x22:462,\x22y\x22:495,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22proj-mirv-nopin.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:495,\x22w\x22:53,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:0,\x22w\x22:53,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:74}},\x22proj-mirv-pin.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:2,\x22w\x22:53,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:53,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:74}},\x22proj-mirv-nopin-nolever.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:80,\x22w\x22:42,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:0,\x22w\x22:42,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:74}},\x22player-ripple-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:577,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:71,\x22h\x22:71}},\x22loot-circle-outer-05.img\x22:{\x22frame\x22:{\x22x\x22:79,\x22y\x22:577,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22loot-circle-outer-02.img\x22:{\x22frame\x22:{\x22x\x22:156,\x22y\x22:577,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22loot-circle-outer-01.img\x22:{\x22frame\x22:{\x22x\x22:233,\x22y\x22:577,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22gun-bugle-01.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:158,\x22w\x22:36,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:43,\x22w\x22:36,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:116}},\x22player-helmet-last-man-02.img\x22:{\x22frame\x22:{\x22x\x22:310,\x22y\x22:577,\x22w\x22:73,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:8,\x22w\x22:73,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-last-man-01.img\x22:{\x22frame\x22:{\x22x\x22:387,\x22y\x22:577,\x22w\x22:73,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:8,\x22w\x22:73,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22part-panel-01.img\x22:{\x22frame\x22:{\x22x\x22:464,\x22y\x22:577,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-the-hunted.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:577,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-woodchip-01.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:2,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-plank-01.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:78,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22ping-border.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:154,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-base-02.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:230,\x22w\x22:70,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:-1,\x22w\x22:70,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22part-book-01.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:306,\x22w\x22:56,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:56,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22loot-melee-crowbar-recon.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:382,\x22w\x22:22,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:2,\x22w\x22:22,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-melee-crowbar-scout.img\x22:{\x22frame\x22:{\x22x\x22:707,\x22y\x22:382,\x22w\x22:22,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:2,\x22w\x22:22,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-base-01.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:458,\x22w\x22:70,\x22h\x22:71},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:71},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22part-pot-01.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:533,\x22w\x22:50,\x22h\x22:71},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:1,\x22w\x22:50,\x22h\x22:71},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-king-woods.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:654,\x22w\x22:72,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:72,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22part-plate-01.img\x22:{\x22frame\x22:{\x22x\x22:78,\x22y\x22:654,\x22w\x22:72,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:72,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-base-outfitTurkey.img\x22:{\x22frame\x22:{\x22x\x22:154,\x22y\x22:654,\x22w\x22:70,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22player-base-outfitSpetsnaz.img\x22:{\x22frame\x22:{\x22x\x22:228,\x22y\x22:654,\x22w\x22:70,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22player-base-outfitHeaven.img\x22:{\x22frame\x22:{\x22x\x22:302,\x22y\x22:654,\x22w\x22:69,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:69,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22player-base-outfitDC.img\x22:{\x22frame\x22:{\x22x\x22:375,\x22y\x22:654,\x22w\x22:69,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:69,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22player-base-outfitParmaPrestige.img\x22:{\x22frame\x22:{\x22x\x22:448,\x22y\x22:654,\x22w\x22:68,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:68,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22player-base-outfitWheat.img\x22:{\x22frame\x22:{\x22x\x22:540,\x22y\x22:422,\x22w\x22:70,\x22h\x22:69},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:70,\x22h\x22:69},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22player-base-outfitLumber.img\x22:{\x22frame\x22:{\x22x\x22:520,\x22y\x22:654,\x22w\x22:69,\x22h\x22:69},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:69,\x22h\x22:69},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:70}},\x22loot-melee-warhammer-tank.img\x22:{\x22frame\x22:{\x22x\x22:593,\x22y\x22:654,\x22w\x22:131,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:7,\x22w\x22:131,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:132,\x22h\x22:76}},\x22loot-circle-outer-04.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:2,\x22w\x22:73,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22part-splat-02.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:74,\x22w\x22:64,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:64,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22ping-map-coming.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:146,\x22w\x22:60,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:128}},\x22player-helmet-potato.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:218,\x22w\x22:53,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:10,\x22w\x22:53,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-leader.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:290,\x22w\x22:51,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:10,\x22w\x22:51,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-medic.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:362,\x22w\x22:51,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:10,\x22w\x22:51,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-lieutenant.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:434,\x22w\x22:51,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:10,\x22w\x22:51,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-visor-scout.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:506,\x22w\x22:42,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:36,\x22y\x22:10,\x22w\x22:42,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22loot-circle-outer-03.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:578,\x22w\x22:73,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:73,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22part-shell-01.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:649,\x22w\x22:28,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:28,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:67}},\x22star-red.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:728,\x22w\x22:70,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:70,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22star-blue.img\x22:{\x22frame\x22:{\x22x\x22:76,\x22y\x22:728,\x22w\x22:70,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:70,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22part-heal-tomoe.img\x22:{\x22frame\x22:{\x22x\x22:616,\x22y\x22:577,\x22w\x22:55,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:-1,\x22w\x22:55,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-boost-naturalize.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:235,\x22w\x22:52,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:-1,\x22w\x22:52,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-helmet-grenadier.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:305,\x22w\x22:49,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:11,\x22w\x22:49,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-recon.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:375,\x22w\x22:49,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:11,\x22w\x22:49,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22player-helmet-bugler.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:445,\x22w\x22:49,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:11,\x22w\x22:49,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22gun-deagle-01.img\x22:{\x22frame\x22:{\x22x\x22:803,\x22y\x22:506,\x22w\x22:26,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:51,\x22w\x22:26,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22gun-mp220-01.img\x22:{\x22frame\x22:{\x22x\x22:789,\x22y\x22:649,\x22w\x22:22,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:22,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:20,\x22h\x22:64}},\x22gun-med-01.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:290,\x22w\x22:18,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:18,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:64}},\x22proj-strobe-unarmed.img\x22:{\x22frame\x22:{\x22x\x22:150,\x22y\x22:728,\x22w\x22:76,\x22h\x22:65},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:11,\x22w\x22:76,\x22h\x22:65},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22part-splat-01.img\x22:{\x22frame\x22:{\x22x\x22:230,\x22y\x22:728,\x22w\x22:66,\x22h\x22:65},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:66,\x22h\x22:65},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22part-splat-03.img\x22:{\x22frame\x22:{\x22x\x22:300,\x22y\x22:728,\x22w\x22:65,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:1,\x22w\x22:65,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22flag-indonesia.img\x22:{\x22frame\x22:{\x22x\x22:369,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-israel.img\x22:{\x22frame\x22:{\x22x\x22:437,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-italy.img\x22:{\x22frame\x22:{\x22x\x22:505,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-japan.img\x22:{\x22frame\x22:{\x22x\x22:573,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-kazakhstan.img\x22:{\x22frame\x22:{\x22x\x22:641,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-latvia.img\x22:{\x22frame\x22:{\x22x\x22:709,\x22y\x22:728,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-lithuania.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:2,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-malaysia.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:70,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-mexico.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:138,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-moldova.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:206,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-morocco.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:274,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-netherlands.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:342,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-new-zealand.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:410,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-norway.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:478,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-peru.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:546,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-philippines.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:614,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-portugal.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:682,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-republic-of-poland.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-romania.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-russia.img\x22:{\x22frame\x22:{\x22x\x22:138,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-serbia.img\x22:{\x22frame\x22:{\x22x\x22:206,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-singapore.img\x22:{\x22frame\x22:{\x22x\x22:274,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-slovakia.img\x22:{\x22frame\x22:{\x22x\x22:342,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-south-korea.img\x22:{\x22frame\x22:{\x22x\x22:410,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-spain.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-sweden.img\x22:{\x22frame\x22:{\x22x\x22:546,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-switzerland.img\x22:{\x22frame\x22:{\x22x\x22:614,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-taiwan.img\x22:{\x22frame\x22:{\x22x\x22:682,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-thailand.img\x22:{\x22frame\x22:{\x22x\x22:750,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-trinidad-and-tobago.img\x22:{\x22frame\x22:{\x22x\x22:818,\x22y\x22:798,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-turkey.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:2,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-ukraine.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:70,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-united-arab-emirates.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:138,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-united-kingdom.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:206,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-united-states-of-america.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:274,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-uruguay.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:342,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-venezuela.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:410,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-vietnam.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:478,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-ammo-box.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:546,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-imp-trick.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:614,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-imp.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:682,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-joy.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:750,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22heart.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-monocle.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-happy.img\x22:{\x22frame\x22:{\x22x\x22:138,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-heal-basic.img\x22:{\x22frame\x22:{\x22x\x22:206,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-poo.img\x22:{\x22frame\x22:{\x22x\x22:274,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-sad.img\x22:{\x22frame\x22:{\x22x\x22:342,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-sob.img\x22:{\x22frame\x22:{\x22x\x22:410,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-sunglass.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-thinking.img\x22:{\x22frame\x22:{\x22x\x22:546,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-upsidedown.img\x22:{\x22frame\x22:{\x22x\x22:614,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-disappoint.img\x22:{\x22frame\x22:{\x22x\x22:682,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-heart.img\x22:{\x22frame\x22:{\x22x\x22:750,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-log-01.img\x22:{\x22frame\x22:{\x22x\x22:818,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-bandaged.img\x22:{\x22frame\x22:{\x22x\x22:886,\x22y\x22:866,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-angry.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:2,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-albania.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:70,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-algeria.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:138,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-argentina.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:206,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-angel-treat.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:274,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-australia.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:342,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-austria.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:410,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-azerbaijan.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:478,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-belarus.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:546,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-belgium.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:614,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-bolivia.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:682,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-bosnia-and-herzegovina.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:750,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-brazil.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:818,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-canada.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-chile.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-china.img\x22:{\x22frame\x22:{\x22x\x22:138,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22surviv.img\x22:{\x22frame\x22:{\x22x\x22:206,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-alien.img\x22:{\x22frame\x22:{\x22x\x22:274,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-colombia.img\x22:{\x22frame\x22:{\x22x\x22:342,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-croatia.img\x22:{\x22frame\x22:{\x22x\x22:410,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-czech-republic.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-denmark.img\x22:{\x22frame\x22:{\x22x\x22:546,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-dominican-republic.img\x22:{\x22frame\x22:{\x22x\x22:614,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-ecuador.img\x22:{\x22frame\x22:{\x22x\x22:682,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-egypt.img\x22:{\x22frame\x22:{\x22x\x22:750,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-estonia.img\x22:{\x22frame\x22:{\x22x\x22:818,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22chicken-dinner.img\x22:{\x22frame\x22:{\x22x\x22:886,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-finland.img\x22:{\x22frame\x22:{\x22x\x22:954,\x22y\x22:934,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-france.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:2,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-aoe-heal.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:70,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-georgia.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:138,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-germany.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:206,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-greece.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:274,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-potato-cannon.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:342,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-firepower.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:410,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-guatemala.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:478,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22emote.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:546,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-gotw.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:614,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ot38-dual.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:682,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-hunted.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:750,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-leadership.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:818,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-targeting.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:886,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m93r-dual.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-honduras.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-scope-00.img\x22:{\x22frame\x22:{\x22x\x22:138,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-scope-01.img\x22:{\x22frame\x22:{\x22x\x22:206,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-scope-02.img\x22:{\x22frame\x22:{\x22x\x22:274,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-crosshair.img\x22:{\x22frame\x22:{\x22x\x22:342,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-emote.img\x22:{\x22frame\x22:{\x22x\x22:410,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-scope-03.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-scope-04.img\x22:{\x22frame\x22:{\x22x\x22:546,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-melee.img\x22:{\x22frame\x22:{\x22x\x22:614,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-hong-kong.img\x22:{\x22frame\x22:{\x22x\x22:682,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-unlock.img\x22:{\x22frame\x22:{\x22x\x22:750,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-help.img\x22:{\x22frame\x22:{\x22x\x22:818,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-danger.img\x22:{\x22frame\x22:{\x22x\x22:886,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-coming.img\x22:{\x22frame\x22:{\x22x\x22:954,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-airstrike.img\x22:{\x22frame\x22:{\x22x\x22:1022,\x22y\x22:1002,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-team-airdrop.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:2,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-hungary.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:70,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-bar.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:138,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-colt45-dual.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:206,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-deagle-dual.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:274,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flag-india.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:342,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-grozas.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:410,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-usas.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:478,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22face-picasso.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:546,\x22w\x22:63,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:63,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22rainbow.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:614,\x22w\x22:63,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:63,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m4a1.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:682,\x22w\x22:62,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:62,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22campfire.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:750,\x22w\x22:62,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:62,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-l86.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:818,\x22w\x22:62,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:62,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-splinter.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:886,\x22w\x22:62,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:62,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m1a1.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:954,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-dp28.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-an94.img\x22:{\x22frame\x22:{\x22x\x22:66,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-saiga.img\x22:{\x22frame\x22:{\x22x\x22:130,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22snowflake.img\x22:{\x22frame\x22:{\x22x\x22:194,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-pkp.img\x22:{\x22frame\x22:{\x22x\x22:258,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-scorpion.img\x22:{\x22frame\x22:{\x22x\x22:322,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m249.img\x22:{\x22frame\x22:{\x22x\x22:386,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-mkg45.img\x22:{\x22frame\x22:{\x22x\x22:450,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-mk12.img\x22:{\x22frame\x22:{\x22x\x22:514,\x22y\x22:1070,\x22w\x22:60,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-potato-smg.img\x22:{\x22frame\x22:{\x22x\x22:578,\x22y\x22:1070,\x22w\x22:59,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:59,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m1014.img\x22:{\x22frame\x22:{\x22x\x22:641,\x22y\x22:1070,\x22w\x22:58,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:58,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-flare-gun-dual.img\x22:{\x22frame\x22:{\x22x\x22:703,\x22y\x22:1070,\x22w\x22:58,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:58,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-svd.img\x22:{\x22frame\x22:{\x22x\x22:765,\x22y\x22:1070,\x22w\x22:58,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:58,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22trash.img\x22:{\x22frame\x22:{\x22x\x22:827,\x22y\x22:1070,\x22w\x22:58,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:58,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22cupcake.img\x22:{\x22frame\x22:{\x22x\x22:889,\x22y\x22:1070,\x22w\x22:58,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:58,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22reload.img\x22:{\x22frame\x22:{\x22x\x22:951,\x22y\x22:1070,\x22w\x22:57,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:57,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22thumbs-up.img\x22:{\x22frame\x22:{\x22x\x22:1012,\x22y\x22:1070,\x22w\x22:56,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:56,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-vss.img\x22:{\x22frame\x22:{\x22x\x22:1072,\x22y\x22:1070,\x22w\x22:56,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:56,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m39.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:2,\x22w\x22:56,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:56,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ots38-dual.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:70,\x22w\x22:55,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:55,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22candy-corn.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:138,\x22w\x22:55,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:55,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m93r.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:206,\x22w\x22:54,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:54,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ak.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:274,\x22w\x22:54,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:54,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22police.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:342,\x22w\x22:54,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:54,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22snowman.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:410,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-colt45.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:478,\x22w\x22:50,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:0,\x22w\x22:50,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-rare-potato.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:546,\x22w\x22:48,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:48,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22indicator.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:614,\x22w\x22:47,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:47,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22bullets.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:682,\x22w\x22:46,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:46,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-throwable-smoke.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:750,\x22w\x22:45,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:45,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-chest-02.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:818,\x22w\x22:42,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:0,\x22w\x22:42,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ice-cream.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:886,\x22w\x22:36,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:0,\x22w\x22:36,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-airdrop-04.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:954,\x22w\x22:27,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:64}},\x22ping-map-danger.img\x22:{\x22frame\x22:{\x22x\x22:1205,\x22y\x22:954,\x22w\x22:22,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:22,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gun-p30l-01.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:1022,\x22w\x22:21,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:53,\x22w\x22:21,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22loot-perk-chambered.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-scarssr.img\x22:{\x22frame\x22:{\x22x\x22:70,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m1911-dual.img\x22:{\x22frame\x22:{\x22x\x22:138,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-awc.img\x22:{\x22frame\x22:{\x22x\x22:206,\x22y\x22:1138,\x22w\x22:63,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:63,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-qbb97.img\x22:{\x22frame\x22:{\x22x\x22:273,\x22y\x22:1138,\x22w\x22:62,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-heal-moon.img\x22:{\x22frame\x22:{\x22x\x22:339,\x22y\x22:1138,\x22w\x22:62,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22tombstone.img\x22:{\x22frame\x22:{\x22x\x22:405,\x22y\x22:1138,\x22w\x22:60,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:60,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-pin-01.img\x22:{\x22frame\x22:{\x22x\x22:469,\x22y\x22:1138,\x22w\x22:57,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:57,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-pin-02.img\x22:{\x22frame\x22:{\x22x\x22:530,\x22y\x22:1138,\x22w\x22:57,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:57,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m1911.img\x22:{\x22frame\x22:{\x22x\x22:591,\x22y\x22:1138,\x22w\x22:56,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:56,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-nopin-02.img\x22:{\x22frame\x22:{\x22x\x22:651,\x22y\x22:1138,\x22w\x22:56,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:56,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-nopin-01.img\x22:{\x22frame\x22:{\x22x\x22:711,\x22y\x22:1138,\x22w\x22:56,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:56,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-hk416.img\x22:{\x22frame\x22:{\x22x\x22:771,\x22y\x22:1138,\x22w\x22:56,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:56,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22egg.img\x22:{\x22frame\x22:{\x22x\x22:777,\x22y\x22:728,\x22w\x22:52,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:52,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-nopin-nolever-01.img\x22:{\x22frame\x22:{\x22x\x22:831,\x22y\x22:1138,\x22w\x22:48,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:48,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-frag-nopin-nolever-02.img\x22:{\x22frame\x22:{\x22x\x22:883,\x22y\x22:1138,\x22w\x22:48,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:48,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-windwalk.img\x22:{\x22frame\x22:{\x22x\x22:935,\x22y\x22:1138,\x22w\x22:46,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:1,\x22w\x22:46,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-heal-heart.img\x22:{\x22frame\x22:{\x22x\x22:985,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22salt.img\x22:{\x22frame\x22:{\x22x\x22:1053,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m9-dual.img\x22:{\x22frame\x22:{\x22x\x22:1121,\x22y\x22:1138,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-sv98.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:2,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-boost-star.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:68,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22skull.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:134,\x22w\x22:63,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:63,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-kill-icon.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:200,\x22w\x22:63,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:63,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-feather-01.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:266,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-feather-02.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:332,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22donut.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:398,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-stump-01.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:464,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22mag-glass.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:530,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22target.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:596,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-fabricate.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:662,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m870.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:728,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-heal.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:794,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m1100.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:860,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-chest-01.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:926,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-boost-basic.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:992,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-04.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:1058,\x22w\x22:61,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:61,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-03.img\x22:{\x22frame\x22:{\x22x\x22:1234,\x22y\x22:1124,\x22w\x22:61,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:61,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-06.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1205,\x22w\x22:61,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:61,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-05.img\x22:{\x22frame\x22:{\x22x\x22:67,\x22y\x22:1205,\x22w\x22:61,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:61,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ump9.img\x22:{\x22frame\x22:{\x22x\x22:132,\x22y\x22:1205,\x22w\x22:60,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:60,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-famas.img\x22:{\x22frame\x22:{\x22x\x22:196,\x22y\x22:1205,\x22w\x22:60,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:60,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-vector45.img\x22:{\x22frame\x22:{\x22x\x22:260,\x22y\x22:1205,\x22w\x22:56,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:56,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-medical-bandage.img\x22:{\x22frame\x22:{\x22x\x22:320,\x22y\x22:1205,\x22w\x22:56,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:56,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-scar.img\x22:{\x22frame\x22:{\x22x\x22:380,\x22y\x22:1205,\x22w\x22:56,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:56,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-book-04.img\x22:{\x22frame\x22:{\x22x\x22:440,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-book-02.img\x22:{\x22frame\x22:{\x22x\x22:496,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-m9.img\x22:{\x22frame\x22:{\x22x\x22:552,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair022.img\x22:{\x22frame\x22:{\x22x\x22:1589,\x22y\x22:302,\x22w\x22:10,\x22h\x22:8},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:12,\x22w\x22:10,\x22h\x22:8},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22loot-xp-book-01.img\x22:{\x22frame\x22:{\x22x\x22:664,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-chest-03.img\x22:{\x22frame\x22:{\x22x\x22:720,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-book-06.img\x22:{\x22frame\x22:{\x22x\x22:776,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-book-03.img\x22:{\x22frame\x22:{\x22x\x22:832,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-pack-01.img\x22:{\x22frame\x22:{\x22x\x22:888,\x22y\x22:1205,\x22w\x22:50,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:1,\x22w\x22:50,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:942,\x22y\x22:1205,\x22w\x22:50,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:1,\x22w\x22:50,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-pack-00.img\x22:{\x22frame\x22:{\x22x\x22:996,\x22y\x22:1205,\x22w\x22:48,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:48,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-pack-02.img\x22:{\x22frame\x22:{\x22x\x22:1048,\x22y\x22:1205,\x22w\x22:48,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:1,\x22w\x22:48,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22bugle-inspiration-red.img\x22:{\x22frame\x22:{\x22x\x22:1100,\x22y\x22:1205,\x22w\x22:47,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:1,\x22w\x22:47,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22bugle-inspiration-blue.img\x22:{\x22frame\x22:{\x22x\x22:1151,\x22y\x22:1205,\x22w\x22:47,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:1,\x22w\x22:47,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ok.img\x22:{\x22frame\x22:{\x22x\x22:1202,\x22y\x22:1205,\x22w\x22:46,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:1,\x22w\x22:46,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ots38.img\x22:{\x22frame\x22:{\x22x\x22:1252,\x22y\x22:1205,\x22w\x22:44,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:44,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-flare-gun.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:2,\x22w\x22:44,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:44,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-visor-tank.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:68,\x22w\x22:41,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:40,\x22y\x22:13,\x22w\x22:41,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22loot-melee-bowie-vintage.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:134,\x22w\x22:24,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:1,\x22w\x22:24,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-bowie-frontier.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:200,\x22w\x22:24,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:1,\x22w\x22:24,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-bayonet-woodland.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:266,\x22w\x22:22,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:1,\x22w\x22:22,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-bayonet-rugged.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:332,\x22w\x22:22,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:1,\x22w\x22:22,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-strobe-armed.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1271,\x22w\x22:70,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:12,\x22w\x22:70,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22proj-strobe-arming.img\x22:{\x22frame\x22:{\x22x\x22:76,\x22y\x22:1271,\x22w\x22:70,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:12,\x22w\x22:70,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-weapon-mosin.img\x22:{\x22frame\x22:{\x22x\x22:150,\x22y\x22:1271,\x22w\x22:62,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:62,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22flex.img\x22:{\x22frame\x22:{\x22x\x22:216,\x22y\x22:1271,\x22w\x22:58,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:58,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ghost-base.img\x22:{\x22frame\x22:{\x22x\x22:278,\x22y\x22:1271,\x22w\x22:56,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:56,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22acorn.img\x22:{\x22frame\x22:{\x22x\x22:338,\x22y\x22:1271,\x22w\x22:56,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-steelskin.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:398,\x22w\x22:44,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:44,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22sleepy.img\x22:{\x22frame\x22:{\x22x\x22:398,\x22y\x22:1271,\x22w\x22:64,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:64,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-p30l-dual.img\x22:{\x22frame\x22:{\x22x\x22:466,\x22y\x22:1271,\x22w\x22:64,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:64,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-bugle.img\x22:{\x22frame\x22:{\x22x\x22:534,\x22y\x22:1271,\x22w\x22:64,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:64,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-boost-shuriken.img\x22:{\x22frame\x22:{\x22x\x22:602,\x22y\x22:1271,\x22w\x22:62,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:62,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitWhite.img\x22:{\x22frame\x22:{\x22x\x22:668,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitSpetsnaz.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitWoodland.img\x22:{\x22frame\x22:{\x22x\x22:798,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitRed.img\x22:{\x22frame\x22:{\x22x\x22:863,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-outfit.img\x22:{\x22frame\x22:{\x22x\x22:928,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitParma.img\x22:{\x22frame\x22:{\x22x\x22:993,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitMod.img\x22:{\x22frame\x22:{\x22x\x22:1058,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitLumber.img\x22:{\x22frame\x22:{\x22x\x22:1123,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitKeyLime.img\x22:{\x22frame\x22:{\x22x\x22:1188,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitHeaven.img\x22:{\x22frame\x22:{\x22x\x22:1253,\x22y\x22:1271,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitTurkey.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitDev.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:66,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitDesertCamo.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:130,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitDarkShirt.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:194,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitDarkGloves.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:258,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitCobaltShell.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:322,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitCarbonFiber.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:386,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitCamo.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:450,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitBase.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:514,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitWheat.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:578,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-01.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:642,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-blr.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:706,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitRoyalFortune.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:770,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-shirt-outfitParmaPrestige.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:834,\x22w\x22:61,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:61,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gas.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:898,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-spark-02.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:962,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22part-spark-01.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:1026,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22chick.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:1090,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-boost.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:1154,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-garand.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:1218,\x22w\x22:59,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:59,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-vector.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1336,\x22w\x22:58,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:58,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-pack-03.img\x22:{\x22frame\x22:{\x22x\x22:64,\x22y\x22:1336,\x22w\x22:56,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22pumpkin.img\x22:{\x22frame\x22:{\x22x\x22:124,\x22y\x22:1336,\x22w\x22:56,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-deagle.img\x22:{\x22frame\x22:{\x22x\x22:184,\x22y\x22:1336,\x22w\x22:56,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:56,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-visor-sniper.img\x22:{\x22frame\x22:{\x22x\x22:244,\x22y\x22:1336,\x22w\x22:56,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:14,\x22w\x22:56,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22loot-weapon-p30l.img\x22:{\x22frame\x22:{\x22x\x22:304,\x22y\x22:1336,\x22w\x22:54,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:2,\x22w\x22:54,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22bugle-final-red.img\x22:{\x22frame\x22:{\x22x\x22:362,\x22y\x22:1336,\x22w\x22:54,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:2,\x22w\x22:54,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-bone-01.img\x22:{\x22frame\x22:{\x22x\x22:420,\x22y\x22:1336,\x22w\x22:54,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:3,\x22w\x22:54,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22bugle-final-blue.img\x22:{\x22frame\x22:{\x22x\x22:478,\x22y\x22:1336,\x22w\x22:54,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:2,\x22w\x22:54,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-spas12.img\x22:{\x22frame\x22:{\x22x\x22:536,\x22y\x22:1336,\x22w\x22:52,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:52,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-mp5.img\x22:{\x22frame\x22:{\x22x\x22:592,\x22y\x22:1336,\x22w\x22:52,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:52,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22tap.img\x22:{\x22frame\x22:{\x22x\x22:648,\x22y\x22:1336,\x22w\x22:52,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:52,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-ot38.img\x22:{\x22frame\x22:{\x22x\x22:704,\x22y\x22:1336,\x22w\x22:48,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:2,\x22w\x22:48,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-huntsman-burnished.img\x22:{\x22frame\x22:{\x22x\x22:1330,\x22y\x22:134,\x22w\x22:14,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:2,\x22w\x22:14,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-huntsman-rugged.img\x22:{\x22frame\x22:{\x22x\x22:1330,\x22y\x22:200,\x22w\x22:14,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:25,\x22y\x22:2,\x22w\x22:14,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22cattle.img\x22:{\x22frame\x22:{\x22x\x22:756,\x22y\x22:1336,\x22w\x22:62,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:62,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-blossom-04.img\x22:{\x22frame\x22:{\x22x\x22:822,\x22y\x22:1336,\x22w\x22:61,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:61,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-blossom-03.img\x22:{\x22frame\x22:{\x22x\x22:887,\x22y\x22:1336,\x22w\x22:61,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:61,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-broken-arrow.img\x22:{\x22frame\x22:{\x22x\x22:952,\x22y\x22:1336,\x22w\x22:59,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:59,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-small-arms.img\x22:{\x22frame\x22:{\x22x\x22:1015,\x22y\x22:1336,\x22w\x22:57,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:57,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-field-medic.img\x22:{\x22frame\x22:{\x22x\x22:1076,\x22y\x22:1336,\x22w\x22:52,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:4,\x22w\x22:52,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-throwable-mirv.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:463,\x22w\x22:43,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:3,\x22w\x22:43,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-pan-black-side.img\x22:{\x22frame\x22:{\x22x\x22:1328,\x22y\x22:266,\x22w\x22:12,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:26,\x22y\x22:2,\x22w\x22:12,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-chrysanthemum.img\x22:{\x22frame\x22:{\x22x\x22:1132,\x22y\x22:1336,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-meteor.img\x22:{\x22frame\x22:{\x22x\x22:1200,\x22y\x22:1336,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-caduceus.img\x22:{\x22frame\x22:{\x22x\x22:1268,\x22y\x22:1336,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22link.img\x22:{\x22frame\x22:{\x22x\x22:1336,\x22y\x22:1336,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-hydra.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:2,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-hatchet.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:64,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-storm.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:126,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-surviv.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:188,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-swine.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:250,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-egg.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:312,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-glock-dual.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:374,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-twins.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:436,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-crossing.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:498,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-conch.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:560,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22logo-cloud.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:622,\x22w\x22:64,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:64,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-scout.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:684,\x22w\x22:62,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:62,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22danger.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:746,\x22w\x22:62,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:62,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-model94.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:808,\x22w\x22:62,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:62,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-gui.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:870,\x22w\x22:60,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:3,\x22w\x22:60,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-emote.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:932,\x22w\x22:60,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:3,\x22w\x22:60,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-50AE.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:994,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-02.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1056,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-explosive.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1118,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-box.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1180,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-308sub.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1242,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-flare.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1304,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-45acp.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22santa-hat.img\x22:{\x22frame\x22:{\x22x\x22:64,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-9mm.img\x22:{\x22frame\x22:{\x22x\x22:126,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-762mm.img\x22:{\x22frame\x22:{\x22x\x22:188,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-556mm.img\x22:{\x22frame\x22:{\x22x\x22:250,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ammo-12gauge.img\x22:{\x22frame\x22:{\x22x\x22:312,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-donut-01.img\x22:{\x22frame\x22:{\x22x\x22:374,\x22y\x22:1400,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-visor-assault.img\x22:{\x22frame\x22:{\x22x\x22:436,\x22y\x22:1400,\x22w\x22:57,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:31,\x22y\x22:15,\x22w\x22:57,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22part-blossom-01.img\x22:{\x22frame\x22:{\x22x\x22:497,\x22y\x22:1400,\x22w\x22:55,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:3,\x22w\x22:55,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-glock.img\x22:{\x22frame\x22:{\x22x\x22:624,\x22y\x22:515,\x22w\x22:48,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:3,\x22w\x22:48,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22pineapple.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:526,\x22w\x22:38,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:0,\x22w\x22:38,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-medical-soda.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:588,\x22w\x22:34,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:3,\x22w\x22:34,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loadout-player-icon.img\x22:{\x22frame\x22:{\x22x\x22:556,\x22y\x22:1400,\x22w\x22:60,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:4,\x22w\x22:60,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-blossom-02.img\x22:{\x22frame\x22:{\x22x\x22:620,\x22y\x22:1400,\x22w\x22:56,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:680,\x22y\x22:1400,\x22w\x22:50,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:4,\x22w\x22:50,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:734,\x22y\x22:1400,\x22w\x22:50,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:4,\x22w\x22:50,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-bonus-9mm.img\x22:{\x22frame\x22:{\x22x\x22:788,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-bonus-45.img\x22:{\x22frame\x22:{\x22x\x22:856,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-01.img\x22:{\x22frame\x22:{\x22x\x22:924,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-trick-m9.img\x22:{\x22frame\x22:{\x22x\x22:992,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-bonus-assault.img\x22:{\x22frame\x22:{\x22x\x22:1060,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22hamburger.img\x22:{\x22frame\x22:{\x22x\x22:1128,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-treat-9mm.img\x22:{\x22frame\x22:{\x22x\x22:1196,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-treat-556.img\x22:{\x22frame\x22:{\x22x\x22:1264,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-treat-12g.img\x22:{\x22frame\x22:{\x22x\x22:1332,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22hide.img\x22:{\x22frame\x22:{\x22x\x22:1400,\x22y\x22:1400,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-treat-762.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:2,\x22w\x22:64,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:64,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-mp220.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:62,\x22w\x22:60,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:4,\x22w\x22:60,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-trick-chatty.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:122,\x22w\x22:58,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:3,\x22w\x22:58,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-glasses-01.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:182,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-takedown.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:242,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22leek.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:302,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-trick-nothing.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:362,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-trick-size.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:422,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-snowball-01.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:482,\x22w\x22:55,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:55,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-snowball-02.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:542,\x22w\x22:55,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:55,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-mac10.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:602,\x22w\x22:54,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:54,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-flak-jacket.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:662,\x22w\x22:54,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:2,\x22w\x22:54,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-map-airdrop.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:722,\x22w\x22:40,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:3,\x22w\x22:40,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-visor-healer.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:782,\x22w\x22:37,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:45,\x22y\x22:16,\x22w\x22:37,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22turkey-animal.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:842,\x22w\x22:64,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:64,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-map-airstrike.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:901,\x22w\x22:26,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:5,\x22w\x22:26,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-medical-healthkit.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:960,\x22w\x22:62,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:5,\x22w\x22:62,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-helmet-01.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1018,\x22w\x22:60,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:5,\x22w\x22:60,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-martyrdom.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1076,\x22w\x22:56,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:56,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22trunk.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1134,\x22w\x22:56,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:56,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-groza.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1192,\x22w\x22:56,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:56,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22eggplant.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1250,\x22w\x22:56,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:5,\x22w\x22:56,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-map-help.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1308,\x22w\x22:54,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:54,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crab.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1366,\x22w\x22:54,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:54,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22movement.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1462,\x22w\x22:54,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:54,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ribbon-red.img\x22:{\x22frame\x22:{\x22x\x22:60,\x22y\x22:1462,\x22w\x22:52,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:10,\x22w\x22:52,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22ribbon-blue.img\x22:{\x22frame\x22:{\x22x\x22:116,\x22y\x22:1462,\x22w\x22:52,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:10,\x22w\x22:52,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22question.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:650,\x22w\x22:38,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:5,\x22w\x22:38,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-visor-demo.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:708,\x22w\x22:38,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:40,\x22y\x22:17,\x22w\x22:38,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22gun-ots38-01.img\x22:{\x22frame\x22:{\x22x\x22:1524,\x22y\x22:782,\x22w\x22:22,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:63,\x22w\x22:22,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:116}},\x22loot-throwable-frag.img\x22:{\x22frame\x22:{\x22x\x22:172,\x22y\x22:1462,\x22w\x22:54,\x22h\x22:53},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:54,\x22h\x22:53},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-throwable-potato.img\x22:{\x22frame\x22:{\x22x\x22:230,\x22y\x22:1462,\x22w\x22:50,\x22h\x22:53},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:50,\x22h\x22:53},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-scavenger.img\x22:{\x22frame\x22:{\x22x\x22:284,\x22y\x22:1462,\x22w\x22:58,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:58,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22potato.img\x22:{\x22frame\x22:{\x22x\x22:346,\x22y\x22:1462,\x22w\x22:54,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:6,\x22w\x22:54,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-xp-compass-01.img\x22:{\x22frame\x22:{\x22x\x22:404,\x22y\x22:1462,\x22w\x22:52,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:52,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22baguette.img\x22:{\x22frame\x22:{\x22x\x22:460,\x22y\x22:1462,\x22w\x22:52,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:52,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22copy.img\x22:{\x22frame\x22:{\x22x\x22:516,\x22y\x22:1462,\x22w\x22:48,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:6,\x22w\x22:48,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gun-short-01.img\x22:{\x22frame\x22:{\x22x\x22:1527,\x22y\x22:722,\x22w\x22:18,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:18,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:50}},\x22face-dab.img\x22:{\x22frame\x22:{\x22x\x22:568,\x22y\x22:1462,\x22w\x22:72,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:11,\x22w\x22:72,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22loot-perk-endless-ammo.img\x22:{\x22frame\x22:{\x22x\x22:644,\x22y\x22:1462,\x22w\x22:54,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:6,\x22w\x22:54,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22minimize.img\x22:{\x22frame\x22:{\x22x\x22:702,\x22y\x22:1462,\x22w\x22:51,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:51,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22whale.img\x22:{\x22frame\x22:{\x22x\x22:757,\x22y\x22:1462,\x22w\x22:62,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:7,\x22w\x22:62,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-pumpkin-01.img\x22:{\x22frame\x22:{\x22x\x22:1350,\x22y\x22:1282,\x22w\x22:56,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:7,\x22w\x22:56,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-tree-climbing.img\x22:{\x22frame\x22:{\x22x\x22:823,\x22y\x22:1462,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:7,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22fish.img\x22:{\x22frame\x22:{\x22x\x22:877,\x22y\x22:1462,\x22w\x22:64,\x22h\x22:49},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:64,\x22h\x22:49},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair.img\x22:{\x22frame\x22:{\x22x\x22:945,\x22y\x22:1462,\x22w\x22:49,\x22h\x22:49},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:49,\x22h\x22:49},\x22sourceSize\x22:{\x22w\x22:49,\x22h\x22:49}},\x22face-headshot.img\x22:{\x22frame\x22:{\x22x\x22:998,\x22y\x22:1462,\x22w\x22:64,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:64,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-treat-super.img\x22:{\x22frame\x22:{\x22x\x22:1066,\x22y\x22:1462,\x22w\x22:64,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:8,\x22w\x22:64,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22forest.img\x22:{\x22frame\x22:{\x22x\x22:1134,\x22y\x22:1462,\x22w\x22:64,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:8,\x22w\x22:64,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-medical-pill.img\x22:{\x22frame\x22:{\x22x\x22:1202,\x22y\x22:1462,\x22w\x22:62,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:8,\x22w\x22:62,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22coconut.img\x22:{\x22frame\x22:{\x22x\x22:1268,\x22y\x22:1462,\x22w\x22:58,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:8,\x22w\x22:58,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22teabag.img\x22:{\x22frame\x22:{\x22x\x22:1330,\x22y\x22:1462,\x22w\x22:56,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:56,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-throwable-strobe.img\x22:{\x22frame\x22:{\x22x\x22:1390,\x22y\x22:1462,\x22w\x22:55,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:10,\x22w\x22:55,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22skull-leader.img\x22:{\x22frame\x22:{\x22x\x22:1449,\x22y\x22:1462,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22part-airdrop-01x.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:2,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22part-airdrop-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:54,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22loot-melee-pan-black.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1520,\x22w\x22:62,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:9,\x22w\x22:62,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22pilgrim-hat.img\x22:{\x22frame\x22:{\x22x\x22:68,\x22y\x22:1520,\x22w\x22:62,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:9,\x22w\x22:62,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-helmet-03.img\x22:{\x22frame\x22:{\x22x\x22:134,\x22y\x22:1520,\x22w\x22:60,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:9,\x22w\x22:60,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-map-woods-king.img\x22:{\x22frame\x22:{\x22x\x22:198,\x22y\x22:1520,\x22w\x22:50,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:9,\x22w\x22:50,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-flare-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:106,\x22w\x22:46,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:46,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22loot-throwable-snowball.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:156,\x22w\x22:45,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:9,\x22w\x22:45,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22cog.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:206,\x22w\x22:44,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:9,\x22w\x22:44,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22eye.img\x22:{\x22frame\x22:{\x22x\x22:1106,\x22y\x22:1022,\x22w\x22:64,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:64,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-trick-drain.img\x22:{\x22frame\x22:{\x22x\x22:1038,\x22y\x22:954,\x22w\x22:62,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:10,\x22w\x22:62,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22chicken.img\x22:{\x22frame\x22:{\x22x\x22:1174,\x22y\x22:1090,\x22w\x22:56,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:10,\x22w\x22:56,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:252,\x22y\x22:1520,\x22w\x22:80,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-mash-01.img\x22:{\x22frame\x22:{\x22x\x22:336,\x22y\x22:1520,\x22w\x22:80,\x22h\x22:43},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:43},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-helmet-02.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:886,\x22w\x22:62,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:11,\x22w\x22:62,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22audio-off.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:818,\x22w\x22:49,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:11,\x22w\x22:49,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22audio-on.img\x22:{\x22frame\x22:{\x22x\x22:834,\x22y\x22:750,\x22w\x22:49,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:11,\x22w\x22:49,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-weapon-fists.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:256,\x22w\x22:40,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:12,\x22y\x22:11,\x22w\x22:40,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-map-unlock.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:302,\x22w\x22:34,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:11,\x22w\x22:34,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-hook-silver.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:348,\x22w\x22:24,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:20,\x22y\x22:11,\x22w\x22:24,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-mash-02.img\x22:{\x22frame\x22:{\x22x\x22:420,\x22y\x22:1520,\x22w\x22:74,\x22h\x22:41},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:74,\x22h\x22:41},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-snow-02.img\x22:{\x22frame\x22:{\x22x\x22:498,\x22y\x22:1520,\x22w\x22:74,\x22h\x22:41},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:74,\x22h\x22:41},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-melee-fireaxe.img\x22:{\x22frame\x22:{\x22x\x22:576,\x22y\x22:1520,\x22w\x22:78,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:78,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:76,\x22h\x22:38}},\x22loot-perk-scavenger_adv.img\x22:{\x22frame\x22:{\x22x\x22:681,\x22y\x22:608,\x22w\x22:62,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:12,\x22w\x22:62,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gg.img\x22:{\x22frame\x22:{\x22x\x22:658,\x22y\x22:1520,\x22w\x22:60,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:12,\x22w\x22:60,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-mirv-mini-02.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:394,\x22w\x22:46,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:4,\x22w\x22:46,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22proj-mirv-mini-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:438,\x22w\x22:46,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:4,\x22w\x22:46,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22gun-dp28-top-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:482,\x22w\x22:40,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:40,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:40}},\x22player-hands-02.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:526,\x22w\x22:40,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:38}},\x22player-hands-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:570,\x22w\x22:40,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:38}},\x22quit.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:614,\x22w\x22:38,\x22h\x22:39},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:12,\x22w\x22:38,\x22h\x22:39},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-mash-03.img\x22:{\x22frame\x22:{\x22x\x22:722,\x22y\x22:1520,\x22w\x22:76,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:76,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-snow-03.img\x22:{\x22frame\x22:{\x22x\x22:802,\x22y\x22:1520,\x22w\x22:76,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:76,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-patch-01.img\x22:{\x22frame\x22:{\x22x\x22:882,\x22y\x22:1520,\x22w\x22:62,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:62,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22part-smoke-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:657,\x22w\x22:38,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:38,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22player-patch-red.img\x22:{\x22frame\x22:{\x22x\x22:948,\x22y\x22:1520,\x22w\x22:60,\x22h\x22:37},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:21,\x22w\x22:60,\x22h\x22:37},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-perk-self-revive.img\x22:{\x22frame\x22:{\x22x\x22:1012,\x22y\x22:1520,\x22w\x22:64,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:64,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22timer-background.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:699,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22resume.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:739,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:14,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:779,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22close.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:819,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22checked.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:859,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22part-cloth-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:899,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22gun-potato-smg-top-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:939,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:40}},\x22player-map-outer.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:979,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22player-map-inner.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1019,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22submit.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1059,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22ping-indicator.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1099,\x22w\x22:46,\x22h\x22:35},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:29,\x22w\x22:46,\x22h\x22:35},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22keyboard.img\x22:{\x22frame\x22:{\x22x\x22:1483,\x22y\x22:1424,\x22w\x22:56,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:15,\x22w\x22:56,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-pulse-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1138,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22part-frag-burst-02.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1176,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22part-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1214,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22part-strobe-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1252,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22part-frag-burst-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1290,\x22w\x22:34,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:34,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22player-map-downed.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1328,\x22w\x22:36,\x22h\x22:33},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:36,\x22h\x22:33},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22loot-melee-stonehammer.img\x22:{\x22frame\x22:{\x22x\x22:1080,\x22y\x22:1520,\x22w\x22:76,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:30}},\x22player-patch-02.img\x22:{\x22frame\x22:{\x22x\x22:1160,\x22y\x22:1520,\x22w\x22:62,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:62,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22player-patch-blue.img\x22:{\x22frame\x22:{\x22x\x22:1226,\x22y\x22:1520,\x22w\x22:62,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:24,\x22w\x22:62,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22loot-melee-knuckles-heroic.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1365,\x22w\x22:48,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:16,\x22w\x22:48,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-knuckles-rusted.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1401,\x22w\x22:48,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:16,\x22w\x22:48,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-frag-pin-01.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1437,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair001.img\x22:{\x22frame\x22:{\x22x\x22:1551,\x22y\x22:1473,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair027.img\x22:{\x22frame\x22:{\x22x\x22:1513,\x22y\x22:901,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair007.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:766,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair010.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:802,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22globe.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:838,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair005.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:874,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair064.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:910,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair109.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:946,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22proj-frag-pin-part.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:982,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:16,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair080.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1018,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair094.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1054,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair086.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1090,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair124.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1126,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22skull-outlined.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1162,\x22w\x22:30,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:30,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22unlock.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1198,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22lock.img\x22:{\x22frame\x22:{\x22x\x22:1302,\x22y\x22:1234,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22skull-team.img\x22:{\x22frame\x22:{\x22x\x22:1199,\x22y\x22:1022,\x22w\x22:27,\x22h\x22:31},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:1,\x22w\x22:27,\x22h\x22:31},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22dc.img\x22:{\x22frame\x22:{\x22x\x22:1415,\x22y\x22:1366,\x22w\x22:30,\x22h\x22:30},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:30,\x22h\x22:30},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22down.img\x22:{\x22frame\x22:{\x22x\x22:1449,\x22y\x22:1366,\x22w\x22:30,\x22h\x22:30},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:1,\x22w\x22:30,\x22h\x22:30},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22loot-melee-woodaxe-bloody.img\x22:{\x22frame\x22:{\x22x\x22:1292,\x22y\x22:1520,\x22w\x22:76,\x22h\x22:29},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:29},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:27}},\x22loot-melee-woodaxe.img\x22:{\x22frame\x22:{\x22x\x22:1372,\x22y\x22:1520,\x22w\x22:76,\x22h\x22:29},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:29},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:27}},\x22ping-part-quarter-highlight.img\x22:{\x22frame\x22:{\x22x\x22:1452,\x22y\x22:1520,\x22w\x22:48,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:48,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-part-quarter.img\x22:{\x22frame\x22:{\x22x\x22:1504,\x22y\x22:1520,\x22w\x22:47,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:47,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-bullet-trail-03.img\x22:{\x22frame\x22:{\x22x\x22:1579,\x22y\x22:348,\x22w\x22:18,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:18,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:18,\x22h\x22:28}},\x22crosshair177.img\x22:{\x22frame\x22:{\x22x\x22:1132,\x22y\x22:1070,\x22w\x22:32,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crown.img\x22:{\x22frame\x22:{\x22x\x22:1199,\x22y\x22:1057,\x22w\x22:30,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:3,\x22w\x22:30,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22ping-part-eighth.img\x22:{\x22frame\x22:{\x22x\x22:1132,\x22y\x22:1100,\x22w\x22:28,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:8,\x22w\x22:28,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22ping-part-eighth-highlight.img\x22:{\x22frame\x22:{\x22x\x22:1189,\x22y\x22:1138,\x22w\x22:28,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:8,\x22w\x22:28,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-karambit-drowned.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1570,\x22w\x22:54,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:20,\x22w\x22:54,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-karambit-prismatic.img\x22:{\x22frame\x22:{\x22x\x22:60,\x22y\x22:1570,\x22w\x22:54,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:20,\x22w\x22:54,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-melee-karambit-rugged.img\x22:{\x22frame\x22:{\x22x\x22:118,\x22y\x22:1570,\x22w\x22:54,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:20,\x22w\x22:54,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22gun-pkp-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:1189,\x22y\x22:1167,\x22w\x22:40,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:22}},\x22gun-m249-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:1501,\x22y\x22:1462,\x22w\x22:40,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:40,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:38,\x22h\x22:22}},\x22crosshair158.img\x22:{\x22frame\x22:{\x22x\x22:1555,\x22y\x22:1520,\x22w\x22:32,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:32,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22part-frag-lever-01.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:1271,\x22w\x22:28,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:18,\x22y\x22:20,\x22w\x22:28,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22crosshair101.img\x22:{\x22frame\x22:{\x22x\x22:728,\x22y\x22:654,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair102.img\x22:{\x22frame\x22:{\x22x\x22:728,\x22y\x22:682,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:2,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22pumpkin-play.img\x22:{\x22frame\x22:{\x22x\x22:597,\x22y\x22:495,\x22w\x22:22,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:22,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:24}},\x22loot-melee-naginata.img\x22:{\x22frame\x22:{\x22x\x22:176,\x22y\x22:1570,\x22w\x22:175,\x22h\x22:22},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:175,\x22h\x22:22},\x22sourceSize\x22:{\x22w\x22:175,\x22h\x22:27}},\x22hatchet.img\x22:{\x22frame\x22:{\x22x\x22:1318,\x22y\x22:1299,\x22w\x22:24,\x22h\x22:22},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:24,\x22h\x22:22},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:24}},\x22crosshair184.img\x22:{\x22frame\x22:{\x22x\x22:597,\x22y\x22:523,\x22w\x22:22,\x22h\x22:22},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:22,\x22h\x22:22},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair045.img\x22:{\x22frame\x22:{\x22x\x22:355,\x22y\x22:1570,\x22w\x22:22,\x22h\x22:22},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:22,\x22h\x22:22},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair040.img\x22:{\x22frame\x22:{\x22x\x22:381,\x22y\x22:1570,\x22w\x22:22,\x22h\x22:22},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:22,\x22h\x22:22},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22player-feet-02.img\x22:{\x22frame\x22:{\x22x\x22:1328,\x22y\x22:332,\x22w\x22:17,\x22h\x22:21},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:-1,\x22w\x22:17,\x22h\x22:21},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:19}},\x22player-feet-01.img\x22:{\x22frame\x22:{\x22x\x22:1328,\x22y\x22:357,\x22w\x22:17,\x22h\x22:21},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:-1,\x22w\x22:17,\x22h\x22:21},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:19}},\x22loot-melee-katana-rusted.img\x22:{\x22frame\x22:{\x22x\x22:407,\x22y\x22:1570,\x22w\x22:115,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:115,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:20}},\x22loot-melee-katana-orchid.img\x22:{\x22frame\x22:{\x22x\x22:526,\x22y\x22:1570,\x22w\x22:115,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:115,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:20}},\x22loot-melee-katana-demo.img\x22:{\x22frame\x22:{\x22x\x22:645,\x22y\x22:1570,\x22w\x22:115,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:115,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:20}},\x22loot-melee-katana.img\x22:{\x22frame\x22:{\x22x\x22:764,\x22y\x22:1570,\x22w\x22:115,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:115,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:20}},\x22crosshair181.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:382,\x22w\x22:20,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:20,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair173.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:406,\x22w\x22:20,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:20,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair038.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:430,\x22w\x22:20,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:20,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair000.img\x22:{\x22frame\x22:{\x22x\x22:597,\x22y\x22:549,\x22w\x22:20,\x22h\x22:20},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:20,\x22h\x22:20},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22gun-qbb97-bot-01.img\x22:{\x22frame\x22:{\x22x\x22:1513,\x22y\x22:937,\x22w\x22:34,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:34,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:16}},\x22ping-part-circle.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:362,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:23,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-frag-burst-03.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:384,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:18,\x22h\x22:18}},\x22ping-part-circle-highlight.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:406,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:23,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22player-bullet-trail-02.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:434,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:18,\x22h\x22:18}},\x22dot.img\x22:{\x22frame\x22:{\x22x\x22:812,\x22y\x22:456,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:18,\x22h\x22:18}},\x22crosshair125.img\x22:{\x22frame\x22:{\x22x\x22:1214,\x22y\x22:886,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22ping-part-circle-auto-highlight.img\x22:{\x22frame\x22:{\x22x\x22:1214,\x22y\x22:906,\x22w\x22:15,\x22h\x22:15},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:15,\x22h\x22:15},\x22sourceSize\x22:{\x22w\x22:15,\x22h\x22:15}},\x22ping-part-circle-auto.img\x22:{\x22frame\x22:{\x22x\x22:1332,\x22y\x22:1198,\x22w\x22:14,\x22h\x22:14},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:14,\x22h\x22:14},\x22sourceSize\x22:{\x22w\x22:14,\x22h\x22:14}},\x22ping-part-circle-auto-outer.img\x22:{\x22frame\x22:{\x22x\x22:1332,\x22y\x22:1216,\x22w\x22:14,\x22h\x22:14},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:14,\x22h\x22:14},\x22sourceSize\x22:{\x22w\x22:14,\x22h\x22:14}},\x22loot-xp-book-05.img\x22:{\x22frame\x22:{\x22x\x22:608,\x22y\x22:1205,\x22w\x22:52,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}}}}]')
  , $s = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22shared-0-50-aa0212d5.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-building-police-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:722,\x22y\x22:2,\x22w\x22:1056,\x22h\x22:784},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:1056,\x22h\x22:784},\x22sourceSize\x22:{\x22w\x22:1056,\x22h\x22:784}},\x22map-building-bathhouse-basement-01e.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:716,\x22h\x22:796},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:716,\x22h\x22:796},\x22sourceSize\x22:{\x22w\x22:716,\x22h\x22:796}},\x22map-building-mansion-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:802,\x22w\x22:913,\x22h\x22:609},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:913,\x22h\x22:609},\x22sourceSize\x22:{\x22w\x22:913,\x22h\x22:609}},\x22map-building-barn-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:919,\x22y\x22:802,\x22w\x22:800,\x22h\x22:544},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:800,\x22h\x22:544},\x22sourceSize\x22:{\x22w\x22:800,\x22h\x22:544}},\x22map-building-police-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1415,\x22w\x22:265,\x22h\x22:541},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:265,\x22h\x22:541},\x22sourceSize\x22:{\x22w\x22:265,\x22h\x22:541}},\x22map-building-cabin-floor.img\x22:{\x22frame\x22:{\x22x\x22:271,\x22y\x22:1415,\x22w\x22:608,\x22h\x22:496},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:608,\x22h\x22:496},\x22sourceSize\x22:{\x22w\x22:608,\x22h\x22:496}},\x22map-building-bathhouse-basement-01b.img\x22:{\x22frame\x22:{\x22x\x22:883,\x22y\x22:1415,\x22w\x22:652,\x22h\x22:460},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:652,\x22h\x22:460},\x22sourceSize\x22:{\x22w\x22:652,\x22h\x22:460}},\x22map-building-hut-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1539,\x22y\x22:1415,\x22w\x22:68,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:68,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:68,\x22h\x22:384}},\x22map-building-container-open-floor.img\x22:{\x22frame\x22:{\x22x\x22:1611,\x22y\x22:1415,\x22w\x22:90,\x22h\x22:345},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:345},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:346}},\x22map-building-dock-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:2,\x22w\x22:81,\x22h\x22:332},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:81,\x22h\x22:332},\x22sourceSize\x22:{\x22w\x22:81,\x22h\x22:332}},\x22map-wall-18.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:338,\x22w\x22:16,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:288}},\x22map-building-container-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:2,\x22w\x22:90,\x22h\x22:267},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:267},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:268}},\x22map-club-bar-01.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:273,\x22w\x22:27,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:240}},\x22map-wall-14-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1898,\x22y\x22:273,\x22w\x22:16,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:224}},\x22map-wall-14.img\x22:{\x22frame\x22:{\x22x\x22:1918,\x22y\x22:273,\x22w\x22:16,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:224}},\x22map-wall-13-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1938,\x22y\x22:273,\x22w\x22:16,\x22h\x22:208},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:208},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:208}},\x22map-wall-13.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:517,\x22w\x22:16,\x22h\x22:208},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:208},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:208}},\x22map-building-container-open-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:729,\x22w\x22:90,\x22h\x22:194},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:76,\x22w\x22:90,\x22h\x22:194},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:346}},\x22map-building-container-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:927,\x22w\x22:90,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:268}},\x22map-building-container-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:1123,\x22w\x22:90,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:268}},\x22map-building-container-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:1319,\x22w\x22:90,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:268}},\x22map-wall-glass-12-2.img\x22:{\x22frame\x22:{\x22x\x22:1887,\x22y\x22:517,\x22w\x22:32,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:192}},\x22map-wall-glass-12.img\x22:{\x22frame\x22:{\x22x\x22:1923,\x22y\x22:517,\x22w\x22:16,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:192}},\x22map-wall-12.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:1515,\x22w\x22:16,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:192}},\x22map-wall-12-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1887,\x22y\x22:1515,\x22w\x22:16,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:192}},\x22map-building-container-ceiling-05.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:1711,\x22w\x22:90,\x22h\x22:191},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:90,\x22h\x22:191},\x22sourceSize\x22:{\x22w\x22:90,\x22h\x22:268}},\x22map-decal-club-02.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:338,\x22w\x22:52,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:52,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:180}},\x22map-pipes-04.img\x22:{\x22frame\x22:{\x22x\x22:1907,\x22y\x22:1515,\x22w\x22:44,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:44,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:44,\x22h\x22:176}},\x22map-wall-11.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:630,\x22w\x22:16,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:176}},\x22map-wall-11-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:630,\x22w\x22:16,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:176}},\x22map-saloon-bar-01.img\x22:{\x22frame\x22:{\x22x\x22:1822,\x22y\x22:630,\x22w\x22:27,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:162}},\x22map-wall-glass-10.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:810,\x22w\x22:16,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:160}},\x22map-wall-10-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:810,\x22w\x22:16,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:160}},\x22map-wall-10.img\x22:{\x22frame\x22:{\x22x\x22:1822,\x22y\x22:810,\x22w\x22:16,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:160}},\x22map-pipes-01.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:974,\x22w\x22:45,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:45,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:45,\x22h\x22:144}},\x22map-wall-09-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1842,\x22y\x22:810,\x22w\x22:16,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:144}},\x22map-wall-glass-9.img\x22:{\x22frame\x22:{\x22x\x22:1831,\x22y\x22:974,\x22w\x22:16,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:144}},\x22map-wall-09.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1122,\x22w\x22:16,\x22h\x22:144},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:144},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:144}},\x22map-wall-08-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:1122,\x22w\x22:16,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:128}},\x22map-wall-shack-right.img\x22:{\x22frame\x22:{\x22x\x22:1943,\x22y\x22:517,\x22w\x22:12,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:12,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:12,\x22h\x22:121}},\x22map-door-02.img\x22:{\x22frame\x22:{\x22x\x22:1822,\x22y\x22:1122,\x22w\x22:40,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:40,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:112}},\x22map-wall-07.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1270,\x22w\x22:16,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:112}},\x22map-wall-07-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:1270,\x22w\x22:16,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:112}},\x22map-wall-shack-left.img\x22:{\x22frame\x22:{\x22x\x22:1851,\x22y\x22:974,\x22w\x22:12,\x22h\x22:111},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:12,\x22h\x22:111},\x22sourceSize\x22:{\x22w\x22:12,\x22h\x22:111}},\x22map-bed-01.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1386,\x22w\x22:48,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:108}},\x22map-wall-outhouse-side.img\x22:{\x22frame\x22:{\x22x\x22:1802,\x22y\x22:522,\x22w\x22:12,\x22h\x22:99},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:12,\x22h\x22:99},\x22sourceSize\x22:{\x22w\x22:12,\x22h\x22:99}},\x22map-building-barn-basement-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:2,\x22w\x22:82,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:82,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:82,\x22h\x22:104}},\x22map-pipes-05.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:103,\x22w\x22:45,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:45,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:45,\x22h\x22:96}},\x22map-wall-06-rounded.img\x22:{\x22frame\x22:{\x22x\x22:2010,\x22y\x22:103,\x22w\x22:16,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:96}},\x22map-wall-06.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:203,\x22w\x22:16,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:96}},\x22proj-wedge-01.img\x22:{\x22frame\x22:{\x22x\x22:1981,\x22y\x22:203,\x22w\x22:31,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:31,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:90}},\x22part-wedge-01.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:303,\x22w\x22:31,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:31,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:90}},\x22map-building-club-vault-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:396,\x22w\x22:80,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:88}},\x22role-assault.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:488,\x22w\x22:68,\x22h\x22:87},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:87},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22map-snow-07.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1960,\x22w\x22:250,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:5,\x22w\x22:250,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:96}},\x22map-pipes-02.img\x22:{\x22frame\x22:{\x22x\x22:256,\x22y\x22:1960,\x22w\x22:119,\x22h\x22:86},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:119,\x22h\x22:86},\x22sourceSize\x22:{\x22w\x22:119,\x22h\x22:86}},\x22role-tank.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:579,\x22w\x22:68,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22role-demo.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:668,\x22w\x22:68,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22role-sniper.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:757,\x22w\x22:68,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22role-healer.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:846,\x22w\x22:68,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22role-scout.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:935,\x22w\x22:68,\x22h\x22:85},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:1,\x22w\x22:68,\x22h\x22:85},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22map-stove-01.img\x22:{\x22frame\x22:{\x22x\x22:379,\x22y\x22:1960,\x22w\x22:108,\x22h\x22:84},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:108,\x22h\x22:84},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:88}},\x22map-bed-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1996,\x22y\x22:303,\x22w\x22:47,\x22h\x22:83},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:6,\x22w\x22:47,\x22h\x22:83},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:96}},\x22map-bed-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1024,\x22w\x22:47,\x22h\x22:83},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:6,\x22w\x22:47,\x22h\x22:83},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:96}},\x22map-crate-04.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1111,\x22w\x22:82,\x22h\x22:82},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:82,\x22h\x22:82},\x22sourceSize\x22:{\x22w\x22:82,\x22h\x22:82}},\x22map-building-dock-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1197,\x22w\x22:80,\x22h\x22:81},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:81},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:81}},\x22map-table-02.img\x22:{\x22frame\x22:{\x22x\x22:491,\x22y\x22:1960,\x22w\x22:144,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:80}},\x22map-table-03.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1282,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-airdrop-01.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1366,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-airdrop-02.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1450,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-wall-04-stone.img\x22:{\x22frame\x22:{\x22x\x22:2016,\x22y\x22:203,\x22w\x22:20,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:20,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:20,\x22h\x22:80}},\x22map-wall-04-cobalt.img\x22:{\x22frame\x22:{\x22x\x22:2012,\x22y\x22:1024,\x22w\x22:20,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:20,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:20,\x22h\x22:80}},\x22map-wall-05-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1534,\x22w\x22:16,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:80}},\x22map-wall-05.img\x22:{\x22frame\x22:{\x22x\x22:1981,\x22y\x22:1534,\x22w\x22:16,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:80}},\x22map-wheel-01.img\x22:{\x22frame\x22:{\x22x\x22:639,\x22y\x22:1960,\x22w\x22:156,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:78}},\x22map-crate-res-03.img\x22:{\x22frame\x22:{\x22x\x22:799,\x22y\x22:1960,\x22w\x22:108,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:108,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:78}},\x22map-wheel-03.img\x22:{\x22frame\x22:{\x22x\x22:911,\x22y\x22:1960,\x22w\x22:156,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:156,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:78}},\x22map-wheel-02.img\x22:{\x22frame\x22:{\x22x\x22:1071,\x22y\x22:1960,\x22w\x22:151,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:151,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:156,\x22h\x22:78}},\x22map-sandbags-01.img\x22:{\x22frame\x22:{\x22x\x22:1226,\x22y\x22:1960,\x22w\x22:128,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:74}},\x22map-crate-11.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1618,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-crate-10.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1696,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-sandbags-02.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1774,\x22w\x22:60,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:0,\x22w\x22:60,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22pass-unlock-type-bg.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1852,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22pass-unlock-bg.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1498,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22loot-circle-outer-06.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1575,\x22w\x22:73,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:73,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22map-building-barn-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1539,\x22y\x22:1803,\x22w\x22:208,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:208,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:208,\x22h\x22:72}},\x22map-crate-14.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1652,\x22w\x22:78,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:78,\x22h\x22:72}},\x22map-crate-14a.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1728,\x22w\x22:78,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:78,\x22h\x22:72}},\x22map-stone-05.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1804,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-09.img\x22:{\x22frame\x22:{\x22x\x22:1782,\x22y\x22:1880,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-02sv.img\x22:{\x22frame\x22:{\x22x\x22:1705,\x22y\x22:1415,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-08.img\x22:{\x22frame\x22:{\x22x\x22:1705,\x22y\x22:1491,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-barrel-02.img\x22:{\x22frame\x22:{\x22x\x22:1705,\x22y\x22:1567,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-07.img\x22:{\x22frame\x22:{\x22x\x22:1705,\x22y\x22:1643,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-barrel-01.img\x22:{\x22frame\x22:{\x22x\x22:1358,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-01.img\x22:{\x22frame\x22:{\x22x\x22:1434,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-02.img\x22:{\x22frame\x22:{\x22x\x22:1510,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-stone-01.img\x22:{\x22frame\x22:{\x22x\x22:1586,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-wall-outhouse-bot.img\x22:{\x22frame\x22:{\x22x\x22:1898,\x22y\x22:501,\x22w\x22:36,\x22h\x22:12},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:12},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:12}},\x22map-stone-04.img\x22:{\x22frame\x22:{\x22x\x22:1738,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-07.img\x22:{\x22frame\x22:{\x22x\x22:1814,\x22y\x22:1960,\x22w\x22:71,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:71,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-outhouse-res.img\x22:{\x22frame\x22:{\x22x\x22:1889,\x22y\x22:1960,\x22w\x22:78,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:61,\x22y\x22:19,\x22w\x22:78,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:156}},\x22map-table-res.img\x22:{\x22frame\x22:{\x22x\x22:1971,\x22y\x22:1960,\x22w\x22:69,\x22h\x22:69},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:69,\x22h\x22:69},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-door-slot-02.img\x22:{\x22frame\x22:{\x22x\x22:2001,\x22y\x22:1534,\x22w\x22:19,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:19,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:68}},\x22map-door-slot-01.img\x22:{\x22frame\x22:{\x22x\x22:2024,\x22y\x22:1534,\x22w\x22:19,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:19,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:19,\x22h\x22:67}},\x22player-helmet-marksman.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:802,\x22w\x22:49,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:11,\x22w\x22:49,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:88}},\x22part-note-02.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:872,\x22w\x22:49,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:-1,\x22w\x22:49,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-note-01.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:942,\x22w\x22:48,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:-1,\x22w\x22:48,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-toilet-02.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:1012,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-toilet-01.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:1080,\x22w\x22:52,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:52,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-decal-oil-01.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:1148,\x22w\x22:46,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:46,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-door-04.img\x22:{\x22frame\x22:{\x22x\x22:1818,\x22y\x22:522,\x22w\x22:27,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:64}},\x22map-wall-04.img\x22:{\x22frame\x22:{\x22x\x22:2025,\x22y\x22:1774,\x22w\x22:16,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:64}},\x22map-wall-04-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1822,\x22y\x22:1270,\x22w\x22:16,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:64}},\x22map-door-01.img\x22:{\x22frame\x22:{\x22x\x22:2030,\x22y\x22:103,\x22w\x22:12,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:12,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:12,\x22h\x22:64}},\x22map-door-05.img\x22:{\x22frame\x22:{\x22x\x22:1943,\x22y\x22:642,\x22w\x22:12,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:12,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:12,\x22h\x22:64}},\x22loot-weapon-m9-cursed.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:1216,\x22w\x22:52,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:1,\x22w\x22:52,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-squash-01.img\x22:{\x22frame\x22:{\x22x\x22:919,\x22y\x22:1350,\x22w\x22:65,\x22h\x22:61},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:65,\x22h\x22:61},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-case-ring-01.img\x22:{\x22frame\x22:{\x22x\x22:988,\x22y\x22:1350,\x22w\x22:78,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:78,\x22h\x22:60}},\x22map-case-chrys-01.img\x22:{\x22frame\x22:{\x22x\x22:1070,\x22y\x22:1350,\x22w\x22:78,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:78,\x22h\x22:60}},\x22map-case-hatchet-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1152,\x22y\x22:1350,\x22w\x22:67,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:67,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-case-flare-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1223,\x22y\x22:1350,\x22w\x22:67,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:4,\x22w\x22:67,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22loot-perk-inspiration.img\x22:{\x22frame\x22:{\x22x\x22:1294,\x22y\x22:1350,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:1,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-stone-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1358,\x22y\x22:1350,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22map-chimney-01.img\x22:{\x22frame\x22:{\x22x\x22:1422,\x22y\x22:1350,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22map-stone-res-04.img\x22:{\x22frame\x22:{\x22x\x22:1486,\x22y\x22:1350,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22loot-perk-final-bugle.img\x22:{\x22frame\x22:{\x22x\x22:1723,\x22y\x22:1283,\x22w\x22:54,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:54,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-building-boarded-window-01.img\x22:{\x22frame\x22:{\x22x\x22:1834,\x22y\x22:1386,\x22w\x22:24,\x22h\x22:59},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:24,\x22h\x22:59},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:64}},\x22news.img\x22:{\x22frame\x22:{\x22x\x22:1550,\x22y\x22:1350,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-bollard-01.img\x22:{\x22frame\x22:{\x22x\x22:1612,\x22y\x22:1350,\x22w\x22:58,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:58,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22loot-perk-turkey_shoot.img\x22:{\x22frame\x22:{\x22x\x22:1674,\x22y\x22:1350,\x22w\x22:54,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:3,\x22w\x22:54,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-door-03.img\x22:{\x22frame\x22:{\x22x\x22:1842,\x22y\x22:1270,\x22w\x22:16,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:56}},\x22map-building-bank-window-01.img\x22:{\x22frame\x22:{\x22x\x22:1732,\x22y\x22:1350,\x22w\x22:28,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:28,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:28,\x22h\x22:52}},\x22map-building-house-window-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1751,\x22y\x22:1803,\x22w\x22:16,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:52}},\x22map-crate-06.img\x22:{\x22frame\x22:{\x22x\x22:1867,\x22y\x22:1906,\x22w\x22:82,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:82,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:82,\x22h\x22:50}},\x22map-towelrack-01.img\x22:{\x22frame\x22:{\x22x\x22:271,\x22y\x22:1915,\x22w\x22:96,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:96,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:48}},\x22map-recorder-04.img\x22:{\x22frame\x22:{\x22x\x22:1822,\x22y\x22:1338,\x22w\x22:24,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:40}},\x22map-recorder-03.img\x22:{\x22frame\x22:{\x22x\x22:1834,\x22y\x22:1449,\x22w\x22:24,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:40}},\x22map-wall-02-5-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1705,\x22y\x22:1719,\x22w\x22:16,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:40}},\x22map-piano-01.img\x22:{\x22frame\x22:{\x22x\x22:371,\x22y\x22:1915,\x22w\x22:120,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:120,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:38}},\x22map-building-cabin-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:495,\x22y\x22:1915,\x22w\x22:74,\x22h\x22:38},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:38},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:38}},\x22map-deposit-box-02.img\x22:{\x22frame\x22:{\x22x\x22:573,\x22y\x22:1915,\x22w\x22:80,\x22h\x22:37},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:37},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:37}},\x22map-deposit-box-01.img\x22:{\x22frame\x22:{\x22x\x22:657,\x22y\x22:1915,\x22w\x22:80,\x22h\x22:37},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:37},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:37}},\x22map-power-box-01.img\x22:{\x22frame\x22:{\x22x\x22:1725,\x22y\x22:1719,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22map-fire-ext-01.img\x22:{\x22frame\x22:{\x22x\x22:1611,\x22y\x22:1764,\x22w\x22:42,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:42,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:42,\x22h\x22:35}},\x22map-potato-res.img\x22:{\x22frame\x22:{\x22x\x22:1657,\x22y\x22:1764,\x22w\x22:29,\x22h\x22:34},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:7,\x22w\x22:29,\x22h\x22:34},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-bush-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1690,\x22y\x22:1764,\x22w\x22:33,\x22h\x22:33},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:19,\x22y\x22:21,\x22w\x22:33,\x22h\x22:33},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bookshelf-02.img\x22:{\x22frame\x22:{\x22x\x22:883,\x22y\x22:1879,\x22w\x22:112,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:32}},\x22map-bookshelf-01.img\x22:{\x22frame\x22:{\x22x\x22:999,\x22y\x22:1879,\x22w\x22:112,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:32}},\x22map-building-porch-01.img\x22:{\x22frame\x22:{\x22x\x22:1115,\x22y\x22:1879,\x22w\x22:64,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:32}},\x22crosshair160.img\x22:{\x22frame\x22:{\x22x\x22:1727,\x22y\x22:1764,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-column-01.img\x22:{\x22frame\x22:{\x22x\x22:1183,\x22y\x22:1879,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair136.img\x22:{\x22frame\x22:{\x22x\x22:1219,\x22y\x22:1879,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22crosshair118.img\x22:{\x22frame\x22:{\x22x\x22:1255,\x22y\x22:1879,\x22w\x22:32,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-fire-ext-res.img\x22:{\x22frame\x22:{\x22x\x22:1291,\x22y\x22:1879,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:2,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:42,\x22h\x22:35}},\x22map-decal-oil-05.img\x22:{\x22frame\x22:{\x22x\x22:1321,\x22y\x22:1879,\x22w\x22:19,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:0,\x22w\x22:19,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-wall-02-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1344,\x22y\x22:1879,\x22w\x22:16,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:32}},\x22map-wall-02.img\x22:{\x22frame\x22:{\x22x\x22:1364,\x22y\x22:1879,\x22w\x22:16,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:32}},\x22loot-melee-sledgehammer.img\x22:{\x22frame\x22:{\x22x\x22:1384,\x22y\x22:1879,\x22w\x22:76,\x22h\x22:31},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:76,\x22h\x22:31},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:29}},\x22map-drawers-res.img\x22:{\x22frame\x22:{\x22x\x22:1464,\x22y\x22:1879,\x22w\x22:48,\x22h\x22:31},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:48,\x22h\x22:31},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:32}},\x22map-woodpile-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1818,\x22y\x22:590,\x22w\x22:40,\x22h\x22:30},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:9,\x22w\x22:40,\x22h\x22:30},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-bathhouse-pool-01.img\x22:{\x22frame\x22:{\x22x\x22:1516,\x22y\x22:1879,\x22w\x22:18,\x22h\x22:30},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:18,\x22h\x22:30},\x22sourceSize\x22:{\x22w\x22:18,\x22h\x22:30}},\x22map-screen-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1538,\x22y\x22:1879,\x22w\x22:60,\x22h\x22:29},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:60,\x22h\x22:29},\x22sourceSize\x22:{\x22w\x22:62,\x22h\x22:29}},\x22map-barrel-res-03.img\x22:{\x22frame\x22:{\x22x\x22:1602,\x22y\x22:1879,\x22w\x22:40,\x22h\x22:29},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:16,\x22y\x22:42,\x22w\x22:40,\x22h\x22:29},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-gun-mount-04.img\x22:{\x22frame\x22:{\x22x\x22:1646,\x22y\x22:1879,\x22w\x22:64,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:28}},\x22map-decal-oil-04.img\x22:{\x22frame\x22:{\x22x\x22:1714,\x22y\x22:1879,\x22w\x22:30,\x22h\x22:28},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:30,\x22h\x22:28},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bush-res-04.img\x22:{\x22frame\x22:{\x22x\x22:1961,\x22y\x22:1929,\x22w\x22:27,\x22h\x22:27},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:27},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:27}},\x22map-gun-mount-05.img\x22:{\x22frame\x22:{\x22x\x22:741,\x22y\x22:1915,\x22w\x22:72,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:28}},\x22map-gun-mount-01.img\x22:{\x22frame\x22:{\x22x\x22:817,\x22y\x22:1915,\x22w\x22:72,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:28}},\x22crosshair098.img\x22:{\x22frame\x22:{\x22x\x22:1992,\x22y\x22:1929,\x22w\x22:32,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-bush-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1748,\x22y\x22:1879,\x22w\x22:30,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:23,\x22w\x22:30,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-candle-01.img\x22:{\x22frame\x22:{\x22x\x22:893,\x22y\x22:1915,\x22w\x22:26,\x22h\x22:26},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:26,\x22h\x22:26},\x22sourceSize\x22:{\x22w\x22:26,\x22h\x22:26}},\x22map-locker-03.img\x22:{\x22frame\x22:{\x22x\x22:923,\x22y\x22:1915,\x22w\x22:48,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:25}},\x22map-locker-02.img\x22:{\x22frame\x22:{\x22x\x22:975,\x22y\x22:1915,\x22w\x22:48,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:25}},\x22map-locker-01.img\x22:{\x22frame\x22:{\x22x\x22:1027,\x22y\x22:1915,\x22w\x22:48,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:25}},\x22map-building-bank-window-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1079,\x22y\x22:1915,\x22w\x22:26,\x22h\x22:25},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:26,\x22w\x22:26,\x22h\x22:25},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-screen-01.img\x22:{\x22frame\x22:{\x22x\x22:1109,\x22y\x22:1915,\x22w\x22:128,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:24}},\x22map-gun-mount-03.img\x22:{\x22frame\x22:{\x22x\x22:1241,\x22y\x22:1915,\x22w\x22:64,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:28}},\x22map-gun-mount-02.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:1915,\x22w\x22:64,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:28}},\x22cobalt.img\x22:{\x22frame\x22:{\x22x\x22:1377,\x22y\x22:1915,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:24}},\x22map-tree-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1405,\x22y\x22:1915,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:24}},\x22crosshair051.img\x22:{\x22frame\x22:{\x22x\x22:1433,\x22y\x22:1915,\x22w\x22:24,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:24,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-decal-flyer-01.img\x22:{\x22frame\x22:{\x22x\x22:1461,\x22y\x22:1915,\x22w\x22:21,\x22h\x22:24},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:21,\x22h\x22:24},\x22sourceSize\x22:{\x22w\x22:24,\x22h\x22:24}},\x22crosshair176.img\x22:{\x22frame\x22:{\x22x\x22:1486,\x22y\x22:1915,\x22w\x22:20,\x22h\x22:19},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:20,\x22h\x22:19},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:32}},\x22map-barrel-04.img\x22:{\x22frame\x22:{\x22x\x22:1510,\x22y\x22:1915,\x22w\x22:45,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:45,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:45,\x22h\x22:18}},\x22map-barrel-03.img\x22:{\x22frame\x22:{\x22x\x22:1559,\x22y\x22:1915,\x22w\x22:45,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:45,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:45,\x22h\x22:18}},\x22map-bottle-04.img\x22:{\x22frame\x22:{\x22x\x22:1608,\x22y\x22:1915,\x22w\x22:18,\x22h\x22:18},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:-1,\x22y\x22:-1,\x22w\x22:18,\x22h\x22:18},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-switch-01.img\x22:{\x22frame\x22:{\x22x\x22:2028,\x22y\x22:1929,\x22w\x22:15,\x22h\x22:17},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:15,\x22h\x22:17},\x22sourceSize\x22:{\x22w\x22:15,\x22h\x22:17}},\x22map-switch-02.img\x22:{\x22frame\x22:{\x22x\x22:1763,\x22y\x22:1764,\x22w\x22:15,\x22h\x22:17},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:15,\x22h\x22:17},\x22sourceSize\x22:{\x22w\x22:15,\x22h\x22:17}},\x22map-switch-03.img\x22:{\x22frame\x22:{\x22x\x22:1630,\x22y\x22:1915,\x22w\x22:15,\x22h\x22:17},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:15,\x22h\x22:17},\x22sourceSize\x22:{\x22w\x22:15,\x22h\x22:17}},\x22map-bottle-03.img\x22:{\x22frame\x22:{\x22x\x22:1751,\x22y\x22:1859,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-bottle-05.img\x22:{\x22frame\x22:{\x22x\x22:1649,\x22y\x22:1915,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-wall-01-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1669,\x22y\x22:1915,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-bottle-01.img\x22:{\x22frame\x22:{\x22x\x22:1689,\x22y\x22:1915,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-bottle-02.img\x22:{\x22frame\x22:{\x22x\x22:1709,\x22y\x22:1915,\x22w\x22:16,\x22h\x22:16},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:16},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:16}},\x22map-crate-03.img\x22:{\x22frame\x22:{\x22x\x22:1662,\x22y\x22:1960,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}}}},{\x22meta\x22:{\x22image\x22:\x22shared-1-50-e92848bd.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-conch-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:284,\x22y\x22:2,\x22w\x22:472,\x22h\x22:440},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:24,\x22y\x22:0,\x22w\x22:472,\x22h\x22:440},\x22sourceSize\x22:{\x22w\x22:496,\x22h\x22:440}},\x22map-building-bank-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:278,\x22h\x22:446},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:24,\x22w\x22:278,\x22h\x22:446},\x22sourceSize\x22:{\x22w\x22:278,\x22h\x22:470}},\x22map-building-club-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:760,\x22y\x22:2,\x22w\x22:721,\x22h\x22:433},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:721,\x22h\x22:433},\x22sourceSize\x22:{\x22w\x22:721,\x22h\x22:433}},\x22map-building-house-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:452,\x22w\x22:480,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:480,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:480,\x22h\x22:432}},\x22map-building-house-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:486,\x22y\x22:452,\x22w\x22:480,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:480,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:480,\x22h\x22:432}},\x22map-building-mansion-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:452,\x22w\x22:458,\x22h\x22:404},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:458,\x22h\x22:404},\x22sourceSize\x22:{\x22w\x22:512,\x22h\x22:432}},\x22map-building-bank-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:888,\x22w\x22:848,\x22h\x22:401},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:848,\x22h\x22:401},\x22sourceSize\x22:{\x22w\x22:848,\x22h\x22:401}},\x22map-building-mansion-cellar-01a.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:888,\x22w\x22:433,\x22h\x22:401},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:433,\x22h\x22:401},\x22sourceSize\x22:{\x22w\x22:433,\x22h\x22:401}},\x22map-building-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1485,\x22y\x22:2,\x22w\x22:500,\x22h\x22:400},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:500,\x22h\x22:400},\x22sourceSize\x22:{\x22w\x22:500,\x22h\x22:400}},\x22map-building-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1485,\x22y\x22:406,\x22w\x22:440,\x22h\x22:400},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:440,\x22h\x22:400},\x22sourceSize\x22:{\x22w\x22:440,\x22h\x22:400}},\x22map-building-shilo-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1485,\x22y\x22:810,\x22w\x22:480,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:480,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:480,\x22h\x22:384}},\x22map-building-shilo-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1293,\x22w\x22:480,\x22h\x22:384},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:480,\x22h\x22:384},\x22sourceSize\x22:{\x22w\x22:480,\x22h\x22:384}},\x22map-building-bathhouse-sideroom-02.img\x22:{\x22frame\x22:{\x22x\x22:486,\x22y\x22:1293,\x22w\x22:556,\x22h\x22:365},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:556,\x22h\x22:365},\x22sourceSize\x22:{\x22w\x22:556,\x22h\x22:365}},\x22map-building-bridge-lg-floor.img\x22:{\x22frame\x22:{\x22x\x22:1046,\x22y\x22:1293,\x22w\x22:506,\x22h\x22:354},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:506,\x22h\x22:354},\x22sourceSize\x22:{\x22w\x22:506,\x22h\x22:354}},\x22map-bunker-egg-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1556,\x22y\x22:1293,\x22w\x22:364,\x22h\x22:350},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:364,\x22h\x22:350},\x22sourceSize\x22:{\x22w\x22:369,\x22h\x22:353}},\x22map-bunker-storm-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1681,\x22w\x22:636,\x22h\x22:349},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:636,\x22h\x22:349},\x22sourceSize\x22:{\x22w\x22:640,\x22h\x22:352}},\x22map-building-house-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:642,\x22y\x22:1681,\x22w\x22:360,\x22h\x22:324},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:324},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:324}},\x22map-building-police-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1006,\x22y\x22:1681,\x22w\x22:305,\x22h\x22:321},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:32,\x22w\x22:305,\x22h\x22:321},\x22sourceSize\x22:{\x22w\x22:305,\x22h\x22:785}},\x22map-building-barn-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1315,\x22y\x22:1681,\x22w\x22:600,\x22h\x22:312},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:600,\x22h\x22:312},\x22sourceSize\x22:{\x22w\x22:600,\x22h\x22:312}},\x22map-building-club-floor-01e.img\x22:{\x22frame\x22:{\x22x\x22:1291,\x22y\x22:888,\x22w\x22:177,\x22h\x22:241},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:177,\x22h\x22:241},\x22sourceSize\x22:{\x22w\x22:177,\x22h\x22:241}},\x22map-bunker-egg-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1291,\x22y\x22:1133,\x22w\x22:160,\x22h\x22:153},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:71,\x22w\x22:160,\x22h\x22:153},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:224}},\x22map-shack-res-03.img\x22:{\x22frame\x22:{\x22x\x22:1485,\x22y\x22:1198,\x22w\x22:114,\x22h\x22:91},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:48,\x22y\x22:33,\x22w\x22:114,\x22h\x22:91},\x22sourceSize\x22:{\x22w\x22:210,\x22h\x22:170}},\x22map-shack-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1603,\x22y\x22:1198,\x22w\x22:114,\x22h\x22:91},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:48,\x22y\x22:33,\x22w\x22:114,\x22h\x22:91},\x22sourceSize\x22:{\x22w\x22:210,\x22h\x22:170}},\x22map-bunker-conch-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1721,\x22y\x22:1198,\x22w\x22:190,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:190,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:190,\x22h\x22:90}},\x22map-bunker-vent-03.img\x22:{\x22frame\x22:{\x22x\x22:1915,\x22y\x22:1198,\x22w\x22:68,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:68,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:68,\x22h\x22:68}},\x22map-bush-07x.img\x22:{\x22frame\x22:{\x22x\x22:1919,\x22y\x22:1681,\x22w\x22:66,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:66,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-01f.img\x22:{\x22frame\x22:{\x22x\x22:1919,\x22y\x22:1753,\x22w\x22:66,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:66,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-decal-initiative.img\x22:{\x22frame\x22:{\x22x\x22:1919,\x22y\x22:1825,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22pass.img\x22:{\x22frame\x22:{\x22x\x22:1919,\x22y\x22:1893,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-vat-res.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1293,\x22w\x22:57,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:4,\x22w\x22:57,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22loot-perk-hotw.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:406,\x22w\x22:56,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:56,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22loot-perk-halloween-mystery.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:474,\x22w\x22:56,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:56,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-toilet-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:541,\x22w\x22:52,\x22h\x22:57},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:2,\x22w\x22:52,\x22h\x22:57},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-leaf-01sv.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1361,\x22w\x22:58,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:4,\x22w\x22:58,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-wall-outhouse-top.img\x22:{\x22frame\x22:{\x22x\x22:1279,\x22y\x22:860,\x22w\x22:102,\x22h\x22:12},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:102,\x22h\x22:12},\x22sourceSize\x22:{\x22w\x22:102,\x22h\x22:12}},\x22map-tree-09.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:662,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-decal-club-01.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:722,\x22w\x22:52,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:56,\x22w\x22:52,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:52,\x22h\x22:180}},\x22map-crate-20.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1421,\x22w\x22:54,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:54}},\x22map-stove-02.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1479,\x22w\x22:52,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:52,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-decal-oil-02.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:452,\x22w\x22:48,\x22h\x22:53},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:6,\x22w\x22:48,\x22h\x22:53},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-building-house-window-01.img\x22:{\x22frame\x22:{\x22x\x22:1969,\x22y\x22:810,\x22w\x22:16,\x22h\x22:52},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:52},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:52}},\x22map-decal-oil-03.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:509,\x22w\x22:48,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:7,\x22w\x22:48,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-toilet-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:563,\x22w\x22:43,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:7,\x22w\x22:43,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-toilet-04.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:617,\x22w\x22:36,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:0,\x22w\x22:36,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-toilet-03.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:671,\x22w\x22:36,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:0,\x22w\x22:36,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-couch-03.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:725,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-04.img\x22:{\x22frame\x22:{\x22x\x22:1432,\x22y\x22:777,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-woodpile-01.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1537,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-01.img\x22:{\x22frame\x22:{\x22x\x22:1924,\x22y\x22:1589,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-bathrocks-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:2,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-05.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:54,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-03.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:106,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-tree-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:158,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-02.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:210,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-recorder-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:262,\x22w\x22:32,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:48}},\x22map-recorder-02.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:314,\x22w\x22:32,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:32,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:32,\x22h\x22:48}},\x22map-wall-03-rounded.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:366,\x22w\x22:16,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:48}},\x22map-wall-03.img\x22:{\x22frame\x22:{\x22x\x22:2009,\x22y\x22:366,\x22w\x22:16,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:16,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:16,\x22h\x22:48}},\x22map-control-panel-03.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:418,\x22w\x22:48,\x22h\x22:47},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:47},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:47}},\x22map-couch-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:469,\x22w\x22:43,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:43,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-saloon-bar-02.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:519,\x22w\x22:27,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:27,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:27,\x22h\x22:46}},\x22map-stand-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:569,\x22w\x22:40,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:40,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:40,\x22h\x22:45}},\x22map-squash-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:618,\x22w\x22:45,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:4,\x22w\x22:45,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-pot-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:666,\x22w\x22:44,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:14,\x22w\x22:44,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bunker-vent-01.img\x22:{\x22frame\x22:{\x22x\x22:1989,\x22y\x22:714,\x22w\x22:42,\x22h\x22:42},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:42,\x22h\x22:42},\x22sourceSize\x22:{\x22w\x22:42,\x22h\x22:42}},\x22map-wall-shack-top.img\x22:{\x22frame\x22:{\x22x\x22:970,\x22y\x22:860,\x22w\x22:180,\x22h\x22:12},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:180,\x22h\x22:12},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:12}},\x22map-wall-shack-bot.img\x22:{\x22frame\x22:{\x22x\x22:1154,\x22y\x22:860,\x22w\x22:121,\x22h\x22:12},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:121,\x22h\x22:12},\x22sourceSize\x22:{\x22w\x22:121,\x22h\x22:12}},\x22map-tree-04.img\x22:{\x22frame\x22:{\x22x\x22:1929,\x22y\x22:602,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}}}},{\x22meta\x22:{\x22image\x22:\x22shared-2-50-fcf3c569.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-building-club-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:476,\x22y\x22:2,\x22w\x22:369,\x22h\x22:297},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:369,\x22h\x22:297},\x22sourceSize\x22:{\x22w\x22:369,\x22h\x22:297}},\x22map-building-teahouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:470,\x22h\x22:308},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:470,\x22h\x22:308},\x22sourceSize\x22:{\x22w\x22:480,\x22h\x22:320}},\x22map-building-club-floor-01g.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:314,\x22w\x22:401,\x22h\x22:289},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:401,\x22h\x22:289},\x22sourceSize\x22:{\x22w\x22:401,\x22h\x22:289}},\x22map-building-cabin-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:849,\x22y\x22:2,\x22w\x22:456,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:456,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:456,\x22h\x22:288}},\x22map-building-teahouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:849,\x22y\x22:294,\x22w\x22:448,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:448,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:448,\x22h\x22:288}},\x22map-bunker-conch-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:407,\x22y\x22:314,\x22w\x22:244,\x22h\x22:280},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:244,\x22h\x22:280},\x22sourceSize\x22:{\x22w\x22:244,\x22h\x22:280}},\x22map-building-bank-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:607,\x22w\x22:253,\x22h\x22:277},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:23,\x22w\x22:253,\x22h\x22:277},\x22sourceSize\x22:{\x22w\x22:253,\x22h\x22:300}},\x22map-building-bridge-lg-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:259,\x22y\x22:607,\x22w\x22:544,\x22h\x22:274},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:7,\x22w\x22:544,\x22h\x22:274},\x22sourceSize\x22:{\x22w\x22:544,\x22h\x22:288}},\x22map-building-bathhouse-sideroom-01.img\x22:{\x22frame\x22:{\x22x\x22:807,\x22y\x22:607,\x22w\x22:268,\x22h\x22:268},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:268,\x22h\x22:268},\x22sourceSize\x22:{\x22w\x22:268,\x22h\x22:268}},\x22map-tree-08f.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:888,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-tree-08su.img\x22:{\x22frame\x22:{\x22x\x22:262,\x22y\x22:888,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-silo-01.img\x22:{\x22frame\x22:{\x22x\x22:522,\x22y\x22:888,\x22w\x22:252,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:252,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-building-police-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:778,\x22y\x22:888,\x22w\x22:504,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:504,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:504,\x22h\x22:240}},\x22map-building-police-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:2,\x22w\x22:252,\x22h\x22:240},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:252,\x22h\x22:240},\x22sourceSize\x22:{\x22w\x22:252,\x22h\x22:240}},\x22map-building-barn-basement-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1148,\x22w\x22:332,\x22h\x22:236},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:332,\x22h\x22:236},\x22sourceSize\x22:{\x22w\x22:332,\x22h\x22:236}},\x22map-building-barn-basement-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:246,\x22w\x22:188,\x22h\x22:236},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:188,\x22h\x22:236},\x22sourceSize\x22:{\x22w\x22:188,\x22h\x22:236}},\x22map-building-hut-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:486,\x22w\x22:228,\x22h\x22:228},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:14,\x22w\x22:228,\x22h\x22:228},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-building-bank-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:338,\x22y\x22:1148,\x22w\x22:434,\x22h\x22:224},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:434,\x22h\x22:224},\x22sourceSize\x22:{\x22w\x22:544,\x22h\x22:224}},\x22map-building-club-ceiling-01c.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:718,\x22w\x22:201,\x22h\x22:217},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:201,\x22h\x22:217},\x22sourceSize\x22:{\x22w\x22:201,\x22h\x22:217}},\x22map-building-warehouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:776,\x22y\x22:1148,\x22w\x22:416,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:416,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:416,\x22h\x22:216}},\x22map-building-warehouse-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1196,\x22y\x22:1148,\x22w\x22:360,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:216}},\x22map-bunker-conch-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1079,\x22y\x22:607,\x22w\x22:200,\x22h\x22:216},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:216},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:224}},\x22map-bunker-conch-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1388,\x22w\x22:621,\x22h\x22:206},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:13,\x22w\x22:621,\x22h\x22:206},\x22sourceSize\x22:{\x22w\x22:653,\x22h\x22:232}},\x22map-building-shack-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:627,\x22y\x22:1388,\x22w\x22:286,\x22h\x22:206},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:286,\x22h\x22:206},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:224}},\x22map-building-hut-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:939,\x22w\x22:192,\x22h\x22:198},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:192,\x22h\x22:198},\x22sourceSize\x22:{\x22w\x22:204,\x22h\x22:204}},\x22map-building-hut-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:917,\x22y\x22:1388,\x22w\x22:192,\x22h\x22:198},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:192,\x22h\x22:198},\x22sourceSize\x22:{\x22w\x22:204,\x22h\x22:204}},\x22map-building-hut-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1113,\x22y\x22:1388,\x22w\x22:192,\x22h\x22:198},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:6,\x22w\x22:192,\x22h\x22:198},\x22sourceSize\x22:{\x22w\x22:204,\x22h\x22:204}},\x22map-bunker-conch-chamber-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1598,\x22w\x22:699,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:21,\x22w\x22:699,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:760,\x22h\x22:216}},\x22map-bunker-storm-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:655,\x22y\x22:314,\x22w\x22:160,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:192}},\x22map-building-panicroom-floor.img\x22:{\x22frame\x22:{\x22x\x22:1309,\x22y\x22:1388,\x22w\x22:144,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:192}},\x22map-building-panicroom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:705,\x22y\x22:1598,\x22w\x22:144,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:192}},\x22map-building-barn-basement-stairs.img\x22:{\x22frame\x22:{\x22x\x22:853,\x22y\x22:1598,\x22w\x22:144,\x22h\x22:192},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:192},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:192}},\x22map-building-bridge-md-floor.img\x22:{\x22frame\x22:{\x22x\x22:1001,\x22y\x22:1598,\x22w\x22:448,\x22h\x22:184},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:448,\x22h\x22:184},\x22sourceSize\x22:{\x22w\x22:448,\x22h\x22:184}},\x22map-building-bank-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1453,\x22y\x22:1598,\x22w\x22:108,\x22h\x22:181},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:95,\x22w\x22:108,\x22h\x22:181},\x22sourceSize\x22:{\x22w\x22:108,\x22h\x22:276}},\x22map-building-bathhouse-basement-01c.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:2,\x22w\x22:284,\x22h\x22:172},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:284,\x22h\x22:172},\x22sourceSize\x22:{\x22w\x22:284,\x22h\x22:172}},\x22map-building-vault-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:178,\x22w\x22:162,\x22h\x22:169},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:162,\x22h\x22:169},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:169}},\x22map-building-bathhouse-sideroom-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:351,\x22w\x22:256,\x22h\x22:168},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:168},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:168}},\x22map-building-shack-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:523,\x22w\x22:194,\x22h\x22:162},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:8,\x22w\x22:194,\x22h\x22:162},\x22sourceSize\x22:{\x22w\x22:210,\x22h\x22:170}},\x22map-building-mansion-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1794,\x22w\x22:401,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:401,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:401,\x22h\x22:161}},\x22map-building-shack-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:689,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-building-outhouse-floor.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:853,\x22w\x22:124,\x22h\x22:157},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:38,\x22y\x22:0,\x22w\x22:124,\x22h\x22:157},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:158}},\x22map-bunker-storm-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:407,\x22y\x22:1794,\x22w\x22:296,\x22h\x22:154},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:54,\x22w\x22:296,\x22h\x22:154},\x22sourceSize\x22:{\x22w\x22:296,\x22h\x22:208}},\x22map-building-shack-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1014,\x22w\x22:206,\x22h\x22:146},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:0,\x22w\x22:206,\x22h\x22:146},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:168}},\x22map-building-club-floor-01h.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1164,\x22w\x22:161,\x22h\x22:145},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:161,\x22h\x22:145},\x22sourceSize\x22:{\x22w\x22:161,\x22h\x22:145}},\x22map-building-bathhouse-basement-01a.img\x22:{\x22frame\x22:{\x22x\x22:1731,\x22y\x22:178,\x22w\x22:113,\x22h\x22:145},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:113,\x22h\x22:145},\x22sourceSize\x22:{\x22w\x22:113,\x22h\x22:145}},\x22map-bunker-generic-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1693,\x22y\x22:853,\x22w\x22:150,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:150,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-bunker-generic-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1313,\x22w\x22:150,\x22h\x22:142},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:0,\x22w\x22:150,\x22h\x22:142},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-stone-03.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1459,\x22w\x22:141,\x22h\x22:140},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:141,\x22h\x22:140},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bunker-conch-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:707,\x22y\x22:1794,\x22w\x22:294,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:0,\x22w\x22:294,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:300,\x22h\x22:128}},\x22map-tree-03.img\x22:{\x22frame\x22:{\x22x\x22:1719,\x22y\x22:1313,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-tree-07su.img\x22:{\x22frame\x22:{\x22x\x22:1710,\x22y\x22:1459,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-hut-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1603,\x22w\x22:121,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:63,\x22y\x22:67,\x22w\x22:121,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-building-club-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1729,\x22y\x22:689,\x22w\x22:89,\x22h\x22:121},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:89,\x22h\x22:121},\x22sourceSize\x22:{\x22w\x22:89,\x22h\x22:121}},\x22map-chute-01.img\x22:{\x22frame\x22:{\x22x\x22:1690,\x22y\x22:1603,\x22w\x22:120,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:120,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-pipes-03.img\x22:{\x22frame\x22:{\x22x\x22:1005,\x22y\x22:1794,\x22w\x22:342,\x22h\x22:118},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:342,\x22h\x22:118},\x22sourceSize\x22:{\x22w\x22:342,\x22h\x22:118}},\x22map-bunker-generic-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1730,\x22y\x22:1164,\x22w\x22:100,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:100,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-building-mansion-cellar-01b.img\x22:{\x22frame\x22:{\x22x\x22:1351,\x22y\x22:1794,\x22w\x22:113,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:113,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:113,\x22h\x22:115}},\x22map-building-outhouse-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1468,\x22y\x22:1794,\x22w\x22:140,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:140,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:158}},\x22map-building-mansion-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:1612,\x22y\x22:1794,\x22w\x22:113,\x22h\x22:114},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:113,\x22h\x22:114},\x22sourceSize\x22:{\x22w\x22:113,\x22h\x22:114}},\x22map-building-club-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1729,\x22y\x22:1794,\x22w\x22:113,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:113,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:113,\x22h\x22:113}},\x22map-building-saferoom-floor.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:2,\x22w\x22:176,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:176,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:112}},\x22map-building-saferoom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:118,\x22w\x22:176,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:176,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:176,\x22h\x22:112}},\x22map-building-bathhouse-sideroom-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:234,\x22w\x22:128,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:112}},\x22map-vending-res.img\x22:{\x22frame\x22:{\x22x\x22:1977,\x22y\x22:1245,\x22w\x22:50,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:1,\x22w\x22:50,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:47}},\x22map-bed-02.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:462,\x22w\x22:88,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:88,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:88,\x22h\x22:108}},\x22map-building-shack-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:574,\x22w\x22:158,\x22h\x22:105},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:158,\x22h\x22:105},\x22sourceSize\x22:{\x22w\x22:158,\x22h\x22:128}},\x22map-vat-02.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:683,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-stone-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:787,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-building-barn-basement-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:891,\x22w\x22:152,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:6,\x22w\x22:152,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:152,\x22h\x22:104}},\x22map-building-club-floor-01d.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:993,\x22w\x22:161,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:161,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:161,\x22h\x22:97}},\x22map-building-bathhouse-basement-01d.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1094,\x22w\x22:129,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:129,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:129,\x22h\x22:97}},\x22map-building-shack-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1195,\x22w\x22:120,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:120,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:120,\x22h\x22:120}},\x22map-building-club-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1296,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22map-building-crossing-bathroom-ceiling.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1397,\x22w\x22:144,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:96}},\x22map-hedgehog-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1497,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-shack-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1597,\x22w\x22:156,\x22h\x22:94},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:28,\x22y\x22:23,\x22w\x22:156,\x22h\x22:94},\x22sourceSize\x22:{\x22w\x22:210,\x22h\x22:170}},\x22map-bunker-egg-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1695,\x22w\x22:97,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:90}},\x22map-smoke-res.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1789,\x22w\x22:86,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:23,\x22y\x22:19,\x22w\x22:86,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-bunker-storm-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1457,\x22y\x22:1388,\x22w\x22:97,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:89}},\x22map-bunker-conch-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1958,\x22w\x22:244,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:244,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:244,\x22h\x22:88}},\x22map-crate-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1945,\x22y\x22:462,\x22w\x22:72,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:72,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bunker-vent-02.img\x22:{\x22frame\x22:{\x22x\x22:1957,\x22y\x22:683,\x22w\x22:68,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:68,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:68,\x22h\x22:68}},\x22pass-level-bg.img\x22:{\x22frame\x22:{\x22x\x22:1954,\x22y\x22:1296,\x22w\x22:73,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:3,\x22w\x22:73,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:73,\x22h\x22:73}},\x22map-vat-01.img\x22:{\x22frame\x22:{\x22x\x22:1957,\x22y\x22:787,\x22w\x22:68,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:68,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-barrel-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1953,\x22y\x22:1497,\x22w\x22:68,\x22h\x22:66},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:68,\x22h\x22:66},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-building-mansion-cellar-01c.img\x22:{\x22frame\x22:{\x22x\x22:655,\x22y\x22:510,\x22w\x22:177,\x22h\x22:65},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:177,\x22h\x22:65},\x22sourceSize\x22:{\x22w\x22:177,\x22h\x22:65}},\x22map-building-club-floor-01f.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:1883,\x22w\x22:97,\x22h\x22:65},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:65},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:65}},\x22map-stone-res-06.img\x22:{\x22frame\x22:{\x22x\x22:250,\x22y\x22:1958,\x22w\x22:144,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:64}},\x22map-stairs-broken-01.img\x22:{\x22frame\x22:{\x22x\x22:1943,\x22y\x22:1789,\x22w\x22:80,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:64}},\x22map-table-01.img\x22:{\x22frame\x22:{\x22x\x22:1763,\x22y\x22:523,\x22w\x22:80,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:64}},\x22map-bathhouse-column-01.img\x22:{\x22frame\x22:{\x22x\x22:1954,\x22y\x22:1695,\x22w\x22:64,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22proj-martyrdom-01.img\x22:{\x22frame\x22:{\x22x\x22:1954,\x22y\x22:1883,\x22w\x22:64,\x22h\x22:63},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:63},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22timer.img\x22:{\x22frame\x22:{\x22x\x22:1763,\x22y\x22:591,\x22w\x22:64,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-crate-05.img\x22:{\x22frame\x22:{\x22x\x22:1775,\x22y\x22:1014,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:62,\x22h\x22:62}},\x22player-medic.img\x22:{\x22frame\x22:{\x22x\x22:1775,\x22y\x22:1080,\x22w\x22:62,\x22h\x22:62},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:5,\x22y\x22:5,\x22w\x22:62,\x22h\x22:62},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-case-basement-01.img\x22:{\x22frame\x22:{\x22x\x22:1565,\x22y\x22:1728,\x22w\x22:74,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:56}},\x22map-control-panel-05.img\x22:{\x22frame\x22:{\x22x\x22:1643,\x22y\x22:1728,\x22w\x22:72,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:55}},\x22map-control-panel-02.img\x22:{\x22frame\x22:{\x22x\x22:1719,\x22y\x22:1728,\x22w\x22:72,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:55}},\x22map-control-panel-01.img\x22:{\x22frame\x22:{\x22x\x22:1457,\x22y\x22:1481,\x22w\x22:72,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:55}},\x22map-control-panel-04.img\x22:{\x22frame\x22:{\x22x\x22:398,\x22y\x22:1958,\x22w\x22:72,\x22h\x22:55},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:55},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:55}},\x22map-case-deagle-01.img\x22:{\x22frame\x22:{\x22x\x22:474,\x22y\x22:1958,\x22w\x22:72,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:54}},\x22map-case-deagle-02.img\x22:{\x22frame\x22:{\x22x\x22:550,\x22y\x22:1958,\x22w\x22:72,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:54}},\x22emote-medical-healthkit.img\x22:{\x22frame\x22:{\x22x\x22:626,\x22y\x22:1958,\x22w\x22:62,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:5,\x22w\x22:62,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22part-takedown-01.img\x22:{\x22frame\x22:{\x22x\x22:692,\x22y\x22:1958,\x22w\x22:64,\x22h\x22:53},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:6,\x22w\x22:64,\x22h\x22:53},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-grill-01.img\x22:{\x22frame\x22:{\x22x\x22:760,\x22y\x22:1958,\x22w\x22:64,\x22h\x22:53},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:5,\x22w\x22:64,\x22h\x22:53},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-chest-02.img\x22:{\x22frame\x22:{\x22x\x22:828,\x22y\x22:1958,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-chest-03.img\x22:{\x22frame\x22:{\x22x\x22:902,\x22y\x22:1958,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-case-flare-01.img\x22:{\x22frame\x22:{\x22x\x22:976,\x22y\x22:1958,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-case-hatchet-01.img\x22:{\x22frame\x22:{\x22x\x22:1050,\x22y\x22:1958,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-chest-01.img\x22:{\x22frame\x22:{\x22x\x22:1124,\x22y\x22:1958,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-couch-01.img\x22:{\x22frame\x22:{\x22x\x22:1079,\x22y\x22:827,\x22w\x22:144,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:48}},\x22map-couch-02.img\x22:{\x22frame\x22:{\x22x\x22:1198,\x22y\x22:1958,\x22w\x22:96,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:48}},\x22map-control-panel-06.img\x22:{\x22frame\x22:{\x22x\x22:1298,\x22y\x22:1958,\x22w\x22:96,\x22h\x22:47},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:47},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:47}},\x22map-oven-01.img\x22:{\x22frame\x22:{\x22x\x22:1795,\x22y\x22:1728,\x22w\x22:54,\x22h\x22:47},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:47},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:47}},\x22map-refrigerator-01.img\x22:{\x22frame\x22:{\x22x\x22:1501,\x22y\x22:246,\x22w\x22:54,\x22h\x22:47},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:47},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:47}},\x22map-vending-soda-01.img\x22:{\x22frame\x22:{\x22x\x22:1501,\x22y\x22:297,\x22w\x22:54,\x22h\x22:47},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:54,\x22h\x22:47},\x22sourceSize\x22:{\x22w\x22:54,\x22h\x22:47}},\x22map-decal-oil-06.img\x22:{\x22frame\x22:{\x22x\x22:1977,\x22y\x22:1195,\x22w\x22:50,\x22h\x22:46},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:9,\x22w\x22:50,\x22h\x22:46},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-crate-mil-05.img\x22:{\x22frame\x22:{\x22x\x22:1398,\x22y\x22:1958,\x22w\x22:86,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:86,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:45}},\x22map-crate-mil-01.img\x22:{\x22frame\x22:{\x22x\x22:1488,\x22y\x22:1958,\x22w\x22:86,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:86,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:45}},\x22map-crate-mil-04.img\x22:{\x22frame\x22:{\x22x\x22:1578,\x22y\x22:1958,\x22w\x22:86,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:86,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:45}},\x22map-crate-mil-02.img\x22:{\x22frame\x22:{\x22x\x22:1668,\x22y\x22:1958,\x22w\x22:86,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:86,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:45}},\x22map-crate-mil-03.img\x22:{\x22frame\x22:{\x22x\x22:1758,\x22y\x22:1958,\x22w\x22:86,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:86,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:86,\x22h\x22:45}},\x22map-drawers-02.img\x22:{\x22frame\x22:{\x22x\x22:1848,\x22y\x22:1958,\x22w\x22:80,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:45}},\x22map-drawers-01.img\x22:{\x22frame\x22:{\x22x\x22:1932,\x22y\x22:1958,\x22w\x22:80,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:45}},\x22map-building-teahouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1227,\x22y\x22:827,\x22w\x22:64,\x22h\x22:44},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:44},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:44}},\x22map-building-teahouse-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1853,\x22y\x22:350,\x22w\x22:144,\x22h\x22:108},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:56,\x22y\x22:74,\x22w\x22:144,\x22h\x22:108},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}}}},{\x22meta\x22:{\x22image\x22:\x22shared-3-50-b073dcf4.png\x22,\x22size\x22:{\x22w\x22:1024,\x22h\x22:128},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-conch-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:248,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:248,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:248,\x22h\x22:96}},\x22map-building-mansion-floor-01d.img\x22:{\x22frame\x22:{\x22x\x22:254,\x22y\x22:2,\x22w\x22:545,\x22h\x22:95},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:545,\x22h\x22:95},\x22sourceSize\x22:{\x22w\x22:545,\x22h\x22:97}}}}]')
  , Qs = [{
    'meta': {
        'image': 'halloween-0-50-f68b39c5.png',
        'size': {
            'w': 0x400,
            'h': 0x400
        },
        'scale': 0.5
    },
    'frames': {
        'map-bunker-eye-compartment-floor-01.img': {
            'frame': {
                'x': 0x166,
                'y': 0x2,
                'w': 0x160,
                'h': 0x160
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x160,
                'h': 0x160
            },
            'sourceSize': {
                'w': 0x160,
                'h': 0x160
            }
        },
        'map-bunker-eye-chamber-floor-01a.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x160,
                'h': 0x2a2
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0xe,
                'w': 0x160,
                'h': 0x2a2
            },
            'sourceSize': {
                'w': 0x160,
                'h': 0x2b0
            }
        },
        'map-bunker-eye-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x166,
                'y': 0x166,
                'w': 0xa0,
                'h': 0x110
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0x110
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0x110
            }
        },
        'map-tree-08.img': {
            'frame': {
                'x': 0x2ca,
                'y': 0x2,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-tree-08sp.img': {
            'frame': {
                'x': 0x2ca,
                'y': 0x106,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-tree-05.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2a8,
                'w': 0xf8,
                'h': 0xf3
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x4,
                'y': 0x7,
                'w': 0xf8,
                'h': 0xf3
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bunker-eye-compartment-ceiling-01.img': {
            'frame': {
                'x': 0x20a,
                'y': 0x166,
                'w': 0xa0,
                'h': 0xa0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xa0,
                'h': 0xa0
            },
            'sourceSize': {
                'w': 0xa0,
                'h': 0xa0
            }
        },
        'map-tree-07sp.img': {
            'frame': {
                'x': 0x2ca,
                'y': 0x20a,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-tree-07.img': {
            'frame': {
                'x': 0xfe,
                'y': 0x2a8,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-bunker-eye-chamber-floor-01b.img': {
            'frame': {
                'x': 0x34e,
                'y': 0x20a,
                'w': 0x60,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x60,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x80
            }
        },
        'map-bush-06.img': {
            'frame': {
                'x': 0x20a,
                'y': 0x20a,
                'w': 0x60,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x60,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-airdrop-01h.img': {
            'frame': {
                'x': 0x26e,
                'y': 0x20a,
                'w': 0x50,
                'h': 0x50
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x50
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x50
            }
        },
        'map-bush-res-06.img': {
            'frame': {
                'x': 0x192,
                'y': 0x27a,
                'w': 0x1c,
                'h': 0x1b
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x16,
                'y': 0x17,
                'w': 0x1c,
                'h': 0x1b
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-web-01.img': {
            'frame': {
                'x': 0x1d6,
                'y': 0x2a8,
                'w': 0x4c,
                'h': 0x50
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x4c,
                'h': 0x50
            },
            'sourceSize': {
                'w': 0x4c,
                'h': 0x50
            }
        },
        'map-crate-11h.img': {
            'frame': {
                'x': 0x226,
                'y': 0x2a8,
                'w': 0x4a,
                'h': 0x4a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x4a,
                'h': 0x4a
            },
            'sourceSize': {
                'w': 0x4a,
                'h': 0x4a
            }
        },
        'map-pumpkin-01.img': {
            'frame': {
                'x': 0x274,
                'y': 0x2a8,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-pumpkin-02.img': {
            'frame': {
                'x': 0x2c0,
                'y': 0x2a8,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-bush-07sp.img': {
            'frame': {
                'x': 0x30c,
                'y': 0x2a8,
                'w': 0x47,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x0,
                'w': 0x47,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-pumpkin-res-01.img': {
            'frame': {
                'x': 0x357,
                'y': 0x2a8,
                'w': 0x47,
                'h': 0x45
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x3,
                'w': 0x47,
                'h': 0x45
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-tree-04h.img': {
            'frame': {
                'x': 0xfe,
                'y': 0x32c,
                'w': 0x38,
                'h': 0x38
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x38,
                'h': 0x38
            },
            'sourceSize': {
                'w': 0x38,
                'h': 0x38
            }
        },
        'map-pumpkin-03.img': {
            'frame': {
                'x': 0x13a,
                'y': 0x32c,
                'w': 0x33,
                'h': 0x34
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x9,
                'y': 0xb,
                'w': 0x33,
                'h': 0x34
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'part-airdrop-01h.img': {
            'frame': {
                'x': 0x171,
                'y': 0x32c,
                'w': 0x30,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x30,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x30,
                'h': 0x30
            }
        },
        'map-pumpkin-res-03.img': {
            'frame': {
                'x': 0x182,
                'y': 0x2fc,
                'w': 0x2e,
                'h': 0x2c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x3,
                'w': 0x2e,
                'h': 0x2c
            },
            'sourceSize': {
                'w': 0x30,
                'h': 0x30
            }
        },
        'part-airdrop-02h.img': {
            'frame': {
                'x': 0x166,
                'y': 0x27a,
                'w': 0x28,
                'h': 0x28
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x28,
                'h': 0x28
            },
            'sourceSize': {
                'w': 0x28,
                'h': 0x28
            }
        },
        'map-airdrop-02h.img': {
            'frame': {
                'x': 0x182,
                'y': 0x2a8,
                'w': 0x50,
                'h': 0x50
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x50
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x50
            }
        }
    }
}]
  , Zs = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22snow-0-50-351b3383.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:2,\x22w\x22:384,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:384,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:384,\x22h\x22:432}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:848,\x22h\x22:724},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:848,\x22h\x22:724},\x22sourceSize\x22:{\x22w\x22:852,\x22h\x22:724}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:730,\x22w\x22:352,\x22h\x22:402},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:352,\x22h\x22:402},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:416}},\x22map-bunker-chrys-compartment-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:358,\x22y\x22:730,\x22w\x22:401,\x22h\x22:387},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:401,\x22h\x22:387},\x22sourceSize\x22:{\x22w\x22:402,\x22h\x22:402}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:763,\x22y\x22:730,\x22w\x22:170,\x22h\x22:372},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:170,\x22h\x22:372},\x22sourceSize\x22:{\x22w\x22:196,\x22h\x22:372}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:2,\x22w\x22:353,\x22h\x22:369},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:353,\x22h\x22:369},\x22sourceSize\x22:{\x22w\x22:353,\x22h\x22:369}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1136,\x22w\x22:370,\x22h\x22:330},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:370,\x22h\x22:330},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:360}},\x22map-building-greenhouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:376,\x22y\x22:1136,\x22w\x22:417,\x22h\x22:321},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:417,\x22h\x22:321},\x22sourceSize\x22:{\x22w\x22:417,\x22h\x22:321}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:375,\x22w\x22:352,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:320}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:797,\x22y\x22:1136,\x22w\x22:466,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:466,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:466,\x22h\x22:314}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:2,\x22w\x22:386,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:386,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:386,\x22h\x22:314}},\x22map-building-greenhouse-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:320,\x22w\x22:200,\x22h\x22:312},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:312},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:312}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1803,\x22y\x22:320,\x22w\x22:114,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:114,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:322}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1470,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1921,\x22y\x22:320,\x22w\x22:30,\x22h\x22:264},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:264},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:264}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:636,\x22w\x22:352,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:256}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:894,\x22w\x22:178,\x22h\x22:186},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:186},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:186}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1781,\x22y\x22:894,\x22w\x22:160,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:180}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:1084,\x22w\x22:96,\x22h\x22:175},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:175},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:175}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1699,\x22y\x22:1084,\x22w\x22:162,\x22h\x22:174},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:162,\x22h\x22:174},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:176}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:1599,\x22y\x22:1263,\x22w\x22:178,\x22h\x22:154},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:154},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:154}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:699,\x22w\x22:216,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:216,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:152}},\x22map-stone-03x.img\x22:{\x22frame\x22:{\x22x\x22:1781,\x22y\x22:1263,\x22w\x22:141,\x22h\x22:140},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:141,\x22h\x22:140},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:855,\x22w\x22:224,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:136}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1242,\x22y\x22:995,\x22w\x22:200,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:136}},\x22map-planter-06.img\x22:{\x22frame\x22:{\x22x\x22:1865,\x22y\x22:1084,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:438,\x22w\x22:160,\x22h\x22:135},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:135},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:135}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:1018,\x22y\x22:438,\x22w\x22:178,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:130}},\x22map-tree-11.img\x22:{\x22frame\x22:{\x22x\x22:1462,\x22y\x22:699,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-tree-10.img\x22:{\x22frame\x22:{\x22x\x22:1446,\x22y\x22:995,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-chute-01x.img\x22:{\x22frame\x22:{\x22x\x22:1470,\x22y\x22:855,\x22w\x22:120,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:4,\x22w\x22:120,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:577,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-snowball-res.img\x22:{\x22frame\x22:{\x22x\x22:1921,\x22y\x22:588,\x22w\x22:35,\x22h\x22:35},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:35,\x22h\x22:35},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1955,\x22y\x22:320,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1955,\x22y\x22:436,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-snow-02.img\x22:{\x22frame\x22:{\x22x\x22:1022,\x22y\x22:577,\x22w\x22:106,\x22h\x22:106},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:11,\x22w\x22:106,\x22h\x22:106},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-stone-res-02x.img\x22:{\x22frame\x22:{\x22x\x22:1132,\x22y\x22:577,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:937,\x22y\x22:730,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1041,\x22y\x22:730,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1926,\x22y\x22:1263,\x22w\x22:56,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:96}},\x22map-bunker-chrys-compartment-floor-02c.img\x22:{\x22frame\x22:{\x22x\x22:937,\x22y\x22:834,\x22w\x22:258,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:258,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:274,\x22h\x22:90}},\x22map-snow-03.img\x22:{\x22frame\x22:{\x22x\x22:937,\x22y\x22:928,\x22w\x22:158,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:11,\x22y\x22:3,\x22w\x22:158,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:180,\x22h\x22:96}},\x22map-snow-01.img\x22:{\x22frame\x22:{\x22x\x22:1099,\x22y\x22:928,\x22w\x22:108,\x22h\x22:88},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:10,\x22y\x22:20,\x22w\x22:108,\x22h\x22:88},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-table-02x.img\x22:{\x22frame\x22:{\x22x\x22:937,\x22y\x22:1022,\x22w\x22:144,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:80}},\x22map-airdrop-01x.img\x22:{\x22frame\x22:{\x22x\x22:1142,\x22y\x22:730,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-table-03x.img\x22:{\x22frame\x22:{\x22x\x22:1085,\x22y\x22:1022,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-airdrop-02x.img\x22:{\x22frame\x22:{\x22x\x22:1267,\x22y\x22:1136,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-crate-01x.img\x22:{\x22frame\x22:{\x22x\x22:1351,\x22y\x22:1136,\x22w\x22:78,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-stone-01x.img\x22:{\x22frame\x22:{\x22x\x22:1433,\x22y\x22:1136,\x22w\x22:76,\x22h\x22:77},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:76,\x22h\x22:77},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1267,\x22y\x22:1220,\x22w\x22:84,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:14,\x22w\x22:84,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:90}},\x22map-crate-03x.img\x22:{\x22frame\x22:{\x22x\x22:1513,\x22y\x22:1136,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-crate-02x.img\x22:{\x22frame\x22:{\x22x\x22:1355,\x22y\x22:1220,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-01x.img\x22:{\x22frame\x22:{\x22x\x22:1169,\x22y\x22:1022,\x22w\x22:66,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:66,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-planter-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1941,\x22y\x22:1084,\x22w\x22:41,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:41,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:68}},\x22map-table-01x.img\x22:{\x22frame\x22:{\x22x\x22:1431,\x22y\x22:1220,\x22w\x22:80,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:64}},\x22map-stone-res-01x.img\x22:{\x22frame\x22:{\x22x\x22:1515,\x22y\x22:1220,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22map-snow-06.img\x22:{\x22frame\x22:{\x22x\x22:1267,\x22y\x22:1300,\x22w\x22:90,\x22h\x22:58},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:3,\x22w\x22:90,\x22h\x22:58},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:64}},\x22map-snow-05.img\x22:{\x22frame\x22:{\x22x\x22:1361,\x22y\x22:1300,\x22w\x22:46,\x22h\x22:54},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:5,\x22w\x22:46,\x22h\x22:54},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-chest-03x.img\x22:{\x22frame\x22:{\x22x\x22:1411,\x22y\x22:1300,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-snow-04.img\x22:{\x22frame\x22:{\x22x\x22:1485,\x22y\x22:1300,\x22w\x22:51,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:6,\x22y\x22:7,\x22w\x22:51,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:64}},\x22map-planter-07.img\x22:{\x22frame\x22:{\x22x\x22:1540,\x22y\x22:1300,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:1267,\x22y\x22:1362,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:1383,\x22y\x22:1362,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-planter-res-03.img\x22:{\x22frame\x22:{\x22x\x22:1941,\x22y\x22:1156,\x22w\x22:43,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:43,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:43}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:938,\x22y\x22:577,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}}}}]')
  , Ys = [{
    'meta': {
        'image': 'faction-0-50-b6447309.png',
        'size': {
            'w': 0x800,
            'h': 0x800
        },
        'scale': 0.5
    },
    'frames': {
        'map-building-bridge-xlg-floor.img': {
            'frame': {
                'x': 0x28e,
                'y': 0x2,
                'w': 0x4d0,
                'h': 0x1e0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x4d0,
                'h': 0x1e0
            },
            'sourceSize': {
                'w': 0x4d0,
                'h': 0x1e0
            }
        },
        'map-complex-warehouse-floor-04.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x288,
                'h': 0x400
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x288,
                'h': 0x400
            },
            'sourceSize': {
                'w': 0x288,
                'h': 0x400
            }
        },
        'map-bunker-chrys-compartment-floor-03a.img': {
            'frame': {
                'x': 0x28e,
                'y': 0x1e6,
                'w': 0x180,
                'h': 0x1b0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x180,
                'h': 0x1b0
            },
            'sourceSize': {
                'w': 0x180,
                'h': 0x1b0
            }
        },
        'map-bunker-chrys-compartment-floor-01b.img': {
            'frame': {
                'x': 0x412,
                'y': 0x1e6,
                'w': 0x191,
                'h': 0x183
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x191,
                'h': 0x183
            },
            'sourceSize': {
                'w': 0x192,
                'h': 0x192
            }
        },
        'map-building-greenhouse-floor-01.img': {
            'frame': {
                'x': 0x5a7,
                'y': 0x1e6,
                'w': 0x1a1,
                'h': 0x141
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1a1,
                'h': 0x141
            },
            'sourceSize': {
                'w': 0x1a1,
                'h': 0x141
            }
        },
        'map-bunker-chrys-chamber-floor-01b.img': {
            'frame': {
                'x': 0x2,
                'y': 0x406,
                'w': 0x1d2,
                'h': 0x13a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1d2,
                'h': 0x13a
            },
            'sourceSize': {
                'w': 0x1d2,
                'h': 0x13a
            }
        },
        'map-bunker-chrys-compartment-floor-02a.img': {
            'frame': {
                'x': 0x1d8,
                'y': 0x406,
                'w': 0x182,
                'h': 0x13a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x182,
                'h': 0x13a
            },
            'sourceSize': {
                'w': 0x182,
                'h': 0x13a
            }
        },
        'map-bunker-chrys-compartment-floor-01a.img': {
            'frame': {
                'x': 0x35e,
                'y': 0x406,
                'w': 0x72,
                'h': 0x132
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x10,
                'w': 0x72,
                'h': 0x132
            },
            'sourceSize': {
                'w': 0x72,
                'h': 0x142
            }
        },
        'map-complex-warehouse-floor-02.img': {
            'frame': {
                'x': 0x3d4,
                'y': 0x406,
                'w': 0x1e,
                'h': 0x108
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x108
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x108
            }
        },
        'map-bunker-chrys-compartment-ceiling-01b.img': {
            'frame': {
                'x': 0x3f6,
                'y': 0x406,
                'w': 0xb2,
                'h': 0xba
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0xba
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0xba
            }
        },
        'map-building-greenhouse-ceiling-01.img': {
            'frame': {
                'x': 0x4ac,
                'y': 0x406,
                'w': 0xca,
                'h': 0x9e
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xca,
                'h': 0x9e
            },
            'sourceSize': {
                'w': 0xca,
                'h': 0x9e
            }
        },
        'map-bunker-chrys-compartment-ceiling-03b.img': {
            'frame': {
                'x': 0x57a,
                'y': 0x406,
                'w': 0xb2,
                'h': 0x9a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0x9a
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0x9a
            }
        },
        'map-statue-01.img': {
            'frame': {
                'x': 0x630,
                'y': 0x406,
                'w': 0x90,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x20,
                'y': 0x20,
                'w': 0x90,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0xd0,
                'h': 0xd0
            }
        },
        'map-stone-03f.img': {
            'frame': {
                'x': 0x6c4,
                'y': 0x406,
                'w': 0x8d,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x2,
                'w': 0x8d,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bunker-chrys-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x544,
                'w': 0xe0,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x88
            }
        },
        'map-planter-03.img': {
            'frame': {
                'x': 0xe6,
                'y': 0x544,
                'w': 0x48,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x88
            }
        },
        'map-planter-01.img': {
            'frame': {
                'x': 0x132,
                'y': 0x544,
                'w': 0x48,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x88
            }
        },
        'map-planter-02.img': {
            'frame': {
                'x': 0x17e,
                'y': 0x544,
                'w': 0x48,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x88
            }
        },
        'map-bunker-chrys-compartment-ceiling-02b.img': {
            'frame': {
                'x': 0x1ca,
                'y': 0x544,
                'w': 0xb2,
                'h': 0x82
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0x82
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0x82
            }
        },
        'map-airdrop-04.img': {
            'frame': {
                'x': 0x280,
                'y': 0x544,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-bunker-chrys-compartment-ceiling-03a.img': {
            'frame': {
                'x': 0x6d1,
                'y': 0x32b,
                'w': 0x70,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0x30
            }
        },
        'map-crate-13.img': {
            'frame': {
                'x': 0x388,
                'y': 0x544,
                'w': 0x78,
                'h': 0x78
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x78,
                'h': 0x78
            },
            'sourceSize': {
                'w': 0x78,
                'h': 0x78
            }
        },
        'map-crate-12.img': {
            'frame': {
                'x': 0x404,
                'y': 0x544,
                'w': 0x78,
                'h': 0x78
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x78,
                'h': 0x78
            },
            'sourceSize': {
                'w': 0x78,
                'h': 0x78
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0x480,
                'y': 0x544,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x4d4,
                'y': 0x544,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        },
        'map-complex-warehouse-floor-03.img': {
            'frame': {
                'x': 0x528,
                'y': 0x544,
                'w': 0x1e,
                'h': 0x70
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x70
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x70
            }
        },
        'map-complex-warehouse-floor-01.img': {
            'frame': {
                'x': 0x54a,
                'y': 0x544,
                'w': 0x1e,
                'h': 0x70
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x70
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x70
            }
        },
        'map-stone-res-02f.img': {
            'frame': {
                'x': 0x28e,
                'y': 0x39a,
                'w': 0x64,
                'h': 0x64
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x64,
                'h': 0x64
            },
            'sourceSize': {
                'w': 0x64,
                'h': 0x64
            }
        },
        'map-bunker-chrys-compartment-ceiling-01a.img': {
            'frame': {
                'x': 0x2f6,
                'y': 0x39a,
                'w': 0x38,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x38,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x38,
                'h': 0x60
            }
        },
        'map-bunker-chrys-compartment-floor-02b.img': {
            'frame': {
                'x': 0x332,
                'y': 0x39a,
                'w': 0x102,
                'h': 0x5a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0x0,
                'w': 0x102,
                'h': 0x5a
            },
            'sourceSize': {
                'w': 0x112,
                'h': 0x5a
            }
        },
        'map-bunker-chrys-chamber-floor-01a.img': {
            'frame': {
                'x': 0x438,
                'y': 0x39a,
                'w': 0x54,
                'h': 0x4c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xf,
                'y': 0xe,
                'w': 0x54,
                'h': 0x4c
            },
            'sourceSize': {
                'w': 0x72,
                'h': 0x5a
            }
        },
        'map-statue-top-02.img': {
            'frame': {
                'x': 0x490,
                'y': 0x39a,
                'w': 0x8f,
                'h': 0x4a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x40,
                'y': 0x41,
                'w': 0x8f,
                'h': 0x4a
            },
            'sourceSize': {
                'w': 0xd0,
                'h': 0xd0
            }
        },
        'map-statue-top-01.img': {
            'frame': {
                'x': 0x523,
                'y': 0x39a,
                'w': 0x8f,
                'h': 0x4a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x40,
                'y': 0x41,
                'w': 0x8f,
                'h': 0x4a
            },
            'sourceSize': {
                'w': 0xd0,
                'h': 0xd0
            }
        },
        'map-crate-02f.img': {
            'frame': {
                'x': 0x5b6,
                'y': 0x39a,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-crate-22.img': {
            'frame': {
                'x': 0x602,
                'y': 0x39a,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-planter-res-01.img': {
            'frame': {
                'x': 0x64e,
                'y': 0x39a,
                'w': 0x29,
                'h': 0x44
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x0,
                'w': 0x29,
                'h': 0x44
            },
            'sourceSize': {
                'w': 0x2b,
                'h': 0x44
            }
        },
        'map-chest-03f.img': {
            'frame': {
                'x': 0x5a7,
                'y': 0x32b,
                'w': 0x46,
                'h': 0x33
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x46,
                'h': 0x33
            },
            'sourceSize': {
                'w': 0x46,
                'h': 0x33
            }
        },
        'map-planter-04.img': {
            'frame': {
                'x': 0x5f1,
                'y': 0x32b,
                'w': 0x32,
                'h': 0x32
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x32,
                'h': 0x32
            },
            'sourceSize': {
                'w': 0x32,
                'h': 0x32
            }
        },
        'map-planter-05.img': {
            'frame': {
                'x': 0x627,
                'y': 0x32b,
                'w': 0x32,
                'h': 0x32
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x32,
                'h': 0x32
            },
            'sourceSize': {
                'w': 0x32,
                'h': 0x32
            }
        },
        'map-bunker-chrys-compartment-ceiling-02a.img': {
            'frame': {
                'x': 0x65d,
                'y': 0x32b,
                'w': 0x70,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0x30
            }
        },
        'map-airdrop-03.img': {
            'frame': {
                'x': 0x304,
                'y': 0x544,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        }
    }
}]
  , Js = [{
    'meta': {
        'image': 'desert-0-50-978893d6.png',
        'size': {
            'w': 0x800,
            'h': 0x800
        },
        'scale': 0.5
    },
    'frames': {
        'map-complex-warehouse-floor-05.img': {
            'frame': {
                'x': 0x296,
                'y': 0x2,
                'w': 0x106,
                'h': 0x1d6
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x1f6,
                'w': 0x106,
                'h': 0x1d6
            },
            'sourceSize': {
                'w': 0x288,
                'h': 0x400
            }
        },
        'map-building-saloon-floor-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x290,
                'h': 0x290
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x290,
                'h': 0x290
            },
            'sourceSize': {
                'w': 0x290,
                'h': 0x290
            }
        },
        'map-bunker-chrys-compartment-floor-03a.img': {
            'frame': {
                'x': 0x3a0,
                'y': 0x2,
                'w': 0x180,
                'h': 0x1b0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x180,
                'h': 0x1b0
            },
            'sourceSize': {
                'w': 0x180,
                'h': 0x1b0
            }
        },
        'map-bunker-chrys-compartment-floor-01c.img': {
            'frame': {
                'x': 0x2,
                'y': 0x296,
                'w': 0x191,
                'h': 0x183
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x191,
                'h': 0x183
            },
            'sourceSize': {
                'w': 0x192,
                'h': 0x192
            }
        },
        'map-building-saloon-cellar-01.img': {
            'frame': {
                'x': 0x197,
                'y': 0x296,
                'w': 0x210,
                'h': 0x150
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x210,
                'h': 0x150
            },
            'sourceSize': {
                'w': 0x210,
                'h': 0x150
            }
        },
        'map-building-greenhouse-floor-02.img': {
            'frame': {
                'x': 0x524,
                'y': 0x2,
                'w': 0x1a1,
                'h': 0x141
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1a1,
                'h': 0x141
            },
            'sourceSize': {
                'w': 0x1a1,
                'h': 0x141
            }
        },
        'map-bunker-chrys-chamber-floor-01b.img': {
            'frame': {
                'x': 0x2,
                'y': 0x41d,
                'w': 0x1d2,
                'h': 0x13a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1d2,
                'h': 0x13a
            },
            'sourceSize': {
                'w': 0x1d2,
                'h': 0x13a
            }
        },
        'map-bunker-chrys-compartment-floor-02a.img': {
            'frame': {
                'x': 0x524,
                'y': 0x147,
                'w': 0x182,
                'h': 0x13a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x182,
                'h': 0x13a
            },
            'sourceSize': {
                'w': 0x182,
                'h': 0x13a
            }
        },
        'map-building-saloon-ceiling-01.img': {
            'frame': {
                'x': 0x524,
                'y': 0x285,
                'w': 0x13a,
                'h': 0x139
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x13a,
                'h': 0x139
            },
            'sourceSize': {
                'w': 0x148,
                'h': 0x148
            }
        },
        'map-building-greenhouse-ceiling-02.img': {
            'frame': {
                'x': 0x3ab,
                'y': 0x296,
                'w': 0xc8,
                'h': 0x138
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xc8,
                'h': 0x138
            },
            'sourceSize': {
                'w': 0xc8,
                'h': 0x138
            }
        },
        'map-bunker-chrys-compartment-floor-01a.img': {
            'frame': {
                'x': 0x477,
                'y': 0x296,
                'w': 0x72,
                'h': 0x132
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x10,
                'w': 0x72,
                'h': 0x132
            },
            'sourceSize': {
                'w': 0x72,
                'h': 0x142
            }
        },
        'map-bunker-statue-chamber-floor-01.img': {
            'frame': {
                'x': 0x1d8,
                'y': 0x41d,
                'w': 0x7e,
                'h': 0x111
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0xe,
                'w': 0x7e,
                'h': 0x111
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x120
            }
        },
        'map-tree-05c.img': {
            'frame': {
                'x': 0x25a,
                'y': 0x41d,
                'w': 0xee,
                'h': 0xfa
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x9,
                'y': 0x3,
                'w': 0xee,
                'h': 0xfa
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-bunker-chrys-compartment-ceiling-01b.img': {
            'frame': {
                'x': 0x3a0,
                'y': 0x1b6,
                'w': 0xb2,
                'h': 0xba
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0xba
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0xba
            }
        },
        'map-bunker-chrys-compartment-ceiling-03b.img': {
            'frame': {
                'x': 0x456,
                'y': 0x1b6,
                'w': 0xb2,
                'h': 0x9a
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0x9a
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0x9a
            }
        },
        'map-statue-03.img': {
            'frame': {
                'x': 0x296,
                'y': 0x1dc,
                'w': 0x93,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x20,
                'y': 0x20,
                'w': 0x93,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0xd0,
                'h': 0xd0
            }
        },
        'map-statue-04.img': {
            'frame': {
                'x': 0x34c,
                'y': 0x41d,
                'w': 0x93,
                'h': 0x90
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x20,
                'y': 0x20,
                'w': 0x93,
                'h': 0x90
            },
            'sourceSize': {
                'w': 0xd0,
                'h': 0xd0
            }
        },
        'map-stone-03b.img': {
            'frame': {
                'x': 0x3e3,
                'y': 0x41d,
                'w': 0x8d,
                'h': 0x8c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x2,
                'w': 0x8d,
                'h': 0x8c
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x90
            }
        },
        'map-bunker-chrys-chamber-ceiling-01.img': {
            'frame': {
                'x': 0x474,
                'y': 0x41d,
                'w': 0xe0,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xe0,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0xe0,
                'h': 0x88
            }
        },
        'map-planter-06.img': {
            'frame': {
                'x': 0x662,
                'y': 0x285,
                'w': 0x48,
                'h': 0x88
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x88
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x88
            }
        },
        'map-bunker-chrys-compartment-ceiling-02b.img': {
            'frame': {
                'x': 0x558,
                'y': 0x41d,
                'w': 0xb2,
                'h': 0x82
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb2,
                'h': 0x82
            },
            'sourceSize': {
                'w': 0xb2,
                'h': 0x82
            }
        },
        'map-tree-06.img': {
            'frame': {
                'x': 0x60e,
                'y': 0x41d,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-bush-res-05.img': {
            'frame': {
                'x': 0x456,
                'y': 0x254,
                'w': 0x20,
                'h': 0x1c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x14,
                'y': 0x16,
                'w': 0x20,
                'h': 0x1c
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x32d,
                'y': 0x1dc,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        },
        'map-bunker-chrys-compartment-ceiling-01a.img': {
            'frame': {
                'x': 0x34c,
                'y': 0x4b1,
                'w': 0x38,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x38,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x38,
                'h': 0x60
            }
        },
        'map-bunker-chrys-compartment-floor-02c.img': {
            'frame': {
                'x': 0x388,
                'y': 0x4b1,
                'w': 0x102,
                'h': 0x5a
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0x0,
                'w': 0x102,
                'h': 0x5a
            },
            'sourceSize': {
                'w': 0x112,
                'h': 0x5a
            }
        },
        'map-building-saloon-ceiling-02.img': {
            'frame': {
                'x': 0x524,
                'y': 0x3c2,
                'w': 0x60,
                'h': 0x50
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x60,
                'h': 0x50
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x50
            }
        },
        'map-bunker-chrys-chamber-floor-01a.img': {
            'frame': {
                'x': 0x588,
                'y': 0x3c2,
                'w': 0x54,
                'h': 0x4c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0xf,
                'y': 0xe,
                'w': 0x54,
                'h': 0x4c
            },
            'sourceSize': {
                'w': 0x72,
                'h': 0x5a
            }
        },
        'map-crate-22.img': {
            'frame': {
                'x': 0x5e0,
                'y': 0x3c2,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-bush-05.img': {
            'frame': {
                'x': 0x62c,
                'y': 0x3c2,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-crate-02f.img': {
            'frame': {
                'x': 0x678,
                'y': 0x3c2,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-crate-18.img': {
            'frame': {
                'x': 0x48e,
                'y': 0x4b1,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-planter-res-02.img': {
            'frame': {
                'x': 0x4ed,
                'y': 0x296,
                'w': 0x29,
                'h': 0x44
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x0,
                'w': 0x29,
                'h': 0x44
            },
            'sourceSize': {
                'w': 0x2b,
                'h': 0x44
            }
        },
        'map-building-archway-ceiling-01.img': {
            'frame': {
                'x': 0x4da,
                'y': 0x4b1,
                'w': 0x150,
                'h': 0x40
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x150,
                'h': 0x40
            },
            'sourceSize': {
                'w': 0x150,
                'h': 0x40
            }
        },
        'map-stone-06.img': {
            'frame': {
                'x': 0x62e,
                'y': 0x4b1,
                'w': 0x90,
                'h': 0x40
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x90,
                'h': 0x40
            },
            'sourceSize': {
                'w': 0x90,
                'h': 0x40
            }
        },
        'map-case-meteor-res-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x55b,
                'w': 0x43,
                'h': 0x3c
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0x4,
                'w': 0x43,
                'h': 0x3c
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-stone-res-01b.img': {
            'frame': {
                'x': 0x49,
                'y': 0x55b,
                'w': 0x3c,
                'h': 0x3c
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x3c,
                'h': 0x3c
            },
            'sourceSize': {
                'w': 0x3c,
                'h': 0x3c
            }
        },
        'map-chest-03d.img': {
            'frame': {
                'x': 0x662,
                'y': 0x388,
                'w': 0x46,
                'h': 0x33
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x46,
                'h': 0x33
            },
            'sourceSize': {
                'w': 0x46,
                'h': 0x33
            }
        },
        'map-case-meteor-01.img': {
            'frame': {
                'x': 0x89,
                'y': 0x55b,
                'w': 0x46,
                'h': 0x33
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x46,
                'h': 0x33
            },
            'sourceSize': {
                'w': 0x46,
                'h': 0x33
            }
        },
        'map-planter-07.img': {
            'frame': {
                'x': 0x4ed,
                'y': 0x2de,
                'w': 0x32,
                'h': 0x32
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x32,
                'h': 0x32
            },
            'sourceSize': {
                'w': 0x32,
                'h': 0x32
            }
        },
        'map-archway-res-01.img': {
            'frame': {
                'x': 0xd3,
                'y': 0x55b,
                'w': 0xb4,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xb4,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0xb4,
                'h': 0x30
            }
        },
        'map-bunker-chrys-compartment-ceiling-02a.img': {
            'frame': {
                'x': 0x18b,
                'y': 0x55b,
                'w': 0x70,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0x30
            }
        },
        'map-bunker-chrys-compartment-ceiling-03a.img': {
            'frame': {
                'x': 0x1ff,
                'y': 0x55b,
                'w': 0x70,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x70,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x70,
                'h': 0x30
            }
        },
        'map-planter-res-03.img': {
            'frame': {
                'x': 0x4ed,
                'y': 0x314,
                'w': 0x2b,
                'h': 0x28
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x2,
                'w': 0x2b,
                'h': 0x28
            },
            'sourceSize': {
                'w': 0x2b,
                'h': 0x2b
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0x662,
                'y': 0x311,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        }
    }
}]
  , Ks = [{
    'meta': {
        'image': 'gradient-0-50-6480bd5e.png',
        'size': {
            'w': 0x200,
            'h': 0x200
        },
        'scale': 0.5
    },
    'frames': {
        'map-barrel-res-01.img': {
            'frame': {
                'x': 0x7c,
                'y': 0x2,
                'w': 0x72,
                'h': 0x6d
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x7,
                'y': 0xa,
                'w': 0x72,
                'h': 0x6d
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-building-club-gradient-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x76,
                'h': 0x82
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x10,
                'y': 0x4,
                'w': 0x76,
                'h': 0x82
            },
            'sourceSize': {
                'w': 0x92,
                'h': 0x8c
            }
        },
        'map-building-mansion-gradient-01.img': {
            'frame': {
                'x': 0x2,
                'y': 0x88,
                'w': 0x76,
                'h': 0x66
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x4,
                'w': 0x76,
                'h': 0x66
            },
            'sourceSize': {
                'w': 0x7c,
                'h': 0x6e
            }
        },
        'map-plane-01.img': {
            'frame': {
                'x': 0x7c,
                'y': 0x88,
                'w': 0x5c,
                'h': 0x66
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x12,
                'y': 0x5,
                'w': 0x5c,
                'h': 0x66
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-plane-02.img': {
            'frame': {
                'x': 0xf2,
                'y': 0x2,
                'w': 0x2a,
                'h': 0x55
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2b,
                'y': 0x1,
                'w': 0x2a,
                'h': 0x55
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-bush-04cb.img': {
            'frame': {
                'x': 0x93,
                'y': 0xf2,
                'w': 0x47,
                'h': 0x43
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x4,
                'w': 0x47,
                'h': 0x43
            },
            'sourceSize': {
                'w': 0x4b,
                'h': 0x4b
            }
        },
        'map-bush-01cb.img': {
            'frame': {
                'x': 0x120,
                'y': 0x52,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-light-01.img': {
            'frame': {
                'x': 0x120,
                'y': 0x9e,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-bush-04.img': {
            'frame': {
                'x': 0x2,
                'y': 0xf2,
                'w': 0x47,
                'h': 0x44
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x3,
                'w': 0x47,
                'h': 0x44
            },
            'sourceSize': {
                'w': 0x4b,
                'h': 0x4b
            }
        },
        'map-bush-01.img': {
            'frame': {
                'x': 0x4d,
                'y': 0xf2,
                'w': 0x42,
                'h': 0x44
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x2,
                'w': 0x42,
                'h': 0x44
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-bush-03.img': {
            'frame': {
                'x': 0x120,
                'y': 0x2,
                'w': 0x4c,
                'h': 0x4c
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x4c,
                'h': 0x4c
            },
            'sourceSize': {
                'w': 0x4c,
                'h': 0x4c
            }
        }
    }
}]
  , Xs = [{
    'meta': {
        'image': 'savannah-0-50-d5ec1868.png',
        'size': {
            'w': 0x400,
            'h': 0x400
        },
        'scale': 0.5
    },
    'frames': {
        'map-tree-12.img': {
            'frame': {
                'x': 0x24,
                'y': 0x2,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-complex-warehouse-floor-02.img': {
            'frame': {
                'x': 0x2,
                'y': 0x2,
                'w': 0x1e,
                'h': 0x108
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x108
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x108
            }
        },
        'map-stone-07.img': {
            'frame': {
                'x': 0x128,
                'y': 0x2,
                'w': 0x100,
                'h': 0x100
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x100,
                'h': 0x100
            },
            'sourceSize': {
                'w': 0x100,
                'h': 0x100
            }
        },
        'map-stone-res-07.img': {
            'frame': {
                'x': 0x2,
                'y': 0x10e,
                'w': 0xce,
                'h': 0xce
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x2,
                'y': 0x2,
                'w': 0xce,
                'h': 0xce
            },
            'sourceSize': {
                'w': 0xd2,
                'h': 0xd2
            }
        },
        'map-building-perch-ceiling.img': {
            'frame': {
                'x': 0xd4,
                'y': 0x10e,
                'w': 0xb9,
                'h': 0xb0
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x5,
                'y': 0xa,
                'w': 0xb9,
                'h': 0xb0
            },
            'sourceSize': {
                'w': 0xc8,
                'h': 0xc0
            }
        },
        'map-building-perch-floor.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x2,
                'w': 0xc8,
                'h': 0xa0
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0xc8,
                'h': 0xa0
            },
            'sourceSize': {
                'w': 0xc8,
                'h': 0xa0
            }
        },
        'map-tree-03sv.img': {
            'frame': {
                'x': 0x22c,
                'y': 0xa6,
                'w': 0x80,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x80,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-wall-08-grassy.img': {
            'frame': {
                'x': 0x2b0,
                'y': 0xa6,
                'w': 0x1a,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1a,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x20,
                'h': 0x80
            }
        },
        'map-wall-08-grassy-res.img': {
            'frame': {
                'x': 0x2ce,
                'y': 0xa6,
                'w': 0xe,
                'h': 0x80
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x9,
                'y': 0x0,
                'w': 0xe,
                'h': 0x80
            },
            'sourceSize': {
                'w': 0x20,
                'h': 0x80
            }
        },
        'map-bunker-generic-ceiling-02.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x12a,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        },
        'map-bunker-generic-floor-03.img': {
            'frame': {
                'x': 0x280,
                'y': 0x12a,
                'w': 0x50,
                'h': 0x73
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x50,
                'h': 0x73
            },
            'sourceSize': {
                'w': 0x50,
                'h': 0x73
            }
        },
        'map-complex-warehouse-floor-01.img': {
            'frame': {
                'x': 0x2d4,
                'y': 0x12a,
                'w': 0x1e,
                'h': 0x70
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x70
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x70
            }
        },
        'map-bush-res-01sv.img': {
            'frame': {
                'x': 0x2b2,
                'y': 0x1a1,
                'w': 0x1a,
                'h': 0x14
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x17,
                'y': 0x1a,
                'w': 0x1a,
                'h': 0x14
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-brush-01sv.img': {
            'frame': {
                'x': 0x1b3,
                'y': 0x10e,
                'w': 0x60,
                'h': 0x60
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x60,
                'h': 0x60
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-brush-02sv.img': {
            'frame': {
                'x': 0x2,
                'y': 0x1e0,
                'w': 0x5e,
                'h': 0x5e
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x1,
                'y': 0x1,
                'w': 0x5e,
                'h': 0x5e
            },
            'sourceSize': {
                'w': 0x60,
                'h': 0x60
            }
        },
        'map-perch-res-01.img': {
            'frame': {
                'x': 0x64,
                'y': 0x1e0,
                'w': 0x5c,
                'h': 0x52
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x12,
                'y': 0x17,
                'w': 0x5c,
                'h': 0x52
            },
            'sourceSize': {
                'w': 0x80,
                'h': 0x80
            }
        },
        'map-bush-01sv.img': {
            'frame': {
                'x': 0xc4,
                'y': 0x1e0,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-crate-21.img': {
            'frame': {
                'x': 0x110,
                'y': 0x1e0,
                'w': 0x48,
                'h': 0x48
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x48,
                'h': 0x48
            },
            'sourceSize': {
                'w': 0x48,
                'h': 0x48
            }
        },
        'map-propane-01.img': {
            'frame': {
                'x': 0x22c,
                'y': 0x1a1,
                'w': 0x30,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x30,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x30,
                'h': 0x30
            }
        },
        'map-wall-03-grassy.img': {
            'frame': {
                'x': 0x2e0,
                'y': 0xa6,
                'w': 0x14,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x6,
                'y': 0x0,
                'w': 0x14,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x20,
                'h': 0x30
            }
        },
        'map-wall-03-grassy-res.img': {
            'frame': {
                'x': 0x2e0,
                'y': 0xda,
                'w': 0xe,
                'h': 0x30
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x9,
                'y': 0x0,
                'w': 0xe,
                'h': 0x30
            },
            'sourceSize': {
                'w': 0x20,
                'h': 0x30
            }
        },
        'map-tree-res-12.img': {
            'frame': {
                'x': 0x260,
                'y': 0x1a1,
                'w': 0x2a,
                'h': 0x26
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x3,
                'y': 0x5,
                'w': 0x2a,
                'h': 0x26
            },
            'sourceSize': {
                'w': 0x30,
                'h': 0x30
            }
        },
        'map-brush-res-02sv.img': {
            'frame': {
                'x': 0x28e,
                'y': 0x1a1,
                'w': 0x20,
                'h': 0x21
            },
            'rotated': !0x1,
            'trimmed': !0x0,
            'spriteSourceSize': {
                'x': 0x8,
                'y': 0x7,
                'w': 0x20,
                'h': 0x21
            },
            'sourceSize': {
                'w': 0x30,
                'h': 0x30
            }
        },
        'map-complex-warehouse-floor-03.img': {
            'frame': {
                'x': 0x191,
                'y': 0x10e,
                'w': 0x1e,
                'h': 0x70
            },
            'rotated': !0x1,
            'trimmed': !0x1,
            'spriteSourceSize': {
                'x': 0x0,
                'y': 0x0,
                'w': 0x1e,
                'h': 0x70
            },
            'sourceSize': {
                'w': 0x1e,
                'h': 0x70
            }
        }
    }
}]
  , eo = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22main-0-50-ce7d0d26.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:2,\x22w\x22:752,\x22h\x22:464},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:752,\x22h\x22:464},\x22sourceSize\x22:{\x22w\x22:752,\x22h\x22:464}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:848,\x22h\x22:724},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:848,\x22h\x22:724},\x22sourceSize\x22:{\x22w\x22:852,\x22h\x22:724}},\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:730,\x22w\x22:384,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:384,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:384,\x22h\x22:432}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:390,\x22y\x22:730,\x22w\x22:352,\x22h\x22:402},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:352,\x22h\x22:402},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:416}},\x22map-bunker-chrys-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:746,\x22y\x22:730,\x22w\x22:401,\x22h\x22:387},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:401,\x22h\x22:387},\x22sourceSize\x22:{\x22w\x22:402,\x22h\x22:402}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1151,\x22y\x22:730,\x22w\x22:170,\x22h\x22:372},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:170,\x22h\x22:372},\x22sourceSize\x22:{\x22w\x22:196,\x22h\x22:372}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1166,\x22w\x22:353,\x22h\x22:369},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:353,\x22h\x22:369},\x22sourceSize\x22:{\x22w\x22:353,\x22h\x22:369}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:359,\x22y\x22:1166,\x22w\x22:370,\x22h\x22:330},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:370,\x22h\x22:330},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:360}},\x22map-building-greenhouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:1166,\x22w\x22:417,\x22h\x22:321},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:417,\x22h\x22:321},\x22sourceSize\x22:{\x22w\x22:417,\x22h\x22:321}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1154,\x22y\x22:1166,\x22w\x22:352,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:320}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1539,\x22w\x22:466,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:466,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:466,\x22h\x22:314}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:472,\x22y\x22:1539,\x22w\x22:386,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:386,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:386,\x22h\x22:314}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1325,\x22y\x22:730,\x22w\x22:114,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:114,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:322}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:862,\x22y\x22:1539,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1443,\x22y\x22:730,\x22w\x22:160,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:304}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1510,\x22y\x22:1166,\x22w\x22:30,\x22h\x22:264},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:264},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:264}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:470,\x22w\x22:352,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:256}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1210,\x22y\x22:470,\x22w\x22:360,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:248}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1298,\x22y\x22:1539,\x22w\x22:178,\x22h\x22:186},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:186},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:186}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:2,\x22w\x22:160,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:180}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1857,\x22w\x22:915,\x22h\x22:177},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:915,\x22h\x22:177},\x22sourceSize\x22:{\x22w\x22:915,\x22h\x22:177}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:186,\x22w\x22:96,\x22h\x22:175},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:175},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:175}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:921,\x22y\x22:1857,\x22w\x22:162,\x22h\x22:174},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:162,\x22h\x22:174},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:176}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:365,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-building-greenhouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1087,\x22y\x22:1857,\x22w\x22:202,\x22h\x22:158},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:202,\x22h\x22:158},\x22sourceSize\x22:{\x22w\x22:202,\x22h\x22:158}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1190,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1475,\x22y\x22:1857,\x22w\x22:216,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:216,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:152}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:529,\x22w\x22:64,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:152}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:2,\x22w\x22:224,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:136}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:142,\x22w\x22:200,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:136}},\x22map-planter-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-planter-02.img\x22:{\x22frame\x22:{\x22x\x22:1850,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-planter-01.img\x22:{\x22frame\x22:{\x22x\x22:1926,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:422,\x22w\x22:160,\x22h\x22:135},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:135},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:135}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:561,\x22w\x22:178,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:130}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:695,\x22w\x22:100,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:100,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1878,\x22y\x22:695,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:816,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1938,\x22y\x22:422,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1956,\x22y\x22:561,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:1858,\x22y\x22:816,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1298,\x22y\x22:1729,\x22w\x22:289,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:289,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:305,\x22h\x22:97}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:935,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:97}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1875,\x22y\x22:935,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1036,\x22w\x22:56,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:96}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1834,\x22y\x22:1036,\x22w\x22:84,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:14,\x22w\x22:84,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:90}},\x22map-planter-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1922,\x22y\x22:1036,\x22w\x22:41,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:41,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:68}},\x22map-planter-04.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1136,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-planter-05.img\x22:{\x22frame\x22:{\x22x\x22:1828,\x22y\x22:1136,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:1882,\x22y\x22:1136,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:1293,\x22y\x22:1857,\x22w\x22:178,\x22h\x22:154},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:154},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:154}}}},{\x22meta\x22:{\x22image\x22:\x22main-1-50-8d63890d.png\x22,\x22size\x22:{\x22w\x22:1024,\x22h\x22:512},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:354,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:158,\x22w\x22:354,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:135,\x22w\x22:354,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:161,\x22w\x22:354,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:360,\x22y\x22:2,\x22w\x22:568,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:568,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:568,\x22h\x22:120}},\x22map-bunker-chrys-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:360,\x22y\x22:126,\x22w\x22:258,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:258,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:274,\x22h\x22:90}}}}]')
  , to = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22potato-0-50-85f694d4.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:2,\x22w\x22:752,\x22h\x22:464},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:752,\x22h\x22:464},\x22sourceSize\x22:{\x22w\x22:752,\x22h\x22:464}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:848,\x22h\x22:724},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:848,\x22h\x22:724},\x22sourceSize\x22:{\x22w\x22:852,\x22h\x22:724}},\x22map-bunker-chrys-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:730,\x22w\x22:384,\x22h\x22:432},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:384,\x22h\x22:432},\x22sourceSize\x22:{\x22w\x22:384,\x22h\x22:432}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:390,\x22y\x22:730,\x22w\x22:352,\x22h\x22:402},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:352,\x22h\x22:402},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:416}},\x22map-bunker-chrys-compartment-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:746,\x22y\x22:730,\x22w\x22:401,\x22h\x22:387},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:401,\x22h\x22:387},\x22sourceSize\x22:{\x22w\x22:402,\x22h\x22:402}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1151,\x22y\x22:730,\x22w\x22:170,\x22h\x22:372},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:170,\x22h\x22:372},\x22sourceSize\x22:{\x22w\x22:196,\x22h\x22:372}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1166,\x22w\x22:353,\x22h\x22:369},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:353,\x22h\x22:369},\x22sourceSize\x22:{\x22w\x22:353,\x22h\x22:369}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:359,\x22y\x22:1166,\x22w\x22:370,\x22h\x22:330},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:370,\x22h\x22:330},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:360}},\x22map-building-greenhouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:1166,\x22w\x22:417,\x22h\x22:321},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:417,\x22h\x22:321},\x22sourceSize\x22:{\x22w\x22:417,\x22h\x22:321}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1154,\x22y\x22:1166,\x22w\x22:352,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:320}},\x22map-bunker-chrys-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1539,\x22w\x22:466,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:466,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:466,\x22h\x22:314}},\x22map-bunker-chrys-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:472,\x22y\x22:1539,\x22w\x22:386,\x22h\x22:314},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:386,\x22h\x22:314},\x22sourceSize\x22:{\x22w\x22:386,\x22h\x22:314}},\x22map-bunker-chrys-compartment-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1325,\x22y\x22:730,\x22w\x22:114,\x22h\x22:306},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:16,\x22w\x22:114,\x22h\x22:306},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:322}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:862,\x22y\x22:1539,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1443,\x22y\x22:730,\x22w\x22:160,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:304}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1510,\x22y\x22:1166,\x22w\x22:30,\x22h\x22:264},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:264},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:264}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:470,\x22w\x22:352,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:256}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1210,\x22y\x22:470,\x22w\x22:360,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:248}},\x22map-bunker-chrys-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:1298,\x22y\x22:1539,\x22w\x22:178,\x22h\x22:186},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:186},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:186}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:2,\x22w\x22:160,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:180}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1857,\x22w\x22:915,\x22h\x22:177},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:915,\x22h\x22:177},\x22sourceSize\x22:{\x22w\x22:915,\x22h\x22:177}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:186,\x22w\x22:96,\x22h\x22:175},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:175},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:175}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:921,\x22y\x22:1857,\x22w\x22:162,\x22h\x22:174},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:162,\x22h\x22:174},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:176}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:365,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-building-greenhouse-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1087,\x22y\x22:1857,\x22w\x22:202,\x22h\x22:158},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:202,\x22h\x22:158},\x22sourceSize\x22:{\x22w\x22:202,\x22h\x22:158}},\x22map-bunker-chrys-compartment-ceiling-03b.img\x22:{\x22frame\x22:{\x22x\x22:1293,\x22y\x22:1857,\x22w\x22:178,\x22h\x22:154},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:154},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:154}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1475,\x22y\x22:1857,\x22w\x22:216,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:216,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:152}},\x22map-potato-03.img\x22:{\x22frame\x22:{\x22x\x22:1962,\x22y\x22:816,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22map-bunker-chrys-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:2,\x22w\x22:224,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:224,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:224,\x22h\x22:136}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:142,\x22w\x22:200,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:136}},\x22map-planter-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-planter-02.img\x22:{\x22frame\x22:{\x22x\x22:1850,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-planter-01.img\x22:{\x22frame\x22:{\x22x\x22:1926,\x22y\x22:282,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:422,\x22w\x22:160,\x22h\x22:135},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:135},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:135}},\x22map-bunker-chrys-compartment-ceiling-02b.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:561,\x22w\x22:178,\x22h\x22:130},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:178,\x22h\x22:130},\x22sourceSize\x22:{\x22w\x22:178,\x22h\x22:130}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:695,\x22w\x22:100,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:100,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1878,\x22y\x22:695,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:816,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1938,\x22y\x22:422,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1956,\x22y\x22:561,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:1858,\x22y\x22:816,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1298,\x22y\x22:1729,\x22w\x22:289,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:289,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:305,\x22h\x22:97}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:935,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:1875,\x22y\x22:935,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:97}},\x22map-bunker-chrys-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1036,\x22w\x22:56,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:96}},\x22map-bunker-chrys-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1834,\x22y\x22:1036,\x22w\x22:84,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:15,\x22y\x22:14,\x22w\x22:84,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:114,\x22h\x22:90}},\x22map-planter-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1922,\x22y\x22:1036,\x22w\x22:41,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:41,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:68}},\x22map-planter-05.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1136,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-planter-04.img\x22:{\x22frame\x22:{\x22x\x22:1828,\x22y\x22:1136,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-bunker-chrys-compartment-ceiling-02a.img\x22:{\x22frame\x22:{\x22x\x22:1882,\x22y\x22:1136,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-bunker-chrys-compartment-ceiling-03a.img\x22:{\x22frame\x22:{\x22x\x22:1774,\x22y\x22:1190,\x22w\x22:112,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:112,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:112,\x22h\x22:48}},\x22map-potato-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1890,\x22y\x22:1190,\x22w\x22:46,\x22h\x22:45},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:13,\x22y\x22:16,\x22w\x22:46,\x22h\x22:45},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-potato-01.img\x22:{\x22frame\x22:{\x22x\x22:1962,\x22y\x22:695,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22map-potato-02.img\x22:{\x22frame\x22:{\x22x\x22:1962,\x22y\x22:735,\x22w\x22:36,\x22h\x22:36},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:36,\x22h\x22:36},\x22sourceSize\x22:{\x22w\x22:36,\x22h\x22:36}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1610,\x22y\x22:529,\x22w\x22:64,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:152}}}},{\x22meta\x22:{\x22image\x22:\x22potato-1-50-8d63890d.png\x22,\x22size\x22:{\x22w\x22:1024,\x22h\x22:512},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:354,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:158,\x22w\x22:354,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:135,\x22w\x22:354,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:161,\x22w\x22:354,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:360,\x22y\x22:2,\x22w\x22:568,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:568,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:568,\x22h\x22:120}},\x22map-bunker-chrys-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:360,\x22y\x22:126,\x22w\x22:258,\x22h\x22:90},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:8,\x22y\x22:0,\x22w\x22:258,\x22h\x22:90},\x22sourceSize\x22:{\x22w\x22:274,\x22h\x22:90}}}}]')
  , io = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22woods-0-50-8fe970b8.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-hatchet-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:358,\x22y\x22:2,\x22w\x22:592,\x22h\x22:463},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:592,\x22h\x22:463},\x22sourceSize\x22:{\x22w\x22:592,\x22h\x22:464}},\x22map-bunker-eye-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:352,\x22h\x22:674},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:352,\x22h\x22:674},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:688}},\x22map-bunker-eye-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:954,\x22y\x22:2,\x22w\x22:352,\x22h\x22:352},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:352},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:352}},\x22map-bunker-hatchet-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:680,\x22w\x22:365,\x22h\x22:349},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:365,\x22h\x22:349},\x22sourceSize\x22:{\x22w\x22:369,\x22h\x22:353}},\x22map-bunker-hatchet-compartment-floor-02c.img\x22:{\x22frame\x22:{\x22x\x22:371,\x22y\x22:680,\x22w\x22:128,\x22h\x22:328},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:128,\x22h\x22:328},\x22sourceSize\x22:{\x22w\x22:129,\x22h\x22:337}},\x22map-building-pavilion-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:954,\x22y\x22:358,\x22w\x22:315,\x22h\x22:308},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:6,\x22w\x22:315,\x22h\x22:308},\x22sourceSize\x22:{\x22w\x22:320,\x22h\x22:320}},\x22map-bunker-hatchet-compartment-floor-02a.img\x22:{\x22frame\x22:{\x22x\x22:503,\x22y\x22:680,\x22w\x22:449,\x22h\x22:296},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:449,\x22h\x22:296},\x22sourceSize\x22:{\x22w\x22:449,\x22h\x22:297}},\x22map-building-pavilion-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:956,\x22y\x22:680,\x22w\x22:288,\x22h\x22:288},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:288,\x22h\x22:288},\x22sourceSize\x22:{\x22w\x22:288,\x22h\x22:288}},\x22map-bunker-eye-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1033,\x22w\x22:160,\x22h\x22:272},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:272},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:272}},\x22map-tree-08.img\x22:{\x22frame\x22:{\x22x\x22:166,\x22y\x22:1033,\x22w\x22:256,\x22h\x22:256},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:256},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-hatchet-compartment-floor-03b.img\x22:{\x22frame\x22:{\x22x\x22:426,\x22y\x22:1033,\x22w\x22:367,\x22h\x22:255},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:367,\x22h\x22:255},\x22sourceSize\x22:{\x22w\x22:369,\x22h\x22:257}},\x22map-bunker-hatchet-compartment-floor-03d.img\x22:{\x22frame\x22:{\x22x\x22:797,\x22y\x22:1033,\x22w\x22:191,\x22h\x22:255},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:191,\x22h\x22:255},\x22sourceSize\x22:{\x22w\x22:193,\x22h\x22:265}},\x22map-bunker-hatchet-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:992,\x22y\x22:1033,\x22w\x22:256,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:248}},\x22map-tree-05.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:2,\x22w\x22:248,\x22h\x22:243},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:7,\x22w\x22:248,\x22h\x22:243},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-bunker-hatchet-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:358,\x22y\x22:469,\x22w\x22:256,\x22h\x22:200},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:200},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:200}},\x22map-bunker-hatchet-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:249,\x22w\x22:113,\x22h\x22:185},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:4,\x22w\x22:113,\x22h\x22:185},\x22sourceSize\x22:{\x22w\x22:113,\x22h\x22:193}},\x22map-bunker-hatchet-compartment-floor-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1309,\x22w\x22:336,\x22h\x22:161},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:336,\x22h\x22:161},\x22sourceSize\x22:{\x22w\x22:345,\x22h\x22:161}},\x22map-bunker-eye-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:438,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-bunker-hatchet-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:618,\x22y\x22:469,\x22w\x22:304,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:304,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:304,\x22h\x22:152}},\x22map-bunker-hatchet-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:602,\x22w\x22:208,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:208,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:208,\x22h\x22:152}},\x22map-bunker-hatchet-compartment-floor-03c.img\x22:{\x22frame\x22:{\x22x\x22:1427,\x22y\x22:249,\x22w\x22:97,\x22h\x22:141},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:10,\x22w\x22:97,\x22h\x22:141},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:153}},\x22map-stone-03x.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:758,\x22w\x22:141,\x22h\x22:140},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:141,\x22h\x22:140},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-planter-06.img\x22:{\x22frame\x22:{\x22x\x22:1474,\x22y\x22:438,\x22w\x22:72,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:136}},\x22map-tree-07.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:902,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-tree-10.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:1034,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-tree-11.img\x22:{\x22frame\x22:{\x22x\x22:1310,\x22y\x22:1166,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-bunker-eye-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1455,\x22y\x22:758,\x22w\x22:96,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:128}},\x22map-woodpile-res-02.img\x22:{\x22frame\x22:{\x22x\x22:618,\x22y\x22:625,\x22w\x22:64,\x22h\x22:31},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:1,\x22w\x22:64,\x22h\x22:31},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:32}},\x22map-bunker-hatchet-compartment-floor-02d.img\x22:{\x22frame\x22:{\x22x\x22:535,\x22y\x22:1309,\x22w\x22:191,\x22h\x22:105},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:9,\x22y\x22:0,\x22w\x22:191,\x22h\x22:105},\x22sourceSize\x22:{\x22w\x22:201,\x22h\x22:105}},\x22map-stone-res-02x.img\x22:{\x22frame\x22:{\x22x\x22:1442,\x22y\x22:902,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-building-pavilion-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1442,\x22y\x22:1034,\x22w\x22:92,\x22h\x22:98},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:82,\x22y\x22:79,\x22w\x22:92,\x22h\x22:98},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:256}},\x22map-woodpile-02.img\x22:{\x22frame\x22:{\x22x\x22:730,\x22y\x22:1309,\x22w\x22:192,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:192,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:192,\x22h\x22:96}},\x22map-bush-06.img\x22:{\x22frame\x22:{\x22x\x22:1442,\x22y\x22:1166,\x22w\x22:96,\x22h\x22:96},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:96},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:96}},\x22map-bunker-hatchet-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:926,\x22y\x22:1309,\x22w\x22:97,\x22h\x22:89},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:89},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:89}},\x22map-table-02x.img\x22:{\x22frame\x22:{\x22x\x22:1027,\x22y\x22:1309,\x22w\x22:144,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:144,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:80}},\x22map-table-03x.img\x22:{\x22frame\x22:{\x22x\x22:1175,\x22y\x22:1309,\x22w\x22:80,\x22h\x22:80},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:80},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-crate-01x.img\x22:{\x22frame\x22:{\x22x\x22:1259,\x22y\x22:1309,\x22w\x22:78,\x22h\x22:78},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:78,\x22h\x22:78},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-stone-01x.img\x22:{\x22frame\x22:{\x22x\x22:1341,\x22y\x22:1309,\x22w\x22:76,\x22h\x22:77},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:76,\x22h\x22:77},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-crate-03x.img\x22:{\x22frame\x22:{\x22x\x22:1421,\x22y\x22:1309,\x22w\x22:74,\x22h\x22:74},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:74},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-crate-19.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1474,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-crate-02x.img\x22:{\x22frame\x22:{\x22x\x22:78,\x22y\x22:1474,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-07sp.img\x22:{\x22frame\x22:{\x22x\x22:154,\x22y\x22:1474,\x22w\x22:71,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:71,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-bush-01x.img\x22:{\x22frame\x22:{\x22x\x22:229,\x22y\x22:1474,\x22w\x22:66,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:3,\x22y\x22:2,\x22w\x22:66,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-planter-res-02.img\x22:{\x22frame\x22:{\x22x\x22:1248,\x22y\x22:680,\x22w\x22:41,\x22h\x22:68},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:0,\x22w\x22:41,\x22h\x22:68},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:68}},\x22map-table-01x.img\x22:{\x22frame\x22:{\x22x\x22:299,\x22y\x22:1474,\x22w\x22:80,\x22h\x22:64},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:64},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:64}},\x22map-stone-res-01x.img\x22:{\x22frame\x22:{\x22x\x22:383,\x22y\x22:1474,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22map-tree-switch-03.img\x22:{\x22frame\x22:{\x22x\x22:1248,\x22y\x22:752,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-tree-switch-04.img\x22:{\x22frame\x22:{\x22x\x22:1248,\x22y\x22:812,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-tree-switch-01.img\x22:{\x22frame\x22:{\x22x\x22:1248,\x22y\x22:872,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-tree-switch-02.img\x22:{\x22frame\x22:{\x22x\x22:1499,\x22y\x22:1309,\x22w\x22:56,\x22h\x22:56},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:56,\x22h\x22:56},\x22sourceSize\x22:{\x22w\x22:56,\x22h\x22:56}},\x22map-chest-03x.img\x22:{\x22frame\x22:{\x22x\x22:447,\x22y\x22:1474,\x22w\x22:70,\x22h\x22:51},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:70,\x22h\x22:51},\x22sourceSize\x22:{\x22w\x22:70,\x22h\x22:51}},\x22map-planter-07.img\x22:{\x22frame\x22:{\x22x\x22:1252,\x22y\x22:1033,\x22w\x22:50,\x22h\x22:50},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:50,\x22h\x22:50},\x22sourceSize\x22:{\x22w\x22:50,\x22h\x22:50}},\x22map-planter-res-03.img\x22:{\x22frame\x22:{\x22x\x22:1427,\x22y\x22:394,\x22w\x22:43,\x22h\x22:40},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:2,\x22w\x22:43,\x22h\x22:40},\x22sourceSize\x22:{\x22w\x22:43,\x22h\x22:43}},\x22map-snowball-res.img\x22:{\x22frame\x22:{\x22x\x22:1474,\x22y\x22:394,\x22w\x22:35,\x22h\x22:35},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:7,\x22y\x22:6,\x22w\x22:35,\x22h\x22:35},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22map-bunker-hatchet-compartment-floor-03a.img\x22:{\x22frame\x22:{\x22x\x22:342,\x22y\x22:1309,\x22w\x22:189,\x22h\x22:113},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:189,\x22h\x22:113},\x22sourceSize\x22:{\x22w\x22:193,\x22h\x22:113}}}}]')
  , ro = JSON['parse']('[{\x22meta\x22:{\x22image\x22:\x22cobalt-0-50-1bced975.png\x22,\x22size\x22:{\x22w\x22:2048,\x22h\x22:2048},\x22scale\x22:0.5},\x22frames\x22:{\x22map-bunker-twins-chamber-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:2,\x22w\x22:740,\x22h\x22:580},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:46,\x22y\x22:62,\x22w\x22:740,\x22h\x22:580},\x22sourceSize\x22:{\x22w\x22:832,\x22h\x22:704}},\x22map-bunker-hydra-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:848,\x22h\x22:724},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:0,\x22w\x22:848,\x22h\x22:724},\x22sourceSize\x22:{\x22w\x22:852,\x22h\x22:724}},\x22map-bunker-crossing-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:730,\x22w\x22:752,\x22h\x22:464},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:752,\x22h\x22:464},\x22sourceSize\x22:{\x22w\x22:752,\x22h\x22:464}},\x22map-bunker-hydra-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:758,\x22y\x22:730,\x22w\x22:352,\x22h\x22:402},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:14,\x22w\x22:352,\x22h\x22:402},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:416}},\x22map-bunker-hydra-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1114,\x22y\x22:730,\x22w\x22:170,\x22h\x22:372},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:21,\x22y\x22:0,\x22w\x22:170,\x22h\x22:372},\x22sourceSize\x22:{\x22w\x22:196,\x22h\x22:372}},\x22map-bunker-hydra-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1198,\x22w\x22:353,\x22h\x22:369},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:353,\x22h\x22:369},\x22sourceSize\x22:{\x22w\x22:353,\x22h\x22:369}},\x22map-bunker-hydra-compartment-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:359,\x22y\x22:1198,\x22w\x22:370,\x22h\x22:330},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:370,\x22h\x22:330},\x22sourceSize\x22:{\x22w\x22:408,\x22h\x22:360}},\x22map-bunker-hydra-compartment-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:733,\x22y\x22:1198,\x22w\x22:352,\x22h\x22:320},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:320},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:320}},\x22map-bunker-hydra-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1089,\x22y\x22:1198,\x22w\x22:432,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:432,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:432,\x22h\x22:304}},\x22map-bunker-crossing-compartment-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1288,\x22y\x22:730,\x22w\x22:160,\x22h\x22:304},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:304},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:304}},\x22map-complex-warehouse-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:1452,\x22y\x22:730,\x22w\x22:30,\x22h\x22:264},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:264},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:264}},\x22map-bunker-hydra-compartment-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:2,\x22w\x22:352,\x22h\x22:254},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:352,\x22h\x22:254},\x22sourceSize\x22:{\x22w\x22:352,\x22h\x22:256}},\x22map-bunker-crossing-compartment-ceiling-01b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1571,\x22w\x22:360,\x22h\x22:248},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:360,\x22h\x22:248},\x22sourceSize\x22:{\x22w\x22:360,\x22h\x22:248}},\x22map-bunker-hydra-compartment-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:260,\x22w\x22:160,\x22h\x22:180},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:180},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:180}},\x22map-bunker-crossing-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:366,\x22y\x22:1571,\x22w\x22:915,\x22h\x22:177},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:915,\x22h\x22:177},\x22sourceSize\x22:{\x22w\x22:915,\x22h\x22:177}},\x22map-bunker-twins-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:444,\x22w\x22:256,\x22h\x22:176},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:256,\x22h\x22:176},\x22sourceSize\x22:{\x22w\x22:256,\x22h\x22:176}},\x22map-bunker-hydra-chamber-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1762,\x22y\x22:260,\x22w\x22:96,\x22h\x22:175},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:96,\x22h\x22:175},\x22sourceSize\x22:{\x22w\x22:96,\x22h\x22:175}},\x22map-bunker-hydra-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:624,\x22w\x22:162,\x22h\x22:174},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:162,\x22h\x22:174},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:176}},\x22map-bunker-crossing-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1764,\x22y\x22:624,\x22w\x22:160,\x22h\x22:160},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:160},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:160}},\x22map-bunker-hydra-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:802,\x22w\x22:216,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:216,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:216,\x22h\x22:152}},\x22map-bunker-crossing-compartment-ceiling-01a.img\x22:{\x22frame\x22:{\x22x\x22:1862,\x22y\x22:260,\x22w\x22:64,\x22h\x22:152},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:64,\x22h\x22:152},\x22sourceSize\x22:{\x22w\x22:64,\x22h\x22:152}},\x22map-stone-03cb.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:958,\x22w\x22:142,\x22h\x22:141},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:1,\x22y\x22:2,\x22w\x22:142,\x22h\x22:141},\x22sourceSize\x22:{\x22w\x22:144,\x22h\x22:144}},\x22map-bunker-hydra-chamber-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1744,\x22y\x22:958,\x22w\x22:200,\x22h\x22:136},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:200,\x22h\x22:136},\x22sourceSize\x22:{\x22w\x22:200,\x22h\x22:136}},\x22map-bunker-hydra-compartment-ceiling-03.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:1103,\x22w\x22:160,\x22h\x22:135},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:160,\x22h\x22:135},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:135}},\x22map-bunker-crossing-chamber-floor-02.img\x22:{\x22frame\x22:{\x22x\x22:854,\x22y\x22:586,\x22w\x22:354,\x22h\x22:129},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:158,\x22w\x22:354,\x22h\x22:129},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-tree-03cb.img\x22:{\x22frame\x22:{\x22x\x22:1818,\x22y\x22:802,\x22w\x22:128,\x22h\x22:128},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:128,\x22h\x22:128},\x22sourceSize\x22:{\x22w\x22:128,\x22h\x22:128}},\x22map-bunker-crossing-chamber-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1212,\x22y\x22:586,\x22w\x22:354,\x22h\x22:126},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:14,\x22y\x22:161,\x22w\x22:354,\x22h\x22:126},\x22sourceSize\x22:{\x22w\x22:368,\x22h\x22:288}},\x22map-bunker-crossing-chamber-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1285,\x22y\x22:1571,\x22w\x22:568,\x22h\x22:120},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:568,\x22h\x22:120},\x22sourceSize\x22:{\x22w\x22:568,\x22h\x22:120}},\x22map-bunker-twins-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1762,\x22y\x22:1103,\x22w\x22:100,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:100,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22map-bunker-crossing-ceiling-01.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:1242,\x22w\x22:100,\x22h\x22:117},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:30,\x22y\x22:0,\x22w\x22:100,\x22h\x22:117},\x22sourceSize\x22:{\x22w\x22:160,\x22h\x22:144}},\x22part-class-shell-03b.img\x22:{\x22frame\x22:{\x22x\x22:1904,\x22y\x22:1399,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:26,\x22h\x22:32}},\x22map-bunker-generic-ceiling-02.img\x22:{\x22frame\x22:{\x22x\x22:1866,\x22y\x22:1103,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}},\x22map-complex-warehouse-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1702,\x22y\x22:1242,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-complex-warehouse-floor-01.img\x22:{\x22frame\x22:{\x22x\x22:1736,\x22y\x22:1242,\x22w\x22:30,\x22h\x22:112},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:30,\x22h\x22:112},\x22sourceSize\x22:{\x22w\x22:30,\x22h\x22:112}},\x22map-bunker-hydra-floor-04.img\x22:{\x22frame\x22:{\x22x\x22:1770,\x22y\x22:1242,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-stone-res-02cb.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:1363,\x22w\x22:100,\x22h\x22:100},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:100,\x22h\x22:100},\x22sourceSize\x22:{\x22w\x22:100,\x22h\x22:100}},\x22map-bunker-crossing-chamber-floor-01b.img\x22:{\x22frame\x22:{\x22x\x22:1598,\x22y\x22:1467,\x22w\x22:289,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:289,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:305,\x22h\x22:97}},\x22map-bunker-crossing-chamber-floor-01c.img\x22:{\x22frame\x22:{\x22x\x22:1702,\x22y\x22:1363,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:115,\x22h\x22:97}},\x22map-bunker-hydra-chamber-floor-01a.img\x22:{\x22frame\x22:{\x22x\x22:1803,\x22y\x22:1363,\x22w\x22:97,\x22h\x22:97},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:97,\x22h\x22:97},\x22sourceSize\x22:{\x22w\x22:97,\x22h\x22:97}},\x22map-class-shell-03b.img\x22:{\x22frame\x22:{\x22x\x22:1874,\x22y\x22:1242,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-shell-03a.img\x22:{\x22frame\x22:{\x22x\x22:1486,\x22y\x22:730,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-shell-01a.img\x22:{\x22frame\x22:{\x22x\x22:1486,\x22y\x22:810,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-shell-01b.img\x22:{\x22frame\x22:{\x22x\x22:1486,\x22y\x22:890,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-shell-02a.img\x22:{\x22frame\x22:{\x22x\x22:1857,\x22y\x22:1571,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-shell-02b.img\x22:{\x22frame\x22:{\x22x\x22:2,\x22y\x22:1823,\x22w\x22:76,\x22h\x22:76},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:76,\x22h\x22:76},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:80}},\x22map-class-crate-assault.img\x22:{\x22frame\x22:{\x22x\x22:82,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-tank.img\x22:{\x22frame\x22:{\x22x\x22:160,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-scout.img\x22:{\x22frame\x22:{\x22x\x22:238,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-sniper.img\x22:{\x22frame\x22:{\x22x\x22:316,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-healer.img\x22:{\x22frame\x22:{\x22x\x22:394,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-demo.img\x22:{\x22frame\x22:{\x22x\x22:472,\x22y\x22:1823,\x22w\x22:74,\x22h\x22:73},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:74,\x22h\x22:73},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-stone-01cb.img\x22:{\x22frame\x22:{\x22x\x22:550,\x22y\x22:1823,\x22w\x22:72,\x22h\x22:72},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:72,\x22h\x22:72},\x22sourceSize\x22:{\x22w\x22:72,\x22h\x22:72}},\x22map-class-crate-03.img\x22:{\x22frame\x22:{\x22x\x22:626,\x22y\x22:1823,\x22w\x22:70,\x22h\x22:70},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:2,\x22y\x22:2,\x22w\x22:70,\x22h\x22:70},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-class-crate-res-01.img\x22:{\x22frame\x22:{\x22x\x22:1525,\x22y\x22:1198,\x22w\x22:66,\x22h\x22:67},\x22rotated\x22:false,\x22trimmed\x22:true,\x22spriteSourceSize\x22:{\x22x\x22:4,\x22y\x22:6,\x22w\x22:66,\x22h\x22:67},\x22sourceSize\x22:{\x22w\x22:74,\x22h\x22:74}},\x22map-stone-res-01cb.img\x22:{\x22frame\x22:{\x22x\x22:1288,\x22y\x22:1038,\x22w\x22:60,\x22h\x22:60},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:60,\x22h\x22:60},\x22sourceSize\x22:{\x22w\x22:60,\x22h\x22:60}},\x22part-class-shell-01a.img\x22:{\x22frame\x22:{\x22x\x22:1858,\x22y\x22:563,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22part-class-shell-02a.img\x22:{\x22frame\x22:{\x22x\x22:1891,\x22y\x22:1467,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22part-class-shell-03a.img\x22:{\x22frame\x22:{\x22x\x22:1352,\x22y\x22:1038,\x22w\x22:48,\x22h\x22:48},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:48,\x22h\x22:48},\x22sourceSize\x22:{\x22w\x22:48,\x22h\x22:48}},\x22part-class-shell-01b.img\x22:{\x22frame\x22:{\x22x\x22:1910,\x22y\x22:563,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:26,\x22h\x22:32}},\x22part-class-shell-02b.img\x22:{\x22frame\x22:{\x22x\x22:1904,\x22y\x22:1363,\x22w\x22:26,\x22h\x22:32},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:26,\x22h\x22:32},\x22sourceSize\x22:{\x22w\x22:26,\x22h\x22:32}},\x22map-bunker-generic-floor-03.img\x22:{\x22frame\x22:{\x22x\x22:1858,\x22y\x22:444,\x22w\x22:80,\x22h\x22:115},\x22rotated\x22:false,\x22trimmed\x22:false,\x22spriteSourceSize\x22:{\x22x\x22:0,\x22y\x22:0,\x22w\x22:80,\x22h\x22:115},\x22sourceSize\x22:{\x22w\x22:80,\x22h\x22:115}}}}]')
  , ao = {
    'loadout': Ws,
    'shared': $s,
    'halloween': Qs,
    'snow': Zs,
    'faction': Ys,
    'desert': Js,
    'gradient': Ks,
    'savannah': Xs,
    'main': eo,
    'potato': to,
    'woods': io,
    'cobalt': ro
}
  , xt = {
    'low': ao,
    'high': Hs
};
function so(p, b) {
    const XT = x['from'](b)['baseTexture'];
    let XY = 0x0;
    return XT['valid'] || (XT['on']('loaded', XC => {
        console['log']('Loaded\x20texture', b),
        p['prepare']['upload'](XC);
    }
    ),
    XT['on']('error', XC => {
        console['log']('BaseTex\x20load\x20error,\x20retrying', b),
        XY++ <= 0x3 && setTimeout( () => {
            XC['source'] && (XC['updateSourceImage'](''),
            XC['updateSourceImage'](b['substring'](0x5, b['length'])));
        }
        , (XY - 0x1) * 0x3e8);
    }
    )),
    XT;
}
function oo(p, b) {
    const XT = so(p, 'assets/' + b['meta']['image'])
      , XY = new S(XT,b);
    return XY['resolution'] = XT['resolution'],
    XY['parse'](),
    XY;
}
function lo(p, b) {
    let XT = Math['min'](window['screen']['width'], window['screen']['height'])
      , XY = Math['max'](window['screen']['width'], window['screen']['height']);
    XT *= window['devicePixelRatio'],
    XY *= window['devicePixelRatio'];
    const XC = XY < 0x556 && XT < 0x300;
    let Xl = b['get']('highResTex') ? 'high' : 'low';
    if ((XC || k['mobile'] && !k['tablet'] || p['type'] == R['CANVAS']) && (Xl = 'low'),
    p['type'] == R['WEBGL']) {
        const Xd = p['gl'];
        Xd['getParameter'](Xd['MAX_TEXTURE_SIZE']) < 0x1000 && (Xl = 'low');
    }
    return console['log']('TextureRes', Xl, 'screenDims', window['screen']['width'], window['screen']['height']),
    Xl;
}
class mo {
    constructor(p, b, XT) {
        this['renderer'] = p,
        this['audioManager'] = b,
        this['config'] = XT,
        this['textureRes'] = lo(this['renderer'], this['config']),
        p['prepare']['limiter']['maxItemsPerFrame'] = 0x1;
    }
    ['atlases'] = {};
    ['loadTicker'] = 0x0;
    ['loaded'] = !0x1;
    ['textureRes'];
    ['mapName'];
    ['preloadMap'];
    ['isAtlasLoaded'](p) {
        return this['atlases'][p]?.['loaded'];
    }
    ['atlasTexturesLoaded'](p) {
        if (!this['isAtlasLoaded'](p))
            return !0x1;
        const b = this['atlases'][p];
        for (let XT = 0x0; XT < b['spritesheets']['length']; XT++)
            if (!b['spritesheets'][XT]['baseTexture']['valid'])
                return !0x1;
        return !0x0;
    }
    ['loadAtlas'](p) {
        if (this['isAtlasLoaded'](p))
            return;
        console['log']('Load\x20atlas', p),
        this['atlases'][p] = this['atlases'][p] || {
            'loaded': !0x1,
            'spritesheets': []
        };
        let b = xt[this['textureRes']] || xt['low'];
        X4['main']['assets']['atlases']['includes'](p) || (b = xt['high']);
        const XT = b[p];
        for (let XY = 0x0; XY < XT['length']; XY++) {
            const XC = oo(this['renderer'], XT[XY]);
            this['atlases'][p]['spritesheets']['push'](XC);
        }
        this['atlases'][p]['loaded'] = !0x0;
    }
    ['unloadAtlas'](p) {
        if (!this['isAtlasLoaded'](p))
            return;
        console['log']('Unload\x20atlas', p);
        const b = this['atlases'][p];
        for (let XT = 0x0; XT < b['spritesheets']['length']; XT++)
            b['spritesheets'][XT]['destroy'](!0x0);
        b['loaded'] = !0x1,
        b['spritesheets'] = [];
    }
    ['loadMapAssets'](p) {
        console['log']('Load\x20map', p);
        const b = X4[p];
        if (!b)
            throw new Error('Failed\x20loading\x20mapDef\x20' + this['mapName']);
        const XT = b['assets']['atlases']
          , XY = Object['keys'](this['atlases']);
        for (let XC = 0x0; XC < XY['length']; XC++) {
            const Xl = XY[XC];
            XT['includes'](Xl) || this['unloadAtlas'](Xl);
        }
        for (let Xd = 0x0; Xd < XT['length']; Xd++) {
            const Xk = XT[Xd];
            this['isAtlasLoaded'](Xk) || this['loadAtlas'](Xk);
        }
        setTimeout( () => {
            this['audioManager']['preloadSounds']();
            const XU = b['assets']['audio'];
            for (let XW = 0x0; XW < XU['length']; XW++) {
                const XD = XU[XW];
                let XG = fe['Sounds'][XD['channel']];
                if (!XG) {
                    const p0 = fe['Channels'][XD['channel']];
                    XG = fe['Sounds'][p0['list']];
                }
                const XF = XG[XD['name']]
                  , XH = {
                    'canCoalesce': XF['canCoalesce'],
                    'channels': XF['maxInstances'],
                    'volume': XF['volume']
                };
                this['audioManager']['loadSound']({
                    'name': XD['name'],
                    'channel': XD['channel'],
                    'path': XF['path'],
                    'options': XH
                });
            }
        }
        , 0x0);
    }
    ['update'](p) {
        if (!this['loaded']) {
            this['loadTicker'] += p;
            let b = !this['preloadMap'];
            const XT = Object['keys'](this['atlases']);
            for (let XY = 0x0; XY < XT['length']; XY++) {
                const XC = XT[XY];
                this['atlasTexturesLoaded'](XC) || (b = !0x1);
            }
            this['audioManager']['allLoaded']() || (b = !0x1),
            b && (console['log']('Resource\x20load\x20complete', this['loadTicker']['toFixed'](0x2)),
            this['loaded'] = !0x0);
        }
    }
}
var Ii = {
    'na': {
        'https': !0x0,
        'address': 'usr.mathsiscoolfun.com:8001',
        'l10n': 'index-north-america'
    },
    'eu': {
        'https': !0x0,
        'address': 'eur.mathsiscoolfun.com:8001',
        'l10n': 'index-europe'
    },
    'asia': {
        'https': !0x0,
        'address': 'asr.mathsiscoolfun.com:8001',
        'l10n': 'index-asia'
    },
    'sa': {
        'https': !0x0,
        'address': 'sa.mathsiscoolfun.com:8001',
        'l10n': 'index-south-america'
    }
};
class no {
    constructor(p, b) {
        this['config'] = p,
        this['localization'] = b,
        this['config'] = p,
        this['localization'] = b;
    }
    ['info'] = {};
    ['loaded'] = !0x1;
    ['load']() {
        const p = this['localization']['getLocale']()
          , b = Qe['resolveUrl']('/api/site_info?language=' + p)
          , XT = j('#server-opts')
          , XY = j('#team-server-opts');
        for (const XC in Ii) {
            const Xl = Ii[XC]
              , Xd = this['localization']['translate'](Xl['l10n'])
              , Xk = '<option\x20value=\x27' + XC + '\x27\x20data-l10n=\x27' + Xl['l10n'] + '\x27\x20data-label=\x27' + Xd + '\x27>' + Xd + '</option>';
            XT['append'](Xk),
            XY['append'](Xk);
        }
        j['ajax'](b)['done']( (XU, XW) => {
            this['info'] = XU || {},
            this['loaded'] = !0x0,
            this['updatePageFromInfo']();
        }
        );
    }
    ['getGameModeStyles']() {
        const p = {
            [Xj['Solo']]: 'solo',
            [Xj['Duo']]: 'duo',
            [Xj['Squad']]: 'squad'
        }
          , b = []
          , XT = this['info']['modes'] || [];
        for (let XY = 0x0; XY < XT['length']; XY++) {
            const XC = XT[XY]
              , Xl = (X4[XC['mapName']] || X4['main'])['desc']
              , Xd = Xl['buttonText'] ? Xl['buttonText'] : p[XC['teamMode']];
            b['push']({
                'icon': Xl['icon'],
                'buttonCss': Xl['buttonCss'],
                'buttonText': Xd,
                'enabled': XC['enabled']
            });
        }
        return b;
    }
    ['updatePageFromInfo']() {
        if (this['loaded']) {
            const b = this['getGameModeStyles']();
            for (let XU = 0x0; XU < b['length']; XU++) {
                const XW = b[XU]
                  , XD = 'index-play-' + XW['buttonText']
                  , XG = j('#btn-start-mode-' + XU);
                XG['data']('l10n', XD),
                XG['html'](this['localization']['translate'](XD)),
                (XW['icon'] || XW['buttonCss']) && (XU == 0x0 ? XG['addClass']('btn-custom-mode-no-indent') : XG['addClass']('btn-custom-mode-main'),
                XG['addClass'](XW['buttonCss']),
                XG['css']({
                    'background-image': 'url(' + XW['icon'] + ')'
                }));
                const XF = j('#btn-team-queue-mode-' + XU);
                if (XF['length']) {
                    const XH = 'index-' + XW['buttonText'];
                    XF['data']('l10n', XH),
                    XF['html'](this['localization']['translate'](XH)),
                    XW['icon'] && (XF['addClass']('btn-custom-mode-select'),
                    XF['css']({
                        'background-image': 'url(' + XW['icon'] + ')'
                    }));
                }
                XW['enabled'] || XG['addClass']('btn-disabled-main');
            }
            const XT = this['info']['pops'];
            if (XT) {
                const p0 = Object['keys'](XT);
                for (let p1 = 0x0; p1 < p0['length']; p1++) {
                    const p2 = p0[p1]
                      , p3 = XT[p2]
                      , p4 = j('#server-opts')['children']('option[value=\x22' + p2 + '\x22]')
                      , p5 = this['localization']['translate']('index-players');
                    p4['text'](p4['data']('label') + '\x20[' + p3['playerCount'] + '\x20' + p5 + ']');
                }
            }
            let XY = !0x1;
            const XC = j('#featured-streamers')
              , Xl = j('.streamer-list');
            if (!k['mobile'] && this['info']['twitch']) {
                Xl['empty']();
                for (let p6 = 0x0; p6 < this['info']['twitch']['length']; p6++) {
                    const p7 = this['info']['twitch'][p6]
                      , p8 = j('#featured-streamer-template')['clone']();
                    p8['attr']('class', 'featured-streamer\x20streamer-tooltip')['attr']('id', '');
                    const p9 = p8['find']('a')
                      , pX = this['localization']['translate'](p7['viewers'] == 0x1 ? 'index-viewer' : 'index-viewers');
                    p9['html'](p7['name'] + '\x20<span>' + p7['viewers'] + '\x20' + pX + '</span>'),
                    p9['css']('background-image', 'url(' + p7['img'] + ')'),
                    p9['attr']('href', p7['url']),
                    Xl['append'](p8),
                    XY = !0x0;
                }
            }
            XC['css']('visibility', XY ? 'visible' : 'hidden');
            const Xd = j('#featured-youtuber')
              , Xk = this['info']['youtube'];
            Xk && j('.btn-youtuber')['attr']('href', this['info']['youtube']['link'])['html'](this['info']['youtube']['name']),
            Xd['css']('display', Xk ? 'block' : 'none');
        }
    }
}
function mr(p) {
    const b = {
        'width': 0x40,
        'height': 0x40
    };
    return {
        'width': Math['round'](b['width'] * Number(p['size']) / 0x4) * 0x4,
        'height': Math['round'](b['height'] * Number(p['size']) / 0x4) * 0x4
    };
}
function nr(p) {
    const b = XL[p['type']]
      , XT = mr(p)
      , XY = t['rgbToHex'](t['intToRgb'](p['color']))
      , XC = p['stroke'];
    let Xl = b['code']['replace'](/white/g, XY);
    return Xl = Xl['replace'](/stroke-width=".5"/g, 'stroke-width=\x22' + XC + '\x22'),
    Xl = Xl['replace'](/width="64"/g, 'width=\x22' + XT['width'] + '\x22'),
    Xl = Xl['replace'](/height="64"/g, 'height=\x22' + XT['height'] + '\x22'),
    'url(\x27data:image/svg+xml;utf8,' + (Xl = Xl['replace'](/#/g, '%23')) + '\x27)';
}
function ho(p) {
    const b = mr(p);
    return nr(p) + '\x20' + b['width'] / 0x2 + '\x20' + b['height'] / 0x2 + ',\x20crosshair';
}
const Ge = {
    'getCursorURL': function(p) {
        return nr(p);
    },
    'setElemCrosshair': function(p, b) {
        let XT = 'crosshair';
        const XY = XL[b['type']];
        XY && (XT = XY['cursor'] ? XY['cursor'] : ho(b)),
        p['css']({
            'cursor': XT
        });
    },
    'setGameCrosshair': function(p) {
        Ge['setElemCrosshair'](j('#game-area-wrapper'), p);
        const b = XL[p['type']]
          , XT = !b || b['cursor'] ? 'pointer' : 'inherit';
        j('.ui-zoom,\x20.ui-medical,\x20.ui-settings-button,\x20.ui-weapon-switch')['css']({
            'cursor': XT
        });
    }
};
class de {
    constructor(p) {
        this['selector'] = p,
        p['find']('.close')['click'](b => {
            this['hide']();
        }
        ),
        this['modalCloseListener'] = b => {
            j(b['target'])['closest']('.modal-close')['length'] == 0x0 && (j(b['target'])['is'](this['selector']) || !this['checkSelector']) && (b['stopPropagation'](),
            this['hide']());
        }
        ;
    }
    ['checkSelector'] = !0x0;
    ['skipFade'] = !0x1;
    ['visible'] = !0x1;
    ['onShowFn'] = function() {}
    ;
    ['onHideFn'] = function() {}
    ;
    ['modalCloseListener'];
    ['onShow'](p) {
        this['onShowFn'] = p;
    }
    ['onHide'](p) {
        this['onHideFn'] = p;
    }
    ['isVisible']() {
        return this['visible'];
    }
    ['show'](p) {
        this['visible'] || (this['visible'] = !0x0,
        this['selector']['finish'](),
        this['selector']['css']('display', 'block'),
        this['onShowFn'](),
        p || j(document)['on']('click\x20touchend', this['modalCloseListener']));
    }
    ['hide']() {
        this['visible'] && (this['visible'] = !0x1,
        this['skipFade'] ? this['selector']['css']('display', 'none') : this['selector']['fadeOut'](0xc8),
        this['onHideFn'](),
        j(document)['off']('click\x20touchend', this['modalCloseListener']));
    }
}
function Mi(p) {
    const b = {
        [l['Top']]: 'customize-emote-top',
        [l['Right']]: 'customize-emote-right',
        [l['Bottom']]: 'customize-emote-bottom',
        [l['Left']]: 'customize-emote-left',
        [l['Win']]: 'customize-emote-win',
        [l['Death']]: 'customize-emote-death'
    }
      , XT = b[p] || b[l['Top']];
    return j('#' + XT);
}
function tt(p) {
    return function(b, XT) {
        const XY = w[b['type']]['rarity'] || 0x0
          , XC = w[XT['type']]['rarity'] || 0x0;
        return XY == 0x0 && XC == 0x0 ? ht(b, XT) : XY == 0x0 ? -0x1 : XC == 0x0 ? 0x1 : p(b, XT);
    }
    ;
}
function co(p, b) {
    return b['timeAcquired'] == p['timeAcquired'] ? hr(p, b) : b['timeAcquired'] - p['timeAcquired'];
}
function ht(p, b) {
    const XT = w[p['type']]
      , XY = w[b['type']];
    return XT['name'] < XY['name'] ? -0x1 : XT['name'] > XY['name'] ? 0x1 : 0x0;
}
function uo(p, b) {
    const XT = w[p['type']]['rarity'] || 0x0
      , XY = w[b['type']]['rarity'] || 0x0;
    return XT == XY ? ht(p, b) : XY - XT;
}
function hr(p, b) {
    const XT = w[p['type']]
      , XY = w[b['type']];
    return !XT['category'] || !XY['category'] || XT['category'] == XY['category'] ? ht(p, b) : XT['category'] - XY['category'];
}
const Ti = {
    'newest': tt(co),
    'alpha': tt(ht),
    'rarity': tt(uo),
    'subcat': tt(hr)
};
class po {
    constructor(p, b) {
        this['account'] = p,
        this['localization'] = b,
        k['touch'] || this['categories']['push']({
            'loadoutType': 'crosshair',
            'gameType': 'crosshair',
            'categoryImage': 'img/gui/loadout-crosshair.svg'
        }),
        this['categories']['push']({
            'loadoutType': 'player_icon',
            'gameType': 'emote',
            'categoryImage': 'img/gui/loadout-emote.svg'
        }),
        this['modalCustomize'] = j('#modal-customize'),
        this['modalCustomizeList'] = j('#modal-customize-list'),
        this['modalCustomizeItemRarity'] = j('#modal-customize-item-rarity'),
        this['modalCustomizeItemName'] = j('#modal-customize-item-name'),
        this['modalCustomizeItemLore'] = j('#modal-customize-item-lore'),
        this['modalCustomizeItemSource'] = j('#modal-customize-item-source'),
        this['modal'] = new de(this['modalCustomize']),
        this['modal']['onShow']( () => {
            this['onShow']();
        }
        ),
        this['modal']['onHide']( () => {
            this['onHide']();
        }
        );
        const XT = function() {
            j('#modal-screen-block')['fadeIn'](0xc8);
        }
          , XY = () => {
            this['confirmNextItem']();
        }
        ;
        this['confirmItemModal'] = new de(j('#modal-item-confirm')),
        this['confirmItemModal']['onShow'](XT),
        this['confirmItemModal']['onHide'](XY),
        p['addEventListener']('request', this['onRequest']['bind'](this)),
        p['addEventListener']('loadout', this['onLoadout']['bind'](this)),
        p['addEventListener']('items', this['onItems']['bind'](this)),
        p['addEventListener']('pass', this['onPass']['bind'](this));
    }
    ['initialized'] = !0x1;
    ['active'] = !0x1;
    ['items'] = [];
    ['loadoutDisplay'] = null;
    ['loadout'] = le['defaultLoadout']();
    ['localPendingConfirm'] = [];
    ['localConfirmed'] = [];
    ['confirmingItems'] = !0x1;
    ['localAckItems'] = [];
    ['categories'] = [{
        'loadoutType': 'outfit',
        'gameType': 'outfit',
        'categoryImage': 'img/gui/loadout-outfit.svg'
    }, {
        'loadoutType': 'melee',
        'gameType': 'melee',
        'categoryImage': 'img/gui/loadout-melee.svg'
    }, {
        'loadoutType': 'emote',
        'gameType': 'emote',
        'categoryImage': 'img/gui/loadout-emote.svg'
    }, {
        'loadoutType': 'heal',
        'gameType': 'heal_effect',
        'categoryImage': 'img/gui/loadout-heal.svg'
    }, {
        'loadoutType': 'boost',
        'gameType': 'boost_effect',
        'categoryImage': 'img/gui/loadout-boost.svg'
    }];
    ['selectedItem'] = {
        'prevSlot': null,
        'img': '',
        'type': ''
    };
    ['emotesLoaded'] = !0x1;
    ['selectedCatIdx'] = 0x0;
    ['selectedCatItems'] = [];
    ['equippedItems'] = [];
    ['modalCustomize'];
    ['modalCustomizeList'];
    ['modalCustomizeItemRarity'];
    ['modalCustomizeItemName'];
    ['modalCustomizeItemLore'];
    ['modalCustomizeItemSource'];
    ['picker'];
    ['modal'];
    ['confirmItemModal'];
    ['itemSort'];
    ['selectableCats'];
    ['selectableCatConnects'];
    ['selectableCatImages'];
    ['selectableSlots'];
    ['droppableSlots'];
    ['highlightedSlots'];
    ['itemSelected'];
    ['highlightOpacityMin'];
    ['init']() {
        if (!this['initialized']) {
            for (let XY = 0x0; XY < this['categories']['length']; XY++) {
                const XC = j('<div/>', {
                    'class': 'modal-customize-cat',
                    'data-idx': XY
                });
                XY == this['categories']['length'] - 0x1 && XC['attr']('id', 'modal-customize-cat-standalone'),
                XC['append'](j('<div/>', {
                    'class': 'modal-customize-cat-image',
                    'css': {
                        'background-image': 'url(' + this['categories'][XY]['categoryImage'] + ')'
                    }
                })),
                XC['append'](j('<div/>', {
                    'class': 'modal-customize-cat-connect'
                })),
                XC['append'](j('<div/>', {
                    'class': 'account-alert\x20account-alert-cat'
                })),
                j('#modal-customize-header')['append'](XC);
            }
            this['selectableCats'] = j('.modal-customize-cat'),
            this['selectableCatConnects'] = j('.modal-customize-cat-connect'),
            this['selectableCatImages'] = j('.modal-customize-cat-image'),
            this['selectableCats']['on']('mouseup', Xl => {
                const Xd = j(Xl['currentTarget'])['data']('idx');
                this['selectedCatIdx'] != Xd && this['selectCat'](Xd);
            }
            ),
            this['itemSort'] = j('#modal-customize-sort'),
            this['itemSort']['on']('change', Xl => {
                this['sortItems'](Xl['target']['value']);
            }
            ),
            this['modalCustomizeItemName']['on']('click', () => {
                const Xl = document['getElementsByClassName']('customize-list-item-selected');
                Xl['length'] > 0x0 && Xl[0x0]['scrollIntoView']({
                    'behavior': 'smooth',
                    'block': 'start',
                    'inline': 'nearest'
                });
            }
            ),
            j('#crosshair-size')['on']('input', () => {
                this['updateLoadoutFromDOM']();
            }
            ),
            j('#crosshair-stroke')['on']('input', () => {
                this['updateLoadoutFromDOM']();
            }
            );
            const p = document['getElementById']('color-picker');
            this['picker'] = new window['CP'](p,!0x1,p),
            this['picker']['self']['classList']['add']('static'),
            this['picker']['on']('change', Xl => {
                j('#color-picker-hex')['val'](Xl),
                this['loadout']?.['crosshair'] && this['updateLoadoutFromDOM']();
            }
            );
            const b = document['querySelector']('#color-picker-hex')
              , XT = () => {
                const Xl = b['value'];
                if (Xl['length']) {
                    if (Xl['length'] == 0x6)
                        this['picker']['set']('#' + Xl),
                        this['picker']['fire']('change', [Xl]);
                    else {
                        if (Xl['length'] == 0x7 && Xl[0x0] == '#')
                            this['picker']['set'](Xl),
                            this['picker']['fire']('change', [Xl['slice'](0x1)]);
                        else
                            return;
                    }
                }
            }
            ;
            b['oncut'] = XT,
            b['onpaste'] = XT,
            b['onkeyup'] = XT,
            b['oninput'] = XT,
            this['initialized'] = !0x0;
        }
    }
    ['show']() {
        this['init'](),
        this['modal']['show']();
    }
    ['hide']() {
        this['modal']['hide']();
    }
    ['onShow']() {
        this['active'] = !0x0,
        this['localAckItems'] = [];
        for (let p = 0x0; p < this['items']['length']; p++) {
            const b = this['items'][p];
            b['status'] < le['ItemStatus']['Ackd'] && this['localAckItems']['push'](b);
        }
        this['selectCat'](0x0),
        this['tryBeginConfirmingItems'](),
        j('#start-bottom-right,\x20#start-main')['fadeOut'](0xc8),
        j('#background')['hide']();
    }
    ['onHide']() {
        this['active'] = !0x1,
        le['modified'](this['loadout'], this['account']['loadout']) && this['account']['setLoadout'](this['loadout']),
        this['clearConfirmItemModal'](),
        this['modalCustomize']['css']({
            'cursor': 'initial'
        }),
        j('#start-bottom-right,\x20#start-main')['fadeIn'](0xc8),
        j('#background')['show']();
    }
    ['onResize']() {
        k['mobile'] && (this['categories'][this['selectedCatIdx']]['loadoutType'] == 'emote' ? j('#modal-customize-list')['attr']('style', '') : j('#modal-customize-list')['attr']('style', k['isLandscape'] ? '' : 'height:\x20380px'));
    }
    ['onRequest']() {
        j('#modal-customize-loading')['css']('opacity', this['account']['requestsInFlight'] > 0x0 ? 0x1 : 0x0);
    }
    ['onLoadout'](p) {
        this['loadout'] = le['validate'](p),
        Ge['setGameCrosshair'](p['crosshair']),
        this['active'] && this['selectCat'](this['selectedCatIdx']);
    }
    ['onItems'](p) {
        this['items'] = le['getUserAvailableItems'](p);
        for (let b = 0x0; b < this['items']['length']; b++) {
            const XT = this['items'][b];
            XT['status'] < le['ItemStatus']['Confirmed'] && !this['localPendingConfirm']['find'](XY => XY['type'] == XT['type']) && !this['localConfirmed']['find'](XY => XY['type'] == XT['type']) && this['localPendingConfirm']['push'](XT),
            XT['status'] < le['ItemStatus']['Ackd'] && !this['localAckItems']['find'](XY => XY['type'] == XT['type']) && this['localAckItems']['push'](XT);
        }
        this['active'] && (this['tryBeginConfirmingItems'](),
        this['selectCat'](this['selectedCatIdx'])),
        this['account']['loggedIn'] && (this['items']['find'](XY => XY['type'] == 'unlock_new_account') || this['account']['unlock']('unlock_new_account'));
    }
    ['onPass'](p) {
        const b = ['facebook', 'instagram', 'youtube', 'twitter'];
        for (let XT = 0x0; XT < b['length']; XT++) {
            const XY = b[XT]
              , XC = !!p['unlocks'][XY]
              , Xl = j('.customize-social-unlock[data-lock-reason=\x27' + XY + '\x27]');
            Xl['css']({
                'display': XC ? 'none' : 'inline-block'
            }),
            Xl['off']('click')['on']('click', () => {
                this['account']['setPassUnlock'](XY);
            }
            );
        }
    }
    ['getCategory'](p) {
        for (let b = 0x0; b < this['categories']['length']; b++) {
            const XT = this['categories'][b];
            if (XT['gameType'] == p)
                return XT;
        }
        return null;
    }
    ['clearConfirmItemModal']() {
        this['localPendingConfirm'] = [],
        this['localConfirmed'] = [],
        this['confirmingItems'] = !0x1,
        this['confirmItemModal']['hide']();
    }
    ['setItemsConfirmed']() {
        const p = [];
        for (let b = 0x0; b < this['items']['length']; b++) {
            const XT = this['items'][b];
            XT['status'] < le['ItemStatus']['Confirmed'] && p['push'](XT['type']);
        }
        p['length'] > 0x0 && this['account']['setItemStatus'](le['ItemStatus']['Confirmed'], p);
    }
    ['setItemsAckd'](p) {
        const b = this['categories'][p]
          , XT = [];
        for (let XY = 0x0; XY < this['items']['length']; XY++) {
            const XC = this['items'][XY]
              , Xl = w[XC['type']];
            Xl && Xl['type'] == b['gameType'] && XC?.['status'] < le['ItemStatus']['Ackd'] && XT['push'](XC['type']);
        }
        XT['length'] > 0x0 && this['account']['setItemStatus'](le['ItemStatus']['Ackd'], XT);
    }
    ['tryBeginConfirmingItems']() {
        this['active'] && !this['confirmingItems'] && (this['confirmingItems'] = !0x0,
        this['confirmNextItem']());
    }
    ['confirmNextItem']() {
        this['setItemsConfirmed']();
        const p = this['localPendingConfirm']['shift']();
        if (p) {
            this['localConfirmed']['push'](p);
            const b = w[p['type']]
              , XT = {
                'type': p['type'],
                'rarity': b['rarity'] || 0x0,
                'displayName': b['name'],
                'category': b['type']
            }
              , XY = 'url(' + Q['getSvgFromGameType'](p['type']) + ')'
              , XC = Q['getCssTransformFromGameType'](p['type']);
            setTimeout( () => {
                j('#modal-item-confirm-name')['html'](XT['displayName']),
                j('#modal-item-confirm-image-inner')['css']({
                    'background-image': XY,
                    'transform': XC
                }),
                this['confirmItemModal']['show']();
            }
            , 0xc8);
        } else
            this['confirmingItems'] = !0x1,
            j('#modal-screen-block')['fadeOut'](0x12c);
    }
    ['sortItems'](p) {
        this['selectedCatItems']['sort'](Ti[p]);
        const b = this['categories'][this['selectedCatIdx']]
          , XT = j('<div/>');
        for (let XY = 0x0; XY < this['selectedCatItems']['length']; XY++) {
            const XC = this['selectedCatItems'][XY];
            XC['outerDiv']?.['data']('idx', XY),
            XT['append'](XC['outerDiv']);
        }
        this['modalCustomizeList']['html'](''),
        this['modalCustomizeList']['append'](XT),
        this['selectableSlots']['off']('mouseup'),
        this['setItemListeners'](b['loadoutType']);
    }
    ['setItemListeners'](p) {
        if (this['selectableSlots']['on']('mouseup', b => {
            const XT = b['currentTarget'];
            if (!j(XT)['hasClass']('customize-list-item-locked')) {
                if (this['itemSelected'] && !j(XT)['hasClass']('customize-list-item')) {
                    this['itemSelected'] = !0x1;
                    return;
                }
                this['selectItem'](j(XT)),
                this['updateLoadoutFromDOM']();
            }
        }
        ),
        p == 'emote')
            this['setEmoteDraggable'](this['selectableSlots'], this),
            this['emotesLoaded'] || (this['setEmoteDraggable'](this['droppableSlots'], this),
            this['droppableSlots']['on']('mouseup', b => {
                const XT = b['currentTarget'];
                if (!j(XT)['hasClass']('customize-list-item-locked')) {
                    if (this['itemSelected'] && !j(XT)['hasClass']('customize-list-item')) {
                        this['deselectItem']();
                        return;
                    }
                    this['selectItem'](j(XT)),
                    this['updateLoadoutFromDOM']();
                }
            }
            ),
            this['droppableSlots']['on']('drop', b => {
                b['originalEvent']?.['preventDefault']();
                const XT = b['currentTarget']
                  , XY = j(XT)['parent']();
                this['updateSlot'](XY, this['selectedItem']['img'], this['selectedItem']['type']),
                this['updateLoadoutFromDOM'](),
                this['deselectItem']();
            }
            ),
            this['droppableSlots']['on']('mousedown', b => {
                if (this['itemSelected']) {
                    b['stopPropagation']();
                    const XT = j(b['currentTarget'])['parent']();
                    this['updateSlot'](XT, this['selectedItem']['img'], this['selectedItem']['type']),
                    this['updateLoadoutFromDOM']();
                }
            }
            ),
            this['droppableSlots']['on']('dragover', function(b) {
                b['originalEvent']?.['preventDefault'](),
                j(this)['parent']()['find']('.ui-emote-hl')['css']('opacity', 0x1);
            }),
            this['droppableSlots']['on']('dragleave', b => {
                b['originalEvent']?.['preventDefault'](),
                j(b['currentTarget'])['parent']()['find']('.ui-emote-hl')['css']('opacity', this['highlightOpacityMin']);
            }
            ),
            this['droppableSlots']['on']('dragend', b => {
                b['originalEvent']?.['preventDefault'](),
                this['deselectItem']();
            }
            ),
            j('.ui-emote-auto-trash')['click'](b => {
                const XT = j(b['currentTarget'])['parent']();
                this['updateSlot'](XT, '', ''),
                this['updateLoadoutFromDOM']();
            }
            ),
            this['emotesLoaded'] = !0x0);
        else {
            if (p == 'crosshair') {
                const b = t['intToHex'](this['loadout']['crosshair']['color'])
                  , XT = [b['slice'](0x1)];
                this['picker']['set'](b),
                j('#color-picker-hex')['val'](XT),
                j('#crosshair-size')['val'](this['loadout']['crosshair']['size']),
                j('#crosshair-stroke')['val'](this['loadout']['crosshair']['stroke']);
            }
        }
    }
    ['updateLoadoutFromDOM']() {
        const p = this['categories'][this['selectedCatIdx']]['loadoutType'];
        if (p == 'emote')
            for (let b = 0x0; b < l['Count']; b++) {
                const XT = Mi(b)['data']('idx')
                  , XY = this['equippedItems'][XT];
                XY?.['type'] ? this['loadout']['emotes'][b] = XY['type'] : this['loadout']['emotes'][b] = '';
            }
        else {
            if (p == 'crosshair') {
                const XC = parseFloat(j('#crosshair-size')['val']())
                  , Xl = j('#color-picker-hex')['val']()
                  , Xd = parseFloat(j('#crosshair-stroke')['val']());
                this['loadout']['crosshair'] = {
                    'type': this['selectedItem']['type'],
                    'color': t['hexToInt'](Xl),
                    'size': Number(XC['toFixed'](0x2)),
                    'stroke': Number(Xd['toFixed'](0x2))
                };
            } else
                this['loadout'][p] = this['selectedItem']['type'];
        }
        this['loadout'] = le['validate'](this['loadout']),
        this['loadoutDisplay']?.['initialized'] && this['loadoutDisplay']['setLoadout'](this['loadout']),
        this['selectedItem']['loadoutType'] == 'crosshair' && this['setSelectedCrosshair']();
    }
    ['selectItem'](b, XT=!0x0) {
        const XY = b['hasClass']('customize-list-item')
          , XC = XY ? b : b['parent']()
          , Xl = XC['find']('.customize-item-image')
          , Xd = XC['data']('idx')
          , Xk = XC['data']('slot') ? this['equippedItems'][Xd] : this['selectedCatItems'][Xd];
        if (!Xk) {
            this['itemSelected'] = !0x1,
            this['selectedItem'] = {
                'prevSlot': null,
                'img': '',
                'type': ''
            };
            return;
        }
        if (Xk['type'] == this['selectedItem']['type'] && Xk['loadoutType'] == 'emote' && this['selectedItem']['loadoutType'] == 'emote' && XT) {
            this['deselectItem']();
            return;
        }
        this['itemSelected'] = !0x0,
        this['selectedItem'] = {
            'prevSlot': XY ? null : XC,
            'img': Xl['data']('img'),
            'type': Xk['type'],
            'rarity': Xk['rarity'],
            'displayName': Xk['displayName'] || '',
            'displaySource': Xk['displaySource'] || 'Unknown',
            'displayLore': Xk['displayLore'] || '',
            'loadoutType': Xk['loadoutType'],
            'subcat': Xk['subcat']
        },
        this['modalCustomizeItemName']['html'](this['selectedItem']['displayName']);
        const XU = this['localization']['translate']('loadout-' + Xk['displaySource']) || this['localization']['translate']('' + Xk['displaySource']) || this['selectedItem']['displaySource']
          , XW = this['localization']['translate']('loadout-acquired') + ':\x20' + XU;
        this['modalCustomizeItemSource']['html'](XW);
        const XD = {
            [Xv['Locked']]: 'Locked',
            [Xv['Faces']]: 'Faces',
            [Xv['Food']]: 'Food',
            [Xv['Animals']]: 'Animals',
            [Xv['Logos']]: 'Logos',
            [Xv['Other']]: 'Other',
            [Xv['Flags']]: 'Flags',
            [Xv['Default']]: 'Default'
        }
          , XG = Xk['loadoutType'] == 'emote' ? this['localization']['translate']('loadout-category') + ':\x20' + XD[Xk['subcat']] : this['selectedItem']['displayLore'];
        this['modalCustomizeItemLore']['html'](XG);
        const XF = ['stock', 'common', 'uncommon', 'rare', 'epic', 'mythic']
          , XH = ['#c5c5c5', '#c5c5c5', '#12ff00', '#00deff', '#f600ff', '#d96100']
          , p0 = this['localization']['translate']('loadout-' + XF[this['selectedItem']['rarity']]);
        if (this['modalCustomizeItemRarity']['html'](p0),
        this['modalCustomizeItemRarity']['css']({
            'color': XH[this['selectedItem']['rarity']]
        }),
        this['selectedItem']['loadoutType'] == 'emote' && this['highlightedSlots']['css']({
            'display': 'block',
            'opacity': this['highlightOpacityMin']
        }),
        this['selectableSlots']['removeClass']('customize-list-item-selected'),
        XY ? b['addClass']('customize-list-item-selected') : XC['find']('.ui-emote-hl')['css']('opacity', 0x1),
        this['selectedItem']['loadoutType'] == 'crosshair') {
            const p2 = w[this['selectedItem']['type']];
            p2 && p2['type'] == 'crosshair' && p2['cursor'] ? j('#modal-content-right-crosshair')['css']('display', 'none') : (j('#modal-content-right-crosshair')['css']('display', 'block'),
            this['picker']['exit'](),
            this['picker']['enter']());
        }
        const p1 = this['localAckItems']['findIndex'](p3 => p3['type'] == this['selectedItem']['type']);
        p1 !== -0x1 && (b['find']('.account-alert')['removeClass']('account-alert\x20account-alert-cat'),
        this['localAckItems']['splice'](p1, 0x1),
        this['setCategoryAlerts']());
    }
    ['updateSlot'](p, b, XT) {
        const XY = this['selectedItem']['prevSlot'];
        if (this['selectedItem'] = {},
        XY) {
            const XC = p['find']('.customize-item-image')
              , Xl = p['data']('idx')
              , Xd = this['equippedItems'][Xl];
            let Xk = '';
            Xd['type'] && (Xk = Xd['type']),
            this['updateSlot'](XY, XC['data']('img'), Xk);
        }
        this['updateSlotData'](p, b, XT);
    }
    ['deselectItem']() {
        this['itemSelected'] = !0x1,
        this['selectedItem'] = {},
        this['selectableSlots']['removeClass']('customize-list-item-selected'),
        this['highlightedSlots']['css']({
            'display': 'none',
            'opacity': 0x0
        }),
        this['modalCustomizeItemName']['html'](''),
        this['modalCustomizeItemSource']['html'](''),
        this['modalCustomizeItemLore']['html'](''),
        this['modalCustomizeItemRarity']['html']('');
    }
    ['updateSlotData'](p, b, XT) {
        const XY = p['find']('.customize-emote-slot');
        XY['css']('background-image', b || 'none'),
        XY['data']('img', b || 'none');
        const XC = w[XT]
          , Xl = p['data']('idx');
        if (XC) {
            const Xd = {
                'loadoutType': 'emote',
                'type': XT,
                'rarity': XC['rarity'] || 0x0,
                'displayName': XC['name'],
                'displayLore': XC['lore'],
                'subcat': XC['category']
            };
            this['equippedItems'][Xl] = Xd;
        } else
            this['equippedItems'][Xl] = {};
    }
    ['selectCat'](XT) {
        const XY = this['selectedCatIdx'];
        if (this['selectedCatIdx'] = XT,
        this['setItemsAckd'](this['selectedCatIdx']),
        XY != this['selectedCatIdx']) {
            const p2 = this['categories'][XY];
            for (let p3 = this['localAckItems']['length'] - 0x1; p3 >= 0x0; p3--) {
                const p4 = this['localAckItems'][p3];
                w[p4['type']]['type'] == p2['gameType'] && this['localAckItems']['splice'](p3, 0x1);
            }
        }
        const XC = this['categories'][this['selectedCatIdx']]
          , Xl = this['items']['filter'](p5 => {
            const p6 = w[p5['type']];
            return p6 && p6['type'] == XC['gameType'];
        }
        )
          , Xd = XC['loadoutType'] == 'emote' || XC['loadoutType'] == 'player_icon';
        j('#customize-sort-subcat')['css']('display', Xd ? 'block' : 'none');
        let Xk = this['itemSort']['val']();
        !Xd && Xk == 'subcat' && (Xk = 'newest',
        this['itemSort']['val'](Xk)),
        Xl['sort'](Ti[Xk]);
        const XU = XC['loadoutType'] == 'emote'
          , XW = XC['loadoutType'] == 'crosshair'
          , XD = XC['loadoutType'] == 'emote';
        this['loadoutDisplay']?.['setView'](XC['loadoutType']);
        const XG = j('.modal-customize-cat[data-idx=\x27' + this['selectedCatIdx'] + '\x27]');
        this['selectableCats']['removeClass']('modal-customize-cat-selected'),
        this['selectableCatConnects']['removeClass']('modal-customize-cat-connect-selected'),
        this['selectableCatImages']['removeClass']('modal-customize-cat-image-selected'),
        XG['addClass']('modal-customize-cat-selected'),
        XG['find']('.modal-customize-cat-connect')['addClass']('modal-customize-cat-connect-selected'),
        XG['find']('.modal-customize-cat-image')['addClass']('modal-customize-cat-image-selected');
        const XF = this['localization']['translate']('loadout-title-' + XC['loadoutType'])['toUpperCase']();
        j('#modal-customize-cat-title')['html'](XF),
        j('#modal-content-right-crosshair')['css']('display', XC['loadoutType'] == 'crosshair' ? 'block' : 'none'),
        j('#modal-content-right-emote')['css']('display', XC['loadoutType'] == 'emote' ? 'block' : 'none'),
        j('#customize-emote-parent')['css']('display', XU ? 'block' : 'none'),
        j('#customize-crosshair-parent')['css']('display', XW ? 'block' : 'none'),
        this['modalCustomizeItemName']['html'](''),
        this['modalCustomizeItemSource']['html'](''),
        this['modalCustomizeItemLore']['html'](''),
        this['modalCustomizeItemRarity']['html']('');
        const XH = function(p5) {
            const p6 = w[p5];
            return p6?.['name'] ? p6['name'] : p5;
        };
        this['selectedCatItems'] = [];
        let p0 = '';
        const p1 = j('<div/>');
        for (let p5 = 0x0; p5 < Xl['length']; p5++) {
            const p6 = Xl[p5]
              , p7 = w[p6['type']]
              , p8 = {
                'loadoutType': XC['loadoutType'],
                'type': p6['type'],
                'rarity': p7['rarity'] || 0x0,
                'displayName': p7['name'],
                'displaySource': XH(p6['source']),
                'displayLore': p7['lore'],
                'timeAcquired': p6['timeAcquired'],
                'idx': p5,
                'subcat': p7['category'],
                'outerDiv': null
            }
              , p9 = j('<div/>', {
                'class': 'customize-list-item\x20customize-list-item-unlocked',
                'data-idx': p5
            })
              , pX = Q['getSvgFromGameType'](p6['type'])
              , pp = Q['getCssTransformFromGameType'](p6['type'])
              , pb = j('<div/>', {
                'class': 'customize-item-image',
                'css': {
                    'background-image': 'url(' + pX + ')',
                    'transform': pp
                },
                'data-img': 'url(' + pX + ')',
                'draggable': XD
            });
            if (p9['append'](pb),
            this['localAckItems']['findIndex'](pI => pI['type'] == p6['type']) !== -0x1) {
                const pI = j('<div/>', {
                    'class': 'account-alert\x20account-alert-cat',
                    'css': {
                        'display': 'block'
                    }
                });
                p9['append'](pI);
            }
            if (XC['gameType'] == 'crosshair') {
                const pj = {
                    'type': p8['type'],
                    'color': 0xffffff,
                    'size': 0x1,
                    'stroke': 0x0
                };
                Ge['setElemCrosshair'](p9, pj);
            }
            p1['append'](p9),
            p8['outerDiv'] = p9,
            this['selectedCatItems']['push'](p8),
            p0 || (XC['loadoutType'] == 'crosshair' && p8['type'] == this['loadout']['crosshair']['type'] || XC['loadoutType'] != 'emote' && p8['type'] == this['loadout'][XC['loadoutType']]) && (p0 = p8['outerDiv']);
        }
        if (this['modalCustomizeList']['html'](''),
        this['modalCustomizeList']['append'](p1),
        this['modalCustomizeList']['scrollTop'](0x0),
        XC['loadoutType'] == 'emote') {
            this['equippedItems'] = [];
            for (let pf = 0x0; pf < this['loadout']['emotes']['length']; pf++) {
                this['equippedItems']['push']({});
                const px = this['loadout']['emotes'][pf];
                if (w[px]) {
                    const py = 'url(' + Q['getSvgFromGameType'](px) + ')'
                      , pg = Mi(pf);
                    this['updateSlotData'](pg, py, px);
                }
            }
        }
        if (this['selectableSlots'] = j('.customize-list-item'),
        this['droppableSlots'] = j('.customize-col'),
        this['highlightedSlots'] = this['droppableSlots']['siblings']('.ui-emote-hl'),
        this['highlightOpacityMin'] = 0.4,
        this['itemSelected'] = !0x1,
        this['setItemListeners'](XC['loadoutType']),
        this['setCategoryAlerts'](),
        this['deselectItem'](),
        p0 != '' && (this['selectItem'](p0),
        XC['loadoutType'] == 'crosshair' && this['setSelectedCrosshair'](),
        this['modalCustomizeItemName']['click']()),
        k['browser'] == 'edge') {
            if (XC['loadoutType'] == 'crosshair') {
                const pQ = function(pZ, pq) {
                    const pM = pZ['height']() + parseInt(pZ['css']('padding-top')) + parseInt(pZ['css']('padding-bottom'));
                    pq['css']('height', pM);
                };
                pQ(j('#modal-customize-body'), j('#modal-content-left')['find']('.modal-disabled')),
                pQ(j('#modal-content-right-crosshair'), j('#modal-content-right-crosshair')['find']('.modal-disabled')),
                j('.modal-disabled')['css']('display', 'block');
            } else
                j('.modal-disabled')['css']('display', 'none');
        }
        this['onResize']();
    }
    ['setCategoryAlerts']() {
        for (let p = 0x0; p < this['categories']['length']; p++) {
            const b = this['categories'][p]
              , XT = this['localAckItems']['filter'](XY => {
                const XC = w[XY['type']];
                return XC && XC['type'] == b['gameType'];
            }
            );
            j('.modal-customize-cat[data-idx=\x27' + p + '\x27]')['find']('.account-alert-cat')['css']('display', XT['length'] > 0x0 ? 'block' : 'none');
        }
    }
    ['setEmoteDraggable'](p, b) {
        p['on']('dragstart', function(XT) {
            if (!j(this)['hasClass']('customize-list-item-locked') && (b['selectItem'](j(this), !0x1),
            k['browser'] != 'edge')) {
                const XY = document['createElement']('img');
                XY['src'] = b['selectedItem']['img'] ? b['selectedItem']['img']['replace']('url(', '')['replace'](')', '')['replace'](/\'/gi, '') : '',
                XT['originalEvent']?.['dataTransfer']?.['setDragImage'](XY, 0x40, 0x40);
            }
        });
    }
    ['setSelectedCrosshair']() {
        const p = this['loadout']['crosshair'];
        j('#customize-crosshair-selected')['find']('.customize-item-image')['css']({
            'background-image': Ge['getCursorURL'](p)
        }),
        Ge['setElemCrosshair'](j('#customize-crosshair-selected'), p);
    }
}
const fo = 'Survivr\x20Pass\x201'
  , wo = 'Top\x2010\x20in\x20solos'
  , go = 'Top\x208\x20in\x20duos'
  , So = 'Top\x205\x20in\x20squads'
  , yo = 'Kill\x20enemies'
  , xo = 'Kill\x20enemies'
  , zo = 'Damage\x20enemies'
  , bo = 'Damage\x20enemies'
  , ko = 'Survived\x20time'
  , vo = '9mm\x20damage'
  , _o = '7.62mm\x20damage'
  , Io = '5.56mm\x20damage'
  , Mo = '12\x20gauge\x20damage'
  , To = 'Grenade\x20damage'
  , Po = 'Melee\x20damage'
  , Co = 'Use\x20healing\x20items'
  , Do = 'Use\x20adrenaline\x20items'
  , Lo = 'Unlock\x20air\x20drops'
  , Ao = 'Destroy\x20crates'
  , Ro = 'Destroy\x20toilets'
  , No = 'Destroy\x20furniture'
  , Eo = 'Destroy\x20barrels'
  , Oo = 'Destroy\x20lockers'
  , Bo = 'Destroy\x20pots'
  , qo = 'Destroy\x20soda\x20machines'
  , jo = 'Kill\x20enemies\x20at:\x20club'
  , Fo = {
    'word-order': 'svo',
    'index-create-account': 'Create\x20Account',
    'index-create-account-prompt-1': 'Log\x20in\x20to\x20access\x20this\x20feature!',
    'index-set-account-name': 'Set\x20your\x20account\x20name',
    'index-enter-name': 'Enter\x20name',
    'index-finish': 'Finish',
    'index-reset-stats': 'Reset\x20Stats',
    'index-reset-stats-desc': 'Enter\x20\x22RESET\x20STATS\x22\x20to\x20reset\x20your\x20stats:',
    'index-reset-stats-desc-2': '(This\x20does\x20not\x20reset\x20pass\x20progress.)',
    'index-delete-account': 'Delete\x20Account',
    'index-delete-account-desc': 'Enter\x20\x22DELETE\x22\x20to\x20delete\x20your\x20account:',
    'index-confirm': 'Confirm',
    'index-customize-avatar': 'Customize\x20Avatar',
    'index-done': 'Done',
    'index-account': 'Account',
    'index-log-in-with': 'Log\x20in\x20with',
    'index-google': 'Google',
    'index-twitch': 'Twitch',
    'index-discord': 'Discord',
    'index-my-stats': 'My\x20Stats',
    'index-link-account': 'Link\x20Account',
    'index-log-out': 'Log\x20Out',
    'index-change-avatar': 'Change\x20Avatar',
    'index-change-account-name': 'Change\x20Account\x20Name',
    'index-back': 'Back',
    'index-link-account-to': 'Link\x20account\x20to',
    'index-log-in-desc': 'Log\x20In\x20/\x20Create\x20Account',
    'index-logging-in': 'Logging\x20in',
    'index-leaderboards': 'Leaderboards',
    'index-slogan': '2d\x20Battle\x20Royale',
    'index-region': 'Region',
    'index-local': 'Local',
    'index-north-america': 'North\x20America',
    'index-europe': 'Europe',
    'index-asia': 'Asia',
    'index-south-america': 'South\x20America',
    'index-korea': 'South\x20Korea',
    'index-players': 'players',
    'index-play-solo': 'Play\x20Solo',
    'index-play-duo': 'Play\x20Duo',
    'index-play-squad': 'Play\x20Squad',
    'index-join-team': 'Join\x20Team',
    'index-create-team': 'Create\x20Team',
    'index-leave-team': 'Leave\x20Team',
    'index-joining-team': 'Joining\x20Team',
    'index-creating-team': 'Creating\x20Team',
    'index-invite-link': 'Invite\x20link',
    'index-invite-code': 'Invite\x20code',
    'index-join-team-help': 'Got\x20a\x20team\x20link\x20or\x20code?\x20Paste\x20it\x20here:',
    'index-solo': 'Solo',
    'index-duo': 'Duo',
    'index-squad': 'Squad',
    'index-auto-fill': 'Auto\x20Fill',
    'index-no-fill': 'No\x20Fill',
    'index-waiting-for-leader': 'Waiting\x20for\x20leader\x20to\x20start\x20game',
    'index-joining-game': 'Joining\x20game',
    'index-game-in-progress': 'Game\x20in\x20progress',
    'index-play': 'Play',
    'index-customize-loadout': 'Customize\x20Emotes',
    'index-twitter-follow': 'Twitter\x20Follow',
    'index-youtube-subscribe': 'YouTube\x20Subscribe',
    'index-facebook-like': 'Facebook\x20Like',
    'index-featured-youtuber': 'Featured\x20YouTuber',
    'index-streaming-live': 'Streaming\x20Live!',
    'index-viewer': 'viewer',
    'index-viewers': 'viewers',
    'index-settings': 'Settings',
    'index-high-resolution': 'High\x20resolution\x20(check\x20to\x20increase\x20visual\x20quality)',
    'index-screen-shake': 'Screen\x20shake',
    'index-anon-player-names': 'Anonymize\x20player\x20names',
    'index-master-volume': 'Master\x20Volume',
    'index-sfx-volume': 'SFX\x20Volume',
    'index-music-volume': 'Music\x20Volume',
    'index-mobile-announce': 'Now\x20available\x20on\x20mobile!',
    'index-mobile-tooltip': 'Visit\x20<span>survev.io</span>\x20on\x20your\x20mobile\x20device\x20to\x20play\x20on\x20the\x20go!',
    'index-version': 'ver',
    'index-privacy': 'privacy',
    'index-attributions': 'attributions',
    'index-team-is-full': 'Team\x20is\x20full!',
    'index-team-kicked': 'You\x20were\x20kicked\x20from\x20the\x20team!',
    'index-failed-joining-team': 'Failed\x20joining\x20team.',
    'index-failed-creating-team': 'Failed\x20creating\x20team.',
    'index-failed-finding-game': 'Failed\x20finding\x20game.',
    'index-failed-joining-game': 'Failed\x20joining\x20game.',
    'index-lost-connection': 'Lost\x20connection\x20to\x20team.',
    'index-host-closed': 'Host\x20closed\x20the\x20connection.',
    'index-invalid-protocol': 'Old\x20client\x20version.',
    'index-view-more': 'View\x20More',
    'index-back-to-main': 'Back\x20to\x20Main\x20Menu',
    'index-most-kills': 'Most\x20kills',
    'index-total-kills': 'Total\x20kills',
    'index-total-wins': 'Total\x20wins',
    'index-top-5-percent': 'Top\x205\x20percent',
    'index-kill-death-ratio': 'Kill-death\x20ratio',
    'index-mode': 'Mode',
    'index-for': 'For',
    'index-today': 'Today',
    'index-this-week': 'This\x20week',
    'index-all-time': 'All\x20time',
    'index-top-100': 'TOP\x20100',
    'index-rank': 'Rank',
    'index-player': 'Player',
    'index-total-games': 'Total\x20Games',
    'index-controls': 'Controls',
    'index-movement': 'Movement',
    'index-movement-ctrl': 'W,\x20A,\x20S,\x20D',
    'index-aim': 'Aim',
    'index-aim-ctrl': 'Mouse',
    'index-punch': 'Melee',
    'index-shoot': 'Shoot',
    'index-shoot-ctrl': 'Left-Click',
    'index-change-weapons': 'Change\x20Weapons',
    'index-change-weapons-ctrl': '1\x20through\x204\x20or\x20Scroll\x20Wheel',
    'index-stow-weapons': 'Stow\x20Weapons\x20(Melee\x20Mode)',
    'index-stow-weapons-ctrl': '3\x20or\x20E',
    'index-swap-weapons': 'Swap\x20to\x20Previous\x20Weapon',
    'index-swap-weapons-ctrl': 'Q',
    'index-swap-weapon-slots': 'Switch\x20Gun\x20Slots',
    'index-swap-weapon-slots-ctrl': 'T\x20or\x20drag\x20gun\x20to\x20other\x20slot',
    'index-reload': 'Reload',
    'index-reload-ctrl': 'R',
    'index-scope-zoom': 'Scope\x20Zoom',
    'index-scope-zoom-ctrl': 'Left-Click\x20on\x20Zoom',
    'index-pickup': 'Pickup',
    'index-loot': 'Loot',
    'index-revive': 'Revive',
    'index-pickup-ctrl': 'F',
    'index-use-medical': 'Use\x20Medical\x20Item',
    'index-use-medical-ctrl': 'Left-Click\x20on\x20Item\x20or\x207\x20through\x200',
    'index-drop-item': 'Drop\x20Item',
    'index-drop-item-ctrl': 'Right-Click\x20on\x20Item',
    'index-cancel-action': 'Cancel\x20Action',
    'index-cancel-action-ctrl': 'X',
    'index-view-map': 'View\x20Map',
    'index-view-map-ctrl': 'M\x20or\x20G',
    'index-toggle-minimap': 'Toggle\x20Minimap',
    'index-toggle-minimap-ctrl': 'V',
    'index-use-ping': 'Use\x20Team\x20Ping\x20Wheel',
    'index-use-ping-ctrl': 'Hold\x20C,\x20then\x20hold\x20Right-Click\x20and\x20drag\x20mouse,\x20then\x20release\x20Right-Click',
    'index-use-emote': 'Use\x20Emote\x20Wheel',
    'index-use-emote-ctrl': 'Hold\x20Right-Click\x20and\x20drag\x20mouse,\x20then\x20release\x20Right-Click',
    'index-how-to-play': 'How\x20to\x20Play',
    'index-tips-1-desc': 'The\x20goal\x20of\x20survev.io\x20is\x20to\x20be\x20the\x20last\x20player\x20standing.\x20You\x20only\x20live\x20once\x20per\x20game\x20-\x20there\x20is\x20no\x20respawn!',
    'index-tips-2': '2D\x20PUBG',
    'index-tips-2-desc': 'If\x20you\x27ve\x20played\x20other\x20battle\x20royale\x20games\x20like\x20PUBG,\x20Fortnite\x20or\x20Apex\x20Legends,\x20then\x20you\x27re\x20already\x20halfway\x20there!\x20Think\x20of\x20survev.io\x20as\x202D\x20PUBG\x20(with\x20slightly\x20less\x20desync\x20and\x20more\x20chicken).',
    'index-tips-3': 'Loot\x20and\x20Kill',
    'index-tips-3-desc': 'You\x27ll\x20begin\x20the\x20game\x20with\x20no\x20items\x20other\x20than\x20a\x20simple\x20backpack.\x20Move\x20around\x20the\x20map\x20to\x20find\x20loot:\x20weapons,\x20ammo,\x20scopes,\x20and\x20medical\x20items.\x20Eliminate\x20other\x20players\x20and\x20you\x20can\x20take\x20their\x20loot!',
    'index-tips-4': 'Red\x20=\x20Bad!',
    'index-tips-4-desc': 'Players\x20aren\x27t\x20the\x20only\x20thing\x20that\x20can\x20hurt\x20you.\x20The\x20deadly\x20red\x20zone\x20will\x20move\x20in\x20from\x20the\x20sides\x20of\x20the\x20map\x20and\x20deal\x20increasingly\x20greater\x20damage\x20if\x20you\x20stand\x20in\x20it.\x20Keep\x20an\x20eye\x20on\x20the\x20map\x20and\x20stay\x20safe.',
    'index-movement-ctrl-touch': 'Left\x20stick',
    'index-aim-ctrl-touch': 'Right\x20stick',
    'index-shoot-ctrl-touch': 'Drag\x20right\x20stick\x20outside\x20stick\x20border',
    'index-change-weapons-ctrl-touch': 'Tap\x20weapon\x20slot',
    'index-reload-ctrl-touch': 'Tap\x20equipped\x20ammo\x20counter',
    'index-scope-zoom-ctrl-touch': 'Tap\x20zoom\x20item',
    'index-pickup-ctrl-touch': 'Tap\x20interaction\x20button\x20or\x20loot\x20name',
    'index-use-medical-ctrl-touch': 'Tap\x20medical\x20item',
    'index-drop-item-ctrl-touch': 'Touch\x20and\x20hold\x20item',
    'index-cancel-action-ctrl-touch': 'Tap\x20interaction\x20button',
    'index-view-map-ctrl-touch': 'Tap\x20minimap',
    'index-use-ping-ctrl-touch': 'View\x20map\x20and\x20tap\x20anywhere\x20on\x20map',
    'index-use-emote-ctrl-touch': 'Tap\x20surviv\x20icon',
    'index-loadout': 'Loadout',
    'loadout-title-outfit': 'Outfit\x20Skin',
    'loadout-title-melee': 'Melee\x20Skin',
    'loadout-title-emote': 'Emotes',
    'loadout-title-heal': 'Heal\x20Particles',
    'loadout-title-boost': 'Boost\x20Particles',
    'loadout-title-crosshair': 'Crosshair',
    'loadout-title-player_icon': 'Player\x20Icon',
    'loadout-newest': 'Newest',
    'loadout-alpha': 'Alpha',
    'loadout-rarity': 'Rarity',
    'loadout-size': 'Size',
    'loadout-stroked': 'Stroked',
    'loadout-stock': 'Stock',
    'loadout-common': 'Common',
    'loadout-uncommon': 'Uncommon',
    'loadout-rare': 'Rare',
    'loadout-epic': 'Epic',
    'loadout-mythic': 'Mythic',
    'loadout-acquired': 'Acquired',
    'loadout-category': 'Category',
    'loadout-standard-issue': 'Standard\x20Issue',
    'loadout-new-account': 'Account\x20Created',
    'quest-login-prompt': 'Log\x20in\x20to\x20get\x20quests!',
    'quest-refresh-prompt': 'Get\x20a\x20new\x20quest?',
    'pass_survivr1': fo,
    'quest_top_solo': wo,
    'quest_top_duo': go,
    'quest_top_squad': So,
    'quest_kills': yo,
    'quest_kills_hard': xo,
    'quest_damage': zo,
    'quest_damage_hard': bo,
    'quest_survived': ko,
    'quest_damage_9mm': vo,
    'quest_damage_762mm': _o,
    'quest_damage_556mm': Io,
    'quest_damage_12gauge': Mo,
    'quest_damage_grenade': To,
    'quest_damage_melee': Po,
    'quest_heal': Co,
    'quest_boost': Do,
    'quest_airdrop': Lo,
    'quest_crates': Ao,
    'quest_toilets': Ro,
    'quest_furniture': No,
    'quest_barrels': Eo,
    'quest_lockers': Oo,
    'quest_pots': Bo,
    'quest_vending': qo,
    'quest_club_kills': jo,
    'game-alive': 'Alive',
    'game-reloading': 'Reloading',
    'game-use': 'Use',
    'game-using': 'Using',
    'game-reviving': 'Reviving',
    'game-revive-teammate': 'Revive\x20Teammate',
    'game-revive-self': 'Revive\x20Self',
    'game-equip': 'Equip',
    'game-cancel': 'Cancel',
    'game-open-door': 'Open\x20Door',
    'game-close-door': 'Close\x20Door',
    'game-unlock': 'Unlock',
    'game-You': 'You',
    'game-you': 'you',
    'game-themselves': 'themselves',
    'game-yourself': 'yourself',
    'game-you-died': 'died',
    'game-player-died': 'died',
    'game-with': 'with',
    'game-knocked-out': 'knocked\x20out',
    'game-killed': 'killed',
    'game-finally-killed': 'finally\x20killed',
    'game-finally-bled-out': 'finally\x20bled\x20out',
    'game-died-outside': 'died\x20outside\x20the\x20safe\x20zone',
    'game-the-red-zone': 'The\x20red\x20zone',
    'game-crushed': 'crushed',
    'game-the-air-drop': 'The\x20air\x20drop',
    'game-the-air-strike': 'The\x20air\x20strike',
    'game-an-air-strike': 'an\x20air\x20strike',
    'game-waiting-for-players': 'Waiting\x20for\x20players',
    'game-spectating': 'Spectating',
    'game-red-zone-advances': 'Red\x20zone\x20advances\x20in',
    'game-red-zone-advancing': 'Red\x20zone\x20advancing!\x20Move\x20to\x20the\x20safe\x20zone',
    'game-seconds': 'seconds',
    'game-minutes': 'minutes',
    'game-minute': 'minute',
    'game-m': 'm',
    'game-s': 's',
    'game-not-enough-space': 'Not\x20enough\x20space!',
    'game-item-already-owned': 'Item\x20already\x20owned!',
    'game-item-already-equipped': 'Item\x20already\x20equipped!',
    'game-better-item-equipped': 'Better\x20item\x20equipped!',
    'game-gun-cannot-fire': 'Gun\x20cannot\x20be\x20fired\x20here!',
    'game-waiting-for-new-leader': 'Waiting\x20for\x20new\x20leader',
    'game-waiting-for-hunted': 'Searching\x20for\x20the\x20Hunted',
    'game-play-new-game': 'Play\x20New\x20Game',
    'game-spectate': 'Spectate',
    'game-full-screen': 'Full\x20Screen',
    'game-aim-line': 'Aim\x20Line',
    'game-sound': 'Sound',
    'game-quit-game': 'Quit\x20Game',
    'game-return-to-game': 'Return\x20to\x20Game',
    'game-hide-match-stats': 'Hide\x20Match\x20Stats',
    'game-view-match-stats': 'View\x20Match\x20Stats',
    'game-previous-teammate': 'Previous\x20Teammate',
    'game-next-teammate': 'Next\x20Teammate',
    'game-spectate-previous': 'Previous\x20Player',
    'game-spectate-next': 'Next\x20Player',
    'game-leave-game': 'Leave\x20Game',
    'game-your-results': 'Your\x20Results',
    'game-chicken': 'Winner\x20winner\x20chicken\x20dinner!',
    'game-turkey': 'Winner\x20winner\x20turkey\x20dinner!',
    'game-won-the-game': 'won\x20the\x20game.',
    'game-team-eliminated': 'Your\x20team\x20was\x20eliminated.',
    'game-solo-rank': 'Solo\x20Rank',
    'game-duo-rank': 'Duo\x20Rank',
    'game-squad-rank': 'Squad\x20Rank',
    'game-rank': 'Rank',
    'game-team-rank': 'Team\x20Rank',
    'game-team-kills': 'Team\x20Kills',
    'game-kill': 'Kill',
    'game-kills': 'Kills',
    'game-damage-dealt': 'Damage\x20Dealt',
    'game-damage-taken': 'Damage\x20Taken',
    'game-survived': 'Survived',
    'game-backpack00': 'Pouch',
    'game-backpack01': 'Small\x20Pack',
    'game-backpack02': 'Regular\x20Pack',
    'game-backpack03': 'Military\x20Pack',
    'game-bandage': 'Bandage',
    'game-bandage-tooltip': 'Left-click\x20to\x20restore\x2015\x20health.',
    'game-healing-tooltip': 'Cannot\x20heal\x20past\x2075\x20health.',
    'game-healthkit': 'Med\x20Kit',
    'game-healthkit-tooltip': 'Left-click\x20to\x20restore\x20100\x20health.',
    'game-soda': 'Soda',
    'game-soda-tooltip': 'Left-click\x20to\x20boost\x20adrenaline\x20by\x2025.',
    'game-adrenaline-tooltip': 'Adrenaline\x20restores\x20health\x20over\x20time.',
    'game-painkiller': 'Pills',
    'game-painkiller-tooltip': 'Left-click\x20to\x20boost\x20adrenaline\x20by\x2050.',
    'game-9mm': '9mm',
    'game-9mm-tooltip': 'Ammo\x20for\x20M9,\x20G18C,\x20M93R,\x20P30L,\x20MP5,\x20MAC-10,\x20UMP9,\x20CZ-3A1\x20and\x20Vector.',
    'game-12gauge': '12\x20gauge',
    'game-12gauge-tooltip': 'Ammo\x20for\x20M870,\x20M1100,\x20SPAS-12,\x20Saiga-12,\x20USAS-12,\x20Super\x2090\x20and\x20MP220.',
    'game-762mm': '7.62mm',
    'game-762mm-tooltip': 'Ammo\x20for\x20AK-47,\x20SCAR-H,\x20M39,\x20Mosin,\x20SV-98,\x20M1,\x20BAR,\x20AN-94,\x20PKP,\x20Groza,\x20OT-38\x20and\x20DP-28.',
    'game-556mm': '5.56mm',
    'game-556mm-tooltip': 'Ammo\x20for\x20FAMAS,\x20M416,\x20M4A1-S,\x20QBB-97,\x20Mk\x2012,\x20Scout\x20Elite,\x20and\x20M249.',
    'game-50AE': '.50\x20AE',
    'game-50AE-tooltip': 'Ammo\x20for\x20DEagle\x2050.',
    'game-308sub': '.308\x20Subsonic',
    'game-308sub-tooltip': 'Ammo\x20for\x20AWM-S.',
    'game-flare': 'Flare',
    'game-flare-tooltip': 'Ammo\x20for\x20Flare\x20Gun.',
    'game-45acp': '.45\x20ACP',
    'game-45acp-tooltip': 'Ammo\x20for\x20M1911,\x20M1A1,\x20Model\x2094,\x20Vector\x20and\x20Peacemaker.',
    'game-chest01': 'Level\x201\x20Vest',
    'game-chest02': 'Level\x202\x20Vest',
    'game-chest03': 'Level\x203\x20Vest',
    'game-chest04': 'Level\x204\x20Vest',
    'game-helmet01': 'Level\x201\x20Helmet',
    'game-helmet02': 'Level\x202\x20Helmet',
    'game-helmet03': 'Level\x203\x20Helmet',
    'game-helmet03_leader': 'Commander\x20Helmet',
    'game-helmet03_forest': 'Shishigami\x20no\x20Kabuto',
    'game-helmet03_moon': 'Tsukuyomi\x20no\x20Kabuto',
    'game-helmet03_lt': 'Lieutenant\x20Helmet',
    'game-helmet03_lt_aged': 'Lieutenant\x20Helmet',
    'game-helmet03_potato': 'K-pot-ato',
    'game-helmet03_marksman': 'Marksman\x20Helmet',
    'game-helmet04_lone_survivr': 'Lone\x20Survivr\x20Helmet',
    'game-helmet04_leader': 'Commander\x20Helmet',
    'game-1xscope': '1x\x20Scope',
    'game-2xscope': '2x\x20Scope',
    'game-4xscope': '4x\x20Scope',
    'game-8xscope': '8x\x20Scope',
    'game-15xscope': '15x\x20Scope',
    'game-level-1': 'Lvl.\x201',
    'game-level-2': 'Lvl.\x202',
    'game-level-3': 'Lvl.\x203',
    'game-level-4': 'Lvl.\x204',
    'game-outfitBase': 'Basic\x20Outfit',
    'game-outfitRoyalFortune': 'Royal\x20Fortune',
    'game-outfitKeyLime': 'Key\x20Lime',
    'game-outfitCobaltShell': 'Cobalt\x20Shell',
    'game-outfitCarbonFiber': 'Carbon\x20Fiber',
    'game-outfitDarkGloves': 'The\x20Professional',
    'game-outfitDarkShirt': 'The\x20Semi-Pro',
    'game-outfitGhillie': 'Ghillie\x20Suit',
    'game-outfitCamo': 'Forest\x20Camo',
    'game-outfitRed': 'Target\x20Practice',
    'game-outfitWhite': 'Arctic\x20Avenger',
    'game-outfitWoodland': 'Woodland\x20Combat',
    'game-outfitJester': 'Jester\x27s\x20Folly',
    'game-outfitPrisoner': 'The\x20New\x20Black',
    'game-outfitCasanova': 'Casanova\x20Silks',
    'game-outfitKhaki': 'The\x20Initiative',
    'game-outfitCoral': 'Coral\x20Guise',
    'game-outfitAqua': 'Aquatic\x20Avenger',
    'game-outfitIslander': 'Island\x20Time',
    'game-outfitMeteor': 'Falling\x20Star',
    'game-outfitHeaven': 'Celestial\x20Garb',
    'game-outfitWaterElem': 'Water\x20Elemental',
    'game-outfitVerde': 'Poncho\x20Verde',
    'game-outfitLumber': 'Woodcutter\x27s\x20Wrap',
    'game-outfitImperial': 'Imperial\x20Seal',
    'game-outfitPineapple': 'Valiant\x20Pineapple',
    'game-outfitTarkhany': 'Tarkhany\x20Regal',
    'game-outfitDesertCamo': 'Desert\x20Camo',
    'game-outfitDesertGhillie': 'Desert\x20Ghillie',
    'game-outfitElf': 'Tallow\x27s\x20Little\x20Helper',
    'game-outfitSpetsnaz': 'Siberian\x20Assault',
    'game-outfitDarkGhillie': 'Incursion\x20Ghillie',
    'game-outfitRedLeaderAged': 'Red\x20Victorious',
    'game-outfitBlueLeaderAged': 'Stifled\x20Blue',
    'game-outfitWoodsCloak': 'Greencloak',
    'game-outfitSpringGhillie': 'Vernal\x20Ghillie',
    'game-outfitNoir': 'Neo\x20Noir',
    'game-outfitSummerGhillie': 'Verdant\x20Ghillie',
    'game-outfitWheat': 'Splintered\x20Wheat',
    'game-outfitDev': 'Developer\x20Swag',
    'game-outfitMod': 'Discord\x20Moderatr',
    'game-outfitParma': 'PARMA\x20Jumpsuit',
    'game-outfitParmaPrestige': 'The\x20Core\x20Jumpsuit',
    'game-outfitTurkey': 'Fowl\x20Facade',
    'game-outfitBarrel': 'Fish\x20in\x20a\x20Barrel',
    'game-outfitWoodBarrel': 'Fish\x20in\x20a\x20Wood\x20Barrel',
    'game-outfitStone': 'Stoneskin',
    'game-outfitTree': 'Barkskin',
    'game-outfitTreeSpooky': 'Spoopy\x20Barkskin',
    'game-outfitStump': 'Dead\x20Wood',
    'game-outfitBush': 'Bush\x20Wookie',
    'game-outfitLeafPile': 'Sneaky\x20Leaf',
    'game-outfitCrate': 'Guy\x20in\x20a\x20Box',
    'game-outfitTable': 'Yard\x20Sale',
    'game-outfitSoviet': 'Comrade\x20in\x20a\x20Box',
    'game-outfitAirdrop': 'Hot\x20Drop',
    'game-outfitOven': 'Half-baked',
    'game-outfitRefrigerator': 'Cold\x20Fusion',
    'game-outfitVending': 'OKAMI\x20Cola\x20Machine',
    'game-outfitPumpkin': 'Pumpkin\x20Head',
    'game-outfitWoodpile': 'Deader\x20Wood',
    'game-outfitToilet': 'Size\x20Two',
    'game-outfitBushRiver': 'Lilyveil',
    'game-outfitCrab': 'Crabby\x20Camo',
    'game-outfitStumpAxe': 'Axe-querade',
    'game-fists': 'Fists',
    'game-knuckles_rusted': 'Knuckles\x20Rusted',
    'game-hud-knuckles_rusted': 'Knuckles',
    'game-knuckles_heroic': 'Knuckles\x20Heroic',
    'game-hud-knuckles_heroic': 'Knuckles',
    'game-karambit_rugged': 'Karambit\x20Rugged',
    'game-hud-karambit_rugged': 'Karambit',
    'game-karambit_prismatic': 'Karambit\x20Prismatic',
    'game-hud-karambit_prismatic': 'Karambit',
    'game-karambit_drowned': 'Karambit\x20Drowned',
    'game-hud-karambit_drowned': 'Karambit',
    'game-bayonet_rugged': 'Bayonet\x20Rugged',
    'game-hud-bayonet_rugged': 'Bayonet',
    'game-bayonet_woodland': 'Bayonet\x20Woodland',
    'game-hud-bayonet_woodland': 'Bayonet',
    'game-huntsman_rugged': 'Huntsman\x20Rugged',
    'game-hud-huntsman_rugged': 'Huntsman',
    'game-huntsman_burnished': 'Huntsman\x20Burnished',
    'game-hud-huntsman_burnished': 'Huntsman',
    'game-bowie_vintage': 'Bowie\x20Vintage',
    'game-hud-bowie_vintage': 'Bowie',
    'game-bowie_frontier': 'Bowie\x20Frontier',
    'game-hud-bowie_frontier': 'Bowie',
    'game-woodaxe': 'Wood\x20Axe',
    'game-woodaxe_bloody': 'Wood\x20Axe\x20Bloodstained',
    'game-hud-woodaxe_bloody': 'Wood\x20Axe',
    'game-fireaxe': 'Fire\x20Axe',
    'game-katana': 'Katana',
    'game-katana_rusted': 'Katana\x20Rusted',
    'game-hud-katana_rusted': 'Katana',
    'game-katana_orchid': 'Katana\x20Orchid',
    'game-hud-katana_orchid': 'Katana',
    'game-naginata': 'Naginata',
    'game-hud-naginata': 'Naginata',
    'game-machete_taiga': 'Machete\x20Taiga',
    'game-hud-machete_taiga': 'Machete',
    'game-kukri_trad': 'Tallow\x27s\x20Kukri',
    'game-hud-kukri_trad': 'Kukri',
    'game-bonesaw_rusted': 'Bonesaw\x20Rusted',
    'game-hud-bonesaw_rusted': 'Bonesaw',
    'game-crowbar_recon': 'Crowbar\x20Carbon',
    'game-hud-crowbar_recon': 'Crowbar',
    'game-stonehammer': 'Stone\x20Hammer',
    'game-sledgehammer': 'Sledgehammer',
    'game-hook': 'Hook',
    'game-pan': 'Pan',
    'game-crowbar_scout': 'Scouting\x20Crowbar',
    'game-hud-crowbar_scout': 'Crowbar',
    'game-bonesaw_healer': 'The\x20Separator',
    'game-hud-bonesaw_healer': 'Bonesaw',
    'game-kukri_sniper': 'Marksman\x27s\x20Recurve',
    'game-hud-kukri_sniper': 'Kukri',
    'game-katana_demo': 'Hakai\x20no\x20Katana',
    'game-hud-katana_demo': 'Katana',
    'game-spade_assault': 'Trench\x20Spade',
    'game-hud-spade_assault': 'Spade',
    'game-warhammer_tank': 'Panzerhammer',
    'game-hud-warhammer_tank': 'War\x20Hammer',
    'game-ak47': 'AK-47',
    'game-scar': 'SCAR-H',
    'game-an94': 'AN-94',
    'game-groza': 'Groza',
    'game-grozas': 'Groza-S',
    'game-dp28': 'DP-28',
    'game-mosin': 'Mosin-Nagant',
    'game-sv98': 'SV-98',
    'game-m39': 'M39\x20EMR',
    'game-garand': 'M1\x20Garand',
    'game-svd': 'SVD-63',
    'game-blr': 'BLR\x2081',
    'game-mp5': 'MP5',
    'game-mac10': 'MAC-10',
    'game-ump9': 'UMP9',
    'game-vector': 'Vector',
    'game-vector45': 'Vector',
    'game-scorpion': 'CZ-3A1',
    'game-vss': 'VSS',
    'game-m870': 'M870',
    'game-m1100': 'M1100',
    'game-m1014': 'Super\x2090',
    'game-mp220': 'MP220',
    'game-usas': 'USAS-12',
    'game-saiga': 'Saiga-12',
    'game-spas12': 'SPAS-12',
    'game-m9': 'M9',
    'game-m9_dual': 'Dual\x20M9',
    'game-hud-m9_dual': 'M9',
    'game-m9_cursed': 'M9\x20Cursed',
    'game-m93r': 'M93R',
    'game-m93r_dual': 'Dual\x20M93R',
    'game-hud-m93r_dual': 'M93R',
    'game-glock': 'G18C',
    'game-glock_dual': 'Dual\x20G18C',
    'game-hud-glock_dual': 'G18C',
    'game-p30l': 'P30L',
    'game-p30l_dual': 'Dual\x20P30L',
    'game-ot38': 'OT-38',
    'game-ot38_dual': 'Dual\x20OT-38',
    'game-hud-ot38_dual': 'OT-38',
    'game-ots38': 'OTs-38',
    'game-ots38_dual': 'Dual\x20OTs-38',
    'game-hud-ots38_dual': 'OTs-38',
    'game-deagle': 'DEagle\x2050',
    'game-deagle_dual': 'Dual\x20DEagle\x2050',
    'game-hud-deagle_dual': 'DEagle\x2050',
    'game-flare_gun': 'Flare\x20Gun',
    'game-flare_gun_dual': 'Dual\x20Flare\x20Gun',
    'game-hud-flare_gun_dual': 'Flare\x20Gun',
    'game-famas': 'FAMAS',
    'game-hk416': 'M416',
    'game-m4a1': 'M4A1-S',
    'game-mk12': 'Mk\x2012\x20SPR',
    'game-m249': 'M249',
    'game-qbb97': 'QBB-97',
    'game-scout_elite': 'Scout\x20Elite',
    'game-l86': 'L86A2',
    'game-awc': 'AWM-S',
    'game-scarssr': 'Mk\x2020\x20SSR',
    'game-model94': 'Model\x2094',
    'game-colt45': 'Peacemaker',
    'game-colt45_dual': 'Dual\x20Peacemaker',
    'game-hud-colt45_dual': 'Peacemaker',
    'game-mkg45': 'Mk45G',
    'game-m1911': 'M1911',
    'game-m1911_dual': 'Dual\x20M1911',
    'game-hud-m1911_dual': 'M1911',
    'game-m1a1': 'M1A1',
    'game-bar': 'BAR\x20M1918',
    'game-pkp': 'PKP\x20Pecheneg',
    'game-frag': 'Frag\x20Grenade',
    'game-hud-frag': 'Frag',
    'game-smoke': 'Smoke\x20Grenade',
    'game-hud-smoke': 'Smoke',
    'game-mirv': 'MIRV\x20Grenade',
    'game-hud-mirv': 'MIRV',
    'game-mirv_mini': 'MIRV\x20Grenade',
    'game-martyr_nade': 'Martyrdom',
    'game-strobe': 'Strobe',
    'game-hud-strobe': 'Strobe',
    'game-snowball': 'Snowball',
    'game-hud-snowball': 'Snowball',
    'game-snowball_heavy': 'Snowball',
    'game-potato': 'Potato',
    'game-hud-potato': 'Potato',
    'game-potato_heavy': 'Potato',
    'game-potato_cannon': 'Potato\x20Cannon',
    'game-potato_cannonball': 'Potato\x20Cannon',
    'game-potato_smg': 'Spud\x20Gun',
    'game-potato_smgshot': 'Spud\x20Gun',
    'game-bugle': 'Bugle',
    'game-barrel_01': 'a\x20barrel',
    'game-barrel_01b': 'a\x20barrel',
    'game-silo_01': 'a\x20silo',
    'game-oven_01': 'an\x20oven',
    'game-control_panel_01': 'Control\x20Panel',
    'game-control_panel_02': 'Control\x20Panel',
    'game-control_panel_03': 'a\x20computer\x20terminal',
    'game-control_panel_04': 'a\x20computer\x20terminal',
    'game-control_panel_06': 'a\x20computer\x20terminal',
    'game-power_box_01': 'a\x20power\x20box',
    'game-airdrop_crate_01': 'Air\x20Drop',
    'game-airdrop_crate_02': 'Air\x20Drop',
    'game-stove_01': 'a\x20stove',
    'game-grill_01': 'a\x20grill',
    'game-propane_01': 'a\x20propane\x20tank',
    'index-play-50v50': 'Play\x2050v50',
    'index-50v50': '50v50',
    'game-red-team': 'Red\x20Team',
    'game-blue-team': 'Blue\x20Team',
    'game-red-leader': 'Red\x20Commander',
    'game-blue-leader': 'Blue\x20Commander',
    'game-is-down': 'is\x20down',
    'game-is-dead': 'is\x20dead',
    'game-promoted-to': 'promoted\x20to',
    'game-youve-been-promoted-to': 'You\x27ve\x20been\x20promoted\x20to',
    'game-leader': 'Commander',
    'game-lieutenant': 'Lieutenant',
    'game-medic': 'Medic',
    'game-marksman': 'Marksman',
    'game-recon': 'Recon',
    'game-grenadier': 'Grenadier',
    'game-bugler': 'Bugler',
    'game-kill_leader': 'Kill\x20Leader',
    'game-the_hunted': 'The\x20Hunted',
    'game-last_man': 'Lone\x20Survivr',
    'game-woods_king': 'The\x20Woods\x20King',
    'game-healer': 'Medic',
    'game-demo': 'Demo',
    'game-tank': 'Tank',
    'game-scout': 'Scout',
    'game-sniper': 'Sniper',
    'game-assault': 'Assault',
    'game-select-class': 'SELECT\x20A\x20CLASS',
    'game-enter-game': 'ENTER\x20GAME',
    'game-leadership': 'Leadership',
    'game-leadership-desc': 'Max\x20adrenaline.</br>Increased\x20size.',
    'game-firepower': 'Firepower',
    'game-firepower-desc': 'High-capacity\x20magazines.',
    'game-gotw': 'Gift\x20of\x20the\x20Woods',
    'game-gotw-desc': 'Restore\x20health\x20over\x20time.</br>Increased\x20size.',
    'game-windwalk': 'Windwalk',
    'game-windwalk-desc': 'When\x20taking\x20fire,\x20gain\x20a\x20short\x20burst\x20of\x20speed.',
    'game-rare_potato': 'Rare\x20Potato',
    'game-rare_potato-desc': 'Always\x20rotate\x20to\x20a\x20high\x20quality\x20weapon.',
    'game-aoe_heal': 'Mass\x20Medicate',
    'game-aoe_heal-desc': 'Reviving\x20and\x20using\x20medical\x20items\x20affects\x20all\x20nearby\x20players.',
    'game-endless_ammo': 'Endless\x20Ammo',
    'game-endless_ammo-desc': 'Guns\x20always\x20reload\x20to\x20full.',
    'game-steelskin': 'Cast\x20Ironskin',
    'game-steelskin-desc': 'Take\x20reduced\x20damage\x20and\x20reflect\x20enemy\x20bullets.</br>Increased\x20size.',
    'game-splinter': 'Splinter\x20Rounds',
    'game-splinter-desc': 'Rounds\x20fragment\x20into\x20three\x20less\x20powerful\x20bullets.',
    'game-small_arms': 'Small\x20Arms',
    'game-small_arms-desc': 'Move\x20faster\x20with\x20weapons\x20deployed.</br>Decreased\x20size.',
    'game-takedown': 'Takedown',
    'game-takedown-desc': 'Kills\x20grant\x20health,\x20boost\x20and\x20a\x20short\x20burst\x20of\x20speed.',
    'game-field_medic': 'Combat\x20Medic',
    'game-field_medic-desc': 'Move\x20quickly\x20while\x20healing.',
    'game-tree_climbing': 'One\x20With\x20Nature',
    'game-tree_climbing-desc': 'Move\x20through\x20trees.\x20Move\x20faster\x20in\x20water.',
    'game-scavenger': 'Scavenger',
    'game-scavenger-desc': 'Obstacles\x20drop\x20additional\x20items\x20when\x20destroyed.',
    'game-scavenger_adv': 'Master\x20Scavenger',
    'game-scavenger_adv-desc': 'Obstacles\x20drop\x20additional\x20high-quality\x20items\x20when\x20destroyed.',
    'game-hunted': 'The\x20Hunted',
    'game-hunted-desc': 'Your\x20location\x20is\x20revealed\x20to\x20all\x20enemies.',
    'game-chambered': 'One\x20In\x20The\x20Chamber',
    'game-chambered-desc': 'First\x20and\x20last\x20round\x20in\x20each\x20magazine\x20deal\x20bonus\x20damage.</br>Does\x20not\x20apply\x20to\x20shotguns.',
    'game-martyrdom': 'Martyrdom',
    'game-martyrdom-desc': 'Release\x20several\x20live\x20grenades\x20upon\x20death.',
    'game-targeting': 'High-Value\x20Targets',
    'game-targeting-desc': 'Bullets\x20deal\x20bonus\x20damage\x20to\x20players\x20with\x20perks.',
    'game-bonus_45': '.45\x20In\x20The\x20Chamber',
    'game-bonus_45-desc': '.45\x20ACP\x20bullets\x20deal\x20bonus\x20damage.',
    'game-broken_arrow': 'Broken\x20Arrow',
    'game-broken_arrow-desc': 'Air\x20strikes\x20call\x20in\x20two\x20additional\x20fighters.',
    'game-fabricate': 'Fabricate',
    'game-fabricate-desc': 'Periodically\x20fill\x20your\x20pack\x20with\x20frag\x20grenades.',
    'game-self_revive': 'Revivify',
    'game-self_revive-desc': 'You\x20can\x20revive\x20yourself\x20when\x20downed.',
    'game-bonus_9mm': '9mm\x20Overpressure',
    'game-bonus_9mm-desc': '9mm\x20bullets\x20have\x20increased\x20speed,\x20range,\x20damage\x20and\x20spread.',
    'game-flak_jacket': 'Flak\x20Jacket',
    'game-flak_jacket-desc': 'Greatly\x20reduces\x20damage\x20from\x20explosions\x20and\x20shrapnel.',
    'game-explosive': 'Explosive\x20Rounds',
    'game-explosive-desc': 'Bullets\x20explode\x20on\x20impact.',
    'game-bonus_assault': 'Hollow-points',
    'game-bonus_assault-desc': 'All\x20your\x20bullets\x20deal\x20bonus\x20damage.',
    'game-inspiration': 'Inspiration',
    'game-inspiration-desc': 'Your\x20bugle\x20call\x20grants\x20nearby\x20allies\x20a\x20short\x20burst\x20of\x20speed.',
    'game-final_bugle': 'Last\x20Breath',
    'game-final_bugle-desc': 'When\x20you\x20die,\x20nearby\x20allies\x20are\x20bloodlusted\x20for\x20a\x20short\x20period\x20of\x20time.',
    'game-halloween_mystery': 'Trick\x20or\x20Treat?',
    'game-halloween_mystery-desc': 'Could\x20be\x20either.',
    'game-trick_nothing': 'One\x20With\x20Nothing',
    'game-trick_nothing-desc': 'Tricked!\x20This\x20perk\x20does\x20absolutely\x20nothing!',
    'game-trick_size': 'Feedership',
    'game-trick_size-desc': 'Tricked!\x20You\x20ate\x20too\x20much\x20chicken\x20and\x20grew\x20in\x20size!',
    'game-trick_m9': 'Dev\x20Troll\x20Special',
    'game-trick_m9-desc': 'Tricked!\x20You\x27ve\x20been\x20cursed\x20with\x20a\x20developer\x20\x27treat\x27!',
    'game-trick_chatty': 'Gabby\x20Ghost',
    'game-trick_chatty-desc': 'Tricked!\x20You\x27re\x20emoting\x20randomly!',
    'game-trick_drain': 'That\x20Sucks',
    'game-trick_drain-desc': 'Tricked!\x20You\x27re\x20bleeding\x20very,\x20very,\x20VERY\x20slowly!',
    'game-treat_9mm': 'Candy\x20Corn',
    'game-treat_9mm-desc': 'Treat!\x209mm\x20bullets\x20are\x20darker\x20and\x20deadlier.',
    'game-treat_12g': 'Red\x20Jelly\x20Beans',
    'game-treat_12g-desc': 'Treat!\x2012\x20gauge\x20pellets\x20are\x20darker\x20and\x20deadlier.',
    'game-treat_556': 'Sour\x20Apple\x20Belt',
    'game-treat_556-desc': 'Treat!\x205.56mm\x20bullets\x20are\x20darker\x20and\x20deadlier.',
    'game-treat_762': 'Blueberry\x20Taffy',
    'game-treat_762-desc': 'Treat!\x207.62mm\x20bullets\x20are\x20darker\x20and\x20deadlier.',
    'game-treat_super': 'Full\x20Size\x20OKAMI\x20Bar',
    'game-treat_super-desc': 'Super\x20Treat!\x20ALL\x20your\x20bullets\x20are\x20darker\x20and\x20deadlier.',
    'game-turkey_shoot': 'Perky\x20Shoot',
    'game-turkey_shoot-desc': 'Gobble,\x20gobble!',
    'game-xp-drop-desc': 'Pass\x20XP',
    'game-xp_book_tallow': 'Tallow\x27s\x20Journal',
    'game-xp_book_greene': 'Greene\x27s\x20Infinite\x20Wisdom',
    'game-xp_book_parma': 'The\x20PARMA\x20Papers',
    'game-xp_book_nevelskoy': 'The\x20Nevelskoy\x20Report',
    'game-xp_book_rinzo': 'Rinzō\x27s\x20Log',
    'game-xp_book_kuga': 'Memoirs\x20of\x20Kuga\x20Kairyū',
    'game-xp_glasses': 'Lenz\x27s\x20Spectacles',
    'game-xp_compass': 'Amélie\x27s\x20True\x20Compass',
    'game-xp_stump': 'Ravenstone\x27s\x20Bloody\x20Stump',
    'game-xp_bone': 'Bone\x20of\x20Gordon',
    'game-xp_donut': 'Cake\x20Donut'
};
function Go(p, b) {
    const XT = {
        'url': p,
        'type': 'GET'
    };
    j['ajax'](XT)['done'](XY => {
        b(null, XY);
    }
    )['fail'](XY => {
        b(XY);
    }
    );
}
const Pi = {
    'da': 'Dansk',
    'de': 'Deutsch',
    'en': 'English',
    'es': 'Español',
    'fr': 'Français',
    'it': 'Italiano',
    'nl': 'Nederlands',
    'pl': 'Polski',
    'pt': 'Português',
    'ru': 'Русский',
    'sv': 'Svenska',
    'vn': 'Tiếng\x20Việt',
    'tr': 'Türkçe',
    'jp': '日本語',
    'ko': '한국어',
    'th': 'ภาษาไทย',
    'zh-cn': '中文简体',
    'zh-tw': '中文繁體'
};
class Vo {
    ['acceptedLocales'] = Object['keys'](Pi);
    ['translations'] = {
        'en': Fo
    };
    ['locale'] = 'en';
    constructor() {
        this['locale'] = 'en';
    }
    ['detectLocale']() {
        let p = (navigator['language'] || navigator['userLanguage'])['toLowerCase']();
        const b = ['pt', 'de', 'es', 'fr', 'ko', 'ru', 'en'];
        for (let XT = 0x0; XT < b['length']; XT++)
            if (p['includes'](b[XT])) {
                p = b[XT];
                break;
            }
        for (let XY = 0x0; XY < this['acceptedLocales']['length']; XY++)
            if (p['includes'](this['acceptedLocales'][XY]))
                return this['acceptedLocales'][XY];
        return 'en';
    }
    ['setLocale'](p) {
        const b = this['acceptedLocales']['includes'](p) ? p : 'en';
        b != this['locale'] && (this['translations'][p] === void 0x0 ? Go('/l10n/' + p + '.json', (XT, XY) => {
            if (XT) {
                console['error']('Failed\x20loading\x20translation\x20data\x20for\x20locale\x20' + p);
                return;
            }
            this['translations'][p] = XY,
            this['setLocale'](p);
        }
        ) : (this['locale'] = b,
        this['localizeIndex']()));
    }
    ['getLocale']() {
        return this['locale'];
    }
    ['translate'](p) {
        return this['translations'][this['locale']][p] || this['translations']['en'][p] || '';
    }
    ['localizeIndex']() {
        j('*[data-l10n]')['each']( (p, b) => {
            const XT = j(b);
            let XY = XT['attr']('data-l10n');
            XT['hasClass']('help-control') && k['touch'] && (XY += '-touch');
            const XC = this['translate'](XY);
            XC && (XT['attr']('label') ? XT['attr']('label', XC) : (XT['html'](XC),
            XT['attr']('data-label') && XT['attr']('data-label', XC)));
        }
        );
    }
    ['populateLanguageSelect']() {
        const p = j('.language-select');
        p['empty']();
        for (let b = 0x0; b < this['acceptedLocales']['length']; b++) {
            const XT = this['acceptedLocales'][b]
              , XY = Pi[XT];
            p['append'](j('<option>', {
                'value': XT,
                'text': XY
            }));
        }
    }
}
function Ci(p, b, XT, XY) {
    const XC = j('<div/>', {
        'class': 'copy-toast',
        'html': p
    });
    b['append'](XC),
    XC['css']({
        'left': XY['pageX'] - parseInt(XC['css']('width')) / 0x2,
        'top': XT['offset']()['top']
    }),
    XC['animate']({
        'top': '-=25',
        'opacity': 0x1
    }, {
        'queue': !0x1,
        'duration': 0x12c,
        'complete': function() {
            j(this)['fadeOut'](0xfa, function() {
                j(this)['remove']();
            });
        }
    });
}
function Uo(b, XT) {
    const XY = j('#start-menu');
    j('#btn-help')['click']( () => {
        const p2 = j('#start-help');
        XY['addClass']('display-help');
        const p3 = XY['css']('height');
        return p2['css']('display', 'block'),
        XY['animate']({
            'scrollTop': p3
        }, 0x3e8),
        !0x1;
    }
    );
    const XC = j('#team-mobile-link')
      , Xl = j('#team-mobile-link-desc')
      , Xd = j('#team-mobile-link-warning')
      , Xk = j('#team-link-input')
      , XU = j('#social-share-block')
      , XW = j('#news-block');
    j('#btn-join-team')['click']( () => (j('#server-warning')['css']('display', 'none'),
    Xk['val'](''),
    XC['css']('display', 'block'),
    Xl['css']('display', 'block'),
    Xd['css']('display', 'none'),
    XY['css']('display', 'none'),
    XW['css']('display', 'none'),
    XU['css']('display', 'none'),
    j('#right-column')['css']('display', 'none'),
    !0x1)),
    j('#btn-team-mobile-link-leave')['click']( () => (XC['css']('display', 'none'),
    Xk['val'](''),
    XY['css']('display', 'block'),
    XW['css']('display', 'block'),
    XU['css']('display', 'block'),
    j('#right-column')['css']('display', 'block'),
    !0x1)),
    j('#team-link-input')['on']('keypress', function(p2) {
        (p2['which'] || p2['keyCode']) === 0xd && (j('#btn-team-mobile-link-join')['trigger']('click'),
        j(this)['blur']());
    }),
    j('#player-name-input-solo')['on']('keypress', function(p2) {
        (p2['which'] || p2['keyCode']) === 0xd && j(this)['blur']();
    }),
    k['mobile'] && k['os'] != 'ios' && (j('#player-name-input-solo')['on']('focus', function() {
        if (k['isLandscape']) {
            const p2 = k['screenHeight'] <= 0x11a ? 0x12 : 0x24;
            document['body']['scrollTop'] = j(this)['offset']()['top'] - p2;
        }
    }),
    j('#player-name-input-solo')['on']('blur', () => {
        document['body']['scrollTop'] = 0x0;
    }
    ));
    const XD = j('#start-bottom-right')
      , XG = j('#start-top-left')
      , XF = j('#start-top-right')
      , XH = new de(j('#ui-modal-keybind'));
    XH['onShow']( () => {
        XD['fadeOut'](0xc8),
        XF['fadeOut'](0xc8),
        j('#ui-modal-keybind-share')['css']('display', 'none'),
        j('#keybind-warning')['css']('display', 'none'),
        j('#ui-modal-keybind-list')['css']('height', '420px'),
        j('#keybind-code-input')['html'](''),
        XT['refresh']();
    }
    ),
    XH['onHide']( () => {
        XD['fadeIn'](0xc8),
        XF['fadeIn'](0xc8),
        XT['cancelBind']();
    }
    ),
    j('.btn-keybind')['click']( () => (XH['show'](),
    !0x1)),
    j('.js-btn-keybind-share')['click']( () => {
        j('#ui-modal-keybind-share')['css']('display') == 'block' ? (j('#ui-modal-keybind-share')['css']('display', 'none'),
        j('#ui-modal-keybind-list')['css']('height', '420px')) : (j('#ui-modal-keybind-share')['css']('display', 'block'),
        j('#ui-modal-keybind-list')['css']('height', '275px'));
    }
    ),
    j('#keybind-link,\x20#keybind-copy')['click'](p2 => {
        Ci('Copied!', XH['selector'], j('#keybind-link'), p2);
        const p3 = j('#keybind-link')['html']();
        Q['copyTextToClipboard'](p3);
    }
    ),
    j('#btn-keybind-code-load')['on']('click', p2 => {
        const p3 = j('#keybind-code-input')['val']();
        j('#keybind-code-input')['val']('');
        const p4 = b['fromBase64'](String(p3));
        j('#keybind-warning')['css']('display', p4 ? 'none' : 'block'),
        p4 && (Ci('Loaded!', XH['selector'], j('#btn-keybind-code-load'), p2),
        b['saveBinds']()),
        XT['refresh']();
    }
    );
    const p0 = new de(j('#modal-settings'));
    p0['onShow']( () => {
        XD['fadeOut'](0xc8),
        XF['fadeOut'](0xc8);
    }
    ),
    p0['onHide']( () => {
        XD['fadeIn'](0xc8),
        XF['fadeIn'](0xc8);
    }
    ),
    j('.btn-settings')['click']( () => (p0['show'](),
    !0x1)),
    j('.modal-settings-text')['click'](function(p2) {
        const p3 = j(this)['siblings']('input:checkbox');
        p3['prop']('checked', !p3['is'](':checked')),
        p3['trigger']('change');
    });
    const p1 = new de(j('#modal-hamburger'));
    p1['onShow']( () => {
        XG['fadeOut'](0xc8);
    }
    ),
    p1['onHide']( () => {
        XG['fadeIn'](0xc8);
    }
    ),
    j('#btn-hamburger')['click']( () => (p1['show'](),
    !0x1)),
    j('.modal-body-text')['click'](function() {
        const p2 = j(this)['siblings']('input:checkbox');
        p2['prop']('checked', !p2['is'](':checked')),
        p2['trigger']('change');
    }),
    j('#force-refresh')['click']( () => {
        window['location']['href'] = '/?t=' + Date['now']();
    }
    );
}
function Ho() {
    k['os'] == 'ios' && (k['model'] == 'iphonex' ? k['isLandscape'] ? j('.main-volume-slider')['css']('width', '90%') : j('.main-volume-slider')['css']('width', '') : window['navigator']['standalone'] || (k['isLandscape'] ? (j('#start-main-center')['attr']('style', ''),
    j('#modal-customize\x20.modal-content')['attr']('style', '')) : j('#modal-customize\x20.modal-content')['css']({
        'transform': 'translate(-50%,\x20-50%)\x20scale(0.45)',
        'top': '38%'
    }))),
    k['tablet'] && (j('#featured-youtuber')['remove'](),
    j('.btn-youtube')['remove']()),
    k['touch'] ? j('.btn-start-fullscreen')['css']('display', 'none') : j('.btn-start-fullscreen')['css']('display', 'block'),
    j('.btn-keybind')['css']('display', k['mobile'] ? 'none' : 'inline-block');
}
function Wo(p) {
    j('#team-hide-url')['css']('display', 'none'),
    p && j('#start-bottom-middle')['addClass']('start-bottom-middle-tablet');
}
const zt = {
    'setupModals': Uo,
    'onResize': Ho,
    'applyMobileBrowserStyling': Wo
};
class $o {
    constructor(p, b, XT, XY, XC) {
        this['pixi'] = p,
        this['audioManager'] = b,
        this['config'] = XT,
        this['inputBinds'] = XY,
        this['account'] = XC;
    }
    ['active'] = !0x1;
    ['initialized'] = !0x1;
    ['canvasMode'];
    ['camera'];
    ['renderer'];
    ['particleBarn'];
    ['decalBarn'];
    ['map'];
    ['playerBarn'];
    ['smokeBarn'];
    ['objectCreator'];
    ['debugDisplay'];
    ['loadout'];
    ['view'];
    ['viewOld'];
    ['cameraOffset'] = v['create'](0x0, 0x0);
    ['q'] = 0x1;
    ['debugZoom'] = 0x1;
    ['useDebugZoom'] = !0x1;
    ['outfitOld'];
    ['animIdleTicker'];
    ['animSeq'];
    ['actionSeq'];
    ['activeId'] = 0x62;
    ['activePlayer'];
    ['init']() {
        this['canvasMode'] = this['pixi']['renderer']['type'] == R['CANVAS'],
        this['camera'] = new Ui(),
        this['renderer'] = new ar(this,this['canvasMode']),
        this['particleBarn'] = new Ji(this['renderer']),
        this['decalBarn'] = new Yi(),
        this['map'] = new Zi(this['decalBarn']),
        this['playerBarn'] = new ir(),
        this['smokeBarn'] = new rr();
        const p = {
            [X2['Player']]: this['playerBarn']['playerPool'],
            [X2['Obstacle']]: this['map']['NmwMZ'],
            [X2['Building']]: this['map']['nNUjss'],
            [X2['Structure']]: this['map']['JCfHy'],
            [X2['Decal']]: this['decalBarn']['decalPool'],
            [X2['Smoke']]: this['smokeBarn']['LbSzdS']
        };
        this['objectCreator'] = new Qi();
        for (const XT in p)
            p['hasOwnProperty'](XT) && this['objectCreator']['ACE'](XT, p[XT]);
        this['debugDisplay'] = new r();
        const b = [this['map']['display']['ground'], this['renderer']['layers'][0x0], this['renderer']['ground'], this['renderer']['layers'][0x1], this['renderer']['layers'][0x2], this['renderer']['layers'][0x3], this['debugDisplay']];
        for (let XY = 0x0; XY < b['length']; XY++) {
            const XC = b[XY];
            XC && (XC['interactiveChildren'] = !0x1,
            this['pixi']['stage']['addChild'](XC));
        }
        this['loadout'] = le['defaultLoadout'](),
        this['setLoadout'](this['loadout']),
        this['view'] = 'outfit',
        this['viewOld'] = this['view'],
        this['outfitOld'] = this['loadout']['outfit'],
        this['map']['loadMap']({
            'grassInset': 0x12,
            'groundPatches': [],
            'height': 0x2d0,
            'mapName': 'main',
            'objects': [],
            'places': [],
            'rivers': [],
            'seed': 0xcff3446,
            'shoreInset': 0x30,
            'width': 0x2d0
        }, this['camera'], this['canvasMode'], this['particleBarn']),
        this['activePlayer'] = this['playerBarn']['getPlayerById'](this['activeId']),
        this['activePlayer']['BOCg']({
            'boost': 0x64,
            'boostDirty': !0x0,
            'hasAction': !0x1,
            'health': 0x64,
            'inventoryDirty': !0x1,
            'scopedIn': !0x1,
            'spectatorCountDirty': !0x1,
            'weapsDirty': !0x0,
            'curWeapIdx': 0x2,
            'weapons': [{
                'name': '',
                'ammo': 0x0
            }, {
                'name': '',
                'ammo': 0x0
            }, {
                'name': 'bayonet_rugged',
                'ammo': 0x0
            }, {
                'name': '',
                'ammo': 0x0
            }]
        }, this['playerBarn']),
        this['activePlayer']['layer'] = this['activePlayer']['QDvlP']['fgCE'],
        this['activePlayer']['isLoadoutAvatar'] = !0x0,
        this['renderer']['setActiveLayer'](this['activePlayer']['layer']),
        this['audioManager']['activeLayer'] = this['activePlayer']['layer'],
        this['animIdleTicker'] = 0x3,
        this['animSeq'] = 0x0,
        this['actionSeq'] = 0x0,
        this['hide'](),
        this['account']['addEventListener']('loadout', Xl => {
            this['setLoadout'](Xl, !0x0);
        }
        ),
        this['setLoadout'](this['account']['loadout'], !0x0),
        this['initialized'] = !0x0,
        this['resize']();
    }
    ['free']() {
        if (this['initialized'])
            for (this['map']['dphRtI'](),
            this['particleBarn']['dphRtI'](),
            this['renderer']['dphRtI'](); this['pixi']['stage']['children']['length'] > 0x0; ) {
                const p = this['pixi']['stage']['children'][0x0];
                this['pixi']['stage']['removeChild'](p),
                p['destroy']({
                    'children': !0x0
                });
            }
        this['initialized'] = !0x1;
    }
    ['setLoadout'](p, b) {
        this['loadout'] = le['validate'](p),
        this['updateCharDisplay'](),
        b && (this['outfitOld'] = this['loadout']['outfit']),
        this['activePlayer'] && (this['activePlayer']['playActionStartSfx'] = !0x0),
        this['animIdleTicker'] = 0x0;
    }
    ['setView'](p) {
        this['viewOld'] = this['view'],
        this['view'] = p;
    }
    ['updateCharDisplay'](p={}) {
        const b = {
            'audioManager': this['audioManager'],
            'renderer': this['renderer'],
            'particleBarn': this['particleBarn'],
            'map': this['map'],
            'smokeBarn': this['smokeBarn'],
            'decalBarn': this['decalBarn']
        };
        this['activePlayer']?.['useItemEmitter'] && (this['activePlayer']['useItemEmitter']['stop'](),
        this['activePlayer']['useItemEmitter'] = null,
        this['animIdleTicker'] = 0x0);
        const XT = {
            'outfit': this['loadout']['outfit'],
            'backpack': 'backpack02',
            'helmet': 'helmet01',
            'chest': 'chest03',
            'activeWeapon': this['loadout']['melee'],
            'layer': 0x0,
            'dead': !0x1,
            'downed': !0x1,
            'animType': p['animType'] || 0x0,
            'animSeq': p['animSeq'] || 0x0,
            'actionSeq': p['actionSeq'] || 0x0,
            'actionType': p['actionType'] || 0x0,
            'actionItem': p['actionItem'] || '',
            'wearingPan': !0x1,
            'healEffect': !0x1,
            'frozen': !0x1,
            'frozenOri': 0x0,
            'hasteType': 0x0,
            'hasteSeq': 0x0,
            'scale': 0x1,
            'role': '',
            'perks': [],
            '$r': !0x1,
            'pos': v['create'](0x32, 0x32),
            'dir': v['create'](0x0, -0x1)
        };
        this['objectCreator']['gLpEK'](X2['Player'], 0x62, XT, b),
        this['playerBarn']['setPlayerInfo']({
            'playerId': 0x62,
            'teamId': 0x0,
            'groupId': 0x0,
            'name': '',
            'loadout': {
                'heal': this['loadout']['heal'],
                'boost': this['loadout']['boost']
            }
        });
    }
    ['getCameraTargetZoom']() {
        return document['getElementById']('modal-content-left')['getBoundingClientRect']()['height'] / this['camera']['lZjK'] * 0.2 * this['camera']['lZjK'] * 0.5 / this['camera']['xQaJqu'];
    }
    ['getCameraLoadoutOffset']() {
        const b = this['camera']['BsPd']
          , XT = this['getCameraTargetZoom']();
        this['camera']['BsPd'] = XT;
        const XY = document['getElementById']('modal-content-left')['getBoundingClientRect']()
          , XC = T['createAabb'](this['camera']['vrnvjL'](v['create'](XY['left'], XY['top'] + XY['height'])), this['camera']['vrnvjL'](v['create'](XY['left'] + XY['width'], XY['top'])))
          , Xl = v['mul'](v['sub'](XC['max'], XC['min']), 0.5)
          , Xd = v['add'](XC['min'], Xl)
          , Xk = T['createAabb'](this['camera']['vrnvjL'](v['create'](0x0, this['camera']['lZjK'])), this['camera']['vrnvjL'](v['create'](this['camera']['pmhI'], 0x0)))
          , XU = v['mul'](v['sub'](Xk['max'], Xk['min']), 0.5)
          , XW = v['add'](Xk['min'], XU)
          , XD = v['sub'](Xd, XW)
          , XG = XU['x'] - XD['x'] - Xl['x']
          , XF = e['clamp'](XG * 0.5, 2.5, 0x6)
          , XH = v['create'](XD['x'] + Xl['x'] + XF, XD['y'] + 0.33);
        return this['camera']['BsPd'] = b,
        XH;
    }
    ['show']() {
        this['active'] || (this['active'] = !0x0,
        this['resize']());
    }
    ['hide']() {
        this['active'] && (this['active'] = !0x1,
        this['camera']['BsPd'] = 0x2);
    }
    ['update'](p, b) {
        const XT = {};
        if (this['camera']['NLYJ'] = v['sub'](this['activePlayer']['NLYJ'], this['cameraOffset']),
        this['camera']['BsPd'] = e['lerp'](p * 0x5, this['camera']['BsPd'], this['camera']['QwZT']),
        this['audioManager']['cameraPos'] = v['copy'](this['camera']['NLYJ']),
        b && (this['view'] == this['viewOld'] || this['view'] != 'heal' && this['view'] != 'boost' || (this['animIdleTicker'] = 0x0),
        this['viewOld'] = this['view'],
        this['animIdleTicker'] -= p,
        this['animIdleTicker'] < 0x0)) {
            if (this['view'] == 'heal') {
                this['actionSeq'] = (this['actionSeq'] + 0x1) % 0x8;
                const XC = {
                    'actionType': L['Action']['UseItem'],
                    'actionItem': 'bandage',
                    'actionSeq': this['actionSeq']
                };
                this['updateCharDisplay'](XC),
                this['animIdleTicker'] = 0x2 + Math['random']();
            } else {
                if (this['view'] == 'boost') {
                    this['actionSeq'] = (this['actionSeq'] + 0x1) % 0x8;
                    const Xl = {
                        'actionType': L['Action']['UseItem'],
                        'actionItem': 'soda',
                        'actionSeq': this['actionSeq']
                    };
                    this['updateCharDisplay'](Xl),
                    this['animIdleTicker'] = 0x2 + Math['random']();
                } else {
                    if (this['view'] != 'emote' && this['view'] != 'crosshair') {
                        this['animSeq'] = (this['animSeq'] + 0x1) % 0x8;
                        const Xd = {
                            'animType': L['Anim']['Melee'],
                            'animSeq': this['animSeq']
                        };
                        this['updateCharDisplay'](Xd),
                        this['animIdleTicker'] = 1.5 + Math['random']();
                    }
                }
            }
        }
        const XY = this['loadout']['outfit'] != this['outfitOld'];
        if (this['outfitOld'] = this['loadout']['outfit'],
        b && XY) {
            const Xk = w[this['loadout']['outfit']];
            Xk && this['audioManager']['playSound'](Xk['sound']['pickup'], {
                'channel': 'ui'
            });
        }
        this['playerBarn']['Gxhh'](p, this['activeId'], this['teamMode'], this['renderer'], this['particleBarn'], this['camera'], this['map'], this['inputBinds'], this['audioManager'], !0x1, !0x1, !0x1),
        this['smokeBarn']['Gxhh'](p, this['camera'], this['activePlayer'], this['map'], this['renderer']),
        this['particleBarn']['Gxhh'](p, this['camera'], XT),
        this['decalBarn']['Gxhh'](p, this['camera'], this['renderer'], XT),
        this['renderer']['Gxhh'](p, this['camera'], this['map'], XT),
        this['activePlayer']['playActionStartSfx'] = !0x1,
        this['render'](p, XT);
    }
    ['render'](p, b) {
        const XT = this['map']['mapLoaded'] ? this['map']['getMapDef']()['biome']['colors']['grass'] : 0x80af49;
        this['pixi']['renderer']['background']['color'] = XT,
        this['playerBarn']['Dgc'](this['camera'], b),
        this['map']['Dgc'](this['camera']),
        he['Dgc'](this['camera'], this['debugDisplay']),
        he['flush']();
    }
    ['resize']() {
        this['initialized'] && (this['camera']['pmhI'] = k['screenWidth'],
        this['camera']['lZjK'] = k['screenHeight'],
        this['map']['resize'](this['pixi']['renderer'], this['canvasMode']),
        this['renderer']['resize'](this['map'], this['camera']),
        this['camera']['QwZT'] = this['getCameraTargetZoom'](),
        this['cameraOffset'] = this['getCameraLoadoutOffset']());
    }
}
const Di = 0x63
  , Ae = {
    'getPassMaxLevel': function() {
        return Di;
    },
    'getPassLevelXp': function(p, b) {
        const XT = XK[p]
          , XY = b - 0x1;
        return XY < XT['xp']['length'] ? XT['xp'][XY] : XT['xp'][XT['xp']['length'] - 0x1];
    },
    'getPassLevelAndXp': function(p, b) {
        let XT = b
          , XY = 0x1;
        for (; XY < Di; ) {
            const XC = Ae['getPassLevelXp'](p, XY);
            if (XT < XC)
                break;
            XT -= XC,
            XY++;
        }
        return {
            'level': XY,
            'xp': XT,
            'nextLevelXp': Ae['getPassLevelXp'](p, XY)
        };
    },
    'timeUntilQuestRefresh': function(p) {
        return Math['floor']((p - 0x1808580 + 0x5265c00 - 0x1) / 0x5265c00) * 0x5265c00 + 0x1808580 - Date['now']();
    }
};
function Li(p, b) {
    for (let XT = XK[p], XY = 0x0; XY < XT['items']['length']; XY++)
        if (XT['items'][XY]['level'] == b + 0x1)
            return XT['items'][XY]['item'];
    return '';
}
function bt(p, b=!0x1) {
    const XT = Math['floor'](Math['ceil'](p / 0x3c) / 0x3c)
      , XY = b ? Math['floor'](p / 0x3c) % 0x3c : Math['ceil'](p / 0x3c) % 0x3c;
    let XC = '';
    return XT > 0x0 && (XC += XT + 'h\x20'),
    XC += XY + 'm';
}
class Qo {
    constructor(p, b, XT) {
        this['account'] = p,
        this['loadoutMenu'] = b,
        this['localization'] = XT,
        this['account'] = p,
        this['loadoutMenu'] = b,
        this['localization'] = XT,
        this['account']['addEventListener']('request', this['onRequest']['bind'](this)),
        this['account']['addEventListener']('pass', this['onPass']['bind'](this)),
        this['loadPlaceholders'](),
        j('#pass-progress-unlock-wrapper')['hover']( () => {
            j('#pass-unlock-tooltip')['fadeIn'](0x32);
        }
        , () => {
            j('#pass-unlock-tooltip')['fadeOut'](0x32);
        }
        );
    }
    ['pass'] = {
        'data': {
            'type': 'pass_survivr1'
        },
        'currentXp': 0x0,
        'currentLevel': 0x1,
        'levelXp': 0x0,
        'ticker': 0x0,
        'animSteps': [],
        'elems': {}
    };
    ['quests'] = [];
    ['loaded'] = !0x1;
    ['lockDisplayed'] = !0x1;
    ['updatePass'] = !0x1;
    ['updatePassTicker'] = 0x0;
    ['onPass'](b, XT, XY) {
        const XC = [];
        let Xl = 0x0;
        for (let XF = 0x0; XF < XT['length']; XF++)
            (XH => {
                const p0 = XT[XH]
                  , p1 = {
                    'data': p0,
                    'start': 0x0,
                    'current': 0x0,
                    'ticker': 0x0,
                    'delay': Xl * 0.5,
                    'playCompleteAnim': !0x1,
                    'progressAnimFinished': !0x1,
                    'completeAnimFinished': !0x1,
                    'shouldRequestRefresh': XY,
                    'refreshTime': Date['now']() + p0['timeToRefresh'] + 0x1388,
                    'refreshSet': !0x1,
                    'refreshEnabled': !0x1,
                    'timer': {
                        'enabled': !0x1,
                        'str': ''
                    }
                }
                  , p2 = this['quests']['find'](p8 => p8['data']['idx'] == p1['data']['idx'] && p8['data']['type'] == p1['data']['type']);
                p2 && (p1['start'] = p2['current'],
                p1['current'] = p2['current'],
                !p2['data']['complete'] && p1['data']['complete'] && (p1['playCompleteAnim'] = !0x0)),
                p1['data']['progress'] = e['min'](p1['data']['progress'], p1['data']['target']),
                p1['data']['progress'] > p1['current'] && Xl++;
                const p3 = j('#pass-quest-' + p1['data']['idx']);
                p1['elems'] = {
                    'main': p3,
                    'xp': p3['find']('.pass-quest-xp'),
                    'info': p3['find']('.pass-quest-info'),
                    'desc': p3['find']('.pass-quest-desc'),
                    'cur': p3['find']('.pass-quest-counter-current'),
                    'target': p3['find']('.pass-quest-counter-target'),
                    'refresh': p3['find']('.pass-quest-refresh'),
                    'refreshPrompt': p3['find']('.pass-quest-refresh-prompt'),
                    'refreshConfirm': p3['find']('.pass-quest-refresh-confirm'),
                    'refreshCancel': p3['find']('.pass-quest-refresh-cancel'),
                    'counter': p3['find']('.pass-quest-counter'),
                    'barFill': p3['find']('.pass-quest-bar-fill'),
                    'timer': p3['find']('.pass-quest-timer'),
                    'loading': p3['find']('.pass-quest-spinner')
                },
                p1['elems']['barFill']['clearQueue'](),
                p1['elems']['main']['removeClass']('pass-bg-pulse'),
                p1['elems']['main']['stop']()['css']({
                    'opacity': 0x1
                }),
                p1['elems']['xp']['removeClass']('pass-text-pulse'),
                p1['elems']['refresh']['stop']()['css']({
                    'opacity': 0x1
                }),
                p1['elems']['counter']['stop']()['css']({
                    'opacity': 0x1
                });
                const p4 = Xm[p1['data']['type']]
                  , p5 = this['localization']['translate']('' + p1['data']['type']) || p1['data']['type']
                  , p6 = p1['current'] / p1['data']['target'] * 0x64;
                p1['elems']['main']['css']('display', 'block'),
                p1['elems']['desc']['html'](p5),
                p1['elems']['cur']['html'](Math['round'](p1['current'])),
                p1['elems']['xp']['html'](p4['xp'] + '\x20XP'),
                p1['elems']['barFill']['css']({
                    'width': p6 + '%'
                }),
                p1['elems']['loading']['css']('display', 'none');
                let p7 = p1['data']['target'];
                p4['timed'] && (p7 = bt(p7)),
                p1['elems']['target']['html'](p7),
                p4['icon'] ? (p1['elems']['desc']['addClass']('pass-quest-desc-icon'),
                p1['elems']['desc']['css']({
                    'background-image': 'url(' + p4['icon'] + ')'
                })) : (p1['elems']['desc']['removeClass']('pass-quest-desc-icon'),
                p1['elems']['desc']['attr']('style', '')),
                this['setQuestRefreshEnabled'](p1),
                XC['push'](p1);
            }
            )(XF);
        if (this['quests'] = XC,
        this['pass']['data'] = b,
        this['pass']['animSteps'] = [],
        this['pass']['currentXp'] = Math['round'](this['pass']['currentXp']),
        this['pass']['levelXp'] = Ae['getPassLevelXp'](b['type'], this['pass']['currentLevel']),
        !this['loaded']) {
            const XH = Ae['getPassLevelXp'](b['type'], b['level']);
            this['pass']['currentXp'] = 0x0,
            this['pass']['currentLevel'] = b['level'],
            this['pass']['levelXp'] = XH,
            this['pass']['ticker'] = 0x0;
        }
        let Xd = this['pass']['currentLevel']
          , Xk = this['pass']['currentXp'];
        if (this['loaded']) {
            for (; Xd < b['level']; ) {
                const p1 = Ae['getPassLevelXp'](b['type'], Xd);
                this['pass']['animSteps']['push']({
                    'startXp': Xk,
                    'targetXp': p1,
                    'levelXp': p1,
                    'targetLevel': Xd + 0x1
                }),
                Xd++,
                Xk = 0x0;
            }
            const p0 = Xl > 0x0 ? 0x2 : 0x0;
            this['pass']['ticker'] = -p0;
        }
        const XU = Ae['getPassLevelXp'](b['type'], Xd);
        this['pass']['animSteps']['push']({
            'startXp': Xk,
            'targetXp': b['xp'],
            'levelXp': XU,
            'targetLevel': Xd
        }),
        j('#pass-block')['css']('z-index', '1'),
        j('#pass-locked')['css']('display', 'none'),
        j('#pass-loading')['css']('display', 'none');
        const XW = Li(this['pass']['data']['type'], this['pass']['currentLevel']);
        this['setPassUnlockImage'](XW);
        const XD = this['localization']['translate'](b['type'])['toUpperCase']();
        j('#pass-name-text')['html'](XD),
        j('#pass-progress-level')['html'](this['pass']['currentLevel']),
        j('#pass-progress-xp-current')['html'](this['pass']['currentXp']),
        j('#pass-progress-xp-target')['html'](this['pass']['levelXp']);
        const XG = this['pass']['currentXp'] / this['pass']['levelXp'] * 0x64;
        j('#pass-progress-bar-fill')['css']({
            'width': XG + '%'
        }),
        this['loaded'] = !0x0;
    }
    ['onRequest'](p) {
        j('#pass-loading')['css']('display', p['loggingIn'] ? 'block' : 'none');
    }
    ['scheduleUpdatePass'](p) {
        this['updatePass'] = !0x0,
        this['updatePassTicker'] = p;
    }
    ['setQuestRefreshEnabled'](p) {
        const b = !p['data']['rerolled'] && !p['data']['complete'] || p['refreshTime'] - Date['now']() < 0x0;
        (b != p['refreshEnabled'] || !p['refreshSet']) && (p['refreshEnabled'] = b,
        p['refreshSet'] = !0x0,
        p['elems']['refresh']['off']('click'),
        p['elems']['refreshConfirm']['off']('click'),
        p['elems']['refreshCancel']['off']('click'),
        p['refreshEnabled'] ? (p['elems']['refreshConfirm']['on']('click', () => {
            p['elems']['loading']['css']('display', 'block'),
            p['elems']['refreshPrompt']['css']('display', 'none'),
            this['account']['refreshQuest'](p['data']['idx']);
        }
        ),
        p['elems']['refreshCancel']['on']('click', () => {
            p['elems']['refreshPrompt']['css']('display', 'none'),
            p['elems']['info']['css']('display', 'block');
        }
        ),
        p['elems']['refresh']['on']('click', () => {
            p['elems']['refreshPrompt']['css']('display', 'block'),
            p['elems']['info']['css']('display', 'none');
        }
        ),
        p['elems']['refresh']['removeClass']('pass-quest-refresh-disabled')) : p['elems']['refresh']['addClass']('pass-quest-refresh-disabled'));
    }
    ['setPassUnlockImage'](p) {
        const b = w[p]
          , XT = 'url(' + (b ? Q['getSvgFromGameType'](p) : 'img/emotes/surviv.svg') + ')'
          , XY = Q['getCssTransformFromGameType'](p);
        j('#pass-progress-unlock')['css']({
            'opacity': b ? 0x1 : 0.15,
            'transform': 'translate(-50%,\x20-50%)\x20' + XY
        }),
        j('#pass-progress-unlock-image')['css']({
            'background-image': XT
        });
        const XC = b ? this['localization']['translate']('loadout-title-' + this['loadoutMenu']['getCategory'](b['type'])['loadoutType'])['toUpperCase']() : ''
          , Xl = j('#pass-unlock-tooltip');
        Xl['css']('opacity', b ? 0x1 : 0x0),
        Xl['find']('.tooltip-pass-title')['html'](XC),
        Xl['find']('.tooltip-pass-desc')['html'](b ? b['name'] : '');
        const Xd = b ? 'url(' + this['loadoutMenu']['getCategory'](b['type'])['categoryImage'] + ')' : '';
        j('#pass-progress-unlock-type-image')['css']({
            'background-image': Xd
        }),
        j('#pass-progress-unlock-type-wrapper')['css']({
            'display': b ? 'block' : 'none'
        });
    }
    ['animatePassLevelUp']() {
        const p = j('#pass-progress-bar-fill')
          , b = j('#pass-progress-level')
          , XT = j('#pass-progress-unlock-wrapper')
          , XY = j('#pass-progress-unlock-image')
          , XC = j('#pass-progress-unlock-type-image');
        b['html'](this['pass']['currentLevel']),
        p['queue'](Xl => {
            XT['addClass']('pass-unlock-pulse'),
            j(Xl)['dequeue']();
        }
        )['delay'](0x2ee)['queue'](Xl => {
            XY['animate']({
                'opacity': 0x0
            }, 0xfa),
            XC['animate']({
                'opacity': 0x0
            }, 0xfa),
            j(Xl)['dequeue']();
        }
        )['delay'](0xfa)['queue'](Xl => {
            const Xd = Li(this['pass']['data']['type'], this['pass']['currentLevel']);
            this['setPassUnlockImage'](Xd),
            XT['removeClass']('pass-unlock-pulse'),
            XY['animate']({
                'opacity': 0x1
            }, 0xfa),
            XC['animate']({
                'opacity': 0x1
            }, 0xfa),
            j(Xl)['dequeue']();
        }
        );
    }
    ['animateQuestComplete'](p) {
        p['elems']['barFill']['queue'](b => {
            p['elems']['main']['addClass']('pass-bg-pulse'),
            p['elems']['xp']['addClass']('pass-text-pulse'),
            p['elems']['refresh']['animate']({
                'opacity': 0.25
            }, 0xfa),
            p['elems']['refresh']['removeClass']('pass-quest-refresh-disabled'),
            p['elems']['refresh']['animate']({
                'opacity': 0x0
            }, 0xfa),
            p['elems']['counter']['animate']({
                'opacity': 0x0
            }, 0xfa),
            p['elems']['desc']['html']('QUEST\x20COMPLETE!'),
            j(b)['dequeue']();
        }
        )['delay'](0x3e8)['queue'](b => {
            p['elems']['main']['animate']({
                'opacity': 0x0
            }, 0x2ee),
            j(b)['dequeue']();
        }
        );
    }
    ['update'](p) {
        this['updatePassTicker'] -= p,
        this['updatePass'] && this['updatePassTicker'] < 0x0 && (this['updatePass'] = !0x1,
        this['account']['getPass'](!0x1));
        for (let b = 0x0; b < this['quests']['length']; b++) {
            const XT = this['quests'][b];
            if (this['setQuestRefreshEnabled'](XT),
            XT['ticker'] += p,
            !XT['progressAnimFinished']) {
                const Xl = e['clamp']((XT['ticker'] - XT['delay']) / 0x1, 0x0, 0x1);
                XT['current'] = e['lerp'](e['easeOutExpo'](Xl), XT['start'], XT['data']['progress']);
                const Xd = XT['current'] / XT['data']['target'] * 0x64
                  , Xk = Xm[XT['data']['type']];
                let XU = Math['round'](XT['current']);
                Xk['timed'] && (XU = bt(XU, !0x0)),
                XT['elems']['cur']['html'](XU),
                XT['elems']['barFill']['css']({
                    'width': Xd + '%'
                }),
                Xl >= 0x1 && (XT['progressAnimFinished'] = !0x0);
            }
            XT['playCompleteAnim'] && !XT['completeAnimFinished'] && XT['ticker'] - XT['delay'] > 1.25 && (this['animateQuestComplete'](XT),
            XT['completeAnimFinished'] = !0x0);
            const XY = !XT['playCompleteAnim'] || XT['completeAnimFinished'] && XT['ticker'] - XT['delay'] > 4.25;
            XT['data']['complete'] && XY && XT['refreshEnabled'] && XT['shouldRequestRefresh'] && (XT['shouldRequestRefresh'] = !0x1,
            this['account']['refreshQuest'](XT['data']['idx']));
            const XC = XT['data']['complete'] && XY;
            if (XC != XT['timer']['displayed']) {
                XT['timer']['displayed'] = XC,
                XT['elems']['main']['removeClass']('pass-bg-pulse'),
                XT['elems']['main']['stop']()['animate']({
                    'opacity': 0x1
                }, 0xfa);
                const XW = XT['elems']['refreshPrompt']['css']('display') == 'block';
                XT['elems']['info']['css']('display', XC || XW ? 'none' : 'block'),
                XT['elems']['timer']['css']('display', XC ? 'block' : 'none');
            }
            if (XC) {
                const XD = Math['max'](XT['refreshTime'] - Date['now'](), 0x0)
                  , XG = bt(XD / 0x3e8);
                XG != XT['timer']['str'] && (XT['timer']['str'] = XG,
                XT['elems']['timer']['html'](XG));
            }
        }
        if (this['pass']['ticker'] += p,
        this['pass']['animSteps']['length'] > 0x0 && this['pass']['ticker'] >= 0x0) {
            const XF = this['pass']['animSteps'][0x0]
              , XH = e['clamp'](this['pass']['ticker'] / 1.5, 0x0, 0x1);
            this['pass']['currentXp'] = e['lerp'](e['easeOutExpo'](XH), XF['startXp'], XF['targetXp']),
            this['pass']['levelXp'] = XF['levelXp'];
            const p0 = this['pass']['currentXp'] / XF['levelXp'] * 0x64;
            j('#pass-progress-xp-current')['html'](Math['round'](this['pass']['currentXp'])),
            j('#pass-progress-xp-target')['html'](this['pass']['levelXp']),
            j('#pass-progress-bar-fill')['css']({
                'width': p0 + '%'
            }),
            XH >= 0x1 && (XF['targetLevel'] > this['pass']['currentLevel'] && (this['pass']['currentLevel'] = XF['targetLevel'],
            this['animatePassLevelUp']()),
            this['pass']['animSteps']['shift'](),
            this['pass']['ticker'] -= 0x3);
        }
        !this['account']['loggingIn'] && !this['account']['loggedIn'] && !this['lockDisplayed'] && (j('#pass-block')['css']('z-index', '1'),
        j('#pass-loading')['css']('display', 'none'),
        j('#pass-locked')['css']('display', 'block'),
        this['lockDisplayed'] = !0x0);
    }
    ['onResize']() {}
    ['loadPlaceholders']() {
        const p = XK['pass_survivr1']
          , b = this['localization']['translate']('pass_survivr1')['toUpperCase']();
        j('#pass-name-text')['html'](b),
        j('#pass-progress-level')['html'](0x1),
        j('#pass-progress-xp-current')['html'](0x0),
        j('#pass-progress-xp-target')['html'](p['xp'][0x0]),
        this['setPassUnlockImage'](p['items'][0x0]['item']);
    }
}
function Zo(p, b, XT, XY) {
    const XC = p['find']('.login-options-content');
    XC['empty'](),
    b && XC['append'](j('<div/>', {
        'class': 'account-login-desc'
    })['append'](j('<p/>', {
        'html': XY['translate']('index-link-account-to')
    })));
    const Xl = j('<div/>', {
        'class': 'account-buttons'
    });
    XC['append'](Xl);
    const Xd = function(Xk, XU, XW) {
        const XD = j('<div/>', {
            'class': 'menu-option\x20btn-darken\x20btn-standard\x20btn-login-' + Xk
        });
        XD['append'](j('<span/>', {
            'class': 'login-button-name'
        })['append'](j('<span/>', {
            'html': XY['translate']('index-' + Xk)
        }))['append'](j('<div/>', {
            'class': 'icon'
        }))),
        b && XU ? (XD['addClass']('btn-login-linked'),
        XD['find']('span.login-button-name')['html']('<div\x20class=\x22icon\x22></div>')) : XD['click'](XG => {
            XW();
        }
        ),
        Xl['append'](XD);
    };
    Xd('twitch', XT['profile']['linkedTwitch'], () => {
        window['location']['href'] = '/api/user/auth/twitch';
    }
    ),
    Xd('discord', XT['profile']['linkedDiscord'], () => {
        window['location']['href'] = '/api/user/auth/discord';
    }
    );
}
class Yo {
    constructor(p, b, XT, XY) {
        this['account'] = p,
        this['localization'] = b,
        this['loadoutMenu'] = XT,
        this['errorModal'] = XY,
        this['account'] = p,
        this['localization'] = b,
        this['loadoutMenu'] = XT,
        this['errorModal'] = XY,
        p['addEventListener']('error', this['onError']['bind'](this)),
        p['addEventListener']('login', this['onLogin']['bind'](this)),
        p['addEventListener']('loadout', this['onLoadoutUpdated']['bind'](this)),
        p['addEventListener']('items', this['onItemsUpdated']['bind'](this)),
        p['addEventListener']('request', this['render']['bind'](this)),
        this['initUi'](),
        this['render']();
    }
    ['setNameModal'] = null;
    ['resetStatsModal'] = null;
    ['deleteAccountModal'] = null;
    ['userSettingsModal'] = null;
    ['loginOptionsModal'] = null;
    ['createAccountModal'] = null;
    ['loginOptionsModalMobile'];
    ['modalMobileAccount'];
    ['initUi']() {
        const p = function() {
            j('#modal-body-warning')['css']('display', 'none'),
            j('#modal-account-name-input')['val']('');
        };
        this['setNameModal'] = new de(j('#modal-account-name-change')),
        this['setNameModal']['onShow'](p),
        this['setNameModal']['onHide'](p),
        j('#modal-account-name-finish')['click'](b => {
            b['stopPropagation']();
            const XT = j('#modal-account-name-input')['val']();
            this['account']['setUsername'](XT, XY => {
                if (XY) {
                    const XC = {
                        'failed': 'Failed\x20setting\x20username.',
                        'invalid': 'Invalid\x20username.',
                        'taken': 'Name\x20already\x20taken!',
                        'change_time_not_expired': 'Username\x20has\x20already\x20been\x20set\x20recently.'
                    }
                      , Xl = XC[XY] || XC['failed'];
                    j('#modal-body-warning')['hide'](),
                    j('#modal-body-warning')['html'](Xl),
                    j('#modal-body-warning')['fadeIn']();
                } else
                    this['setNameModal']['hide']();
            }
            );
        }
        ),
        j('#modal-account-name-input')['on']('keypress', b => {
            (b['which'] || b['keyCode']) === 0xd && j('#modal-account-name-finish')['trigger']('click');
        }
        ),
        this['resetStatsModal'] = new de(j('#modal-account-reset-stats')),
        this['resetStatsModal']['onShow']( () => {
            j('#modal-account-reset-stats-input')['val'](''),
            this['modalMobileAccount']['hide']();
        }
        ),
        j('#modal-account-reset-stats-finish')['click'](b => {
            b['stopPropagation'](),
            j('#modal-account-reset-stats-input')['val']() == 'RESET\x20STATS' && (this['account']['resetStats'](),
            this['resetStatsModal']['hide']());
        }
        ),
        j('#modal-account-reset-stats-input')['on']('keypress', b => {
            (b['which'] || b['keyCode']) === 0xd && j('#modal-account-reset-stats-finish')['trigger']('click');
        }
        ),
        this['deleteAccountModal'] = new de(j('#modal-account-delete')),
        this['deleteAccountModal']['onShow']( () => {
            j('#modal-account-delete-input')['val'](''),
            this['modalMobileAccount']['hide']();
        }
        ),
        j('#modal-account-delete-finish')['click'](b => {
            b['stopPropagation'](),
            j('#modal-account-delete-input')['val']() == 'DELETE' && (this['account']['deleteAccount'](),
            this['deleteAccountModal']['hide']());
        }
        ),
        j('#modal-account-delete-input')['on']('keypress', b => {
            (b['which'] || b['keyCode']) === 0xd && j('#modal-account-delete-finish')['trigger']('click');
        }
        ),
        this['userSettingsModal'] = new de(j('.account-buttons-settings')),
        this['userSettingsModal']['checkSelector'] = !0x1,
        this['userSettingsModal']['skipFade'] = !0x0,
        this['userSettingsModal']['onShow']( () => {
            j('.account-details-top')['css']('display', 'none');
        }
        ),
        this['userSettingsModal']['onHide']( () => {
            j('.account-details-top')['css']('display', 'block');
        }
        ),
        this['loginOptionsModal'] = new de(j('#account-login-options')),
        this['loginOptionsModal']['checkSelector'] = !0x1,
        this['loginOptionsModal']['skipFade'] = !0x0,
        this['loginOptionsModal']['onShow']( () => {
            j('.account-details-top')['css']('display', 'none');
        }
        ),
        this['loginOptionsModal']['onHide']( () => {
            j('.account-details-top')['css']('display', 'block');
        }
        ),
        this['loginOptionsModalMobile'] = new de(j('#account-login-options-mobile')),
        this['loginOptionsModalMobile']['checkSelector'] = !0x1,
        this['loginOptionsModalMobile']['skipFade'] = !0x0,
        this['loginOptionsModalMobile']['onShow']( () => {
            j('.account-details-top')['css']('display', 'none');
        }
        ),
        this['loginOptionsModalMobile']['onHide']( () => {
            j('.account-details-top')['css']('display', 'block');
        }
        ),
        this['createAccountModal'] = new de(j('#modal-create-account-INVALID_ID')),
        this['createAccountModal']['onHide']( () => {
            this['loadoutMenu']['hide']();
        }
        ),
        this['modalMobileAccount'] = new de(j('#modal-mobile-account')),
        this['modalMobileAccount']['onShow']( () => {
            j('#start-top-right')['css']('display', 'none'),
            j('.account-details-top')['css']('display', 'none');
        }
        ),
        this['modalMobileAccount']['onHide']( () => {
            j('#start-top-right')['css']('display', 'block'),
            j('.account-details-top')['css']('display', 'block'),
            this['userSettingsModal']['hide']();
        }
        ),
        j('.account-leaderboard-link')['click'](b => (window['open'](Qe['resolveUrl']('/stats'), '_blank'),
        !0x1)),
        j('.account-stats-link')['click']( () => (this['waitOnLogin']( () => {
            if (this['account']['loggedIn']) {
                if (this['account']['profile']['usernameSet']) {
                    const b = this['account']['profile']['slug'] || '';
                    window['open']('/stats/' + b, '_blank');
                } else
                    this['setNameModal']['show'](!0x0);
            } else
                this['showLoginMenu']({
                    'modal': !0x0
                });
        }
        ),
        !0x1)),
        j('.account-loadout-link,\x20#btn-customize')['click']( () => (this['loadoutMenu']['show'](),
        this['waitOnLogin']( () => {
            this['account']['loggedIn'] || this['showLoginMenu']({
                'modal': !0x0
            });
        }
        ),
        !0x1)),
        j('.account-details-user')['click']( () => (this['userSettingsModal']['isVisible']() || this['loginOptionsModal']['isVisible']() ? (this['userSettingsModal']['hide'](),
        this['loginOptionsModal']['hide']()) : this['waitOnLogin']( () => {
            k['mobile'] && this['modalMobileAccount']['show'](),
            this['account']['loggedIn'] ? (this['loginOptionsModal']['hide'](),
            this['userSettingsModal']['show']()) : this['showLoginMenu']({
                'modal': !0x1
            });
        }
        ),
        !0x1)),
        j('.btn-account-link')['click']( () => (this['userSettingsModal']['hide'](),
        this['showLoginMenu']({
            'modal': !0x1,
            'link': !0x0
        }),
        !0x1)),
        j('.btn-account-change-name')['click']( () => (this['account']['profile']['usernameChangeTime'] <= 0x0 && (this['userSettingsModal']['hide'](),
        this['modalMobileAccount']['hide'](),
        j('#modal-account-name-title')['html'](this['localization']['translate']('index-change-account-name')),
        this['setNameModal']['show']()),
        !0x1)),
        j('.btn-account-reset-stats')['click']( () => (this['userSettingsModal']['hide'](),
        this['resetStatsModal']['show'](),
        !0x1)),
        j('.btn-account-delete')['click']( () => (this['userSettingsModal']['hide'](),
        this['deleteAccountModal']['show'](),
        !0x1)),
        j('.btn-account-logout')['click']( () => (this['account']['logout'](),
        !0x1)),
        j('#btn-pass-locked')['click']( () => (this['showLoginMenu']({
            'modal': !0x0
        }),
        !0x1));
    }
    ['onError'](p, b) {
        const XT = {
            'server_error': 'Operation\x20failed,\x20please\x20try\x20again\x20later.',
            'facebook_account_in_use': 'Failed\x20linking\x20Facebook\x20account.<br/>Account\x20already\x20in\x20use!',
            'google_account_in_use': 'Failed\x20linking\x20Google\x20account.<br/>Account\x20already\x20in\x20use!',
            'twitch_account_in_use': 'Failed\x20linking\x20Twitch\x20account.<br/>Account\x20already\x20in\x20use!',
            'discord_account_in_use': 'Failed\x20linking\x20Discord\x20account.<br/>Account\x20already\x20in\x20use!',
            'account_banned': 'Account\x20banned:\x20' + b,
            'login_failed': 'Login\x20failed.'
        }[p];
        XT && (this['errorModal']['selector']['find']('.modal-body-text')['html'](XT),
        this['errorModal']['show']());
    }
    ['onLogin']() {
        this['createAccountModal']['hide'](),
        this['loginOptionsModalMobile']['hide'](),
        this['loginOptionsModal']['hide'](),
        this['account']['profile']['usernameSet'] || this['setNameModal']['show'](!0x0);
    }
    ['onLoadoutUpdated'](p) {
        this['updateUserIcon']();
    }
    ['onItemsUpdated'](p) {
        let b = 0x0
          , XT = 0x0;
        for (let XC = 0x0; XC < p['length']; XC++) {
            const Xl = p[XC];
            Xl['status'] < le['ItemStatus']['Confirmed'] && b++,
            Xl['status'] < le['ItemStatus']['Ackd'] && XT++;
        }
        p['filter'](Xd => Xd['status'] < le['ItemStatus']['Confirmed']),
        p['filter'](Xd => Xd['status'] < le['ItemStatus']['Ackd']);
        const XY = b > 0x0 || XT > 0x0;
        j('#loadout-alert-main')['css']({
            'display': XY ? 'block' : 'none'
        });
    }
    ['waitOnLogin'](p) {
        if (this['account']['loggingIn'] && !this['account']['loggedIn']) {
            const b = () => {
                p(),
                this['account']['removeEventListener']('requestsComplete', b);
            }
            ;
            this['account']['addEventListener']('requestsComplete', b);
        } else
            p();
    }
    ['showLoginMenu'](p) {
        p = Object['assign']({
            'modal': !0x1,
            'link': !0x1
        }, p);
        const b = p['modal'] ? this['createAccountModal'] : k['mobile'] ? this['loginOptionsModalMobile'] : this['loginOptionsModal'];
        Zo(b['selector'], p['link'], this['account'], this['localization']),
        b['show']();
    }
    ['updateUserIcon']() {
        const p = Q['getSvgFromGameType'](this['account']['loadout']['player_icon']) || 'img/gui/player-gui.svg';
        j('.account-details-user\x20.account-avatar')['css']('background-image', 'url(' + p + ')');
    }
    ['render']() {
        const p = this['account']['requestsInFlight'] > 0x0;
        j('.account-loading')['css']('opacity', p ? 0x1 : 0x0);
        let b = Q['htmlEscape'](this['account']['profile']['username'] || '');
        this['account']['loggedIn'] || (b = this['account']['loggingIn'] ? this['localization']['translate']('index-logging-in') + '...' : this['localization']['translate']('index-log-in-desc')),
        j('#account-player-name')['html'](b),
        j('#account-player-name')['css']('display', this['account']['loggedIn'] ? 'block' : 'none'),
        j('#account-login')['css']('display', this['account']['loggedIn'] ? 'none' : 'block'),
        this['updateUserIcon'](),
        this['account']['profile']['usernameChangeTime'] <= 0x0 ? j('.btn-account-change-name')['removeClass']('btn-account-disabled') : j('.btn-account-change-name')['addClass']('btn-account-disabled');
    }
}
function Ai(p, b) {
    const XT = {
        'join_full': b['translate']('index-team-is-full'),
        'join_not_found': b['translate']('index-failed-joining-team'),
        'create_failed': b['translate']('index-failed-creating-team'),
        'join_failed': b['translate']('index-failed-joining-team'),
        'join_game_failed': b['translate']('index-failed-joining-game'),
        'lost_conn': b['translate']('index-lost-connection'),
        'find_game_error': b['translate']('index-failed-finding-game'),
        'find_game_full': b['translate']('index-failed-finding-game'),
        'find_game_invalid_protocol': b['translate']('index-invalid-protocol'),
        'kicked': b['translate']('index-team-kicked')
    };
    return XT[p] || XT['lost_conn'];
}
class Jo {
    constructor(p, b, XT, XY, XC, Xl, Xd) {
        this['config'] = p,
        this['pingTest'] = b,
        this['siteInfo'] = XT,
        this['localization'] = XY,
        this['audioManager'] = XC,
        this['joinGameCb'] = Xl,
        this['leaveCb'] = Xd,
        this['serverSelect']['change']( () => {
            const Xk = this['serverSelect']['find'](':selected')['val']();
            this['pingTest']['start']([Xk]),
            this['setRoomProperty']('region', Xk);
        }
        ),
        this['queueMode1']['click']( () => {
            this['setRoomProperty']('gameModeIdx', 0x1);
        }
        ),
        this['queueMode2']['click']( () => {
            this['setRoomProperty']('gameModeIdx', 0x2);
        }
        ),
        this['fillAuto']['click']( () => {
            this['setRoomProperty']('autoFill', !0x0);
        }
        ),
        this['fillNone']['click']( () => {
            this['setRoomProperty']('autoFill', !0x1);
        }
        ),
        this['playBtn']['on']('click', () => {
            this['config']['get']('ENV') === 'CrazyGames' ? rt( () => {
                this['tryStartGame']();
            }
            ) : this['config']['get']('ENV') === 'POKI' ? st( () => {
                this['tryStartGame']();
            }
            ) : this['config']['get']('ENV') === 'GameMonetize' ? at( () => {
                this['tryStartGame']();
            }
            ) : this['tryStartGame']();
        }
        ),
        j('#team-copy-url,\x20#team-desc-text')['click'](Xk => {
            const XU = j('<div/>', {
                'class': 'copy-toast',
                'html': 'Copied!'
            });
            j('#start-menu-wrapper')['append'](XU),
            XU['css']({
                'left': Xk['pageX'] - parseInt(XU['css']('width')) / 0x2,
                'top': j('#team-copy-url')['offset']()['top']
            }),
            XU['animate']({
                'top': '-=20',
                'opacity': 0x1
            }, {
                'queue': !0x1,
                'duration': 0x12c,
                'complete': function() {
                    j(this)['fadeOut'](0xfa, function() {
                        j(this)['remove']();
                    });
                }
            });
            let XW = j('#team-url')['html']();
            window !== window['top'] && (XW = this['roomData']['roomUrl']['substring'](0x1)),
            Q['copyTextToClipboard'](XW);
        }
        ),
        window !== window['top'] && j('#team-desc-text')['hide'](),
        k['mobile'] || (this['hideUrl'] = !0x1,
        j('#team-hide-url')['click'](Xk => {
            const XU = Xk['currentTarget'];
            this['hideUrl'] = !this['hideUrl'],
            j('#team-desc-text,\x20#team-code-text')['css']({
                'opacity': this['hideUrl'] ? 0x0 : 0x1
            }),
            j(XU)['css']({
                'background-image': this['hideUrl'] ? 'url(../img/gui/hide.svg)' : 'url(../img/gui/eye.svg)'
            });
        }
        ));
    }
    ['playBtn'] = j('#btn-start-team');
    ['serverWarning'] = j('#server-warning');
    ['teamOptions'] = j('#btn-team-queue-mode-1,\x20#btn-team-queue-mode-2,\x20#btn-team-fill-auto,\x20#btn-team-fill-none');
    ['serverSelect'] = j('#team-server-select');
    ['queueMode1'] = j('#btn-team-queue-mode-1');
    ['queueMode2'] = j('#btn-team-queue-mode-2');
    ['fillAuto'] = j('#btn-team-fill-auto');
    ['fillNone'] = j('#btn-team-fill-none');
    ['active'] = !0x1;
    ['joined'] = !0x1;
    ['create'] = !0x1;
    ['joiningGame'] = !0x1;
    ['ws'] = null;
    ['keepAliveTimeout'] = 0x0;
    ['playerData'] = {};
    ['roomData'] = {};
    ['players'] = [];
    ['prevPlayerCount'] = 0x0;
    ['localPlayerId'] = 0x0;
    ['isLeader'] = !0x0;
    ['editingName'] = !0x1;
    ['displayedInvalidProtocolModal'] = !0x1;
    ['hideUrl'];
    ['getPlayerById'](p) {
        return this['players']['find'](b => b['playerId'] == p);
    }
    ['update'](p) {
        this['joined'] && (this['keepAliveTimeout'] -= p,
        this['keepAliveTimeout'] < 0x0 && (this['keepAliveTimeout'] = 0x2d,
        this['sendMessage']('keepAlive', {})));
    }
    ['connect'](p, b) {
        if (!this['active'] || b !== this['roomData']['roomUrl']) {
            const XT = Qe['resolveRoomHost']()
              , XY = 'w' + (window['location']['protocol'] === 'https:' ? 'ss' : 's') + '://' + XT + '/team_v2';
            this['active'] = !0x0,
            this['joined'] = !0x1,
            this['create'] = p,
            this['joiningGame'] = !0x1,
            this['editingName'] = !0x1,
            this['playerData'] = {
                'name': this['config']['get']('playerName')
            },
            this['roomData'] = {
                'roomUrl': b,
                'region': this['config']['get']('region'),
                'gameModeIdx': this['config']['get']('gameModeIdx'),
                'autoFill': this['config']['get']('teamAutoFill'),
                'findingGame': !0x1,
                'lastError': ''
            },
            this['displayedInvalidProtocolModal'] = !0x1,
            this['refreshUi'](),
            this['ws'] && (this['ws']['onclose'] = function() {}
            ,
            this['ws']['close'](),
            this['ws'] = null);
            try {
                this['ws'] = new WebSocket(XY),
                this['ws']['onerror'] = XC => {
                    this['ws']?.['close']();
                }
                ,
                this['ws']['onclose'] = () => {
                    let XC = '';
                    this['joiningGame'] || (XC = this['joined'] ? 'lost_conn' : this['create'] ? 'create_failed' : 'join_failed'),
                    this['leave'](XC);
                }
                ,
                this['ws']['onopen'] = () => {
                    this['create'] ? this['siteInfo']['info']['captchaEnabled'] ? window['turnstile']['render']('#start-turnstile-container', {
                        'sitekey': '0x4AAAAAAAxkDXmFwymMPT0B',
                        'appearance': 'interaction-only',
                        'callback': XC => {
                            this['sendMessage']('create', {
                                'roomData': this['roomData'],
                                'playerData': this['playerData'],
                                'token': XC
                            }),
                            window['turnstile']['remove']('#start-turnstile-container');
                        }
                    }) : this['sendMessage']('create', {
                        'roomData': this['roomData'],
                        'playerData': this['playerData']
                    }) : this['sendMessage']('join', {
                        'roomUrl': this['roomData']['roomUrl'],
                        'playerData': this['playerData']
                    });
                }
                ,
                this['ws']['onmessage'] = XC => {
                    if (this['active']) {
                        const Xl = JSON['parse'](XC['data']);
                        this['onMessage'](Xl['type'], Xl['data']);
                    }
                }
                ;
            } catch {
                this['leave'](this['create'] ? 'create_failed' : 'join_failed');
            }
        }
    }
    ['leave'](p='') {
        if (this['active']) {
            this['ws']?.['close'](),
            this['ws'] = null,
            this['active'] = !0x1,
            this['joined'] = !0x1,
            this['joiningGame'] = !0x1,
            this['refreshUi'](),
            this['config']['set']('gameModeIdx', this['roomData']['gameModeIdx']),
            this['config']['set']('teamAutoFill', this['roomData']['autoFill']),
            this['isLeader'] && this['config']['set']('region', this['roomData']['region']);
            let b = '';
            p && p != '' && (b = Ai(p, this['localization'])),
            this['leaveCb'](b),
            this['config']['get']('ENV') === 'CrazyGames' && window['CrazyGames']['SDK']['game']['hideInviteButton']();
        }
    }
    ['onGameComplete']() {
        this['active'] && (this['joiningGame'] = !0x1,
        this['sendMessage']('gameComplete'));
    }
    ['onMessage'](p, b) {
        switch (p) {
        case 'state':
            {
                let XT = b;
                this['joined'] = !0x0;
                const XY = this['roomData'];
                this['roomData'] = XT['room'],
                this['players'] = XT['players'],
                this['localPlayerId'] = XT['localPlayerId'],
                this['isLeader'] = this['getPlayerById'](this['localPlayerId'])['isLeader'],
                this['isLeader'] && (this['roomData']['region'] = XY['region'],
                this['roomData']['autoFill'] = XY['autoFill']),
                this['refreshUi'](),
                this['config']['get']('ENV') === 'CrazyGames' && window['CrazyGames']['SDK']['game']['showInviteButton']({
                    'roomID': XT['room']['roomUrl']['replace']('#', '')
                });
                break;
            }
        case 'joinGame':
            this['joiningGame'] = !0x0,
            this['joinGameCb'](b);
            break;
        case 'keepAlive':
            break;
        case 'kicked':
            this['leave']('kicked');
            break;
        case 'error':
            this['leave'](b['type']);
        }
    }
    ['sendMessage'](p, b) {
        if (this['ws']) {
            if (this['ws']['readyState'] === this['ws']['OPEN']) {
                const XT = JSON['stringify']({
                    'type': p,
                    'data': b
                });
                this['ws']['send'](XT);
            } else
                this['ws']['close']();
        }
    }
    ['setRoomProperty'](p, b) {
        this['isLeader'] && this['roomData'][p] != b && (this['roomData'][p] = b,
        this['sendMessage']('setRoomProps', this['roomData']));
    }
    ['tryStartGame']() {
        if (this['isLeader'] && !this['roomData']['findingGame']) {
            const p = L['protocolVersion'];
            let b = this['roomData']['region'];
            const XT = Q['getParameterByName']('region');
            XT !== void 0x0 && XT['length'] > 0x0 && (b = XT);
            let XY = this['pingTest']['getZones'](b);
            const XC = Q['getParameterByName']('zone');
            XC !== void 0x0 && XC['length'] > 0x0 && (XY = [XC]);
            const Xl = {
                'version': p,
                'region': b,
                'zones': XY
            };
            this['sendMessage']('playGame', Xl),
            this['roomData']['findingGame'] = !0x0,
            this['refreshUi']();
        }
    }
    ['refreshUi']() {
        const XT = function(Xl, Xd, Xk) {
            Xl['removeClass']('btn-darken\x20btn-disabled\x20btn-opaque\x20btn-hollow-selected'),
            Xk ? Xl['addClass']('btn-darken') : (Xl['addClass']('btn-disabled'),
            Xd || Xl['addClass']('btn-opaque')),
            Xd && Xl['addClass']('btn-hollow-selected'),
            Xl['prop']('disabled', !Xk);
        };
        j('#team-menu')['css']('display', this['active'] ? 'block' : 'none'),
        j('#start-menu')['css']('display', this['active'] ? 'none' : 'block'),
        j('#right-column')['css']('display', this['active'] ? 'none' : 'block'),
        j('#social-share-block')['css']('display', this['active'] ? 'none' : 'block');
        const XY = this['roomData']['lastError'] != ''
          , XC = Ai(this['roomData']['lastError'], this['localization']);
        if (this['serverWarning']['css']('opacity', XY ? 0x1 : 0x0),
        this['serverWarning']['html'](XC),
        this['roomData']['lastError'] == 'find_game_invalid_protocol' && !this['displayedInvalidProtocolModal'] && (j('#modal-refresh')['fadeIn'](0xc8),
        this['displayedInvalidProtocolModal'] = !0x0),
        this['active'] && (j('#team-menu-joining-text')['css']('display', this['create'] ? 'none' : 'block'),
        j('#team-menu-creating-text')['css']('display', this['create'] ? 'block' : 'none'),
        j('#team-menu-connecting')['css']('display', this['joined'] ? 'none' : 'block'),
        j('#team-menu-contents')['css']('display', this['joined'] ? 'block' : 'none'),
        j('#btn-team-leave')['css']('display', this['joined'] ? 'block' : 'none')),
        this['joined']) {
            const Xl = this['siteInfo']['info']['pops'] || {}
              , Xd = Object['keys'](Xl);
            for (let p0 = 0x0; p0 < Xd['length']; p0++) {
                const p1 = Xd[p0]
                  , p2 = Xl[p1]['playerCount']
                  , p3 = this['localization']['translate']('index-players')
                  , p4 = j('#team-server-opts')['children']('option[value=\x22' + p1 + '\x22]');
                p4['html'](p4['attr']('data-label') + '\x20[' + p2 + '\x20' + p3 + ']');
            }
            if (this['serverSelect']['find']('option')['each']( (p5, p6) => {
                p6['selected'] = p6['value'] == this['roomData']['region'];
            }
            ),
            XT(this['queueMode1'], this['roomData']['gameModeIdx'] == 0x1, this['isLeader'] && this['roomData']['enabledGameModeIdxs']['includes'](0x1)),
            XT(this['queueMode2'], this['roomData']['gameModeIdx'] == 0x2, this['isLeader'] && this['roomData']['enabledGameModeIdxs']['includes'](0x2)),
            XT(this['fillAuto'], this['roomData']['autoFill'], this['isLeader']),
            XT(this['fillNone'], !this['roomData']['autoFill'], this['isLeader']),
            this['serverSelect']['prop']('disabled', !this['isLeader']),
            this['roomData']['roomUrl']) {
                const p5 = this['roomData']['roomUrl']['substring'](0x1);
                if (this['config']['get']('ENV') === 'CrazyGames') {
                    const p6 = window['CrazyGames']['SDK']['game']['inviteLink']({
                        'roomID': p5
                    });
                    j('#team-url')['html'](p6);
                } else {
                    const p7 = '' + window['location']['href']['replace'](window['location']['hash'], '') + this['roomData']['roomUrl'];
                    j('#team-url')['html'](p7),
                    window['history'] && window['history']['replaceState']('', '', this['roomData']['roomUrl']);
                }
                j('#team-code')['html'](p5);
            }
            this['playBtn']['html'](this['roomData']['findingGame'] || this['joiningGame'] ? '<div\x20class=\x22ui-spinner\x22></div>' : this['playBtn']['attr']('data-label'));
            const Xk = this['siteInfo']['getGameModeStyles']();
            for (let p8 = 0x0; p8 < Xk['length']; p8++)
                this['playBtn']['removeClass'](Xk[p8]['buttonCss']);
            const XU = Xk[this['roomData']['gameModeIdx']];
            XU ? (this['playBtn']['addClass']('btn-custom-mode-no-indent'),
            this['playBtn']['addClass'](XU['buttonCss']),
            this['playBtn']['css']({
                'background-image': 'url(' + XU['icon'] + ')'
            })) : this['playBtn']['css']({
                'background-image': ''
            });
            let XW = !0x1;
            for (let p9 = 0x0; p9 < this['players']['length']; p9++)
                XW = XW || this['players'][p9]['inGame'];
            const XD = j('#msg-wait-reason');
            if (this['isLeader']) {
                XD['html'](this['localization']['translate']('index-game-in-progress') + '<span>\x20...</span>');
                const pX = XW && !this['joiningGame'];
                XD['css']('display', pX ? 'block' : 'none'),
                this['playBtn']['css']('display', pX ? 'none' : 'block');
            } else
                this['roomData']['findingGame'] || this['joiningGame'] ? XD['html']('<div\x20class=\x22ui-spinner\x22\x20style=\x22margin-right:16px\x22></div>' + this['localization']['translate']('index-joining-game') + '<span>\x20...</span>') : XW ? XD['html'](this['localization']['translate']('index-game-in-progress') + '<span>\x20...</span>') : XD['html'](this['localization']['translate']('index-waiting-for-leader') + '<span>\x20...</span>'),
                XD['css']('display', 'block'),
                this['playBtn']['css']('display', 'none');
            const XG = j('#team-menu-member-list');
            XG['empty']();
            for (let pp = 0x0; pp < this['roomData']['maxPlayers']; pp++) {
                let pb = {
                    'name': '',
                    'playerId': 0x0,
                    'isLeader': !0x1,
                    'inGame': !0x1,
                    'self': !0x1
                };
                if (pp < this['players']['length']) {
                    const py = this['players'][pp];
                    pb = {
                        'name': py['name'],
                        'playerId': py['playerId'],
                        'isLeader': py['isLeader'],
                        'inGame': py['inGame'],
                        'self': py['playerId'] == this['localPlayerId']
                    };
                }
                const pI = j('<div/>', {
                    'class': 'team-menu-member'
                });
                let pj = '';
                pb['isLeader'] ? pj = '\x20icon-leader' : this['isLeader'] && pb['playerId'] != 0x0 && (pj = '\x20icon-kick'),
                pI['append'](j('<div/>', {
                    'class': 'icon' + pj,
                    'data-playerid': pb['playerId']
                }));
                let pf = null
                  , px = null;
                if (this['editingName'] && pb['self']) {
                    pf = j('<input/>', {
                        'type': 'text',
                        'tabindex': 0x0,
                        'class': 'name\x20menu-option\x20name-text\x20name-self-input',
                        'maxLength': m['PlayerNameMaxLen']
                    }),
                    pf['val'](pb['name']);
                    const pg = () => {
                        const pZ = Q['sanitizeNameInput'](pf?.['val']());
                        pb['name'] = pZ,
                        this['config']['set']('playerName', pZ),
                        this['sendMessage']('changeName', {
                            'name': pZ
                        }),
                        this['editingName'] = !0x1,
                        this['refreshUi']();
                    }
                      , pQ = () => {
                        this['editingName'] = !0x1,
                        this['refreshUi']();
                    }
                    ;
                    pf['keypress'](pZ => {
                        if (pZ['which'] === 0xd)
                            return pg(),
                            !0x1;
                    }
                    ),
                    pf['on']('blur', pQ),
                    pI['append'](pf),
                    px = j('<div/>', {
                        'class': 'icon\x20icon-submit-name-change'
                    }),
                    px['on']('click', pg),
                    px['on']('mousedown', pZ => {
                        pZ['preventDefault'](),
                        pZ['stopPropagation']();
                    }
                    );
                } else {
                    let pZ = 'name-text';
                    pb['self'] && (pZ += '\x20name-self'),
                    pb['inGame'] && (pZ += '\x20name-in-game');
                    const pq = j('<div/>', {
                        'class': 'name\x20menu-option\x20' + pZ,
                        'html': Q['htmlEscape'](pb['name'])
                    });
                    pb['self'] && pq['on']('click', () => {
                        this['editingName'] = !0x0,
                        this['refreshUi']();
                    }
                    ),
                    pI['append'](pq);
                }
                px ? pI['append'](px) : pI['append'](j('<div/>', {
                    'class': 'icon\x20' + (pb['inGame'] ? 'icon-in-game' : '')
                })),
                XG['append'](pI),
                pf?.['focus']();
            }
            j('.icon-kick', XG)['click'](pM => {
                const pE = Number(j(pM['currentTarget'])['attr']('data-playerid'));
                this['sendMessage']('kick', {
                    'playerId': pE
                });
            }
            );
            const XF = this['players']['find'](pM => pM['playerId'] == this['localPlayerId'])
              , XH = XF && !XF['inGame'];
            !document['hasFocus']() && this['prevPlayerCount'] < this['players']['length'] && this['players']['length'] > 0x1 && XH && this['audioManager']['playSound']('notification_join_01', {
                'channel': 'ui'
            }),
            this['prevPlayerCount'] = this['players']['length'];
        }
    }
}
class Ko {
    ['nameInput'] = j('#player-name-input-solo');
    ['serverSelect'] = j('#server-select-main');
    ['playMode0Btn'] = j('#btn-start-mode-0');
    ['playMode1Btn'] = j('#btn-start-mode-1');
    ['playMode2Btn'] = j('#btn-start-mode-2');
    ['muteBtns'] = j('.btn-sound-toggle');
    ['aimLineBtn'] = j('#btn-game-aim-line');
    ['masterSliders'] = j('.sl-master-volume');
    ['soundSliders'] = j('.sl-sound-volume');
    ['musicSliders'] = j('.sl-music-volume');
    ['serverWarning'] = j('#server-warning');
    ['languageSelect'] = j('.language-select');
    ['startMenuWrapper'] = j('#start-menu-wrapper');
    ['gameAreaWrapper'] = j('#game-area-wrapper');
    ['playButtons'] = j('.play-button-container');
    ['playLoading'] = j('.play-loading-outer');
    ['errorModal'] = new de(j('#modal-notification'));
    ['refreshModal'] = new de(j('#modal-refresh'));
    ['config'] = new oa();
    ['localization'] = new Vo();
    ['account'];
    ['loadoutMenu'];
    ['pass'];
    ['profileUi'];
    ['pingTest'] = new Ls();
    ['audioManager'] = new aa();
    ['ambience'] = new Yr();
    ['siteInfo'];
    ['teamMenu'];
    ['pixi'] = null;
    ['resourceManager'] = null;
    ['input'] = null;
    ['inputBinds'] = null;
    ['inputBindUi'] = null;
    ['game'] = null;
    ['loadoutDisplay'] = null;
    ['domContentLoaded'] = !0x1;
    ['configLoaded'] = !0x1;
    ['initialized'] = !0x1;
    ['active'] = !0x1;
    ['sessionId'] = Q['random64']();
    ['contextListener'] = function(p) {
        p['preventDefault']();
    }
    ;
    ['errorMessage'] = '';
    ['quickPlayPendingModeIdx'] = -0x1;
    ['findGameAttempts'] = 0x0;
    ['findGameTime'] = 0x0;
    ['pauseTime'] = 0x0;
    ['wasPlayingVideo'] = !0x1;
    ['checkedPingTest'] = !0x1;
    ['hasFocus'] = !0x0;
    ['newsDisplayed'] = !0x0;
    ['respawns'] = [];
    constructor() {
        this['account'] = new Zr(this['config']),
        this['loadoutMenu'] = new po(this['account'],this['localization']),
        this['pass'] = new Qo(this['account'],this['loadoutMenu'],this['localization']),
        this['profileUi'] = new Yo(this['account'],this['localization'],this['loadoutMenu'],this['errorModal']),
        this['siteInfo'] = new no(this['config'],this['localization']),
        this['teamMenu'] = new Jo(this['config'],this['pingTest'],this['siteInfo'],this['localization'],this['audioManager'],this['onTeamMenuJoinGame']['bind'](this),this['onTeamMenuLeave']['bind'](this));
        const p = () => {
            this['config']['load']( () => {
                this['configLoaded'] = !0x0,
                this['tryLoad']();
            }
            );
        }
        ;
        this['loadBrowserDeps'](p);
    }
    ['loadBrowserDeps'](p) {
        p();
    }
    ['tryLoad']() {
        if (this['domContentLoaded'] && this['configLoaded'] && !this['initialized']) {
            this['initialized'] = !0x0,
            k['mobile'] && zt['applyMobileBrowserStyling'](k['tablet']);
            const p = this['config']['get']('language') || this['localization']['detectLocale']();
            this['config']['set']('language', p),
            this['localization']['setLocale'](p),
            this['localization']['populateLanguageSelect'](),
            this['startPingTest'](),
            this['siteInfo']['load'](),
            this['localization']['localizeIndex'](),
            this['account']['init'](),
            this['nameInput']['maxLength'] = m['PlayerNameMaxLen'],
            this['playMode0Btn']['on']('click', () => {
                this['config']['get']('ENV') === 'CrazyGames' ? rt( () => {
                    this['tryQuickStartGame'](0x0);
                }
                ) : this['config']['get']('ENV') === 'POKI' && this['respawns']['length'] > 0x0 ? st( () => {
                    this['tryQuickStartGame'](0x0);
                }
                ) : this['config']['get']('ENV') === 'GameMonetize' ? at( () => {
                    this['tryQuickStartGame'](0x0);
                }
                ) : this['tryQuickStartGame'](0x0);
            }
            ),
            this['playMode1Btn']['on']('click', () => {
                this['config']['get']('ENV') === 'CrazyGames' ? rt( () => {
                    this['tryQuickStartGame'](0x1);
                }
                ) : this['config']['get']('ENV') === 'POKI' && this['respawns']['length'] > 0x0 ? st( () => {
                    this['tryQuickStartGame'](0x1);
                }
                ) : this['config']['get']('ENV') === 'GameMonetize' ? at( () => {
                    this['tryQuickStartGame'](0x1);
                }
                ) : this['tryQuickStartGame'](0x1);
            }
            ),
            this['playMode2Btn']['on']('click', () => {
                this['config']['get']('ENV') === 'CrazyGames' ? rt( () => {
                    this['tryQuickStartGame'](0x2);
                }
                ) : this['config']['get']('ENV') === 'POKI' && this['respawns']['length'] > 0x0 ? st( () => {
                    this['tryQuickStartGame'](0x2);
                }
                ) : this['config']['get']('ENV') === 'GameMonetize' && this['respawns']['length'] > 0x0 ? at( () => {
                    this['tryQuickStartGame'](0x2);
                }
                ) : this['tryQuickStartGame'](0x2);
            }
            ),
            this['serverSelect']['change']( () => {
                const XD = this['serverSelect']['find'](':selected')['val']();
                this['config']['set']('region', XD);
            }
            ),
            this['nameInput']['on']('blur', XD => {
                this['setConfigFromDOM']();
            }
            ),
            this['muteBtns']['on']('click', XD => {
                this['config']['set']('muteAudio', !this['config']['get']('muteAudio'));
            }
            ),
            this['muteBtns']['on']('mousedown', XD => {
                XD['stopPropagation']();
            }
            ),
            j(this['masterSliders'])['on']('mousedown', XD => {
                XD['stopPropagation']();
            }
            ),
            j(this['soundSliders'])['on']('mousedown', XD => {
                XD['stopPropagation']();
            }
            ),
            j(this['musicSliders'])['on']('mousedown', XD => {
                XD['stopPropagation']();
            }
            ),
            this['masterSliders']['on']('input', XD => {
                const XG = Number(j(XD['target'])['val']()) / 0x64;
                this['audioManager']['setMasterVolume'](XG),
                this['config']['set']('masterVolume', XG);
            }
            ),
            this['soundSliders']['on']('input', XD => {
                const XG = Number(j(XD['target'])['val']()) / 0x64;
                this['audioManager']['setSoundVolume'](XG),
                this['config']['set']('soundVolume', XG);
            }
            ),
            this['musicSliders']['on']('input', XD => {
                const XG = Number(j(XD['target'])['val']()) / 0x64;
                this['audioManager']['setMusicVolume'](XG),
                this['config']['set']('musicVolume', XG);
            }
            ),
            j('.modal-settings-item')['children']('input')['each']( (XD, XG) => {
                const XF = j(XG);
                XF['prop']('checked', this['config']['get'](XF['prop']('id')));
            }
            ),
            j('.modal-settings-item\x20>\x20input:checkbox')['change'](XD => {
                const XG = j(XD['target']);
                this['config']['set'](XG['prop']('id'), XG['is'](':checked'));
            }
            ),
            j('.btn-fullscreen-toggle')['on']('click', () => {
                Q['toggleFullScreen']();
            }
            ),
            this['languageSelect']['on']('change', XD => {
                const XG = XD['target']['value'];
                XG && this['config']['set']('language', XG);
            }
            ),
            j('#btn-create-team')['on']('click', () => {
                this['tryJoinTeam'](!0x0);
            }
            ),
            j('#btn-team-mobile-link-join')['on']('click', () => {
                let XD = j('#team-link-input')['val']()?.['trim']();
                const XG = XD['indexOf']('#');
                XG >= 0x0 && (XD = XD['slice'](XG + 0x1)),
                XD['length'] > 0x0 ? (j('#team-mobile-link')['css']('display', 'none'),
                this['tryJoinTeam'](!0x1, XD)) : (j('#team-mobile-link-desc')['css']('display', 'none'),
                j('#team-mobile-link-warning')['css']('display', 'none')['fadeIn'](0x64));
            }
            ),
            j('#btn-team-leave')['on']('click', () => {
                window['history'] && window['history']['replaceState']('', '', '/'),
                j('#news-block')['css']('display', 'block'),
                this['game']?.['free'](),
                this['teamMenu']['leave']();
            }
            );
            const b = j('#news-current')['data']('date')
              , XT = new Date(b)['getTime']();
            j('.right-column-toggle')['on']('click', () => {
                this['newsDisplayed'] ? (j('#news-wrapper')['fadeOut'](0xfa),
                j('#pass-wrapper')['fadeIn'](0xfa)) : (this['config']['set']('lastNewsTimestamp', XT),
                j('.news-toggle')['find']('.account-alert')['css']('display', 'none'),
                j('#news-wrapper')['fadeIn'](0xfa),
                j('#pass-wrapper')['fadeOut'](0xfa)),
                this['newsDisplayed'] = !this['newsDisplayed'];
            }
            );
            const XY = this['config']['get']('lastNewsTimestamp');
            XT > XY && j('.news-toggle')['find']('.account-alert')['css']('display', 'block'),
            this['setDOMFromConfig'](),
            this['setAppActive'](!0x0);
            const XC = document['querySelector']('#cvs')
              , Xl = window['devicePixelRatio'] > 0x1 ? 0x2 : 0x1;
            k['os'] == 'ios' && (u['PRECISION_FRAGMENT'] = B['HIGH']);
            const Xd = XD => new V({
                'width': window['innerWidth'],
                'height': window['innerHeight'],
                'view': XC,
                'antialias': !0x1,
                'resolution': Xl,
                'hello': !0x0,
                'forceCanvas': XD
            });
            let Xk = null;
            try {
                Xk = Xd(!0x1);
            } catch {
                Xk = Xd(!0x0);
            }
            this['pixi'] = Xk,
            this['pixi']['renderer']['events']['destroy'](),
            this['pixi']['ticker']['add'](this['update'], this),
            this['pixi']['renderer']['background']['color'] = 0x709645,
            this['resourceManager'] = new mo(this['pixi']['renderer'],this['audioManager'],this['config']),
            this['resourceManager']['loadMapAssets']('main'),
            this['input'] = new Ia(document['getElementById']('game-touch-area')),
            this['inputBinds'] = new Cs(this['input'],this['config']),
            this['inputBindUi'] = new Ds(this['input'],this['inputBinds']);
            const XU = () => {
                this['loadoutDisplay']['free'](),
                this['game']['init'](),
                this['onResize'](),
                this['findGameAttempts'] = 0x0,
                this['ambience']['onGameStart']();
            }
              , XW = XD => {
                this['game']['OSRLcj'] && this['pass']['scheduleUpdatePass'](this['game']['HTzAB']),
                this['game']['free'](),
                this['errorMessage'] = this['localization']['translate'](XD || ''),
                this['teamMenu']['onGameComplete'](),
                this['ambience']['onGameComplete'](this['audioManager']),
                this['setAppActive'](!0x0),
                this['setPlayLockout'](!0x1),
                XD == 'index-invalid-protocol' && this['showInvalidProtocolModal'](),
                this['config']['get']('ENV') === 'CrazyGames' ? window['CrazyGames']['SDK']['game']['gameplayStop']() : this['config']['get']('ENV') === 'POKI' && window['PokiSDK']['gameplayStop']();
            }
            ;
            this['game'] = new Ts(this['pixi'],this['audioManager'],this['localization'],this['config'],this['input'],this['inputBinds'],this['inputBindUi'],this['ambience'],this['resourceManager'],this['respawns'],XU,XW),
            this['loadoutDisplay'] = new $o(this['pixi'],this['audioManager'],this['config'],this['inputBinds'],this['account']),
            this['loadoutMenu']['loadoutDisplay'] = this['loadoutDisplay'],
            this['onResize'](),
            this['tryJoinTeam'](this['config']['get']('ENV') === 'CrazyGames' && window['CrazyGames']['SDK']['game']['isInstantJoin']),
            zt['setupModals'](this['inputBinds'], this['inputBindUi']),
            this['onConfigModified'](),
            this['config']['addModifiedListener'](this['onConfigModified']['bind'](this)),
            Ms();
        }
    }
    ['onUnload']() {
        this['teamMenu']['leave']();
    }
    ['onResize']() {
        k['onResize'](),
        zt['onResize'](),
        this['loadoutMenu']['onResize'](),
        this['pixi']?.['renderer']['resize'](k['screenWidth'], k['screenHeight']),
        this['game']?.['initialized'] && this['game']['resize'](),
        this['loadoutDisplay']?.['initialized'] && this['loadoutDisplay']['resize'](),
        this['refreshUi']();
    }
    ['startPingTest']() {
        const p = this['config']['get']('regionSelected') ? [this['config']['get']('region')] : this['pingTest']['getRegionList']();
        this['pingTest']['start'](p);
    }
    ['setAppActive'](p) {
        this['active'] = p,
        this['quickPlayPendingModeIdx'] = -0x1,
        this['refreshUi'](),
        p && this['errorModal']['hide']();
    }
    ['setPlayLockout'](p) {
        const b = p ? 0x0 : 0x3e8;
        this['playButtons']['stop']()['delay'](b)['animate']({
            'opacity': p ? 0.5 : 0x1
        }, 0xfa),
        this['playLoading']['stop']()['delay'](b)['animate']({
            'opacity': p ? 0x1 : 0x0
        }, {
            'duration': 0xfa,
            'start': () => {
                this['playLoading']['css']({
                    'pointer-events': p ? 'initial' : 'none'
                });
            }
        });
    }
    ['onTeamMenuJoinGame'](p) {
        this['waitOnAccount']( () => {
            this['joinGame'](p);
        }
        );
    }
    ['onTeamMenuLeave'](p='') {
        p && p != '' && window['history'] && window['history']['replaceState']('', '', '/'),
        this['errorMessage'] = p,
        this['setDOMFromConfig'](),
        this['refreshUi']();
    }
    ['setConfigFromDOM']() {
        const p = Q['sanitizeNameInput'](this['nameInput']['val']());
        this['config']['set']('playerName', p);
        const b = this['serverSelect']['find'](':selected')['val']();
        this['config']['set']('region', b);
    }
    async['setDOMFromConfig']() {
        if (!this['config']['get']('playerName') && this['config']['get']('ENV') === 'CrazyGames' && window['CrazyGames']['SDK']['user']['isUserAccountAvailable']) {
            const p = await window['CrazyGames']['SDK']['user']['getUser']();
            if (p) {
                const b = p['username'];
                this['config']['set']('playerName', b);
            }
        }
        this['nameInput']['val'](this['config']['get']('playerName')),
        this['serverSelect']['find']('option')['each']( (XT, XY) => {
            XY['selected'] = XY['value'] == this['config']['get']('region');
        }
        ),
        this['languageSelect']['val'](this['config']['get']('language'));
    }
    ['onConfigModified'](p) {
        const b = this['config']['get']('muteAudio');
        b != this['audioManager']['mute'] && (this['muteBtns']['removeClass'](b ? 'audio-on-icon' : 'audio-off-icon'),
        this['muteBtns']['addClass'](b ? 'audio-off-icon' : 'audio-on-icon'),
        this['audioManager']['setMute'](b));
        const XT = this['config']['get']('masterVolume');
        this['masterSliders']['val'](XT * 0x64),
        this['audioManager']['setMasterVolume'](XT);
        const XY = this['config']['get']('soundVolume');
        this['soundSliders']['val'](XY * 0x64),
        this['audioManager']['setSoundVolume'](XY);
        const XC = this['config']['get']('musicVolume');
        if (this['musicSliders']['val'](XC * 0x64),
        this['audioManager']['setMusicVolume'](XC),
        p == 'language') {
            const Xl = this['config']['get']('language');
            this['localization']['setLocale'](Xl);
        }
        p == 'region' && (this['config']['set']('regionSelected', !0x0),
        this['startPingTest']()),
        p == 'highResTex' && location['reload']();
    }
    ['refreshUi']() {
        this['startMenuWrapper']['css']('display', this['active'] ? 'flex' : 'none'),
        this['gameAreaWrapper']['css']({
            'display': this['active'] ? 'none' : 'block',
            'opacity': this['active'] ? 0x0 : 0x1
        }),
        this['active'] ? (j('body')['removeClass']('user-select-none'),
        document['removeEventListener']('contextmenu', this['contextListener'])) : (j('body')['addClass']('user-select-none'),
        j('#start-main')['stop'](!0x0),
        document['addEventListener']('contextmenu', this['contextListener'])),
        j('#ad-block-left')['css']('display', !k['isLandscape'] && this['teamMenu']['active'] ? 'none' : 'block');
        const p = this['active'] && this['errorMessage'] != '';
        this['serverWarning']['css']({
            'display': 'block',
            'opacity': p ? 0x1 : 0x0
        }),
        this['serverWarning']['html'](this['errorMessage']);
        const b = (XT, XY) => {
            XT['html'](this['quickPlayPendingModeIdx'] === XY ? '<div\x20class=\x22ui-spinner\x22></div>' : this['localization']['translate'](XT['data']('l10n')));
        }
        ;
        b(this['playMode0Btn'], 0x0),
        b(this['playMode1Btn'], 0x1),
        b(this['playMode2Btn'], 0x2);
    }
    ['waitOnAccount'](p) {
        if (this['account']['requestsInFlight'] == 0x0)
            p();
        else {
            const b = setTimeout( () => {
                XT();
            }
            , 0x9c4)
              , XT = () => {
                p(),
                clearTimeout(b),
                this['account']['removeEventListener']('requestsComplete', XT);
            }
            ;
            this['account']['addEventListener']('requestsComplete', XT);
        }
    }
    ['tryJoinTeam'](p, b) {
        if (this['active'] && this['quickPlayPendingModeIdx'] === -0x1) {
            let XT = b || window['location']['hash']['slice'](0x1);
            if (this['config']['get']('ENV') === 'CrazyGames') {
                const XY = window['CrazyGames']['SDK']['game']['getInviteParam']('roomID');
                XY && (XT = XY,
                p = !0x1);
            }
            if (p || XT != '')
                return this['setConfigFromDOM'](),
                this['teamMenu']['connect'](p, XT),
                this['refreshUi'](),
                !0x0;
        }
        return !0x1;
    }
    ['tryQuickStartGame'](p) {
        if (this['quickPlayPendingModeIdx'] === -0x1) {
            this['errorMessage'] = '',
            this['quickPlayPendingModeIdx'] = p,
            this['setConfigFromDOM'](),
            this['refreshUi']();
            let b = 0x0;
            this['findGameAttempts'] > 0x0 && Date['now']() - this['findGameTime'] < 0x7530 ? b = Math['min'](this['findGameAttempts'] * 2.5 * 0x3e8, 0x1d4c) : this['findGameAttempts'] = 0x0,
            this['findGameTime'] = Date['now'](),
            this['findGameAttempts']++;
            const XT = L['protocolVersion'];
            let XY = this['config']['get']('region');
            const XC = Q['getParameterByName']('region');
            XC !== void 0x0 && XC['length'] > 0x0 && (XY = XC);
            let Xl = this['pingTest']['getZones'](XY);
            const Xd = Q['getParameterByName']('zone');
            Xd !== void 0x0 && Xd['length'] > 0x0 && (Xl = [Xd]);
            const Xk = {
                'version': XT,
                'region': XY,
                'zones': Xl,
                'playerCount': 0x1,
                'autoFill': !0x0,
                'gameModeIdx': p
            }
              , XU = () => {
                this['waitOnAccount']( () => {
                    this['findGame'](Xk, (XW, XD) => {
                        if (XW) {
                            this['onJoinGameError'](XW);
                            return;
                        }
                        this['joinGame'](XD);
                    }
                    );
                }
                );
            }
            ;
            b == 0x0 ? XU() : setTimeout( () => {
                XU();
            }
            , b);
        }
    }
    ['findGame'](p, b) {
        const XT = (XY, XC) => {
            if (XY >= XC) {
                b('full');
                return;
            }
            const Xl = function() {
                setTimeout( () => {
                    XT(XY + 0x1, XC);
                }
                , 0x1f4);
            };
            function Xd(Xk) {
                j['ajax']({
                    'type': 'POST',
                    'url': Qe['resolveUrl']('/api/find_game'),
                    'data': JSON['stringify']({
                        ...p,
                        'token': Xk
                    }),
                    'contentType': 'application/json;\x20charset=utf-8',
                    'timeout': 0x2710,
                    'success': function(XU) {
                        if (XU?.['err'] && XU['err'] != 'full') {
                            b(XU['err']);
                            return;
                        }
                        const XW = XU?.['res'] ? XU['res'][0x0] : null;
                        XW?.['hosts'] && XW['addrs'] ? b(null, XW) : Xl();
                    },
                    'error': function(XU) {
                        Xl();
                    }
                });
            }
            this['siteInfo']['info']['captchaEnabled'] ? window['turnstile']['render']('#start-turnstile-container', {
                'sitekey': '0x4AAAAAAAxkDXmFwymMPT0B',
                'appearance': 'interaction-only',
                'callback': Xk => {
                    Xd(Xk),
                    window['turnstile']['remove']('#start-turnstile-container');
                }
            }) : Xd('');
        }
        ;
        XT(0x0, 0x2);
    }
    ['joinGame'](p) {
        if (!this['game']) {
            setTimeout( () => {
                this['joinGame'](p);
            }
            , 0xfa);
            return;
        }
        const b = p['hosts'] || []
          , XT = [];
        for (let XC = 0x0; XC < b['length']; XC++)
            XT['push']('ws' + (p['useHttps'] ? 's' : '') + '://' + b[XC] + '/play?gameId=' + p['gameId']);
        const XY = (Xl, Xd) => {
            const Xk = Xl['shift']();
            if (!Xk) {
                this['onJoinGameError']('join_game_failed');
                return;
            }
            const XU = function() {
                XY(Xl, Xd);
            };
            this['game']['tryJoinGame'](Xk, Xd['data'], this['account']['loadoutPriv'], this['account']['questPriv'], XU);
        }
        ;
        XY(XT, p);
    }
    ['onJoinGameError'](p) {
        const b = {
            'full': this['localization']['translate']('index-failed-finding-game'),
            'invalid_protocol': this['localization']['translate']('index-invalid-protocol'),
            'join_game_failed': this['localization']['translate']('index-failed-joining-game')
        };
        p == 'invalid_protocol' && this['showInvalidProtocolModal'](),
        this['errorMessage'] = b[p] || b['full'],
        this['quickPlayPendingModeIdx'] = -0x1,
        this['teamMenu']['leave']('join_game_failed'),
        this['refreshUi']();
    }
    ['showInvalidProtocolModal']() {
        this['refreshModal']['show'](!0x0);
    }
    ['update']() {
        const p = e['clamp'](this['pixi']['ticker']['elapsedMS'] / 0x3e8, 0.001, 0.125);
        if (this['pingTest']['update'](p),
        !this['checkedPingTest'] && this['pingTest']['isComplete']()) {
            if (!this['config']['get']('regionSelected')) {
                const b = this['pingTest']['getRegion']();
                b && (this['config']['set']('region', b),
                this['setDOMFromConfig']());
            }
            this['checkedPingTest'] = !0x0;
        }
        this['resourceManager']['update'](p),
        this['audioManager']['update'](p),
        this['ambience']['update'](p, this['audioManager'], !this['active']),
        this['teamMenu']['update'](p),
        this['game']?.['initialized'] && this['game']['ONPnmU'] && (this['active'] && (this['setAppActive'](!0x1),
        this['setPlayLockout'](!0x0)),
        this['game']['update'](p)),
        this['active'] && this['loadoutDisplay'] && this['game'] && !this['game']['initialized'] && (this['loadoutMenu']['active'] ? (this['loadoutDisplay']['initialized'] || this['loadoutDisplay']['init'](),
        this['loadoutDisplay']['show'](),
        this['loadoutDisplay']['update'](p, this['hasFocus'])) : this['loadoutDisplay']['hide']()),
        !this['active'] && this['loadoutMenu']['active'] && this['loadoutMenu']['hide'](),
        this['active'] && this['pass']?.['update'](p),
        this['input']['flush']();
    }
}
const ze = new Ko();
function cr() {
    ze['domContentLoaded'] = !0x0,
    ze['tryLoad']();
}
document['addEventListener']('DOMContentLoaded', cr),
window['addEventListener']('load', cr),
window['addEventListener']('unload', p => {
    ze['onUnload']();
}
),
window['location']['hash'] == '#_=_' && (window['location']['hash'] = '',
history['pushState']('', document['title'], window['location']['pathname'])),
window['addEventListener']('resize', () => {
    ze['onResize']();
}
),
window['addEventListener']('orientationchange', () => {
    ze['onResize']();
}
),
window['addEventListener']('hashchange', () => {
    ze['tryJoinTeam'](!0x1);
}
),
window['addEventListener']('beforeunload', p => {
    if (ze['game']?.['warnPageReload']()) {
        const b = 'Do\x20you\x20want\x20to\x20reload\x20the\x20game?';
        return p['returnValue'] = b,
        b;
    }
}
),
window['addEventListener']('onfocus', () => {
    ze['hasFocus'] = !0x0;
}
),
window['addEventListener']('onblur', () => {
    ze['hasFocus'] = !0x1;
}
);
const Ri = [];
window['onerror'] = function(p, b, XT, XY, XC) {
    p = p || 'undefined_error_msg';
    const Xl = XC ? XC['stack'] : ''
      , Xd = {
        'msg': p,
        'id': ze['sessionId'],
        'url': b,
        'line': XT,
        'column': XY,
        'stacktrace': Xl,
        'browser': navigator['userAgent'],
        'protocol': L['protocolVersion'],
        'clientGitVersion': '2d886cd8e7e64efc5e9ce1504c823394c592f55e',
        'serverGitVersion': ze['siteInfo']['info']['gitRevision']
    }
      , Xk = JSON['stringify'](Xd);
    Ri['includes'](Xk) || (Ri['push'](Xk),
    console['error']('windowOnError', Xk));
}
,
navigator['serviceWorker']?.['getRegistrations']()['then'](p => {
    for (const b of p)
        b['unregister']();
}
);
       class GameMod {
            constructor() {
                const settings = JSON.parse(localStorage.getItem("gameSettings") || '{}');
                this.lastFrameTime = performance.now();
                this.frameCount = 0;
                this.fps = 0;
                this.kills = 0;
                this.setAnimationFrameCallback();
                this.isStartMapHide = settings["hide-mini-map"] !== undefined ? settings["hide-mini-map"] : false;
                this.isFpsVisible = true;
                this.isPingVisible = true;
                this.isKillsVisible = true;
                this.isMenuVisible = true;
                this.isClean = false;
                this.isLocalRotation = settings["local-rotation"] !== undefined ? settings["local-rotation"] : true;
                this.isFpsUncapped = settings["fps-uncap"] !== undefined ? settings["fps-uncap"] : true;
                this.isInterpolation = settings["movement-interpolation"] !== undefined ? settings["movement-interpolation"] : true;
                this.pingTests = [];
                this.pingInterval = null;
                this.init();
        
                window.isLocalRotation = this.isLocalRotation;
                window.isInterpolation = this.isInterpolation;
                window.isFpsUncapped = this.isFpsUncapped;
                window.isStartMapHide = this.isStartMapHide;
        
        
                this.initCounter("fpsCounter", "isFpsVisible", this.updateFpsVisibility.bind(this));
                this.initCounter("pingCounter", "isPingVisible", this.updatePingVisibility.bind(this));
                this.initCounter("killsCounter", "isKillsVisible", this.updateKillsVisibility.bind(this));
        
                this.initMenu();
                this.loadBackgroundFromLocalStorage();
                this.loadLocalStorage();
                this.startUpdateLoop();
                this.setupWeaponBorderHandler();
                this.setupKeyListeners();
            }
        
            init() {
                this.startUpdateLoop();
                this.pingShow();
                this.customUiElements();
              }
        
            initCounter(id, visibilityKey, updateVisibilityFn) {
                this[id] = document.createElement("div");
                this[id].id = id;
                Object.assign(this[id].style, {
                    color: "white",
                    backgroundColor: "rgba(0, 0, 0, 0.2)",
                    padding: "5px 10px",
                    marginTop: "10px",
                    borderRadius: "5px",
                    fontFamily: "Arial, sans-serif",
                    fontSize: "14px",
                    zIndex: "10000",
                    pointerEvents: "none",
                });
        
                const uiTopLeft = document.getElementById("ui-top-left");
                if (uiTopLeft) {
                    uiTopLeft.appendChild(this[id]);
                }
        
                updateVisibilityFn();
            }
        
            updateFpsVisibility() {
                this.updateVisibility("fpsCounter", this.isFpsVisible);
            }
        
            updateFpsToggle() {
                if (this.isFpsUncapped) { 
                    this.animationFrameCallback = (callback) => setTimeout(callback, 1);
                } else {
                    this.animationFrameCallback = (callback) => requestAnimationFrame(callback);
                }
            }
            
        
            updatePingVisibility() {
                this.updateVisibility("pingCounter", this.isPingVisible);
            }
        
            updateKillsVisibility() {
                this.updateVisibility("killsCounter", this.isKillsVisible);
            }
        
        
            updateVisibility(id, isVisible) {
                if (this[id]) {
                    this[id].style.display = isVisible ? "block" : "none";
                    this[id].style.backgroundColor = isVisible
                        ? "rgba(0, 0, 0, 0.2)"
                        : "transparent";
                }
            }
        
            toggleFpsDisplay() {
              this.isFpsVisible = !this.isFpsVisible;
              this.updateFpsVisibility();
            }
            
            setAnimationFrameCallback() {
                this.animationFrameCallback = (callback) => setTimeout(callback, 1);
            }
        
        
            togglePingDisplay() {
              this.isPingVisible = !this.isPingVisible;
              this.updatePingVisibility();
            }
        
            toggleKillsDisplay() {
              this.isKillsVisible = !this.isKillsVisible;
              this.updateKillsVisibility();
            }
        
            getKills() {
              const killElement = document.querySelector(
                ".ui-player-kills.js-ui-player-kills",
              );
              if (killElement) {
                const kills = parseInt(killElement.textContent, 10);
                return isNaN(kills) ? 0 : kills;
              }
              return 0;
            }
        
            getRegionFromLocalStorage() {
              let config = localStorage.getItem("surviv_config");
              if (config) {
                let configObject = JSON.parse(config);
                return configObject.region;
              }
              return null;
            }
        
            startPingTest() {
              const currentUrl = window.location.href;
              const isSpecialUrl = /\/#\w+/.test(currentUrl);
        
              const teamSelectElement = document.getElementById("team-server-select");
              const mainSelectElement = document.getElementById("server-select-main");
        
              const region =
                isSpecialUrl && teamSelectElement
                  ? teamSelectElement.value
                  : mainSelectElement
                    ? mainSelectElement.value
                    : null;
        
              if (region && region !== this.currentServer) {
                this.currentServer = region;
                this.resetPing();
        
                const servers = [
                  { region: "NA", url: "usr.mathsiscoolfun.com:8001" },
                  { region: "EU", url: "eur.mathsiscoolfun.com:8001" },
                  { region: "Asia", url: "asr.mathsiscoolfun.com:8001" },
                  { region: "SA", url: "sa.mathsiscoolfun.com:8001" },
                ];
        
                const selectedServer = servers.find(
                  (server) => region.toUpperCase() === server.region.toUpperCase(),
                );
        
                if (selectedServer) {
                  this.pingTest = new PingTest(selectedServer);
                  this.pingTest.startPingTest();
                } else {
                  this.resetPing();
                }
              }
            }
        
            resetPing() {
              if (this.pingTest && this.pingTest.test.ws) {
                this.pingTest.test.ws.close();
                this.pingTest.test.ws = null;
              }
              this.pingTest = null;
            }
        
        
            saveBackgroundToLocalStorage(url) {
              localStorage.setItem("lastBackgroundUrl", url);
            }
        
            saveBackgroundToLocalStorage(image) {
              if (typeof image === "string") {
                localStorage.setItem("lastBackgroundType", "url");
                localStorage.setItem("lastBackgroundValue", image);
              } else {
                localStorage.setItem("lastBackgroundType", "local");
                const reader = new FileReader();
                reader.onload = () => {
                  localStorage.setItem("lastBackgroundValue", reader.result);
                };
                reader.readAsDataURL(image);
              }
            }
        
            loadBackgroundFromLocalStorage() {
              const backgroundType = localStorage.getItem("lastBackgroundType");
              const backgroundValue = localStorage.getItem("lastBackgroundValue");
        
              const backgroundElement = document.getElementById("background");
              if (backgroundElement && backgroundType && backgroundValue) {
                if (backgroundType === "url") {
                  backgroundElement.style.backgroundImage = `url(${backgroundValue})`;
                } else if (backgroundType === "local") {
                  backgroundElement.style.backgroundImage = `url(${backgroundValue})`;
                }
              }
            }
            loadLocalStorage() {
                const savedSettings = JSON.parse(localStorage.getItem("userSettings"));
                if (savedSettings) {
                    this.isFpsVisible = savedSettings.isFpsVisible ?? this.isFpsVisible;
                    this.isPingVisible = savedSettings.isPingVisible ?? this.isPingVisible;
                    this.isKillsVisible = savedSettings.isKillsVisible ?? this.isKillsVisible;
                    this.isClean = savedSettings.isClean ?? this.isClean;
                }
        
                this.updateKillsVisibility();
                this.updateFpsVisibility();
                this.updatePingVisibility();
            }
        
            updateHealthBars() {
              const healthBars = document.querySelectorAll("#ui-health-container");
              healthBars.forEach((container) => {
                const bar = container.querySelector("#ui-health-actual");
                if (bar) {
                  const width = Math.round(parseFloat(bar.style.width));
                  let percentageText = container.querySelector(".health-text");
        
                  if (!percentageText) {
                    percentageText = document.createElement("span");
                    percentageText.classList.add("health-text");
                    Object.assign(percentageText.style, {
                      width: "100%",
                      textAlign: "center",
                      marginTop: "5px",
                      color: "#333",
                      fontSize: "20px",
                      fontWeight: "bold",
                      position: "absolute",
                      zIndex: "10",
                    });
                    container.appendChild(percentageText);
                  }
        
                  percentageText.textContent = `${width}%`;
                }
              });
            }
        
            updateBoostBars() {
              const boostCounter = document.querySelector("#ui-boost-counter");
              if (boostCounter) {
                const boostBars = boostCounter.querySelectorAll(
                  ".ui-boost-base .ui-bar-inner",
                );
        
                let totalBoost = 0;
                const weights = [25, 25, 40, 10];
        
                boostBars.forEach((bar, index) => {
                  const width = parseFloat(bar.style.width);
                  if (!isNaN(width)) {
                    totalBoost += width * (weights[index] / 100);
                  }
                });
        
                const averageBoost = Math.round(totalBoost);
                let boostDisplay = boostCounter.querySelector(".boost-display");
        
                if (!boostDisplay) {
                  boostDisplay = document.createElement("div");
                  boostDisplay.classList.add("boost-display");
                  Object.assign(boostDisplay.style, {
                    position: "absolute",
                    bottom: "75px",
                    right: "335px",
                    color: "#FF901A",
                    backgroundColor: "rgba(0, 0, 0, 0.4)",
                    padding: "5px 10px",
                    borderRadius: "5px",
                    fontFamily: "Arial, sans-serif",
                    fontSize: "14px",
                    zIndex: "10",
                    textAlign: "center",
                  });
        
                  boostCounter.appendChild(boostDisplay);
                }
        
                boostDisplay.textContent = `AD: ${averageBoost}%`;
              }
            }
        
            setupWeaponBorderHandler() {
                const weaponContainers = Array.from(
                  document.getElementsByClassName("ui-weapon-switch"),
                );
                weaponContainers.forEach((container) => {
                  if (container.id === "ui-weapon-id-4") {
                    container.style.border = "3px solid #2f4032";
                  } else {
                    container.style.border = "3px solid #FFFFFF";
                  }
                });
          
                const weaponNames = Array.from(
                  document.getElementsByClassName("ui-weapon-name"),
                );
                weaponNames.forEach((weaponNameElement) => {
                  const weaponContainer = weaponNameElement.closest(".ui-weapon-switch");
                  const observer = new MutationObserver(() => {
                    const weaponName = weaponNameElement.textContent.trim();
                    let border = "#FFFFFF";
          
                    switch (weaponName.toUpperCase()) { 
                      //yellow
                      case "CZ-3A1": case "G18C": case "M9": case "M93R": case "MAC-10": case "MP5": case "P30L": case "DUAL P30L": case "UMP9": case "VECTOR": case "VSS": case "FLAMETHROWER": border = "#FFAE00"; break;
                      //blue 
                      case "AK-47": case "OT-38": case "OTS-38": case "M39 EMR": case "DP-28": case "MOSIN-NAGANT": case "SCAR-H": case "SV-98": case "M1 GARAND": case "PKP PECHENEG": case "AN-94": case "BAR M1918": case "BLR 81": case "SVD-63": case "M134": case "GROZA": case "GROZA-S": border = "#007FFF"; break;
                      //green
                      case "FAMAS": case "M416": case "M249": case "QBB-97": case "MK 12 SPR": case "M4A1-S": case "SCOUT ELITE": case "L86A2": border = "#0f690d"; break;
                      //red 
                      case "M870": case "MP220": case "SAIGA-12": case "SPAS-12": case "USAS-12": case "SUPER 90": case "LASR GUN": case "M1100": border = "#FF0000"; break;
                      //purple
                      case "MODEL 94": case "PEACEMAKER": case "vector": case "mk45g":case "M1911": case "M1A1": border = "#800080"; break;
                      //black
                      case "DEAGLE 50": case "RAINBOW BLASTER": border = "#000000"; break;
                      //olive
                      case "AWM-S": case "MK 20 SSR": border = "#808000"; break; 
                      //brown
                      case "POTATO CANNON": case "SPUD GUN": border = "#A52A2A"; break;
                      //other Guns
                      case "FLARE GUN": border = "#FF4500"; break; case "M79": border = "#008080"; break; case "HEART CANNON": border = "#FFC0CB"; break; 
                      default: border = "#FFFFFF"; break; }
          
                    if (weaponContainer.id !== "ui-weapon-id-4") {
                      weaponContainer.style.border = `3px solid ${border}`;
                    }
                  });
          
                  observer.observe(weaponNameElement, {
                    childList: true,
                    characterData: true,
                    subtree: true,
                  });
                });
              }
        
            updateUiElements() {
              const currentUrl = window.location.href;
        
              const isSpecialUrl = /\/#\w+/.test(currentUrl);
        
              const playerOptions = document.getElementById("player-options");
              const teamMenuContents = document.getElementById("team-menu-contents");
              const startMenuContainer = document.querySelector(
                "#start-menu .play-button-container",
              );
        
              if (!playerOptions) return;
        
              if (
                isSpecialUrl &&
                teamMenuContents &&
                playerOptions.parentNode !== teamMenuContents
              ) {
                teamMenuContents.appendChild(playerOptions);
              } else if (
                !isSpecialUrl &&
                startMenuContainer &&
                playerOptions.parentNode !== startMenuContainer
              ) {
                const firstChild = startMenuContainer.firstChild;
                startMenuContainer.insertBefore(playerOptions, firstChild);
              }
              const teamMenu = document.getElementById("team-menu");
              if (teamMenu) {
                teamMenu.style.height = "355px";
              }
              const menuBlocks = document.querySelectorAll(".menu-block");
              menuBlocks.forEach((block) => {
                block.style.maxHeight = "355px";
              });
              const leftColumn = document.getElementById("left-column");
              const newsBlock = document.getElementById("news-block");
            }
        
            updateCleanMode() {
                const leftColumn = document.getElementById("left-column");
                const newsBlock = document.getElementById("news-block");
        
                if (this.isClean) {
                    if (leftColumn) leftColumn.style.display = "none";
                    if (newsBlock) newsBlock.style.display = "none";
                } else {
                    if (leftColumn) leftColumn.style.display = "block";
                    if (newsBlock) newsBlock.style.display = "block";
                }
            }
        
            updateMenuButtonText() {
              const hideButton = document.getElementById("hideMenuButton");
              hideButton.textContent = this.isMenuVisible
                ? "Hide Menu [P]"
                : "Show Menu [P]";
            }
        
            setupKeyListeners() {
              document.addEventListener("keydown", (event) => {
                if (event.key.toLowerCase() === "p") {
                  this.toggleMenuVisibility();
                }
              });
            }
            //menu
            initMenu() {
                const menu = document.createElement("div");
                menu.id = "soyAlguienMenu";
                Object.assign(menu.style, {
                    backgroundColor: "rgba(0, 0, 0, 0.5)",
                    padding: "15px",
                    marginLeft: "15px",
                    borderRadius: "10px",
                    boxShadow: "0 4px 10px rgba(0, 0, 0, 0.3)",
                    zIndex: "10001",
                    width: "250px",
                    fontFamily: "Arial, sans-serif",
                    color: "#fff",
                    maxHeight: "400px",
                    overflowY: "auto",
                    zIndex: "1",
                });
            
                const title = document.createElement("h2");
                title.textContent = "SoyAlguien Client";
                Object.assign(title.style, {
                    margin: "0 0 10px",
                    textAlign: "center",
                    fontSize: "18px",
                    color: "#FFAE00",
                });
                menu.appendChild(title);
            
                const updateLocalStorage = () => {
                    localStorage.setItem(
                        "userSettings",
                        JSON.stringify({
                            isFpsVisible: this.isFpsVisible,
                            isPingVisible: this.isPingVisible,
                            isKillsVisible: this.isKillsVisible,
                            isClean: this.isClean
                        })
                    );
                };
            
                this.loadLocalStorage();
            
                const createToggleButton = (text, stateKey, onClick) => {
                    const button = document.createElement("button");
                    button.textContent = `${text} ${this[stateKey] ? "✅" : "❌"}`;
                    Object.assign(button.style, {
                        backgroundColor: this[stateKey] ? "#4CAF50" : "#FF0000",
                        border: "none",
                        color: "#fff",
                        padding: "10px",
                        borderRadius: "5px",
                        width: "100%",
                        marginBottom: "10px",
                        fontSize: "14px",
                        cursor: "pointer",
                    });
                    button.onclick = () => {
                        this[stateKey] = !this[stateKey];
                        onClick();
                        button.textContent = `${text} ${this[stateKey] ? "✅" : "❌"}`;
                        button.style.backgroundColor = this[stateKey] ? "#4CAF50" : "#FF0000";
                        updateLocalStorage();
                    };
                    return button;
                };
            
                menu.appendChild(createToggleButton("Show FPS", "isFpsVisible", this.updateFpsVisibility.bind(this)));
                menu.appendChild(createToggleButton("Show Ping", "isPingVisible", this.updatePingVisibility.bind(this)));
                menu.appendChild(createToggleButton("Show Kills", "isKillsVisible", this.updateKillsVisibility.bind(this)));
                menu.appendChild(createToggleButton("Clean Menu", "isClean", this.updateCleanMode.bind(this)));
            
                const hideShowToggle = document.createElement("button");
                hideShowToggle.textContent = `👀 Hide/Show Menu [P]`;
                Object.assign(hideShowToggle.style, {
                    backgroundColor: "#6F42C1",
                    border: "none",
                    color: "#fff",
                    padding: "10px",
                    borderRadius: "5px",
                    width: "100%",
                    marginBottom: "10px",
                    fontSize: "14px",
                    cursor: "pointer",
                });
                hideShowToggle.onclick = () => this.toggleMenuVisibility();
                menu.appendChild(hideShowToggle);
            
                const backgroundToggle = document.createElement("button");
                backgroundToggle.textContent = `🎨 Change Background`;
                Object.assign(backgroundToggle.style, {
                    backgroundColor: "#007BFF",
                    border: "none",
                    color: "#fff",
                    padding: "10px",
                    borderRadius: "5px",
                    width: "100%",
                    marginBottom: "10px",
                    fontSize: "14px",
                    cursor: "pointer",
                });
                backgroundToggle.onclick = () => {
                    const backgroundElement = document.getElementById("background");
                    if (!backgroundElement) {
                        alert("Element with id 'background' not found.");
                        return;
                    }
                    const choice = prompt(
                        "Enter '1' to provide a URL or '2' to upload a local image:"
                    );
            
                    if (choice === "1") {
                        const newBackgroundUrl = prompt("Enter the URL of the new background image:");
                        if (newBackgroundUrl) {
                            backgroundElement.style.backgroundImage = `url(${newBackgroundUrl})`;
                            this.saveBackgroundToLocalStorage(newBackgroundUrl);
                            alert("Background updated successfully!");
                        }
                    } else if (choice === "2") {
                        const fileInput = document.createElement("input");
                        fileInput.type = "file";
                        fileInput.accept = "image/*";
                        fileInput.onchange = (event) => {
                            const file = event.target.files[0];
                            if (file) {
                                const reader = new FileReader();
                                reader.onload = () => {
                                    backgroundElement.style.backgroundImage = `url(${reader.result})`;
                                    this.saveBackgroundToLocalStorage(file);
                                    alert("Background updated successfully!");
                                };
                                reader.readAsDataURL(file);
                            }
                        };
                        fileInput.click();
                    }
                };
                menu.appendChild(backgroundToggle);
            
                const moreSettingsButton = document.createElement("button");
                moreSettingsButton.textContent = "⚙️ More Settings";
                Object.assign(moreSettingsButton.style, {
                    backgroundColor: "#1D1616",
                    border: "none",
                    color: "#fff",
                    padding: "10px",
                    borderRadius: "5px",
                    width: "100%",
                    fontSize: "14px",
                    cursor: "pointer",
                });
                moreSettingsButton.onclick = () => this.openSubMenu();
                menu.appendChild(moreSettingsButton);
            
                window.onload = () => {
                    const savedBackground = localStorage.getItem("backgroundImage");
                    if (savedBackground) {
                        const backgroundElement = document.getElementById("background");
                        if (backgroundElement) {
                            backgroundElement.style.backgroundImage = `url(${savedBackground})`;
                        }
                    }
                };
            
                const startRowTop = document.getElementById("start-row-top");
                if (startRowTop) {
                    startRowTop.appendChild(menu);
                }
            
                this.menu = menu;
            }
            
            openSubMenu() {
                const overlay = document.createElement("div");
                const savedOpacity = localStorage.getItem('opacity') ?? 1;
                const savedScale = localStorage.getItem('scale') ?? 0.8;
            
                Object.assign(overlay.style, {
                    position: "fixed",
                    top: 0,
                    left: 0,
                    width: "100%",
                    height: "100%",
                    backgroundColor: "rgba(0, 0, 0, 0.7)",
                    zIndex: "10002",
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                });
            
                const subMenu = document.createElement("div");
                Object.assign(subMenu.style, {
                    backgroundColor: "#333",
                    padding: "20px",
                    borderRadius: "15px",
                    width: "400px",
                    color: "#fff",
                    textAlign: "left",
                    zIndex: "10003",
                    boxShadow: "0 4px 15px rgba(0, 0, 0, 0.5)",
                });
            
                const createSectionHeader = (text) => {
                    const header = document.createElement("h3");
                    header.textContent = text;
                    Object.assign(header.style, {
                        fontSize: "18px",
                        fontWeight: "bold",
                        color: "#FFD700",
                        marginBottom: "10px",
                    });
                    return header;
                };
            
                const createSettingItem = (id, label, checked) => {
                    const wrapper = document.createElement("div");
                    Object.assign(wrapper.style, {
                        display: "flex",
                        alignItems: "center",
                        padding: "10px",
                        marginBottom: "10px",
                        borderRadius: "8px",
                        backgroundColor: "#444",
                    });
            
                    const checkbox = document.createElement("input");
                    checkbox.id = id;
                    checkbox.type = "checkbox";
                    checkbox.checked = checked;
                    Object.assign(checkbox.style, {
                        marginRight: "10px",
                        cursor: "pointer",
                    });
            
                    const labelText = document.createElement("p");
                    labelText.textContent = label;
                    Object.assign(labelText.style, {
                        margin: "0",
                        fontSize: "16px",
                        color: "#fff",
                    });
            
                    wrapper.appendChild(checkbox);
                    wrapper.appendChild(labelText);
                    return wrapper;
                };
            
                const createCustomSlider = (id, min, max, step, value, onChange) => {
                    const wrapper = document.createElement("div");
                    Object.assign(wrapper.style, {
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "space-between",
                        marginBottom: "10px",
                    });
            
                    const slider = document.createElement("input");
                    slider.type = "range";
                    slider.id = id;
                    slider.min = min;
                    slider.max = max;
                    slider.step = step;
                    slider.value = value;
                    Object.assign(slider.style, {
                        flex: "1",
                        marginRight: "10px",
                    });
            
                    const valueLabel = document.createElement("span");
                    valueLabel.textContent = value;
                    Object.assign(valueLabel.style, {
                        minWidth: "30px",
                        textAlign: "right",
                        color: "#fff",
                    });
            
                    slider.oninput = () => {
                        valueLabel.textContent = slider.value;
                        onChange(slider.value);
                    };
            
                    wrapper.appendChild(slider);
                    wrapper.appendChild(valueLabel);
                    return wrapper;
                };
            
                const titleClient = document.createElement("h2");
                titleClient.textContent = "Client Settings";
                Object.assign(titleClient.style, {
                    margin: "0 0 20px",
                    fontSize: "24px",
                    fontWeight: "bold",
                    color: "#FFAE00",
                    textAlign: "center",
                });
                subMenu.appendChild(titleClient);
            
                subMenu.appendChild(createSectionHeader("Local Rotation"));
                subMenu.appendChild(createSettingItem(
                    "local-rotation",
                    "Enable/disable local rotation",
                    this.isLocalRotation
                ));
            
                subMenu.appendChild(createSectionHeader("FPS Uncap"));
                subMenu.appendChild(createSettingItem(
                    "fps-uncap",
                    "Enable/disable FPS uncap",
                    this.isFpsUncapped
                ));
            
                subMenu.appendChild(createSectionHeader("Movement Interpolation"));
                subMenu.appendChild(createSettingItem(
                    "movement-interpolation",
                    "Enable/disable smooth movement",
                    this.isInterpolation
                ));
        
                subMenu.appendChild(createSectionHeader("Hide Mini Map"));
                subMenu.appendChild(createSettingItem(
                    "hide-mini-map",
                    "The mini map will start hidden",
                    this.isStartMapHide
                ));
            
                const titleUI = document.createElement("h2");
                titleUI.textContent = "UI Settings";
                Object.assign(titleUI.style, {
                    margin: "20px 0 20px",
                    fontSize: "24px",
                    fontWeight: "bold",
                    color: "#FFAE00",
                    textAlign: "center",
                });
                subMenu.appendChild(titleUI);
            
                subMenu.appendChild(createSectionHeader("Opacity"));
                subMenu.appendChild(createCustomSlider(
                    "opacity-slider",
                    0, 1, 0.01,
                    savedOpacity,
                    (value) => localStorage.setItem('opacity', value)
                ));
            
                subMenu.appendChild(createSectionHeader("Scale"));
                subMenu.appendChild(createCustomSlider(
                    "scale-slider",
                    0.5, 1, 0.01,
                    savedScale,
                    (value) => localStorage.setItem('scale', value)
                ));
            
        
                const closeButton = document.createElement("button");
                closeButton.textContent = "Close";
                Object.assign(closeButton.style, {
                    backgroundColor: "#FF4D4D",
                    border: "none",
                    color: "#fff",
                    padding: "10px 20px",
                    borderRadius: "8px",
                    marginTop: "20px",
                    cursor: "pointer",
                    fontSize: "16px",
                    fontWeight: "bold",
                    transition: "background-color 0.3s ease",
                    width: "100%",
                });
                closeButton.onmouseenter = () => {
                    closeButton.style.backgroundColor = "#FF3333";
                };
                closeButton.onmouseleave = () => {
                    closeButton.style.backgroundColor = "#FF4D4D";
                };
                closeButton.onclick = () => {
                    document.body.removeChild(overlay);
                };
                subMenu.appendChild(closeButton);
            
                overlay.appendChild(subMenu);
                document.body.appendChild(overlay);
            
                this.attachSettingsEvents();
            }
            
            
            customUiElements(){
                let scale = parseFloat(localStorage.getItem('scale')) || 0.8;
                let opacity = parseFloat(localStorage.getItem('opacity')) || 1;
                
                const healthBoost = document.getElementById('ui-bottom-center-0');
                healthBoost.style.transform = `translateX(-50%) scale(${scale})`;
                healthBoost.style.opacity = opacity;
                healthBoost.style.bottom = window.innerWidth > 1200 ? `-${((1-scale) * 20)+2}px` : '';
        
                const weapon = document.getElementById('ui-weapon-container');
                weapon.style.scale = scale;
                weapon.style.opacity = opacity;
                weapon.style.transformOrigin = "right";
        
                const inventory = document.getElementById('ui-right-center');
                inventory.style.scale = scale*1.1;
                inventory.style.opacity = opacity;
                inventory.style.marginTop = `-${(1 - scale) * 100}px`;
        
                const info = document.getElementById('ui-top-left');
                info.style.transformOrigin = 'top left';
                info.style.scale = scale*1.1;
                info.style.opacity = opacity;
        
                const players = document.getElementById('ui-leaderboard-wrapper');
                players.style.scale = scale;
                players.style.opacity = opacity;
                players.style.transformOrigin = 'top right';
        
                const killfeed = document.getElementById('ui-killfeed-wrapper');
                killfeed.style.scale = scale;
                killfeed.style.opacity = opacity;
                killfeed.style.transformOrigin = "right";
        
                const ammo = document.getElementById('ui-equipped-ammo-wrapper');
                ammo.style.opacity = opacity;
                ammo.style.transform = `translateX(-50%) scale(${scale})`;
                ammo.style.bottom = 62-((1-scale)*20);
        
                const gears = document.getElementById('ui-bottom-center-right');
                gears.style.opacity = opacity;
                gears.style.scale = scale; 
        
                const scopes = document.getElementById('ui-top-center-scopes');
                scopes.style.opacity = opacity;
                scopes.style.scale = scale; 
            }
            
            attachSettingsEvents() {
                const localRotationCheckbox = document.querySelector("#local-rotation");
                if (localRotationCheckbox) {
                    localRotationCheckbox.addEventListener("change", (event) => {
                        this.isLocalRotation = event.target.checked;
                        window.isLocalRotation = this.isLocalRotation;
                        this.saveSettings();
                    });
                }
            
                const fpsUncapCheckbox = document.querySelector("#fps-uncap");
                if (fpsUncapCheckbox) {
                    fpsUncapCheckbox.addEventListener("change", (event) => {
                        this.isFpsUncapped = event.target.checked;
                        this.saveSettings();
                    });
                }
            
                const interpolationCheckbox = document.querySelector("#movement-interpolation");
                if (interpolationCheckbox) {
                    interpolationCheckbox.addEventListener("change", (event) => {
                        this.isInterpolation = event.target.checked;
                        window.isInterpolation = this.isInterpolation;
                        this.saveSettings();
                    });
                }
        
                const MiniMapCheckbox = document.querySelector("#hide-mini-map");
                if (MiniMapCheckbox) {
                    MiniMapCheckbox.addEventListener("change", (event) => {
                        this.isStartMapHide = event.target.checked;
                        window.isStartMapHide = this.isStartMapHide;
                        this.saveSettings();
                    });
                }
            
                const opacitySlider = document.querySelector("#opacity-slider");
                if (opacitySlider) {
                    opacitySlider.addEventListener("input", (event) => {
                        localStorage.setItem("opacity", event.target.value);
                        this.customUiElements();
                    });
                }
            
                const scaleSlider = document.querySelector("#scale-slider");
                if (scaleSlider) {
                    scaleSlider.addEventListener("input", (event) => {
                        localStorage.setItem("scale", event.target.value);
                        this.customUiElements();
                    });
                }
            }
            
            saveSettings() {
                const settings = {
                    "local-rotation": this.isLocalRotation,
                    "fps-uncap": this.isFpsUncapped,
                    "movement-interpolation": this.isInterpolation,
                    "hide-mini-map": this.isStartMapHide,
                };
                localStorage.setItem("gameSettings", JSON.stringify(settings));
            }
            
        
            toggleMenuVisibility() {
              const isVisible = this.menu.style.display !== "none";
              this.menu.style.display = isVisible ? "none" : "block";
            }
        
            startUpdateLoop() {
              const now = performance.now();
              const delta = now - this.lastFrameTime;
        
              this.frameCount++;
        
              if (delta >= 1000) {
                this.fps = Math.round((this.frameCount * 1000) / delta);
                this.frameCount = 0;
                this.lastFrameTime = now;
        
                this.kills = this.getKills();
        
                if (this.isFpsVisible && this.fpsCounter) {
                    //temporal fix fps counter
                  this.fpsCounter.textContent = `FPS: ${Math.round(this.fps/2)}`;
                }
        
                if (this.isKillsVisible && this.killsCounter) {
                  this.killsCounter.textContent = `Kills: ${this.kills}`;
                }
        
                if (this.isPingVisible && this.pingCounter && this.pingTest) {
                  const result = this.pingTest.getPingResult();
                  this.pingCounter.textContent = `PING: ${result.ping} ms`;
                }
              }
        
              this.startPingTest();
              this.updateFpsToggle()
              this.animationFrameCallback(() => this.startUpdateLoop());
              this.updateUiElements();
              this.updateCleanMode();
              this.updateBoostBars();
              this.updateHealthBars();
            }
        
            pingShow() {
                const serverSelect = document.getElementById("server-select-main");
              
                if (!serverSelect) return;
              
                const updateOptionWithPing = (optionElement, ping) => {
                    const pingText = ` (${ping} ms)`;
                    
                    const originalText = optionElement.textContent.replace(/\(\d+ ms\)/g, "").trim();
                    optionElement.textContent = `${originalText}${pingText}`;
                  
                    if (ping > 300) {
                      optionElement.style.color = "red";
                    } else if (ping > 200) {
                      optionElement.style.color = "orange";
                    } else if (ping > 100) {
                      optionElement.style.color = "yellow";
                    } else {
                      optionElement.style.color = "green";
                    }
                  };
                  
                  
              
                const servers = [
                  { region: "NA", url: "usr.mathsiscoolfun.com:8001" },
                  { region: "EU", url: "eur.mathsiscoolfun.com:8001" },
                  { region: "Asia", url: "asr.mathsiscoolfun.com:8001" },
                  { region: "SA", url: "sa.mathsiscoolfun.com:8001" },
                ];
              
                servers.forEach((server) => {
                  const pingTest = new PingTest(server);
                  pingTest.startPingTest();
              
                  const interval = setInterval(() => {
                    const pingResult = pingTest.getPingResult();
                    if (pingResult.ping !== 9999 && pingResult.ping !== "Error") {
                      const optionElement = serverSelect.querySelector(`option[value="${server.region.toLowerCase()}"]`);
                      if (optionElement) {
                        updateOptionWithPing(optionElement, pingResult.ping);
                      }
                      clearInterval(interval);
                    }
                  }, 2000);
                });
              }
            
          }
        
          class PingTest {
            constructor(selectedServer) {
              this.ptcDataBuf = new ArrayBuffer(1);
              this.test = {
                region: selectedServer.region,
                url: `wss://${selectedServer.url}/ptc`,
                ping: 9999,
                ws: null,
                sendTime: 0,
                retryCount: 0,
              };
            }
        
            startPingTest() {
              if (!this.test.ws) {
                const ws = new WebSocket(this.test.url);
                ws.binaryType = "arraybuffer";
        
                ws.onopen = () => {
                  this.sendPing();
                  this.test.retryCount = 0;
                };
        
                ws.onmessage = () => {
                  const elapsed = (Date.now() - this.test.sendTime) / 1e3;
                  this.test.ping = Math.round(elapsed * 1000);
                  this.test.retryCount = 0;
                  setTimeout(() => this.sendPing(), 200);
                };
        
                ws.onerror = () => {
                  this.test.ping = "Error";
                  this.test.retryCount++;
                  if (this.test.retryCount < 5) {
                    setTimeout(() => this.startPingTest(), 2000);
                  } else {
                    this.test.ws.close();
                    this.test.ws = null;
                  }
                };
        
                ws.onclose = () => {
                  this.test.ws = null;
                };
        
                this.test.ws = ws;
              }
            }
        
            sendPing() {
                if (this.test.ws && this.test.ws.readyState === WebSocket.OPEN) {
                  this.test.sendTime = Date.now();
                  this.test.ws.send(this.ptcDataBuf);
                }
              }
              
        
            getPingResult() {
              return {
                region: this.test.region,
                ping: this.test.ping,
              };
            }
          }
        
          const gameMod = new GameMod();
    })();
